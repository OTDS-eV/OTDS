<?xml version="1.0" encoding="UTF-8"?>
<Otds xmlns="http://otds-group.org/otds" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" Version="2.0" xsi:schemaLocation="http://otds-group.org/otds ../xsd/otds.xsd">
	<Brands/>
	<Accommodations>
		<Accommodation Key="PMI8172">
			<SellingAccom Key="PMI817201">
				<Booking>
					<BookingGroup Area="ServiceArea">
						<BookingParameter Field="ServiceCode">
							<Value>PMI210</Value>
						</BookingParameter>
						<BookingParameter Field="RequestCode">
							<Value>H</Value>
						</BookingParameter>
					</BookingGroup>
				</Booking>
				<Board Key="Board"/>
				<Unit Key="154">
					<Properties Key="1">
						<PropertyGroup>
							<UnitType>Double</UnitType>
						</PropertyGroup>
					</Properties>
					<!-- de: In diesem Zimmer werden zur Demonstration viele verschiedene Belegungen definiert, die in der Form selten gemeinsam aufreten sollten.
						Es ist prinzipiell erlaubt, in einem Zimmer mehrere Occupancies hintereinander zu definieren. Dadurch sind beide Occupancies gültige Belegungsvarianten.
						Die Personen in der Occupancy-Definition müssen dem Alter nach absteigend definiert werden. 
						Wird eine Belegung gegen die Occupancy geprüft, so wird dabei auch nach Alter absteigend die älteste Person zuerst geprüft.
						Die Occupancy selbst ist eine reine Definition der Belegung.
						Die Definition der Vollzahler-Regeln findet mit Hilfe von ConditionalTags statt. -->
						<!-- en: In this room many different occupancies are defined for demonstration purposes, which should rarely occur together in this form.
In principle, it is allowed to define several occupancies in a room one after the other. Thus, both occupancies are valid occupancy variants.
The persons in the occupancy definition must be defined in descending order of age. 
If an occupancy is checked against the occupancy, the oldest person is also checked first in descending order of age.
The Occupancy itself is a pure definition of the Occupancy.
The definition of the full-payer rules takes place using conditional tags. -->
					<SellingUnit Key="154">
						<Tags>
							<ConditionalTag>
								<Tag Class="PersonType">FullPayer</Tag>
								<Condition>
									<PersonImpact>
										<PersonIndex Source="Product">
											<Until>2</Until>
										</PersonIndex>
									</PersonImpact>
								</Condition>
							</ConditionalTag>
							<ConditionalTag>
								<Tag Class="PersonPriceClass">ReducedChild</Tag>
								<Condition>
									<Or>
										<And>
											<PersonImpact>
												<PersonIndex Source="Product">
													<From>-2</From>
													<PersonFilter>
														<PersonAge Source="Product">
															<Max>14</Max>
														</PersonAge>
													</PersonFilter>
												</PersonIndex>
											</PersonImpact>
											<PersonGroup Source="Product">
												<Person>
													<MinAge>18</MinAge>
													<Count>1</Count>
												</Person>
												<Person>
													<MinCount>0</MinCount>
												</Person>
											</PersonGroup>
										</And>
										<And>
											<PersonImpact>
												<PersonIndex Source="Product">
													<From>-4</From>
													<PersonFilter>
														<PersonAge Source="Product">
															<Max>14</Max>
														</PersonAge>
													</PersonFilter>
												</PersonIndex>
											</PersonImpact>
											<PersonGroup Source="Accommodation">
												<Person>
													<MinAge>18</MinAge>
													<Count>2</Count>
												</Person>
												<Person>
													<MinCount>0</MinCount>
												</Person>
											</PersonGroup>
										</And>
									</Or>
								</Condition>
							</ConditionalTag>
						</Tags>
						<Booking>
							<BookingGroup Area="ServiceArea">
								<BookingParameter Field="ServiceFeatureCode">
									<Value>TR</Value>
								</BookingParameter>
							</BookingGroup>
						</Booking>
						<Properties Key="1">
							<PropertyGroup>
								<UnitName>Standard Double</UnitName>
							</PropertyGroup>
						</Properties>
						<!--  de: 2/1 und 2/0  Kind bis 12 Jahre  -->
						<!--  en: 2/1 and 2/0  child up to 12 years  -->
						<Occupancy Key="1">
							<Person>
								<MinAge>12</MinAge>
								<Count>1</Count>
							</Person>
							<Person>
								<MinAge>2</MinAge>
								<Count>1</Count>
							</Person>
							<Person>
								<MinAge>2</MinAge>
								<MaxAge>12</MaxAge>
								<MinCount>0</MinCount>
								<MaxCount>1</MaxCount>
							</Person>
						</Occupancy>
						<!-- de: 2E und 0-3 Kinder + optionales Baby -->
						<!-- de: 1-4 Personen: 1 Erwachsener Pflicht, zusätzlich bis zu 3 beliebige Personen möglich  -->
						<!-- en: 2 adults and 0-3 children + optional baby -->
						<!-- en: 1-4 persons: 1 adult obligatory, up to 3 additional persons possible -->
						<Occupancy Key="1">
							<Person>
								<MinAge>10</MinAge>
								<Count>1</Count>
							</Person>
							<Person>
								<MinAge>2</MinAge>
								<MaxCount>3</MaxCount>
							</Person>
						</Occupancy>
						<!-- de: 1-4 Personen: 1 Erwachsener Pflicht, zusätzlich bis zu 3 beliebige Personen möglich, zusätzlich generell 1 Baby möglich -->
						<!-- en: 1-4 persons: 1 adult obligatory, additionally up to 3 arbitrary persons possible, additionally generally 1 baby possible -->
						<Occupancy Key="1">
							<Person>
								<MinAge>10</MinAge>
								<Count>1</Count>
							</Person>
							<Person>
								<MinAge>2</MinAge>
								<MaxCount>3</MaxCount>
							</Person>
							<Person>
								<MaxAge>1</MaxAge>
								<MaxCount>1</MaxCount>
							</Person>
						</Occupancy>
						<!-- de: 1-4 Personen max 2 Kinder max 12 Jahre möglich   -->
						<!-- en: 1-4 persons max 2 children max 12 years possible -->
						<Occupancy Key="1">
							<Person>
								<MinAge>10</MinAge>
								<Count>1</Count>
							</Person>
							<Person>
								<MinAge>2</MinAge>
								<MaxCount>3</MaxCount>
							</Person>
							<Exclude>
								<Person>
									<MinAge>10</MinAge>
									<Count>1</Count>
								</Person>
								<Person>
									<MaxAge>12</MaxAge>
									<Count>3</Count>
								</Person>
							</Exclude>
						</Occupancy>
						<!--  de: 4 Personen, die letzte Person darf kein Kind sein, wenn schon 2 Kinder dabei sind   -->
						<!-- en: 4 persons, the last person must not be a child, if there are already 2 children -->
						<Occupancy Key="1">
							<Person>
								<MinAge>14</MinAge>
								<Count>1</Count>
							</Person>
							<Person>
								<MaxCount>3</MaxCount>
							</Person>
							<Exclude>
								<Person>
									<MinAge>14</MinAge>
									<Count>1</Count>
								</Person>
								<Person>
									<MaxAge>13</MaxAge>
									<Count>3</Count>
								</Person>
							</Exclude>
						</Occupancy>
						<Availabilities Key="1">
							<Availability Key="2011-11-01" StartDate="2011-11-01" EndDate="2012-04-30">
								<DefaultDayState>
									<Open/>
									<CheckIn/>
									<CheckOut/>
								</DefaultDayState>
							</Availability>
						</Availabilities>
					</SellingUnit>
				</Unit>
			</SellingAccom>
		</Accommodation>
	</Accommodations>
</Otds>