<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2011 rel. 3 (x64) (http://www.altova.com) by Sebastian Oremek (TravelTainment GmbH) -->
<xs:schema xmlns="http://otds-group.org/otds" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://otds-group.org/otds" elementFormDefault="qualified">
	<xs:include schemaLocation="otds-schema-common.xsd"/>
	<xs:complexType name="AddonsType">
		<xs:complexContent>
			<xs:extension base="CompositeUpdateNodeType">
				<xs:annotation>
					<xs:documentation xml:id="de_31" xml:lang="de">Reisekomponente für Zusatzangebote (Addons). 
Zusatzangebote sind z.B. der Transfer, Sportangebote, Gesundheits- oder Wellnessleistungen, besonderer Hotelservice oder besondere touristische Angebote. 
Hier werden alle dazugehörigen Daten und Eigenschaften erfasst inkl. der Preise und Verfügbarkeiten.</xs:documentation><xs:documentation xml:id="en_31" xml:lang="en">Travel components for additional offers (Addons).
Additional offers can be, for example, transfers, sporting activities, health and spa services, special hotel services or other additional tourist offers.
All associated information and properties are included here, such as price and availability.</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="Addon" type="BaseAddonType" maxOccurs="unbounded"/>
					<xs:element name="GroupDefinitions" type="GroupDefinitionsType" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:id="de_32" xml:lang="de">Unter diesem Element können sortierte Gruppen definiert werden. Diese Gruppen werden benutzt, um eine Sortierung/Priorisierung von Angeboten und Komponenten zu ermöglichen. Die GroupDefinition wird über den Namen in der  GroupCondition referenziert. Die GroupCondition kann in der BookingGroup und in Availabilties verwendet werden. Häufigste Anwendung ist die Priorisierung von Flügen innerhlab der der der höchst priorisierte Flug dann mit dem CityPair buchbar ist anstatt mit der Flugkettenkennung.</xs:documentation><xs:documentation xml:id="en_32" xml:lang="en">Sorted groups can be defined under this element. These groups are used to create a grading system or prioritisation of offers and components. The GroupDefinition is referenced by the name in the GroupCondition. The GroupCondition can be used in the BookingGroup and in Availabilities. The most frequent use for this is prioritisation of flights whereby the flight with the highest priority can be booked with the CityPair instead of the flight chain ID.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="BaseAddonType">
		<xs:annotation>
			<xs:documentation xml:id="de_33" xml:lang="de">In diesem Element wird definiert welche zusätzlichen Leistungen in dem Produkt enthalten sein können. Leistungen die sich auf die Buchungszeilen der Accommodation auswirken zum Beispiel durch Änderung des Hotel oder Zimmer Buchungscodes müssen zwingend hier platziert werden.</xs:documentation><xs:documentation xml:id="en_33" xml:lang="en">This element defines what add-ons are available with the product. It is obligatory to put services here that have an impact on the Accommodation booking details, by changing the hotel or room booking code for example.</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="MultipleCompositeUpdateNodeWithTagsType">
				<xs:sequence>
					<xs:element name="Booking" type="BookingType" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:id="de_34" xml:lang="de">In diesem Element werden alle Values zusammengefasst, die zum Buchen notwendig sind. Später können über den BookingEntry andere Namespaces ergänzt werden, so das spezifisch für verschiedene Buchungssysteme Values zusammen mit dem dazugehörenden Parameternamen angegeben werden können.</xs:documentation><xs:documentation xml:id="en_34" xml:lang="en">In this element, all values ​​required for booking are combined. Other namespaces can later be added to the BookingEntry, so that values specific to different booking systems are specified along with their corresponding parameter names​​.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<!---->
					<xs:element name="CheckOutDateOffset" type="CheckOutDateOffsetType" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:id="de_35" xml:lang="de">This defines, if an addon has a fixed duration interval. In case this element is missing the addon can have flexibel durations like an accommodation generally has.  </xs:documentation><xs:documentation xml:id="en_35" xml:lang="en">This defines whether an addon has a fixed duration interval. If this element missing, the addon can have flexible durations as accommodation generally has.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Properties" type="PropertiesType" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:id="de_36" xml:lang="de">In diesem Element können Attribute für den Service hinterlegt werden.</xs:documentation><xs:documentation xml:id="en_36" xml:lang="en">Attributes for the service can be entered in this element.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ServiceFeature" type="ServiceFeatureType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation xml:lang="de" xml:id="de_37">ServiceFeatures können definierte Services um bestimmte Eigenschaften erweitern und somit durch Ausmultiplizieren neue Addon-Angebote generieren.
							</xs:documentation><xs:documentation xml:lang="en" xml:id="en_37">ServiceFeatures can expand defined services to include certain properties and thus generate new add-on offers.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Service" type="ServiceType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation xml:lang="de" xml:id="de_38">In diesem Element werden die verschiedenen Ausprägungen des AddonServices aufgeführt.
										</xs:documentation><xs:documentation xml:lang="en" xml:id="en_38">In this element various characteristics of the add-on services are listed.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Filter" type="ConditionSimpleNodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:id="de_39" xml:lang="de">In diesem Element können Einschränkungnen bzgl. der Gültigkeit der AddonServices definiert werden. </xs:documentation><xs:documentation xml:id="en_39" xml:lang="en">In this element restrictions regarding the validity of the add-on services are defined.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="PriceItems" type="PriceItemsType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation xml:id="de_40" xml:lang="de">Preisberechnung der Zusatzleistungen auf Unterbringungsebene</xs:documentation><xs:documentation xml:id="en_40" xml:lang="en">Pricing of add-ons at the accommodation level</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="CatchmentAirports" type="SimpleNodeIataAirportCodeListType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation xml:id="de_41" xml:lang="de">Alle Flughäfen, die im Einzugsgebiet des Addons liegen.
Angaben erfolgen als (IATA Airport-Code). Es ist in Form einer XML-List auch die Angabe mehrerer Flughäfen durch Space getrennt möglich.</xs:documentation><xs:documentation xml:id="en_41" xml:lang="en">All airports situated in the catchment area of the add-on.
Information is given as (IATA airport code). It is also possible, in the form of an XML list, to specify several airports using a space between each.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="NeighbourComponentCorrection" type="NeighbourComponentCorrectionType" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:id="de_42" xml:lang="de">In diesem Zweig können außergewöhnliche Auswirkungen auf den CheckIn und CheckOut der angrenzenden Componenten definiert werden. Aktuell kennen wir nur Fälle bei Flügen.
Hier betrifft es Flüge, die sehr früh an einem Tag ankommen oder sehr spät an einem Tag abfliegen. In diesem Zweig kann man dann definieren, dass der CheckIn vorgezogen wird oder der CheckOut ggf. einen Tag später erfolgt.
Wie gesagt für Accommodation ist zur Zeit kein Fallbeispiel bekannt.</xs:documentation><xs:documentation xml:id="en_42" xml:lang="en">In this branch the exceptional effects on the CheckIn and CheckOut of adjacent components can be defined. We are currently only aware of flight implications.
This concerns flights arriving very early or very late on any particular day. In this branch one can specify that CheckIn should be brought forward the CheckOut put back.
As previously stated there is currently no case example for Accommodation.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ServiceType">
		<xs:complexContent>
			<xs:extension base="MultipleCompositeUpdateNodeWithTagsType">
				<xs:sequence>
					<xs:element name="Booking" type="BookingType" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:id="de_43" xml:lang="de">In diesem Element werden alle Values zusammengefasst, die zum Buchen notwendig sind. Später können über den BookingEntry andere Namespaces ergänzt werden, so das spezifisch für verschiedene Buchungssysteme Values zusammen mit dem dazugehörenden Parameternamen angegeben werden können.</xs:documentation><xs:documentation xml:id="en_43" xml:lang="en">In this element, all values ​​required for booking are combined. Other namespaces can later be added to the BookingEntry, so that values specific to different booking systems are specified along with their corresponding parameter names​​.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Properties" type="PropertiesType" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:id="de_44" xml:lang="de">Beschreibung der Zusatzleistungen</xs:documentation><xs:documentation xml:id="en_44" xml:lang="en">Description of the additional services</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Occupancy" type="OccupancyType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation xml:id="de_45" xml:lang="de">Die dem Addon zugeordnete Belegung. Hier kann die Mindestanforderung für die Reisenden definiert werden. Fehlt der Zweig Addon. So gibt es keine Einschränkungen bzgl. der Reisenden.</xs:documentation><xs:documentation xml:id="en_45" xml:lang="en">The occupancy or participation associated with the addon. Here, the minimum occupancy/participation requirement is defined. Where the Addon branch is absent there are no restrictions regarding the number of travellers.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Filter" type="ConditionSimpleNodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:id="de_46" xml:lang="de">Regeln, für die die Zusatzleistungen gelten.</xs:documentation><xs:documentation xml:id="en_46" xml:lang="en">Rules that apply for add-ons.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="PriceItems" type="PriceItemsType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation xml:id="de_47" xml:lang="de">Preisberechnung der Zusatzleistungen</xs:documentation><xs:documentation xml:id="en_47" xml:lang="en">Pricing for the add-ons</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Availabilities" type="AvailabilitiesType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation xml:id="de_48" xml:lang="de">Unter diesem Zweig werden die Verfügbarkeiten eines Objektes definiert. Fehlt der Zweig, so gelten alle Termine und Dauern als verfügbar, sofern diese nicht schon an anderer Stelle eingeschränkt wurden. Die Ebene Aailabilities definiert, welche Art der Verfügbarkeits-Steuerung vorliegt. Wenn zum Beispiel eine Steuerung der Verfügbarkeiten über die Dauer stattfindet, so wird es je eingeschränkter Dauer einen eigenen Availabilities-Zweig mit einer entsprechenden Dauerbedingung unter "Conditions" geben. In der Regel sollte der Key des Availabilities-Knoten genau mit dieser Condition korrelieren, damit der Key für inkrementelle Updates immer eindeutig reproduzierbar ist.  </xs:documentation><xs:documentation xml:id="en_48" xml:lang="en">Under this branch the availability of the accommodation is defined. If this branch is omitted, all dates and durations are considered available unless already restricted elsewhere. The Availabilities level defines which kind of availability management is possible. For example, where restricted durations are specified under the Availabilities branch, corresponding permanent restrictions will be produced under "Conditions". As a rule, the key to the Availabilities node correlates with this condition, so that the key for incremental updates is always clearly reproducible.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="ServiceFeatureType">
		<xs:annotation>
			<xs:documentation xml:id="de_49" xml:lang="de">Definition der ServiceFeatures</xs:documentation><xs:documentation xml:id="en_49" xml:lang="en">Definition of ServiceFeatures</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="MultipleCompositeUpdateNodeWithTagsType">
				<xs:sequence>
					<xs:element name="Booking" type="BookingType">
						<xs:annotation>
							<xs:documentation xml:id="de_50" xml:lang="de">In diesem Element werden alle Daten zusammengefasst, die zum Buchen notwendig sind. Später können über den BookingEntry andere Namespaces ergänzt werden, so das spezifisch für verschiedene Buchungssysteme Werte zusammen mit dem dazugehörenden Parameternamen angegeben werden können.</xs:documentation><xs:documentation xml:id="en_50" xml:lang="en">In this element, all values ​​required for booking are combined. Other namespaces can later be added to the BookingEntry, so that values specific to different booking systems are specified along with their corresponding parameter names​​.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Properties" type="PropertiesType" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:id="de_51" xml:lang="de">Genauere Spezifizierung des ServiceFeatures</xs:documentation><xs:documentation xml:id="en_51" xml:lang="en">More detailed specification of the ServiceFeatures</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="Filter" type="ConditionSimpleNodeType" minOccurs="0">
						<xs:annotation>
							<xs:documentation xml:id="de_52" xml:lang="de">Einschränkungen in Bezug auf das ServiceFeature</xs:documentation><xs:documentation xml:id="en_52" xml:lang="en">Restrictions on the ServiceFeature</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="PriceItems" type="PriceItemsType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation xml:id="de_53" xml:lang="de">Preisbestandteile für das ServiceFeature</xs:documentation><xs:documentation xml:id="en_53" xml:lang="en">Price components for the ServiceFeature</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
</xs:schema>
