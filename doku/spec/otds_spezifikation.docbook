<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article [
<!ENTITY indent "&#160;&#160;&#160;&#160;">
]>
<!-- <book xmlns="http://docbook.org/ns/docbook" version="5.0">
    <title>OTDS - Open Travel Data Structure</phrase></title>-->
<article xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" xml:id="OtdsSpec" version="5.0" class="specification">
	<info xml:id="OtdsSpecInfo">
		<title><phrase xml:id="de_527" xml:lang="de">OTDS Spezifikation</phrase><phrase xml:id="en_527" xml:lang="en">OTDS specification</phrase></title>
		<authorgroup>
			<author>
				<personname>
					<surname>Nicklaus</surname>
					<firstname>Stephan</firstname>
				</personname>
				<email>otds@traveltainment.de</email>
			</author>
			<author>
				<personname>
					<surname>Muskewitz</surname>
					<firstname>Jens</firstname>
				</personname>
				<email>otds@traffics.de</email>
			</author>
			<author>
				<personname>
					<surname>Schwanke</surname>
					<firstname>Marco</firstname>
				</personname>
				<email>otds@bewotec.de</email>
			</author>
		</authorgroup>
	</info>
	<section xml:id="OtdsBasicStructure">
		<title><phrase xml:id="de_528" xml:lang="de">OTDS Grundlagen</phrase><phrase xml:id="en_528" xml:lang="en">OTDS fundamentals</phrase></title>
		<section xml:id="OtdsTarget">
			<title><phrase xml:id="de_529" xml:lang="de">Zielsetzungen</phrase><phrase xml:id="en_529" xml:lang="en">Objectives</phrase></title>
			<para xml:lang="de" xml:id="de_530">Das touristische Datenformat "Offener Touristischer Datenstandard" (OTDS) ist das
				gemeinsame Datenformat für alle Angebote in der Touristik.</para><para xml:lang="en" xml:id="en_530">The tourist data format "Offener Touristischer Datenstandard" (OTDS - open tourist data standard) is the common data format for all tourism offers.</para>
			<para xml:id="de_531" xml:lang="de">OTDS soll dabei sowohl die Datenlieferung flexibilisieren als auch die Kommunikation
				zwischen Veranstaltern und Vertriebssystemen bzgl. Datenlieferung auf eine gemeinsame Ebene
				bringen und letztendlich dadurch vereinfachen.</para><para xml:id="en_531" xml:lang="en">OTDS aims both to make data delivery more flexible and to simplify communication between tour operators and distribution systems regarding data delivery by bringing it onto a common level.</para>
			<para xml:id="de_532" xml:lang="de">Dies setzt besondere Sorgfalt bei der Spezifikation des Formats voraus und erfordert eine
				sehr ausführliche und gute Dokumentation, welche Sie gerade lesen.</para><para xml:id="en_532" xml:lang="en">This demands that particular care is taken in the specification of the format and requires very good, detailed documentation, which you are currently reading.</para>
			<para xml:id="de_533" xml:lang="de">Diese Dokumentation beschreibt nicht nur die Struktur des gemeinsamen Formats, sondern auch
				das grundsätzliche theoretische Verarbeitungsmodell, welches dem Format zu Grunde liegt.
				Außerdem versuchen wir in der Dokumentation Begrifflichkeiten zu definieren, die die
				Kommunikation über das Thema Datenlieferung und Preisberechnung vereinheitlichen. </para><para xml:id="en_533" xml:lang="en">This documentation describes not only the structure of the common format, but also the fundamental theoretical processing model on which format is based. We also try to define terminology in the documentation which standardises communications about the topics of data delivery and price calculation.</para>
			<bridgehead xml:id="de_534" xml:lang="de">Die Spezifikation des Formates folgt dabei diesen Grundsätzen:</bridgehead><bridgehead xml:id="en_534" xml:lang="en">The specification of the format adheres to the following principles:</bridgehead>
			<orderedlist>
				<listitem>
					<para xml:id="de_535" xml:lang="de">OTDS ist ein offenes, freies Format, welches ohne implizite Regeln alle
						touristischen Angebote des deutschen Reisemarktes abbilden soll.</para><para xml:id="en_535" xml:lang="en">OTDS is an open, free format, which should describe all tourism offers of the German travel industry without the use of implicit rules.</para>
				</listitem>
				<listitem>
					<para xml:id="de_536" xml:lang="de">Abgestimmt im Einklang mit dem OTDS-Gremium</para><para xml:id="en_536" xml:lang="en">Coordinated in consultation with the OTDS committee</para>
				</listitem>
				<listitem>
					<para xml:id="de_537" xml:lang="de">Es soll von jedem ohne Lizenzkosten nutzbar sein</para><para xml:id="en_537" xml:lang="en">It should be available to all, without licence costs</para>
				</listitem>
				<listitem>
					<para xml:id="de_538" xml:lang="de">Es soll einfach durch Veranstalter und Reservierungssysteme lieferbar sein</para><para xml:id="en_538" xml:lang="en">It should be easy to deliver through tour operators and reservation systems</para>
				</listitem>
				<listitem>
					<para xml:id="de_539" xml:lang="de">Es soll technische Exzellenz ausdrücken</para><para xml:id="en_539" xml:lang="en">It should demonstrate technical excellence</para>
				</listitem>
				<listitem>
					<para xml:id="de_540" xml:lang="de">Es soll strukturierte Stammdaten von Reisekomponenten liefern</para><para xml:id="en_540" xml:lang="en">It should deliver the structured master data of travel components</para>
				</listitem>
				<listitem>
					<para xml:id="de_541" xml:lang="de">Es enthält alle Preisinformationen und Preisregeln zum Berechnen der Reisepreise,
						die alle Eigenschaften, Bedingungen, Kombinierbarkeiten und Nicht-Kombinierbarkeiten
						und Wirkungen der Preise wiederspiegeln</para><para xml:id="en_541" xml:lang="en">It contains all price information and price rules required for calculating the travel prices, and these reflect all properties, conditions, combinabilities, non-combinabilities and effects of the prices</para>
				</listitem>
				<listitem>
					<para xml:id="de_542" xml:lang="de">Ohne implizierte Veranstalter-spezifische Berechnungsregeln</para><para xml:id="en_542" xml:lang="en">Without implicit, operator specific calculation rules</para>
				</listitem>
				<listitem>
					<para xml:id="de_543" xml:lang="de">Es bietet sehr weitreichende flexible Preisberechnungsregeln</para><para xml:id="en_543" xml:lang="en">It offers very wide-ranging and flexible price calculation rules</para>
				</listitem>
				<listitem>
					<para xml:id="de_544" xml:lang="de">Der Veranstalter findet seine Berechnungsregeln wieder</para><para xml:id="en_544" xml:lang="en">The operator can retrieve their calculation rules</para>
				</listitem>
				<listitem>
					<para xml:id="de_545" xml:lang="de">Die Datenlieferung kann flexibel in unvollständige Teillieferungen aufgeteilt werden
						und auch inkrementell erfolgen</para><para xml:id="en_545" xml:lang="en">The data delivery can occur flexibly in incomplete partial deliveries which occur in incremental parts</para>
					<para xml:id="de_546" xml:lang="de"> </para><para xml:id="en_546" xml:lang="en"/>
				</listitem>
			</orderedlist>
		</section>
		<section xml:id="OtdsDocumentationUsage">
			<title><phrase xml:id="de_547" xml:lang="de">Verwendung der OTDS Spezifikation</phrase><phrase xml:id="en_547" xml:lang="en">Use of the OTDS specification</phrase></title>
			<para xml:id="de_548" xml:lang="de">Die OTDS-Spezifikation besteht aus mehreren Teilen:</para><para xml:id="en_548" xml:lang="en">The OTDS specification comprises several parts:</para>
			<orderedlist>
				<listitem>
					<bridgehead xml:id="de_549" xml:lang="de">Thematische Dokumentation</bridgehead><bridgehead xml:id="en_549" xml:lang="en">Thematic documentation</bridgehead>
					<para xml:id="de_550" xml:lang="de">Die thematische Dokumentation bringt Ihnen sowohl die technischen Aspekte von OTDS
						näher, als auch die touristischen Hintergründe und Anwendungsbeispiele, die
						schließlich zu den OTDS-Strategien geführt haben. Die thematische Dokumentation ist so
						geschrieben, dass diese wie ein Buch gelesen werden kann. Dazu ist die thematische
						Dokumentation in drei Kapitel aufgeteilt:</para><para xml:id="en_550" xml:lang="en">The thematic documentation gives you an understanding of both the technical aspects of OTDS and the tourism backgrounds and application examples, which have in essence led to the OTDS strategies. The thematic documentation is written is such a way that it can be read as a book. The thematic documentation is divided into three chapters:</para>
					<bridgehead xml:id="de_551" xml:lang="de">Kapitel 1: Grundlagen und Strategien</bridgehead><bridgehead xml:id="en_551" xml:lang="en">Chapter 1: Fundamentals and strategies</bridgehead>
					<para xml:id="de_552" xml:lang="de">In diesem Kapitel beschreiben wir den grundsätzlichen Aufbau einer OTDS
						Datenlieferung und die Bedeutung der einzelnen Bestandteile. Wir erklären auch die
						verschiedenen Strategien, die in OTDS immer wieder an verschiedenen Stellen zum
						Einsatz kommen. Dabei bieten wir überall entsprechende Kontext-bezogene Verlinkungen
						zu anderen Kapiteln, zu XML-Beispieldateien und in die technische Dokumentation.
						Dadurch bekommen Sie ein tiefes Verständnis für die Zusammenhänge in OTDS.</para><para xml:id="en_552" xml:lang="en">In this chapter we describe the fundamental structure of an OTDS data delivery and the significance of the individual components. We also explain the various strategies which are employed repeatedly at various points in OTDS. We include frequent context related links to other chapters, XML example files and the technical documentation. This will provide you with a deep understanding of the interrelationships in OTDS.</para>
					<bridgehead xml:id="de_553" xml:lang="de">Kapitel 2: Komponenten, Regeln und Preisbestandteile in der
						Praxis</bridgehead><bridgehead xml:id="en_553" xml:lang="en">Chapter 2: Components, rules and price components in practice</bridgehead>
					<para xml:id="de_554" xml:lang="de">Dieses Kapitel vertieft durch Erläuterung typischer Szenarien aus der touristischen
						Praxis, wie die OTDS Strategien umzusetzen sind. Die vielseitigen Beispiele zeigen
						anschaulich wie die zuvor kennengelernten Strategien angewendet werden. Diese Kapitel
						sind besonders für Datenlieferanten interessant. Es handelt sich hierbei um eine Art
						Kochbuch für OTDS-Lieferanten. Wobei zu bemerken ist, dass wir uns in den Beispielen
						lediglich auf die touristischen Standards (also die Hauptspeisen) beziehen, die so
						auch in den verschiedenen Katalogen der Veranstalter zu finden sind. Dadurch können
						aber die generellen Mechanismen verdeutlicht werden und die tiefen Geheimnisse der
						einzelnen Veranstalter bleiben gewahrt.</para><para xml:id="en_554" xml:lang="en">This chapter expands on how OTDS strategies are to be implemented, using illustrations of typical scenarios from the tourism industry, The varied examples illustratively show how the previously introduced strategies can be implemented. This chapter is of particular interest to those concerned with data delivery. It can be considered a type of cookbook for OTDS deliverers. Note that in these examples, we only refer to the tourism standards (i.e. the main courses), which can also be found in the various catalogues of the tour operators. In this way, the general mechanisms can be elucidated, whilst keeping the deeper secrets of the individual operators.</para>
					<para xml:id="de_555" xml:lang="de">Die Umsetzung sehr spezieller Szenarien (also sozusagen die Gourmet-Speisen oder
						Amuse-Gueule-Häppchen), muss man aus den Beschreibungen und Beispielen ableiten oder
						man sucht die direkte Beratung durch OTDS-Fachleute (Gourmet-Köche).</para><para xml:id="en_555" xml:lang="en">The implementation of very particular scenarios (i. e. the gourmet dishes or the amuse-gueule snacks) must be deduced from the descriptions and examples, or direct advice can be sought from OTDS specialists (gourmet chefs).</para>
					<bridgehead xml:id="de_556" xml:lang="de">Kapitel 3: Theoretische Verarbeitungsmodelle</bridgehead><bridgehead xml:id="en_556" xml:lang="en">Chapter 3: Theoretical processing models</bridgehead>
					<para xml:id="de_557" xml:lang="de">Die theoretischen Verarbeitungsmodelle beschreiben, in welcher Form theoretisch aus
						den gelieferten Daten Angebote erzeugt, Komponenten kombiniert und Preise berechnet
						werden. Diese Modelle schließen den Kreis bzgl. einer eindeutigen Interpretation der
						gelieferten OTDS-Daten. Dieses Kapitel wird besonders für die Verarbeiter von OTDS
						interessant sein. Generell ist dieses Kapitel aber sehr wichtig um Missverständnisse
						bzgl. der Interpretation zu vermeiden.</para><para xml:id="en_557" xml:lang="en">The theoretical processing models describe in what form theoretical offers are produced, components are combined and prices are calculated from the supplied data. These models complete the circle in terms of an unambiguous interpretation of the supplied OTDS data. This chapter will be particularly interesting to processors of OTDS. However, this chapter is very important in general for avoiding misunderstandings regarding interpretation.</para>
					<para xml:id="de_558" xml:lang="de">Idealerweise erarbeitet man sich die Dokumentation mit mehreren Bildschirmen und
						öffnet sich parallel sowohl die thematische als auch die häufig verlinkte technische
						Dokumentation. So spart man sich lästiges Springen und Scrollen im Dokument.</para><para xml:id="en_558" xml:lang="en">Ideally, you should work on the documentation on several screens and simultaneously open the thematic as well as the frequently linked technical documentation. In this way you can save yourself the trouble of jumping around and scrolling through the document.</para>
				</listitem>
				<listitem>
					<bridgehead xml:id="de_559" xml:lang="de">Technische Dokumentation mit praktischen Filtermöglichkeiten</bridgehead><bridgehead xml:id="en_559" xml:lang="en">Technical documentation with practical filtering possibilities.</bridgehead>
					<para xml:id="de_560" xml:lang="de">Die Technische Dokumentation entspricht zu 100% den Kommentaren und Detailangaben
						aus den XSD-Dateien. Zusätzlich ist es möglich nach Elementnamen zu filtern und den
						Verlinkungen innerhalb der Kommentare zu folgen. Die Verlinkungen führen entweder zu
						XML-Beispielen oder zur thematischen Dokumentation.</para><para xml:id="en_560" xml:lang="en">The technical documentation 100% reflects the comments and detail specifications from the XSD data. In addition, it is possible to filter according to element names and follow the links within the comments. The links lead either to XML examples or to the thematic documentation.</para>
					<para xml:id="de_561" xml:lang="de">Am linken Rand der technischen Dokumentation findet sich eine hierarchisch
						strukturierte Auflistung aller Elemente einer OTDS XML Datenlieferung. Diese Liste
						kann über einen Suchbegriff gefiltert werden, so dass gesuchte Elemente schnell
						gefunden und lokalisiert werden können. Eine Verlinkung in die technische
						Dokumentation erfolgt immer über die Vorbesetzung dieses Suchbegriffes.</para><para xml:id="en_561" xml:lang="en">On the left-hand side of the technical documentation is a hierarchically structured list of all elements of an OTDS XML data delivery. This list can be filtered through a search term, so that the sought elements can quickly be found and localised. Linking to the technical documentation always occurs via the presetting of this search term.</para>
					<para xml:id="de_562" xml:lang="de">Link zur Technischen Dokumentation mit dem Suchbegriff "Otds":<link xlink:href="./technisch/otds_technisch.html#Otds">Technischen Dokumentation für
							OTDS - Otds</link></para><para xml:id="en_562" xml:lang="en">Link to the technical documentation with the search term "Otds":<link xlink:href="./technisch/otds_technisch.html#Otds">technical documentation for OTDS - Otds</link>
					</para>
				</listitem>
				<listitem>
					<bridgehead xml:id="de_563" xml:lang="de">XSD-Dateien</bridgehead><bridgehead xml:id="en_563" xml:lang="en">XSD files</bridgehead>
					<para xml:id="de_564" xml:lang="de">Die XSD-Dateien, auch Schemadateien genannt, beschreiben die OTDS-XML Dateien formal
						sehr genau und definieren welche Knoten, Elemente und Werte in einer OTDS
						Datenlieferung enthalten sein können oder müssen. Mit entsprechenden Programmen wie
						Altova XML-Spy oder oXygen XML Editor kann man sich diese Schemadateien grafisch
						darstellen lassen und hat Zugriff auf die detaillierten Kommentare zu den einzelnen
						Elementen, die auch 1 zu 1 in der technischen Dokumentation zu finden sind. Die
						XSD-Dateien dienen der Validierung der OTDS-Datenlieferungsdateien.</para><para xml:id="en_564" xml:lang="en">The XSD files, which are also known as schema files, describe the OTDS XML files technically very precisely and define which nodes, elements and values can or must be contained in an OTDS data delivery. With the appropriate programmes, such as Altova XML-Spy or oXygen XML Editor, you can see graphic portrayals of these schema files and will have access to the detailed commentaries to the individual elements which can also be found 1 to 1 in the technical documentation. The XSD files serve as validation of the OTDS data delivery files.</para>
					<para xml:id="de_565" xml:lang="de"> </para><para xml:id="en_565" xml:lang="en"/>
				</listitem>
				<listitem>
					<bridgehead xml:id="de_566" xml:lang="de">XML-Beispiele</bridgehead><bridgehead xml:id="en_566" xml:lang="en">XML examples</bridgehead>
					<para xml:id="de_567" xml:lang="de">Es stehen eine ganze Reihe von XML-Beispielen zu unterschiedlichen Themen zur
						Verfügung. Viele der Beispiele finden Sie auszugsweise in den Beschreibungen wieder.
						Im Anhang finden Sie eine <link linkend="AppendixExamples">Liste der Beispiele</link>
						und eine kurze Beschreibung der Inhalte.</para><para xml:id="en_567" xml:lang="en">A whole range of XML examples addressing various themes are available. Many of the examples can be found as excerpts in the descriptions. Attached you will find a <link linkend="AppendixExamples">list of examples</link> and a short description of the contents.</para>
					<para xml:id="de_568" xml:lang="de"> </para><para xml:id="en_568" xml:lang="en"/>
				</listitem>
			</orderedlist>
		</section>
		<section xml:id="OtdsStrategy">
			<title><phrase xml:id="de_569" xml:lang="de">Strategien und Datenstrukturen</phrase><phrase xml:id="en_569" xml:lang="en">Strategies and data structures</phrase></title>
			<section xml:id="OtdsStrategyOverview">
				<title><phrase xml:id="de_570" xml:lang="de">Überblick</phrase><phrase xml:id="en_570" xml:lang="en">Overview</phrase></title>
				<para xml:id="de_571" xml:lang="de">OTDS verfolgt das Ziel alle Regeln und Preisstrukturen der Veranstaltersysteme der
					deutschen Touristik abzudecken und daraus eindeutige Verarbeitungsprozesse abzuleiten, die
					zu einer allgemeinen gleichartigen Verarbeitung der Daten führen. Um das zu erreichen,
					bedient sich OTDS sehr allgemeiner Regel- und Preisberechnungsmechanismen, die innerhalb
					der kompletten OTDS Struktur immer wieder gleich benutzt werden. Hat man also einmal diese
					Mechanismen verstanden, sind die wichtigsten Teile von OTDS verstanden. </para><para xml:id="en_571" xml:lang="en">OTDS has the aim of covering all rules and price structures of the tour operator systems of the German tourist industry and deriving unambiguous processes from it which lead to a generally similar processing of the data. In order to achieve this, OTDS uses very general rule and price calculation mechanisms, which are repeatedly used in the same way within the entire OTDS structure. Once these mechanisms have been understood, the most important parts of OTDS are understood.</para>
				<para xml:id="de_572" xml:lang="de">Grundsätzlich handelt es sich bei OTDS um ein XML-Format. Auch wenn XML nicht das
					optimale Format für den Transport von Massendaten ist, so bietet es doch enorme Vorteile
					bzgl. der Umsetzung von inkrementellen Updates und auch bzgl. der zukünftigen
					Erweiterbarkeit eines Formates. OTDS integriert mit Hilfe gängiger XML-Mechanismen ein
					Updatekonzept, welches sehr kleinteilige inkrementelle Updates erlaubt. So sind zum
					Beispiel auch Updates einzelner Verfügbarkeiten in OTDS möglich. Aber auch an anderen
					Stellen geht das Updatekonzept weit über das hinaus, was bisher in anderen Formaten
					möglich war.</para><para xml:id="en_572" xml:lang="en">In general, OTDS uses an XML format. Even if XML is not the optimal format for the transportation of masses of data, it offers enormous advantages in terms of the implementation of incremental updates and also in terms of the future expandability of a format. With the aid of current XML mechanisms, OTDS integrates an update concept which allows incremental updates with very small components. This means, for example, that updates of individual availabilities are available in OTDS. But in other areas too, the update concept extends far beyond that which was previously possible in other formats.</para>
				<para xml:id="de_573" xml:lang="de">Als Nebeneffekt des Updatekonzeptes werden Datenlieferungen in logische Knotenpunkte
					aufgeteilt, die mit eindeutigen Schlüsseln versehen werden. Genau diese Schlüssel
					enthalten in der Regel auch die Veranstaltersysteme. Zu den Schlüsseln gehören Reisearten,
					Leistungscodes, Flugschlüssel, Buchungsklassen und einige mehr. Diese Schlüssel an den
					logischen Knotenpunkten werden nicht nur für das Updatekonzept benutzt, sondern finden
					auch Verwendung bei Formulierung von Abhängigkeiten und Regelmechanismen. </para><para xml:id="en_573" xml:lang="en">As a side effect of the update concept, data deliveries are divided into logical node points, which are provided with unambiguous keys. Precisely these keys are usually also present in the tour operator systems. The keys include travel types, service codes, flight keys, booking classes and a few others. These keys at the logical node points are not only used for the update concept, but are also employed for the formulation of dependencies and rule mechanisms.</para>
				<para xml:id="de_574" xml:lang="de">Das mächtigste Werkzeug für die Regelmechanismen in OTDS ist die Verwendung von freien
					TAGs an den logischen Knotenpunkten. Diese TAGs sind Wertepaare, die als Markierungen
					dienen. Das eröffnet eine Flexibilität, so dass Veranstaltersysteme ihre Regelmechanismen
					auf einfache Weise in OTDS überführen können. Durch die generische Verwendung dieser
					Wertepaare ist es auch möglich, dass die Regelwerke in den Daten nicht so offensichtlich
					sind. Bei geschickter Verwendung führt es gar zu einer Art der Verschlüsselung der Regeln.
					(siehe dazu auch Anhang <link linkend="AppendixCommentsBussinesRules">"Wahrung des
						Geheimnisses der BusinessRules"</link>)</para><para xml:id="en_574" xml:lang="en">The most powerful tool for the rule mechanisms in OTDS is the use of free tags at the logical node points. These tags are pairs of values which serve as markers. This creates flexibility, making it simple for tour operator systems to convert their rule mechanisms to OTDS. Through the generic use of these pairs of values, it is also possible that the rule sets in the data won't be as visible. With proficient use, it can even lead to a kind of encryption of the rules (see the attachment <link linkend="AppendixCommentsBussinesRules">"Preserving the secret of the BusinessRules"</link>)</para>
				<para xml:id="de_575" xml:lang="de">Entscheidend ist aber, dass sich die Veranstaltersysteme dadurch gut abbilden lassen.
					Letzteres führt auch dazu, dass eines der Basiskonzepte der Veranstaltersysteme auch in
					OTDS übernommen wurde: Die Komponenten-basierte Anlage der Reisedaten. Genau wie die
					Veranstaltersysteme sind in OTDS die verschiedenen Reise-Komponenten wie Unterkünfte,
					Flüge und Zusatzleistungen getrennt voneinander angelegt und werden über Regeln zu
					Produkten zusammengeführt. Das reduziert die Datenmenge und führt zur Flexibilisierung der
					Produktbildung.</para><para xml:id="en_575" xml:lang="en">What matters most, however, is that the tour operator systems can be well depicted in this way. The latter also means that one of the basic concepts of the tour operator systems is also carried over into OTDS: the component-based arrangement of the travel data. In OTDS, just as in the tour operator systems, the various travel components such as accommodation, flights and additional services are located separately from each other and are combined via rules to create products. This reduces the quantity of data and leads to more flexible product creation.</para>
				<para xml:id="de_576" xml:lang="de">Ein Kernpunkt von OTDS ist die Berechnung der Gesamtpreise der gelieferten Angebote. In
					OTDS können sehr flexibel einzelne Preisbestandteile an verschiedenen markanten Stellen
					geliefert werden. Ein entscheidender Unterschied zu allen bisher bekannten Datenformaten
					ist, dass innerhalb von OTDS alle Preisbestandteile gleich behandelt werden. Die
					Preisbestandteile enthalten nur noch allgemeine sehr genau definierte Eigenschaften und
					Kennzeichen, aus denen sich ihre Rolle in der Preisberechnung ableitet. Daraus ergibt sich
					ein generisches Verarbeitungsmodell der Preisbestandteile, welches keine implizierten
					veranstalterspezifischen Regeln mehr benötigt.</para><para xml:id="en_576" xml:lang="en">One central aspect of OTDS is the calculation of the total prices of the supplied offers. In OTDS individual price components can very flexibly be supplied to various distinct points. A crucial difference to all data formats available previously is that all price components are treated in the same way within OTDS. The price components now only contain general, very precisely defined characteristics and indicators, from which their role in the price calculation is deduced. From this a generic processing model of the price components can be constructed which no longer requires any implicit operator-specific rules.</para>
				<para xml:id="de_577" xml:lang="de">Sowohl für die Preisberechnung als auch für die Zusammenstellung der Angebote werden
					logisch verknüpfte Bedingungen formuliert und ausgewertet. Bedingungen sind zum Beispiel:
					Ein Preisbetandteil ist gültig, wenn die Buchung 30 Tage vor Anreise getätigt wurde und
					gleichzeitig die Dauer der Reise zwischen 7 und 14 Tagen liegt oder ein Angebot existiert
					nur für Anreisen zwischen Mo und Fr und ab einer Dauer von 3 Tagen.</para><para xml:id="en_577" xml:lang="en">Logically connected conditions are formulated and evaluated for the price calculation, as well as for the compilation of offers. Conditions are, for example: a price component is valid if the booking is made 30 days before arrival and if, at the same time, the duration of the trip is between 7 and 14 days, or if there is an offer which is only for arrivals between Monday and Friday and from a duration of 3 days.</para>
				<para xml:id="de_578" xml:lang="de">Die Bedingungen können sich auf viele verschiedene Parameter beziehen und können
					untereinander beliebig logisch verknüpft werden. Je nach Verwendung sind diese Bedingungen
					Bestandteil eines "Filters", um beispielsweise Angebote auszufiltern, oder Bestandteil
					einer "Condition", um beispielsweise Bedingungen für die Preisberechnung zu
					definieren.</para><para xml:id="en_578" xml:lang="en">The conditions can refer to many different parameters and can be logically connected to each other in any way. Depending on their function, these conditions are components of a "filter", to filter out offers for example, or components of a "condition", for example to define conditions for price calculation.</para>
				<para xml:id="de_579" xml:lang="de">Neben den Preisdaten kümmert sich OTDS auch intensiv um die Buchungsparameter und die
					Auszeichnung der Eigenschaften eines Angebotes. Individuelle Namespaces ermöglichen dabei
					die Eigenheiten der verschiedenen Buchungssysteme zu unterstützen. Veranstaltereigene
					Webportale sind auch über individuelle Namespaces mit individuellen Auszeichnungen
					bestückbar.</para><para xml:id="en_579" xml:lang="en">As well as the price data, OTDS also intensively focuses on the booking parameters and the distinction of the characteristics of the offer. In doing this, individual namespaces make it possible to support the special features of the various booking systems. Operators' own web portals can also be equipped with individual distinctions via individual namespaces.</para>
			</section>
			<section xml:id="OtdsStrategyTermDefinitions">
				<title><phrase xml:id="de_580" xml:lang="de">Begriffsbestimmungen</phrase><phrase xml:id="en_580" xml:lang="en">Definitions of terms</phrase></title>
				<bridgehead xml:id="de_581" xml:lang="de">Komponente</bridgehead><bridgehead xml:id="en_581" xml:lang="en">Component</bridgehead>
				<para xml:id="de_582" xml:lang="de">Eine Komponente stellt in OTDS eine Reisekomponente dar. In dem Sinne gibt es aktuell in
					OTDS folgende Komponenten: </para><para xml:id="en_582" xml:lang="en">A component describes a travel component in OTDS. In this sense, OTDS currently has the following components:</para>
				<para xml:id="de_583" xml:lang="de">Unterkünfte, Flüge und Zusatzleistungen.</para><para xml:id="en_583" xml:lang="en">Accommodation, flights and additional services.</para>
				<bridgehead xml:id="de_584" xml:lang="de">Unterkomponente</bridgehead><bridgehead xml:id="en_584" xml:lang="en">Subcomponent</bridgehead>
				<para xml:id="de_585" xml:lang="de">Die Unterkomponenten beschreiben die verschiedenen Ausprägungen einer Komponente.
					Folgende Unterkomponenten sind in OTDS definiert: 
				</para><para xml:id="en_585" xml:lang="en">The subcomponents describe the various manifestations of a component. The following subcomponents are defined in OTDS:</para>
				<itemizedlist>
					<listitem>
						<para xml:id="de_586" xml:lang="de">Accommodation -&gt; SellingAccommodation -&gt; Unit -&gt; Board</para><para xml:id="en_586" xml:lang="en">Accommodation -&gt; SellingAccommodation -&gt; Unit -&gt; Board</para>
					</listitem>
					<listitem>
						<para xml:id="de_587" xml:lang="de">Accommodation -&gt; SellingAccommodation -&gt; Unit -&gt; SellingUnit</para><para xml:id="en_587" xml:lang="en">Accommodation -&gt; SellingAccommodation -&gt; Unit -&gt; SellingUnit</para>
					</listitem>
					<listitem>
						<para xml:id="de_588" xml:lang="de">Flights -&gt; OnewayFlights -&gt; OnewayFlight -&gt; BookingClass</para><para xml:id="en_588" xml:lang="en">Flights -&gt; OnewayFlights -&gt; OnewayFlight -&gt; BookingClass</para>
					</listitem>
					<listitem>
						<para xml:id="de_589" xml:lang="de">Flights -&gt; ReturnFlights -&gt; ReturnFlight -&gt; Inbound -&gt; BookingClass</para><para xml:id="en_589" xml:lang="en">Flights -&gt; ReturnFlights -&gt; ReturnFlight -&gt; Inbound -&gt; BookingClass</para>
					</listitem>
					<listitem>
						<para xml:id="de_590" xml:lang="de">Flights -&gt; ReturnFlights -&gt; ReturnFlight -&gt; Outbound -&gt; BookingClass</para><para xml:id="en_590" xml:lang="en">Flights -&gt; ReturnFlights -&gt; ReturnFlight -&gt; Outbound -&gt; BookingClass</para>
					</listitem>
					<listitem>
						<para xml:id="de_591" xml:lang="de">Flights -&gt; ReturnFlights -&gt; ReturnFlight -&gt; BookingClass</para><para xml:id="en_591" xml:lang="en">Flights -&gt; ReturnFlights -&gt; ReturnFlight -&gt; BookingClass</para>
					</listitem>
					<listitem>
						<para xml:id="de_592" xml:lang="de">Addons -&gt; Addon -&gt; ServiceFeature</para><para xml:id="en_592" xml:lang="en">Addons -&gt; Addon -&gt; ServiceFeature</para>
					</listitem>
					<listitem>
						<para xml:id="de_593" xml:lang="de">Addons -&gt; Addon -&gt; Service</para><para xml:id="en_593" xml:lang="en">Addons -&gt; Addon -&gt; Service</para>
					</listitem>
				</itemizedlist>
				
				<para xml:id="de_594" xml:lang="de">Die Ergebnismenge der Angebote einer OTDS Lieferung ist die Menge aller
					Unterkomponenten, die die Bedingungen der Produktregeln und die Bedingungen der
					beteiligten Unterkomponenten erfüllt.</para><para xml:id="en_594" xml:lang="en">The amount of results of the offers of an OTDS delivery is the amount of all subcomponents which meet all of the conditions of the product rules and the conditions of the participating subcomponents.</para>
				<para xml:id="de_595" xml:lang="de">Das bedeutet: Ein Produkt wird zum BEispiel gebildet aus Hotels und Flügen. Bedingung an
					das Produkt ist zum Beispiel, dass die Flughäfen der Flüge zu einem Einzugsflughafen des
					Hotels passen. Außerdem haben einige Hotelkomponenten noch eine Mindestdauer ab der diese
					gebucht werden können. Alle in Frage kommenden Angebote müssen genau diese Bedingungen
					sowohl an das Produkt als auch an die EInzelkomponenten erfüllen. </para><para xml:id="en_595" xml:lang="en">This means: A product could, for example, be compiled of hotels and flights. A condition for the product could, for example, be that the airport for the flights matches a destination airport of the hotel. In addition, some hotel components also have a minimum duration from which they can be booked. All considered offers must precisely fulfil these conditions for both the product and the individual components.</para>
			</section>
			<section xml:id="OtdsStrategyComponent">
				<title><phrase xml:id="de_596" xml:lang="de">Komponenten in OTDS</phrase><phrase xml:id="en_596" xml:lang="en">Components in OTDS</phrase></title>
				<section xml:id="OtdsStrategyComponentOverview">
					<title><phrase xml:id="de_597" xml:lang="de">Überblick</phrase><phrase xml:id="en_597" xml:lang="en">Overview</phrase></title>
					<para xml:id="de_598" xml:lang="de">Grundsätzlich werden innerhalb einer OTDS-Datenlieferung Reisekomponenten geliefert
						und zu Produkten zusammengefasst. Die Datenlieferung beinhaltet für eine oder mehrere
						Marken alle verfügbaren Stammdaten, Angebotsdaten, Preisdaten und Verfügbarkeiten von
						Reisekomponenten sowie alle Regeln zur Produktbildung aus diesen Reisekomponenten. </para><para xml:id="en_598" xml:lang="en">Within an OTDS data delivery, travel components are delivered and compiled into products. The data delivery contains all available master data, offer data, price data and availabilities for travel components of one or more brands, as well as all rules for product composition from these travel components.</para>
					<para xml:id="det_599" xml:lang="de"/> 
					<figure>
						<info>
							<title><phrase xml:id="de_600" xml:lang="de">OTDS-Datenstruktur: Reisekomponenten und Produkte </phrase><phrase xml:id="en_600" xml:lang="en">OTDS data structure: Travel components and products</phrase></title>
						</info>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/otds.png" format="PNG" contentwidth="50%"/>
							</imageobject>
							<textobject>
								<para xml:id="de_601" xml:lang="de">OTDS-Datenstruktur: Reisekomponenten und Produkte</para><para xml:id="en_601" xml:lang="en">OTDS data structure: Travel component and products</para>
							</textobject>
						</mediaobject>
					</figure>
					<para xml:id="det_602" xml:lang="de"/>
					<para xml:id="de_603" xml:lang="de">Folgende <emphasis role="bold">Reisekomponenten</emphasis> können in einer
						OTDS-Datenlieferung enthalten sein:</para><para xml:id="en_603" xml:lang="en">The following <emphasis role="bold">travel components</emphasis> can be contained in an OTDS data delivery:</para>
					
						<informaltable>
							<tgroup cols="3">
								<tbody valign="top">
									<row valign="top">
										<entry>
											<itemizedlist>
												<listitem>
													<para xml:id="de_604" xml:lang="de">Accommodations </para><para xml:id="en_604" xml:lang="en">Accommodations</para>
												</listitem>
											</itemizedlist>
										</entry>
										<entry>
											<para xml:id="de_605" xml:lang="de">Unterbringungen</para><para xml:id="en_605" xml:lang="en">Accommodation</para>
										</entry>
										<entry>
											<para xml:id="de_606" xml:lang="de">Hotels, Ferienwohnungen, Ferienhäuser</para><para xml:id="en_606" xml:lang="en">Hotels, holiday apartments, holiday homes</para>
										</entry>
									</row>
									<row valign="top">
										<entry>
											<itemizedlist>
												<listitem>
													<para xml:id="de_607" xml:lang="de">Flights </para><para xml:id="en_607" xml:lang="en">Flights</para>
												</listitem>
											</itemizedlist>
										</entry>
										<entry>
											<para xml:id="de_608" xml:lang="de">Flugangebote</para><para xml:id="en_608" xml:lang="en">Flight offers</para>
										</entry>
										<entry>
											<para xml:id="de_609" xml:lang="de">Einzelflüge, Hin- und Rückflüge</para><para xml:id="en_609" xml:lang="en">One-way flights, return flights</para>
										</entry>
									</row>
									<row valign="top">
										<entry>
											<itemizedlist>
												<listitem>
													<para xml:id="de_610" xml:lang="de">Addons</para><para xml:id="en_610" xml:lang="en">Addons</para>
												</listitem>
											</itemizedlist>
										</entry>
										<entry>
											<para xml:id="de_611" xml:lang="de">Zusatzangebote </para><para xml:id="en_611" xml:lang="en">Additional offers</para>
										</entry>
										<entry>
											<para xml:id="de_612" xml:lang="de">Hotelservices, Mietwagen, Ausflüge, Sport- und
												Gesundheitsangebote etc.</para><para xml:id="en_612" xml:lang="en">Hotel services, car hire, excursions, sport and health options, etc.</para>
										</entry>
									</row>
									<row valign="top">
										<entry>
											<itemizedlist>
												<listitem>
													<para xml:id="de_613" xml:lang="de">DefinedComponents</para><para xml:id="en_613" xml:lang="en">DefinedComponents</para>
												</listitem>
											</itemizedlist>
										</entry>
										<entry>
											<para xml:id="de_614" xml:lang="de">Kombinierte Komponenten</para><para xml:id="en_614" xml:lang="en">Combined components</para>
										</entry>
										<entry>
											<para xml:id="de_615" xml:lang="de">Erweiterung von Einzelflügen, Erweiterung von Hin- und
												Rückflügen (Returnflügen), Bildung von Returnflügen aus zwei
												Einzelflügen</para><para xml:id="en_615" xml:lang="en">Extension of one-way flights, extension of return flights (return flights), compilation of return flights from two one-way flights</para>
										</entry>
									</row>
								</tbody>
							</tgroup>
						</informaltable>
					
				</section>
				<section xml:id="OtdsStrategyComponentAccommodations">
					<title><phrase xml:id="de_616" xml:lang="de">Accommodations</phrase><phrase xml:id="en_616" xml:lang="en">Accommodations</phrase></title>
					<para xml:id="de_617" xml:lang="de">Eine der Reisekomponenten ist die Unterbringung, wobei es sich bei der Unterbringung
						nicht nur um Hotels, sondern auch um Ferienwohnung und andere lokal fixierte
						Unterkünfte handelt. Die Unterbringung splittet sich auf weitere Unterkomponenten wie
						z.B. Zimmer (Units) und Verpflegungen (Boards) auf. Das angebotene Teil-Produkt aus
						dem Bereich Accommodations besteht aus der Kombination eines Zimmers mit einem
						Verpflegungstyp, wobei der Verpflegungstyp auch "OhneVerpflegung" sein kann. </para><para xml:id="en_617" xml:lang="en">One of the travel components is accommodation, which does not only contain hotels, but also holiday apartments and other local, fixed accommodation. The accommodation is split into further subcomponents, such as rooms (Units) and board types (Boards). The product part offered from the area Accommodations consists of the combination of a room with a type of board. The type of board can also be "without board".</para>
					<para xml:id="de_618" xml:lang="de">Die Zimmer und Verpflegungen stellen dabei logische Knotenpunkte innerhalb des XMLs
						dar. Die logischen Knotenpunkte eines Teil-Produktes enthalten alle Informationen des
						Teil-Produktes, die für die Suche, Buchung und Preisberechnung notwendig sind. Somit
						bestehen die Such-Eigenschaften (Properties) des Teil-Produkts aus allen
						eingesammelten Eigenschaften (Properties) zu der entsprechenden Unterkunft, dem
						entsprechenden Zimmer und der entsprechenden Verpflegung. </para><para xml:id="en_618" xml:lang="en">The rooms and board types represent logical node points within the XML. The logical node points of a product part contain all of the information for that product part necessary for searching, booking and price calculation. In this way, the search properties (Properties) of the product part are composed of all of the collected properties (Properties) for the corresponding accommodation, the corresponding room and the corresponding board.</para>
					<para xml:id="de_619" xml:lang="de">Analog funktioniert das Einsammeln der Buchungsinformationen und der
						Preisinformationen. Zu jedem Teil-Produkt (Zimmer + Verpflegung) liegt also die Menge
						aller Sucheigenschaften, Buchungsparameter und Preisbestandteile vor, die an den
						entsprechenden Knoten des Teil-Produktes eingesammelt werden. </para><para xml:id="en_619" xml:lang="en">The collection of the booking and pricing information functions in the same way. For each product part (room + board) there is a quantity of all search properties, booking parameters and price components, which are collected at the corresponding node of the product part.</para>
					<para xml:id="de_620" xml:lang="de">In den Übersichten finden sich immer wieder das Element "Tags" welches die Elemente
						"Tag" und "ConditionalTag" enthält. Dies sind freie Markierungen, die an allen
						logischen Knoten platziert werden können und sowohl bei der Produktbildung als auch
						bei der Preisberechnung eine wichtige Rolle spielen. Mehr dazu etwas weiter unten in
						einem der folgenden Kapitel.</para><para xml:id="en_620" xml:lang="en">The element "Tags" can frequently be found in the overview and contains both the "Tag" and "ConditionalTag" elements. These are free markers which can be placed on all logical nodes and play an important role in product composition as well as in the price calculation. Further information on this is offered in a later chapter.</para>
					<para xml:id="de_621" xml:lang="de">Die wichtigsten Knotenpunkte der Accommodations finden Sie in folgendem Schaubild: </para><para xml:id="en_621" xml:lang="en">The most important node points for Accommodations can be found in the following graph:</para>
					<figure>
						<info>
							<title><phrase xml:id="de_622" xml:lang="de">Überblick über die Struktur von Accommodations</phrase><phrase xml:id="en_622" xml:lang="en">Overview of the structure of Accommodations</phrase></title>
						</info>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/accommodations.png" format="PNG" contentwidth="80%"/>
							</imageobject>
							<textobject>
								<para xml:id="de_623" xml:lang="de">Überblick über die Struktur von Accommodations</para><para xml:id="en_623" xml:lang="en">Overview of the structure of Accommodations</para>
							</textobject>
						</mediaobject>
					</figure>
					<para xml:id="de_624" xml:lang="de"> </para><para xml:id="en_624" xml:lang="en"/>
					<bridgehead xml:id="de_625" xml:lang="de">Accommodations</bridgehead><bridgehead xml:id="en_625" xml:lang="en">Accommodations</bridgehead>
					<para xml:id="de_626" xml:lang="de">Der Knoten Accommodations steht für alle gelieferten Unterkünfte. Alle auf dieser
						Ebene platzierten PriceItems gelten grundsätzlich für alle gelieferten Unterkünfte.
						Mehr dazu im entsprechenden Kapitel <link linkend="OtdsStrategyPriceItem">"Preisbestandteile"</link>. </para><para xml:id="en_626" xml:lang="en">The Accommodations node represents all delivered accommodation. All PriceItems placed at this level apply to all delivered accommodation. Find out more in the relevant chapter<link linkend="OtdsStrategyPriceItem">"Price Components"</link>.</para>
					<bridgehead xml:id="de_627" xml:lang="de">Accommodation</bridgehead><bridgehead xml:id="en_627" xml:lang="en">Accommodation</bridgehead>
					<para xml:id="de_628" xml:lang="de">Der Knoten Accommodation steht für jede einzelne gelieferte Unterkunft. Es geht
						dabei um die physikalisch existierende Unterkunft, deren Eigenschaften wie z.B. Lage,
						Ausstattung und korrespondierende Flughäfen eindeutig festgelegt sind und nicht von
						der Ausprägung des Angebotes abhängen. Die Daten dieser Ebene werden in der Regel von
						der Stammdatenabteilung verwaltet. </para><para xml:id="en_628" xml:lang="en">The Accommodation node represents each individual instance of accommodation being delivered. It refers to the accommodation as it actually exists, with clearly defined characteristics such as location, facilities and corresponding airports which are not dependant on the make-up of the offer. Data at this level is usually controlled by the master data.</para>
					<para xml:id="de_629" xml:lang="de">Sollte der Veranstalter physische Verfügbarkeiten benutzten, also Verfügbarkeiten,
						die nicht durch die Verkaufssteuerung, wie beispielsweise einer Steuerung über Dauern
						beeinflusst werden, so kann er diese Verfügbarkeiten auf dieser Ebene im Zweig
						"Availabilities" liefern und zusätzlich eine Abhängigkeit zum jeweiligen
						physikalischen Zimmer als Condition definieren. Mehr dazu im entsprechenden Kapitel
							<link linkend="OtdsStrategyAvailability">"Verfügbarkeiten"</link>.</para><para xml:id="en_629" xml:lang="en">If a tour operator wants to use physical availabilities, i.e. availabilities that are not influence by sales management (such as restrictions applying to the duration of the stay), the "Availabilities" branch on this level can be used and dependencies on the physical room can be defined as a condition. Further information can be found in the chapter,<link linkend="OtdsStrategyAvailability">"Availability"</link>.</para>
					<para xml:id="de_630" xml:lang="de">Jeder Knoten "Accommodation" erfordert die Angabe eines eindeutigen Schlüsselwertes
						für diesen Knoten. Es empfiehlt sich, den internen Stammdatencode der Unterkunft als
						Schlüsselwert zu verwenden. </para><para xml:id="en_630" xml:lang="en">Each "Accommodation" node requires the entry of a unique key value. Using the internal master data code of the property as the key value is recommended.</para>
					<bridgehead xml:id="de_631" xml:lang="de">SellingAccom</bridgehead><bridgehead xml:id="en_631" xml:lang="en">SellingAccom</bridgehead>
					<para xml:id="de_632" xml:lang="de">Der Knoten SellingAccom enthält alle Variationen der physikalischen Unterkunft für
						den Vertrieb. Häufig geht es dabei um den Vertrieb für unterschiedliche Kundengruppen,
						wie z.B. Familien, junge Paare oder Singles. Das SellingAccom definiert mit den
						möglichen Verpflegungen (Board) und Zimmern (Units) das Teil-Produkt der Komponente
						"Accommodation". Das Teilprodukt ist hier ein bestimmtes Zimmer kombiniert mit einer
						bestimmten Verpflegung, in dem Sinne die eigentliche Ware, die angeboten wird. </para><para xml:id="en_632" xml:lang="en">The SellingAccom node contains all variations in the physical accommodation specific to the sale. Often this involves the sales for different customer groups, such as families, young couples and singles. The SellingAccom node defines possible board (Board) and rooms (Units) as a sub-product of the "Accommodation" component. The sub-product here is a specific room combined with a specific board option, so the actual products that constitute the offer.</para>
					<para xml:id="de_633" xml:lang="de">In diesem Zweig werden neben den Buchungsparametern (Booking) auch zusätzliche
						Eigenschaften (Properties) der SellingAccom definiert. Durch die Filter kann das
						SellingAccom auf bestimmte Bedingungen (Filter) begrenzt werden (z.B. nicht zwischen
						Nov - Feb oder Anreise nur an Samstagen). Alle PriceItems, die in diesem Zweig
						geliefert werden, gelten ausschließlich für diese SellingAccom. </para><para xml:id="en_633" xml:lang="en">In this branch, in addition to the booking parameters (Booking), additional properties (Properties) of the SellingAccom node can be defined. Through the filter, the SellingAccom node is limited to certain conditions (filter), e.g. not between November and February or check-in only on Saturdays. All PriceItems delivered in this branch shall apply exclusively to this SellingAccom node.</para>
					<para xml:id="de_634" xml:lang="de">SellingAccom ist ein logischer Knoten. Wie an allen logischen Knoten können auch
						hier mit den "Tags" und "ConditionalTags" Markierungen platziert werden, die in die
						Produkterstellung und Preisberechnungen flexibel eingebunden werden können. Dazu mehr
						in den folgenden Kapiteln über Tags und ConditionalTags. </para><para xml:id="en_634" xml:lang="en">SellingAccom is a logical node. As with all logical nodes, "Tags" and "ConditionalTags" allow the placement of markings, which can be flexibly integrated in the creation of products and the price calculations. More about this can be found in the following chapters on Tags and ConditionalTags.</para>
					<para xml:id="de_635" xml:lang="de">Jeder Knoten "SellingAccom" erfordert die Angabe eines eindeutigen Schlüsselwertes
						für diesen Knoten. In der Regel wird der Schlüsselwert den Buchungscode der Unterkunft
						+ ggf. Saisonkennzeichen oder Reiseart als Parameter enthalten. </para><para xml:id="en_635" xml:lang="en">Each "SellingAccom" node requires the entry of a distinct key value for this node. In general, the key value will contain the booking code of the accommodation + the seasonal code or the type of travel as a parameter.</para>
					<para xml:id="de_636" xml:lang="de">Das Handling der <link linkend="OtdsStrategyBooking">Buchungsparameter</link>, <link linkend="OtdsStrategyProperties">Eigenschaften</link>, <link linkend="OtdsStrategyPriceItem">PriceItems</link>, <link linkend="OtdsStrategyTag">Tags</link> und <link linkend="OtdsStrategyConditionalTag">ConditionalTags</link>
						wird jeweils in den folgenden Kapiteln der Grundlagen beschrieben. </para><para xml:id="en_636" xml:lang="en">The handling of <link linkend="OtdsStrategyBooking">Booking parameters</link>, <link linkend="OtdsStrategyProperties">Properties</link>, <link linkend="OtdsStrategyPriceItem">PriceItems</link>, <link linkend="OtdsStrategyTag">Tags</link> and <link linkend="OtdsStrategyConditionalTag">ConditionalTags</link> are each described in the following chapters of the basic principles.</para>
					<bridgehead xml:id="de_637" xml:lang="de">Board</bridgehead><bridgehead xml:id="en_637" xml:lang="en">Board</bridgehead>
					<figure>
						<info>
							<title><phrase xml:id="de_638" xml:lang="de">Überblick über die Struktur von Board</phrase><phrase xml:id="en_638" xml:lang="en">Overview of the structure of Board</phrase></title>
						</info>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/board.png" format="PNG" contentwidth="50%"/>
							</imageobject>
							<textobject>
								<para xml:id="de_639" xml:lang="de">Überblick über die Struktur von Board</para><para xml:id="en_639" xml:lang="en">Overview of the structure of Board</para>
							</textobject>
						</mediaobject>
					</figure>
					<para xml:id="de_640" xml:lang="de">Der Knoten "Board" definiert die möglichen
						Verpflegungstypen, die für diese Unterkunft zur Verfügung stehen. Dabei
						werden hier neben den Buchungsinformationen auch die Eigenschaften
						(Properties) der Verpflegung definiert. Durch die Filter kann eine
						Verpflegung auf bestimmte Bedingungen begrenzt werden (z.B. nicht zwischen
						Nov - Feb) . Alle unter "Board" gelieferten Preisbestandteile gelten nur für
						die jeweilige Verpflegung. Ab der Version 1.9 ist die Lieferung eines
						Board-Elements Pflicht.</para><para xml:id="en_640" xml:lang="en">The "Board" node defines the types of board available for this
						accommodation. In addition to the booking information, the properties
						(Properties) of the board are also defined here. By using the filter, board
						can be limited to certain conditions (e.g. not between Nov - Feb). All of
						the price elements delivered under "Board" are only valid for the
						corresponding board option. From version 1.9 on it is obligatory to provide
						a "Board" element.</para>
					<para xml:id="de_641" xml:lang="de">Jeder Knoten "Board" erfordert die Angabe eines eindeutigen Schlüsselwertes für
						diesen Knoten. Es empfiehlt sich den Buchungscode der Verpflegung als Schlüsselwert zu
						verwenden. </para><para xml:id="en_641" xml:lang="en">Each "Board" node requires the entry of a distinct key value for this node. It is recommended to use the booking code of the board as the key value.</para>
					<bridgehead xml:id="de_642" xml:lang="de">Unit</bridgehead><bridgehead xml:id="en_642" xml:lang="en">Unit</bridgehead>
					<figure>
						<info>
							<title><phrase xml:id="de_643" xml:lang="de">Überblick über die Struktur von Unit</phrase><phrase xml:id="en_643" xml:lang="en">Overview of the structure of Unit</phrase></title>
						</info>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/unit.png" format="PNG" contentwidth="60%"/>
							</imageobject>
							<textobject>
								<para xml:id="de_644" xml:lang="de">Überblick über die Struktur von Unit</para><para xml:id="en_644" xml:lang="en">Overview of the structure of Unit</para>
							</textobject>
						</mediaobject>
					</figure>
					<para xml:id="de_645" xml:lang="de">Der Knoten "Unit" definiert die möglichen Zimmer, die zur Verfügung stehen. Es geht
						dabei um die physikalisch existierenden Zimmer, deren Eigenschaften wie z.B. Meerblick
						oder Ausstattung eindeutig festgelegt sind und nicht von der Ausprägung des Angebotes
						abhängt. Die Daten dieser Ebene werden in der Regel von der Stammdatenabteilung
						verwaltet. Jeder Knoten "Unit" erfordert die Angabe eines eindeutigen Schlüsselwertes
						für diesen Knoten. Es empfiehlt sich, den Buchungscode des Zimmers oder einen
						eindeutigen Schlüssel innerhalb des Veranstaltersystems als Schlüsselwert zu
						verwenden. </para><para xml:id="en_645" xml:lang="en">The node "Unit" defines the possible rooms, which are available. This relates to the existing rooms, whose features such as sea views or amenities are distinctly defined and not dependent on the form of the offer. Data at this level is usually controlled by the master data. Each "Unit" node requires the entry of a distinct key value for this node. It is recommended to use the booking code of the room or a distinct key within the operator's system as the key value.</para>
					<bridgehead xml:id="de_646" xml:lang="de">SellingUnit</bridgehead><bridgehead xml:id="en_646" xml:lang="en">SellingUnit</bridgehead>
					<para xml:id="de_647" xml:lang="de">Der Knoten SellingUnit enthält alle Variationen der physikalischen Zimmer für den
						Vertrieb. Häufig geht es dabei um den Vertrieb der Zimmer mit unterschiedlichen
						Belegungen, welche z.B. auch andere Preise nach sich ziehen. Dabei werden hier neben
						den Buchungsparameter (Booking) auch die Eigenschaften (Properties) des Zimmers
						definiert. Durch die Filter kann ein Zimmer auf bestimmte Bedingungen (Filter)
						begrenzt werden (z.B. nicht zwischen Nov - Feb) . Alle unter diesem Knoten gelieferten
						Preisbestandteile (PriceItems) gelten nur für das jeweilige Zimmer. </para><para xml:id="en_647" xml:lang="en">The node SellingUnit contains all of the variants of the physical rooms for the sales department. Often this refers to the sale of rooms with various different occupancies, which can also dictate different prices. In addition to the booking parameter (Booking), the features (Properties) of the room are also defined here. By means of the filter, a room can be limited to certain conditions (filter), e.g. not between Nov - Feb. All of the PriceItems delivered by this node are valid for the respective room.</para>
					<para xml:id="de_648" xml:lang="de">In der SellingUnit werden die Verfügbarkeiten jeder Unit geliefert. Dabei ist es
						möglich neben der reinenVerfügbarkeit auch Steuerungsmechanismen zu integrieren. Sie
						finden weitere Details im Kapitel <link linkend="OtdsStrategyAvailability">"Verfügbarkeiten"</link> in den Grundlagen.</para><para xml:id="en_648" xml:lang="en">The availability of each unit is delivered in the SellingUnit. It is possible to integrate control mechanisms alongside the basic availability. Further details can be found in the chapter,<link linkend="OtdsStrategyAvailability">"Availability"</link> in the fundamentals.</para>
					<para xml:id="de_649" xml:lang="de">Jeder Knoten "SellingUnit" erfordert die Angabe eines eindeutigen Schlüsselwertes
						für diesen Knoten. In der Regel wird der Buchungscode des Zimmers und die zu Grunde
						liegende Belegung als Schlüsselwert verwendet. </para><para xml:id="en_649" xml:lang="en">Each "SellingUnit" node requires the specification of an unambiguous key value for that node. As a rule, the booking code of the room and the occupancy on which it is based are used as the key value.</para>
					<bridgehead xml:id="de_650" xml:lang="de">Occupancy</bridgehead><bridgehead xml:id="en_650" xml:lang="en">Occupancy</bridgehead>
					<figure>
						<info>
							<title><phrase xml:id="de_651" xml:lang="de">Überblick über die Struktur von Occupancy</phrase><phrase xml:id="en_651" xml:lang="en">Overview of the structure of Occupancy</phrase></title>
						</info>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/occupancy.png" format="PNG" contentwidth="60%"/>
							</imageobject>
							<textobject>
								<para xml:id="de_652" xml:lang="de">Überblick über die Struktur von Occupancy</para><para xml:id="en_652" xml:lang="en">Overview of the structure of Occupancy</para>
							</textobject>
						</mediaobject>
					</figure>
					<para xml:id="de_653" xml:lang="de">Die Occupancy steht für die Definition der möglichen Belegungen in einem Zimmer. Die
						Belegung definiert die Altersbedingungen jeder möglichen Person, die mitreisen kann.
						Die Definition der Personen unterliegt in der XML-Struktur einer festen Reihenfolge,
						nämlich dem Alter nach absteigend. Personen mit gleichen Bedingungen können in einem
						Person-Element zu einer Gruppe zusammengefasst werden. Außerdem können Personen als
						optional definiert werden. Die Occupancy definiert nur die Belegungsmöglichkeit und
						nicht die Zusammenhänge zwischen Belegung und Preisberechnung (Details siehe <link linkend="OtdsProductsComponents">Praxisteil</link>). </para><para xml:id="en_653" xml:lang="en">Occupancy offers the definition of possible occupancies in a room. Occupancy defines the age conditions for every possible traveller. The definition of the persons is subject to a fixed order in the XML structure, namely a descending order of age. Persons with the same conditions within a Person element can be combined into a group. Persons can also be defined as optional. Occupancy only defines which occupancies are permitted and not the relationships between occupancy and price calculation (for details see the <link linkend="OtdsProductsComponents"> Practice section </link>).
					</para>
					<para xml:id="de_654" xml:lang="de">In OTDS sind mehrere Occupancy-Elemente hintereinander lieferbar. Weitere
						Occupancy-Elemente erweitern die Belegungsmöglichkeit um die zusätzlich definierten
						Belegungen. </para><para xml:id="en_654" xml:lang="en">In OTDS several Occupancy elements can be delivered one after the other. Further Occupancy elements expand the occupancy option with additionally defined occupancies.</para>
					<para xml:id="de_655" xml:lang="de">Hier ein Beispiel für eine Belegung : 1 Erwachsene, eine zusätzliche Person
						beliebigen Alters und 0-3 Kinder (Alter bis 12) + optionales Baby</para><para xml:id="en_655" xml:lang="en">Here is an example of an occupancy: 1 adult, an additional person of any age and 0-3 children (aged up to 12) + optional baby.</para>
					<programlisting><![CDATA[<Occupancy>
	<!-- Das 1. Person-Element -->
	<Person>
		<MinAge>17</MinAge>
		<Count>1</Count>
	</Person>
	
	<!-- Das 2. Person-Element -->
	<Person>
		<Count>1</Count>
	</Person>

	<!-- Das 3. Person-Element -->
	<Person>
		<MinAge>2</MinAge>
		<MaxAge>12</MaxAge>
		<MinCount>0</MinCount>
		<MaxCount>3</MaxCount>
	</Person>
	
	<!-- Das 4. Person-Element -->
	<Person>
		<MaxAge>1</MaxAge>
		<MinCount>0</MinCount>
		<MaxCount>1</MaxCount>
	</Person>
	</Occupancy>]]></programlisting>
					<para xml:id="de_656" xml:lang="de">Dieses Beispiel beschreibt mit den 4 Person-Elementen 4 verschiedene
						Personengruppen. Belegungen, die alle Bedingungen der entsprechenden Belegungsgruppe
						erfüllen, gelten als mögliche Belegung für eine Unterkomponente (in diesem Fall für
						ein Zimmer). Jeder Mitreisende also jede Person einer überprüften Belegung wird genau
						einem Personelement zugewiesen und gegen die enthaltenen Bedingungen geprüft. Die
						Zuweisung der Person-Elemente zu den Personen einer Belegung erfolgt streng nach
						XML-Document-Order und nach absteigenden Alter der Personen der Belegung. Das erste
						Person-Element gilt also für die X ältesten Mitreisenden. In diesem Fall geht es nur
						um eine Person, da Count = 1 ist. MinAge=17 definiert , dass der älteste Mitreisende
						in diesem Fall mindestens 17 Jahre alt sein muss.</para><para xml:id="en_656" xml:lang="en">This example describes four different person groups using the 4 Person elements. Occupancies that satisfy all conditions of the corresponding occupancy group are valid as a potential occupancy for a subcomponent (in this case for a room). Each traveller, i.e. each person of a verified Occupancy is assigned exactly one Person element and is check against the received conditions. The assignment of Person elements to persons of an occupancy occurs strictly in XML document order in descending age of persons in the occupancy. Therefore the first Person element applies to the oldest traveller. In this instance it refers to a single person, because count = 1. MinAge=17 defines that the oldest traveller must in this case be at least 17 years old.</para>
					<para xml:id="de_657" xml:lang="de">Das 2. Person-Element gilt für die 2. älteste Person und definiert, dass diese
						Person keine speziellen Bedingungen erfüllen muss.</para><para xml:id="en_657" xml:lang="en">The 2nd Person element applies to the 2nd oldest person and defines that this person does not have to fulfil any special conditions.</para>
					<para xml:id="de_658" xml:lang="de">Das 3. Person-Element gilt für die nächsten 3 jüngeren Personen. Da MinCount = 0
						ist, ist die Gesamtbedingung auch dann erfüllt wenn für diese Personengruppe keine
						Person in der Belegung vorhanden ist. Es geht in diesem Fall um Kinder mit einem Alter
						von mindestens 2 Jahren und höchstens 12 Jahren.</para><para xml:id="en_658" xml:lang="en">The 3rd Person element applies to the 3 next younger persons. As MinCount = 0, the overall condition is fulfilled even if there is no person for this person group in the occupancy. In this instance, children with a minimum age of 2 years and a maximum age of 12 years are considered.</para>
					<para xml:id="de_659" xml:lang="de">Das 4. Person-Element gilt für die nächst jüngere Person. In diesem Fall definiert
						es die Möglichkeit, dass auch optinal ein Baby bis zu einem Alter von einem Jahr
						mitreisen darf.</para><para xml:id="en_659" xml:lang="en">The 4th Person element applies to the next younger person. In this instance, it defines the option of a baby of up to one year of age participating in travel.</para>
					<bridgehead xml:id="de_660" xml:lang="de">Exclude</bridgehead><bridgehead xml:id="en_660" xml:lang="en">Exclude</bridgehead>
					<para xml:id="de_661" xml:lang="de">Es gibt spezielle Fälle in denen man aus einer Standarddefinition einzelne
						Belegungen verbieten möchte. Dazu kann man die Belegung im Exclude-Element
						platzieren.</para><para xml:id="en_661" xml:lang="en">There are special cases in which it is wished that specific occupancies are excluded from a standard definition. To do this, you can position the occupancy in the Exclude element.</para>
					<para xml:id="de_662" xml:lang="de">Hier ein Beispiel für Exclude : 1 Erwachsener (Alter ab 14) ist Pflicht und dann
						dürfen drei weitere Personen in das Zimmer. Es ist aber nicht erlaubt das diese drei
						Personen alle unter 13 sind. </para><para xml:id="en_662" xml:lang="en">Here is an example for Exclude: 1 adult (aged from 14) is mandatory and then an additional three persons are permitted in the room. However, it is not permitted that all of these three persons are under the age of 13.</para>
					<programlisting><![CDATA[
<Occupancy>
	<Person>
		<MinAge>14</MinAge>
		<Count>1</Count>
	</Person>
	<Person>
		<MaxCount>3</MaxCount>
	</Person>
	<Exclude>
		<Person>
			<MinAge>14</MinAge>
			<Count>1</Count>
		</Person>
		<Person>
			<MaxAge>13</MaxAge>
			<Count>3</Count>
		</Person>
	</Exclude>
</Occupancy>
]]></programlisting>
					<para xml:id="de_663" xml:lang="de">Weitere Beispiele aus der Praxis und ausführliche Erklärungen speziell zu den
						Belegungen finden Sie im <link linkend="OtdsProductsComponentsAccommodationOccupancy">Praxiskapitel zu den Belegungen</link>. </para><para xml:id="en_663" xml:lang="en">Additional practical examples and detailed explanations specifically regarding occupancies can be found in the <link linkend="OtdsProductsComponentsAccommodationOccupancy">Practice chapter on occupancy</link>.</para>
					<para xml:id="de_664" xml:lang="de">Eine Sammlung von Belegungsbeispielen finden Sie <link xlink:href="examples/OccupancyExample.xml">hier</link>.</para><para xml:id="en_664" xml:lang="en">You can find a collection of occupancy examples here <link xlink:href="examples/OccupancyExample.xml"/>.</para>
					<para xml:id="de_665" xml:lang="de">Beispiele und ausführliche Erklärungen generell zu Accommodations finden Sie <link linkend="OtdsProductsComponentsAccommodation">hier</link>. </para><para xml:id="en_665" xml:lang="en">Examples and detailed explanations about Accommodations in general can be found here <link linkend="OtdsProductsComponentsAccommodation"/>.</para>
					<para xml:id="de_666" xml:lang="de">Weitere technische Details zu den einzelnen Elemente der Accommodations finden Sie
						in der <link xlink:href="./technisch/otds_technisch.html#Accommodations">Technischen
							Spezifikation für OTDS </link>. </para><para xml:id="en_666" xml:lang="en">Additional technical details relating to the individual elements of the Accommodations can be found in the <link xlink:href="./technisch/otds_technisch.html#Accommodations">Technical specification for OTDS</link> .</para>
				</section>
				<section xml:id="OtdsStrategyComponentFlights">
					<title><phrase xml:id="de_667" xml:lang="de">Flights</phrase><phrase xml:id="en_667" xml:lang="en">Flights</phrase></title>
					<figure>
						<info>
							<title><phrase xml:id="de_668" xml:lang="de">Überblick über die Struktur von Flights</phrase><phrase xml:id="en_668" xml:lang="en">Overview of the structure of Flights</phrase></title>
						</info>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/flights.png" format="PNG" contentwidth="60%"/>
							</imageobject>
							<textobject>
								<para xml:id="de_669" xml:lang="de">Überblick über die Struktur von Flights</para><para xml:id="en_669" xml:lang="en">Overview of the structure of Flights</para>
							</textobject>
						</mediaobject>
					</figure>

					<para xml:id="de_670" xml:lang="de">Die OTDS Flugdatenlieferung unterscheidet zwoschen einer Lieferung von
						Onewayflights, die ggf. durch Regeln zu Returnflights zusammengeführt werden können
						und bereits fertig zusammengestellten Returnflights, die ggf. so schon im
						Veranstaltersystem als Returnflights hinterlegt sind. In OTDS sollten immer die
						kleinste Einheit von Flügen geliefert werden, die auch im Veranstaltersystem zur
						Produkterstellung und Preisberechnung benutzt werden. Ein vorheriges kombinieren bzw.
						zusammenfassen von Flügen ist nicht sinnvoll. </para><para xml:id="en_670" xml:lang="en">The OTDS flight data delivery differentiates between the delivery of Onewayflights, which may be combined through the rules to create Returnflights, and already compiled Returnflights, which may already exist in the tour operator system as Returnflights. In OTDS the smallest units of flights, which are also used in the tour operator system for product creation and price calculation, should always be supplied. A pre-combination or summary of flights is not practical.</para>
					<section xml:id="OtdsStrategyComponentFlightsOneway">
						<title><phrase xml:id="de_671" xml:lang="de">Oneway Flüge</phrase><phrase xml:id="en_671" xml:lang="en">Oneway flights</phrase></title>
						<figure>
							<info>
								<title><phrase xml:id="de_672" xml:lang="de">Überblick über die Struktur von OnewayFlights</phrase><phrase xml:id="en_672" xml:lang="en">Overview of the structure of OnewayFlights</phrase></title>
							</info>
							<mediaobject>
								<imageobject>
									<imagedata fileref="figures/onewayflights.png" format="PNG" contentwidth="70%"/>
								</imageobject>
								<textobject>
									<para xml:id="de_673" xml:lang="de">Überblick über die Struktur von OnewayFlights</para><para xml:id="en_673" xml:lang="en">Overview of the structure of OnewayFlights</para>
								</textobject>
							</mediaobject>
						</figure>
						<bridgehead xml:id="de_674" xml:lang="de">OnewayFlights</bridgehead><bridgehead xml:id="en_674" xml:lang="en">OnewayFlights</bridgehead>
						<para xml:id="de_675" xml:lang="de">Der Knoten OnewayFlights steht für alle gelieferten Oneway Flüge. Alle auf
							dieser Ebene platzierten PriceItems gelten grundsätzlich für alle gelieferten
							Oneway Flüge.</para><para xml:id="en_675" xml:lang="en">The node OnewayFlights stands for all supplied oneway flights. All PriceItems positioned on this level are generally valid for all supplied Oneway flights.</para>
						<bridgehead xml:id="de_676" xml:lang="de">OnewayFlight</bridgehead><bridgehead xml:id="en_676" xml:lang="en">OnewayFlight</bridgehead>
						<para xml:id="de_677" xml:lang="de">Das Handling der <link linkend="OtdsStrategyBooking">Buchungsparameter</link>,
								<link linkend="OtdsStrategyProperties">Properties</link>, <link linkend="OtdsStrategyPriceItem">PriceItems</link>, <link linkend="OtdsStrategyTag">Tags</link> und <link linkend="OtdsStrategyConditionalTag">ConditionalTags</link> wird jeweils in
							den folgenden Kapiteln der Grundlagen beschrieben. </para><para xml:id="en_677" xml:lang="en">The handling of the <link linkend="OtdsStrategyBooking">Booking parameters</link>, <link linkend="OtdsStrategyProperties">Properties</link>, <link linkend="OtdsStrategyPriceItem">PriceItems</link>, <link linkend="OtdsStrategyTag">Tags</link> and <link linkend="OtdsStrategyConditionalTag">ConditionalTags</link> are all described in the following chapter on fundamentals.</para>
						<para xml:id="de_678" xml:lang="de">Der Knoten OnewayFlight steht für jeden einzelnen gelieferten Oneway Flug. Der
							Knoten OnewayFlight definiert die kleinste Einheit von Einzelflügen, die in einem
							Veranstaltersystem vorliegen. Innerhalb dieses Knotens wird die Route des Oneway
							Fluges definiert. Weiterhin besteht die Möglichkeit unterschiedliche
							Buchungsklassen zu liefern. Durch die Filter kann ein Flug auf bestimmte
							Bedingungen begrenzt werden. Die Flugverkehrstage werden z.B. in den Filtern
							definiert. Jeder Knoten "OnewayFlight" erfordert die Angabe eines eindeutigen
							Schlüsselwertes für diesen Knoten. </para><para xml:id="en_678" xml:lang="en">The node OnewayFlight stands for every individually supplied oneway flight. The node OnewayFlight defines the smallest unit of one-way flights present in a tour operator system. The route of the oneway flight is defined within this node. In addition, it is possible to supply various booking classes. The flight can be restricted to specific conditions through the filter. For example, the flight days can be defined in the filters. Every "OnewayFlight" node requires the specification of an unambiguous key value for this node.</para>
						<para xml:id="de_679" xml:lang="de">Über die Properties innerhalb dieses Knotens besteht die Möglichkeit die Route
							genauer zu beschreiben. Mehr dazu im übernächsten Kapitel "FlightRoute".</para><para xml:id="en_679" xml:lang="en">Via the Properties within this node, it is possible to describe the route more precisely. More information on this will follow in the chapter after next, "FlightRoute".</para>
						<para xml:id="de_680" xml:lang="de">Im "Booking" Element werden die Informationen geliefert die zum Buchen eines
							Oneway Fluges notwendig sind.</para><para xml:id="en_680" xml:lang="en">In the "Booking" element, information necessary for the booking of a oneway flight is supplied.</para>
						<para xml:id="de_681" xml:lang="de">
							<link xlink:href="../../example/OneWayFlight.xml">Beispiel eines Oneway Flug mit
								Booking-Element für Flugbuchungscode und Buchungsklasse</link>
						</para><para xml:id="en_681" xml:lang="en">
							<link xlink:href="../../example/OneWayFlight.xml">example of a oneway flight with Booking element for flight booking code and booking class</link>
						</para>
						<para xml:id="de_682" xml:lang="de">In den CombiComponents können Oneway Flugkomponenten genutzt werden um
							Return-Flüge oder erweiterte Oneway-Flüge zu liefern. </para><para xml:id="en_682" xml:lang="en">In the CombiComponents, Oneway flight components can be used to deliver return flights or extended oneway flights.</para>
						<para xml:id="de_683" xml:lang="de"><link linkend="OtdsStrategyRules">Regelwerke zur Bildung von Produkten oder auch
								zur Kombination von Flügen</link></para><para xml:id="en_683" xml:lang="en">
							<link linkend="OtdsStrategyRules">Rule sets for the creation of products or for the combination of flights</link>
						</para>
						<para xml:id="de_684" xml:lang="de"><link linkend="OtdsProductsComponentsFlights">Praxiskapitel Flug</link></para><para xml:id="en_684" xml:lang="en">
							<link linkend="OtdsProductsComponentsFlights"> Practice chapter Flights</link>
						</para>
						<bridgehead xml:id="de_685" xml:lang="de">BookingClass</bridgehead><bridgehead xml:id="en_685" xml:lang="en">BookingClass</bridgehead>
						<para xml:id="de_686" xml:lang="de">Der Knoten BookingClass definiert die Buchungsklasse. In den Properties der
							Buchungsklasse kann die Art der Buchungsklasse (Economy, Premium Economy, Business
							oder First) sowie die Gepäckbestimmungen geliefert werden. </para><para xml:id="en_686" xml:lang="en">The node BookingClass defines the booking class. In the Properties of the booking class, the type of booking class (Economy, Premium Economy, Business or First), as well as the baggage conditions, can be supplied.</para>
						<para xml:id="de_687" xml:lang="de">Im "Booking" Element werden die Informationen geliefert die zum Buchen einer
							bestimmten Buchungsklasse notwendig sind. </para><para xml:id="en_687" xml:lang="en">In the "Booking" element, the information which is required for the booking of a specific booking class is supplied.</para>
						<para xml:id="de_688" xml:lang="de">Verfügbarkeiten werden im Knoten Availabilities geliefert und Preise im Knoten
							PriceItems. Die Struktur dieser beiden Knoten ist identisch zu der Struktur der
							Verfügbarkeiten und der Preise bei den Unterbringungen.</para><para xml:id="en_688" xml:lang="en">Availabilities are delivered in the Availabilities node and prices in the PriceItems node. The structure of these two nodes is identical to the structure of the availabilities and the prices relating to accommodation.</para>
						<para xml:id="de_689" xml:lang="de">Jeder Knoten "BookingClass" erfordert die Angabe eines eindeutigen
							Schlüsselwertes ("Key") für diesen Knoten. Es empfiehlt sich, den Buchungscode der
							BookingClass oder einen eindeutigen Schlüssel innerhalb des Veranstaltersystems
							als Schlüsselwert zu verwenden.</para><para xml:id="en_689" xml:lang="en">Each "BookingClass" node requires the entry of an unambiguous key value ("Key") for this node. You may want to use the booking code of the BookingClass or an unambiguous key within the tour operator system as the key value.</para>
						<figure>
							<info>
								<title><phrase xml:id="de_690" xml:lang="de">Überblick über die Struktur der BookingClass</phrase><phrase xml:id="en_690" xml:lang="en">Overview of the structure of the BookingClass</phrase></title>
							</info>
							<mediaobject>
								<imageobject>
									<imagedata fileref="figures/flightBookingClass.png" format="PNG" contentwidth="40%"/>
								</imageobject>
								<textobject>
									<para xml:id="de_691" xml:lang="de">Überblick über die Struktur der BookingClass</para><para xml:id="en_691" xml:lang="en">Overview of the structure of the BookingClass</para>
								</textobject>
							</mediaobject>
						</figure>
						<bridgehead xml:id="de_692" xml:lang="de">FlightRoute</bridgehead><bridgehead xml:id="en_692" xml:lang="en">FlightRoute</bridgehead>
						<para xml:id="de_693" xml:lang="de"> Die FlightRoute eines OnewayFlights enthält Informationen zu Stopovers,
							Carriern, Zeiten, Gates etc. . Diese Informationen besitzen rein beschreibenden
							Charakter und haben keine Auswirkungen auf die Produktbildung oder
							Preisberechnung. Deshalb ist FlightRoute innerhalb von Properties platziert. </para><para xml:id="en_693" xml:lang="en">The FlightRoute of a OnewayFlight contains information regarding stopovers, carriers, times and gates etc. This information is purely descriptive in nature and does not have any effect on product compilation or price calculation. This is why FlightRoute is positioned within Properties.</para>
						<figure>
							<info>
								<title><phrase xml:id="de_694" xml:lang="de">Überblick über die FlightRoute in Properties</phrase><phrase xml:id="en_694" xml:lang="en">Overview of the FlightRoute in Properties.</phrase></title>
							</info>
							<mediaobject>
								<imageobject>
									<imagedata fileref="figures/flightroute.png" format="PNG" contentwidth="50%"/>
								</imageobject>
								<textobject>
									<para xml:id="de_695" xml:lang="de">Überblick über die FlightRoute in Properties</para><para xml:id="en_695" xml:lang="en">Overview of the FlightRoute in Properties.</para>
								</textobject>
							</mediaobject>
						</figure>
						<para xml:id="de_696" xml:lang="de">Dieser Knoten beschreibt die Details zur Flugroute eines OnewayFlights. Da die
							OnewayFlights die tiefste Ebene der im Veranstaltersystem zur Produkt- und
							Preisgestaltung benutzten Flugsegmente abbilden, haben die Details innerhalb der
							FlightRoute eines OnewayFlights keine Auswirkung auf die Produktbildung oder
							Preisberechnung. Deshlab die Platzierung der FlightRoutes innerhlab der
							Properties. Eine FlightRoute definiert dabei entweder ein Segment oder auch eine
							Zusammenfassung mehrere Segmente. Letztenendes hängt es von der verfügbaren
							Informationstiefe des Datenlieferanten ab. Bestandteil dieses Knotens sind
							Elemente für Informationen zu Zwischenlandungen, Carriern, Flugzeiten und zu den
							Fluggeräten. Als zusätzliche Information kann auch die Art der Buchungsklasse
							(Economy, Premium Economy, Business oder First) angegeben werden. Mehrere
							FlightRoute Elemente beschreiben dementsprechend den Verlauf des OnewayFluges über
							mehrere Segmente. Die Reihenfolge ergibt sich vorrangig aus den Angaben in
							DateOffset und Time oder wenn diese fehlen durch die DocumentOrder.</para><para xml:id="en_696" xml:lang="en">This node describes the details of the flight route of a OnewayFlight. Due to the fact that the OnewayFlights represent the lowest level of the flight segments used in the tour operator system for product and price composition, the details within the FlightRoute of a OnewayFlight have no effect on the product creation or price calculation. This is why the FlightRoutes are located within Properties. A FlightRoute defines either a segment or a combination of several segments. Ultimately this depends on the depth of information made available by the data provider. The components of this node are elements for information regarding stopovers, carriers, flight times and aircraft. As additional information, the booking class (economy, premium economy, business or first) can also be entered. Several FlightRoute elements correspondingly describe the course of the OnewayFlight over several segments. The sequence follows primarily from the entries in DateOffset and Time, or if these are absent then from DocumentOrder.</para>
					</section>
					<section xml:id="OtdsStrategyComponentFlightsReturn">
						<title><phrase xml:id="de_697" xml:lang="de">Return Flüge</phrase><phrase xml:id="en_697" xml:lang="en">Return flights</phrase></title>
						<bridgehead xml:id="de_698" xml:lang="de">ReturnFlights</bridgehead><bridgehead xml:id="en_698" xml:lang="en">ReturnFlights</bridgehead>
						<para xml:id="de_699" xml:lang="de">Der Knoten ReturnFlights steht für alle gelieferten Return Flüge. Alle auf
							dieser Ebene platzierten PriceItems gelten grundsätzlich für alle gelieferten
							Return Flüge. ReturnFlights werden nur an dieser Stelle platziert, wenn diese
							genau so, also bereits fertig zusammengestellt, in einem Veranstaltersystem
							vorliegen. In allen anderen Fällen, in denen die Returnflüge z.B. durch Regeln aus
							Einzelflügen zusammengestellt werden, werden diese als einzelne OnewayFlights
							geliefert, die über DefinedComponents mit Hilfe der im Veranstaltersystem
							hinterlegten Regeln zu ReturnFlights zusammengesetzt werden. Wie diese
							Zusammensetzung erfolgt, erfahren Sie etwas später im Kapitel <link linkend="OtdsStrategyRules">Regelwerke zur Bildung von Produkten oder auch zur
								Kombination von Flügen</link>. Hier also jetzt die Darstellung der Struktur
							für die Lieferung der fest hinterlegten ReturnFlights eines
							Veranstaltersystems.</para><para xml:id="en_699" xml:lang="en">The ReturnFlights node represents all delivered Return flights. All of the PriceItems positioned on this level are fundamentally valid for all delivered return flights. ReturnFlights are only placed in this position if they are present in exactly the same form, i.e. already compiled, in a tour operator system. In all other cases in which, for example, the return flights consist of combined individual flights (following rules), these are delivered as individual OnewayFlights, which are combined with ReturnFlights via DefinedComponents with the aid of the rules defined in the tour operator system. You will discover how this compilation works somewhat later in the chapter <link linkend="OtdsStrategyRules">Rule sets for compiling products or combining flights</link>. Here then is a representation of the structure for the delivery of the pre-defined ReturnFlights of a tour operator system.</para>
						<bridgehead xml:id="de_700" xml:lang="de">ReturnFlight</bridgehead><bridgehead xml:id="en_700" xml:lang="en">ReturnFlight</bridgehead>
						<para xml:id="de_701" xml:lang="de">Der ReturnFlight unterscheidet sich zum OnewayFlight nur durch die zusätzliche
							Unterteilung der Komponente in einen Separaten Hin- und Rückflug.</para><para xml:id="en_701" xml:lang="en">The ReturnFlight differs from the OnewayFlight only through the additional breakdown of the components into separate outbound and return flights.</para>
						<para xml:id="de_702" xml:lang="de">Die Unterschiede kann man im folgenden Schaubild erkennen:</para><para xml:id="en_702" xml:lang="en">The differences can be seen in the following diagram:</para>
						<figure>
							<info>
								<title><phrase xml:id="de_703" xml:lang="de">Unterschiede zwischen Returnflight und OnewayFlight</phrase><phrase xml:id="en_703" xml:lang="en">Differences between ReturnFlight and OnewayFlight</phrase></title>
							</info>
							<mediaobject>
								<imageobject>
									<imagedata fileref="figures/returnflight.png" format="PNG" contentwidth="60%"/>
								</imageobject>
								<textobject>
									<para xml:id="de_704" xml:lang="de">Unterschiede zwischen Returnflight und OnewayFlight</para><para xml:id="en_704" xml:lang="en">Differences between ReturnFlight and OnewayFlight</para>
								</textobject>
							</mediaobject>
						</figure>
						<para xml:id="de_705" xml:lang="de">In den Elementen Outbound und Inbound welche Hin und Rückflug separieren besteht
							die Möglichkeit Basisdetails eines Fluges sowie Preise der Einzelflüge zu
							definieren.</para><para xml:id="en_705" xml:lang="en">In the elements Outbound and Inbound, which separate the outbound and inbound flights, it is possible to define the basic details of a flight, as well as the prices of each individual flight.</para>
						<para xml:id="de_706" xml:lang="de">Das BookingClass Element ist identisch zum BookingClass Element bei Oneway
							Flügen. Auch hier besteht die Möglichkeit Preise und Verfügbarkeiten für den
							Return Flug zu liefern. Üblich wird der Preis des Return Fluges komplett im
							Outbound Element geliefert.</para><para xml:id="en_706" xml:lang="en">The BookingClass element is identical to the BookingClass element for one-way flights. Here it is also possible to deliver prices and availabilities for the return flight. Usually the price of the return flight is delivered complete in the Outbound element.</para>
						<para xml:id="de_707" xml:lang="de"><link linkend="OtdsStrategyRules">Regelwerke zur Bildung von Produkten oder auch
								zur Kombination von Flügen</link></para><para xml:id="en_707" xml:lang="en">
							<link linkend="OtdsStrategyRules">Rule sets for the creation of products or also for the combination of flights</link>
						</para>
						<para xml:id="de_708" xml:lang="de"><link linkend="OtdsProductsComponentsFlights">Praxiskapitel Flug</link></para><para xml:id="en_708" xml:lang="en">
							<link linkend="OtdsProductsComponentsFlights">Practice chapter Flights</link>
						</para>
					</section>
				</section>
				<section xml:id="OtdsStrategyComponentAddons">
					<title><phrase xml:id="de_709" xml:lang="de">Addons</phrase><phrase xml:id="en_709" xml:lang="en">Addons</phrase></title>
					<para xml:id="de_710" xml:lang="de">Addons sind buchbare Zusatzleistungen, die entweder zusätzlich zu einem Produkt
						optional buchbar sind oder als Pflichtbestandteil in einem Produkt integriert sind.
						Eine Zusatzleistung kann dabei wie alle anderen Komponenten eigene PriceItems,
						Properties und auch eigene Buchungsparameter definieren.</para><para xml:id="en_710" xml:lang="en">Addons are additional services, which can either be booked optionally in addition to a product or are integrated in a product as an obligatory component. As with all other components, an additional service can also define its own PriceItems, properties and also its own booking parameters.</para>
					<para xml:id="de_711" xml:lang="de">Dazu zählen zum Beispiel: Transfers, Versicherungen, zusätzliche Hotel- oder
						Flugservices, aber auch Mietwagen, Ausflüge, Sportangebote, Gesundheits- oder
						Wellnessleistungen, Skipässe und vieles mehr.</para><para xml:id="en_711" xml:lang="en">These include, for example: Transfers, insurance, additional hotel or flight services, but also hire cars, excursions, sporting facilities, health or spa services, ski passes and lots more.</para>
					<para xml:id="de_712" xml:lang="de">Einfache Addons, die in einem Produkt inkludiert sind und keine komplexen
						Unterkomponenten mit komplexen Preisen enthalten, werden in der Regel in einem
						PriceItem in einer Komponente platziert. Die Eigenschaften des Addons werden dann, in
						den Properties des PriceItems definiert.</para><para xml:id="en_712" xml:lang="en">Simple addons, which are included in a product and contain no complex subcomponents with complex prices, are in general positioned within a PriceItem in a component. The features of the addons are then defined in the properties of the PriceItem.</para>
					<para xml:id="det_713" xml:lang="de"/>
					<para xml:id="de_714" xml:lang="de">Auch Addons, die eine inkludierte Leistung ersetzen, werden im Rahmen der Addons
						definiert, da diese üblicherweise einen eigenen Buchungscode besitzen. Ein
						Beispielszenario ist ein in einem Produkt inkludierter Transfer, der durch einen
						Mietwagen ersetzt wird.</para><para xml:id="en_714" xml:lang="en">Addons that replace an included service are also defined within the framework of addons, because these usually possess their own booking code. An example for this is a transfer included in a product, which is replaced by a hire car.</para>
					<para xml:id="de_715" xml:lang="de">Die wichtigen Knotenpunkte der Addons finden Sie im folgenden Schaubild: </para><para xml:id="en_715" xml:lang="en">The important node points of the addons can be found in the following diagram:</para>
					<figure>
						<info>
							<title><phrase xml:id="de_716" xml:lang="de">Überblick über die Struktur von Addons</phrase><phrase xml:id="en_716" xml:lang="en">Overview of the structure of addons</phrase></title>
						</info>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/addons.png" format="PNG" contentwidth="70%"/>
							</imageobject>
							<textobject>
								<para xml:id="de_717" xml:lang="de">Überblick über die Struktur von Addons</para><para xml:id="en_717" xml:lang="en">Overview of the structure of addons</para>
							</textobject>
						</mediaobject>
					</figure>
					<bridgehead xml:id="de_718" xml:lang="de">Addons</bridgehead><bridgehead xml:id="en_718" xml:lang="en">Addons</bridgehead>
					<para xml:id="de_719" xml:lang="de">Der Knoten Addons umfasst alle gelieferten Zusatzleistungen. Alle auf dieser Ebene
						platzierten PriceItems gelten grundsätzlich für alle gelieferten Addons. Mehr dazu im
						entsprechenden Kapitel "Komponenten in der Praxis".</para><para xml:id="en_719" xml:lang="en">The Addons node comprises all delivered additional services. All of the PriceItems positioned on this level are fundamentally valid for all delivered addons. More can be found in the corresponding chapter "Components in practice".</para>
					<bridgehead xml:id="de_720" xml:lang="de">Addon</bridgehead><bridgehead xml:id="en_720" xml:lang="en">Addon</bridgehead>
					<para xml:id="de_721" xml:lang="de">Der Knoten Addon steht für jede einzelne gelieferte Addon. Jedes Addon enthält
						Preis- und Buchungsdaten, sowie Regeln zur Einschränkung der Gültigkeit, eine
						Beschreibung und Definition der Zusatzleistung. Die einzelnen Bestandteile werden in
						den folgenden Abschnitten genauer Beschrieben.</para><para xml:id="en_721" xml:lang="en">The Addon node stands for every individual addon delivered. Each Addon contains price and booking data, as well as rules for restrictions to validity, a description and a definition of the additional service. The individual components are described in greater detail in the following sections.</para>
					<para xml:id="de_722" xml:lang="de">Jeder Knoten "Addon" erfordert die Angabe eines eindeutigen Schlüsselwertes für
						diesen Knoten. Es empfiehlt sich, den internen Stammdatencode der Zusatzleistung als
						Schlüsselwert zu verwenden. </para><para xml:id="en_722" xml:lang="en">Each "Addon" node requires the entry of a distinct key value for this node. It is recommended to use the internal master data code of the additional service as the key value.</para>
					<bridgehead xml:id="de_723" xml:lang="de">Booking</bridgehead><bridgehead xml:id="en_723" xml:lang="en">Booking</bridgehead>

					<para xml:id="de_724" xml:lang="de">Eigene Addon-Componenten besitzen in der Regel eigene BookinParameter oder
						beeinflussen zumindest die BookingParameter der Hauptkomponenten. Die BookingParameter
						des Addons werden in diesem Zweig und ggf. in den Bookingzweigen der Unterkomponenten
						des Addons (Service und ServiceFeature) definiert. </para><para xml:id="en_724" xml:lang="en">Individual Addon components can often possess individual BookingParameters or at least influence the BookingParameter of the main components. The BookingParameters of the Addon are defined in this branch and in some cases in the booking branches of the subcomponents of the Addon (Service and ServiceFeature).</para>
					<para xml:id="de_725" xml:lang="de">
						<link xlink:href="../../example/BookingActionsExamples.xml">Beispiel eines
							Booking-Elements für ein Addon</link>
					</para><para xml:id="en_725" xml:lang="en">
						<link xlink:href="../../example/BookingActionsExamples.xml">Example of a Booking element for an Addon</link>
					</para>
					<bridgehead xml:id="de_726" xml:lang="de">Filter</bridgehead><bridgehead xml:id="en_726" xml:lang="en">Filter</bridgehead>
					<para xml:id="de_727" xml:lang="de">Addons können über Filter in Ihrer Verfügbarkeit eingeschränkt werden. Es werden die
						gleichen Mechanismen angewandt wie bei den Unterkünften. Filter sind also auch hier
						ggf. saison-, termin-, zeitraum- oder personenabhängig.</para><para xml:id="en_727" xml:lang="en">Addons can be restricted in their availability through the use of a filter. The same mechanisms are applied as with the accommodation. Filters are therefore also dependent on seasons, dates, time periods or persons.</para>
					<bridgehead xml:id="de_728" xml:lang="de">Properties</bridgehead><bridgehead xml:id="en_728" xml:lang="en">Properties</bridgehead>
					<para xml:id="de_729" xml:lang="de">Die relevanten Eigenschaften für Addons sind</para><para xml:id="en_729" xml:lang="en">The relevant properties for Addons are</para>
					
					<itemizedlist>
						<listitem>
							<para xml:id="de_731" xml:lang="de">AddonName: Unter diesem Element wird der vollständige Name der
								Zusatzleistung als Freitext angegeben.</para><para xml:id="en_731" xml:lang="en">AddonName: Within this element, the full name of the additional service is given as free text.</para>
						</listitem>
						<listitem>
							<para xml:id="de_732" xml:lang="de">AddonServiceType: Hiermit wird der Typ der Zusatzleistung
								übergeben.</para><para xml:id="en_732" xml:lang="en">AddonServiceType: Here the type of additional service is provided.</para>
						</listitem>
						<listitem>
							<para xml:id="de_733" xml:lang="de">AddonServiceFeature: Service Features erweitern die Zusatzleistung um
								Details. </para><para xml:id="en_733" xml:lang="en">AddonServiceFeature: service features expand on the details of the additional service.</para>
						</listitem>
						<listitem>
							<para xml:id="de_734" xml:lang="de">AddonCatchmentRailwayStations: In diesem Element kann
								eine Liste von Bahnhöfen erfasst werden, die im Einzugsgebiet der Zusatzleistung liegen.
								Diese dienen jedoch nur zur Information, nicht zur Produkterstellung.</para><para xml:id="en_734" xml:lang="en">AddonCatchmentRailwayStations: In this element, a list of railway stations can be given which lie in the catchment area of the additional service. These are only provided for information, not for product creation.</para>
						</listitem>
						<listitem>
							<para xml:lang="de">AddonCarRentalProperties (Version 1.9): In diesem Element können
								Mietwagenspeziefische Eigenschaften definiert werden, z.B.
								Informationen zur Mietwagenstation, zu Aufstattungsmerkmalen des
								Mietwagens, ...</para>
						</listitem>
					</itemizedlist>
					
					<bridgehead xml:id="de_735" xml:lang="de">Service</bridgehead><bridgehead xml:id="en_735" xml:lang="en">Service</bridgehead>
					<figure>
						<info>
							<title><phrase xml:id="de_736" xml:lang="de">Überblick über die Struktur von Service</phrase><phrase xml:id="en_736" xml:lang="en">Overview of the structure of Service</phrase></title>
						</info>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/service.png" format="PNG" contentwidth="40%"/>
							</imageobject>
							<textobject>
								<para xml:id="de_737" xml:lang="de">Überblick über die Struktur von Service</para><para xml:id="en_737" xml:lang="en">Overview of the structure of Service</para>
							</textobject>
						</mediaobject>
					</figure>
					<para xml:id="de_738" xml:lang="de">Der Service definiert die eigentliche Ausprägung des Addons, so wie bei Hotels die
						einzelnen Zimmer. Auch hier hat man die Möglichkeit, Buchungsparameter, Filter und
						PriceItems anzugeben. EInige Beispiel aus der Praxis inkl. detaillierter Erklärungen
						finden sich im <link linkend="AddonBaseDataService">Praxisteil.</link> zu den
						Addons.</para><para xml:id="en_738" xml:lang="en">Service defines the actual characteristic of the Addon, for example individual rooms in the case of hotels. Here as well, it is possible to specify booking parameters, filters and PriceItems. Some practical examples including detailed explanations can be found in the <link linkend="AddonBaseDataService">practice section</link> for the Addons.</para>
					<para xml:id="de_739" xml:lang="de"> Ein Beispiel eines Booking-Elements für ein Addon finden Sie<link xlink:href="../../example/BookingActionsExamples.xml">hier </link>. </para><para xml:id="en_739" xml:lang="en">An example of a Booking element for an Addon can be found here<link xlink:href="../../example/BookingActionsExamples.xml"/> .</para>
					<para xml:id="de_740" xml:lang="de">Jeder Service muss mit einem eindeutigen Schlüssel versehen werden.</para><para xml:id="en_740" xml:lang="en">Each service must be provided with an unambiguous key.</para>
					<bridgehead xml:id="de_741" xml:lang="de">ServiceFeature</bridgehead><bridgehead xml:id="en_741" xml:lang="en">ServiceFeature</bridgehead>
					<figure>
						<info>
							<title><phrase xml:id="de_742" xml:lang="de">Überblick über die Struktur von ServiceFeature</phrase><phrase xml:id="en_742" xml:lang="en">Overview of the structure of ServiceFeature</phrase></title>
						</info>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/servicefeature.png" format="PNG" contentwidth="40%"/>
							</imageobject>
							<textobject>
								<para xml:id="de_743" xml:lang="de">Überblick über die Struktur von ServiceFeature</para><para xml:id="en_743" xml:lang="en">Overview of the structure of ServiceFeature</para>
							</textobject>
						</mediaobject>
					</figure>
					<para xml:id="de_744" xml:lang="de">ServiceFeatures erweitern einen definierten Service (optional) um bestimmte
						Eigenschaften und können somit durch Abstraktion der Daten Angebote durch
						Multiplikation "generieren". Ein Service Feature kann also nur in Verbindung mit
						mindestens einem Service auftreten und erweitert diesen um eine zusätzliche
						Ausprägung. Ähnlich des Service-Elements wird im Buchungselement über das Element
							<emphasis role="bold">ServiceFeatureCode</emphasis> ein Code für die Buchungsmaske
						definiert, der zur Buchung benutzt wird. Der Bezeichner für das ServiceFeature kann in
						den Properties im Element <emphasis role="bold">AddonServiceFeatureName</emphasis>
						definiert werden.</para><para xml:id="en_744" xml:lang="en">ServiceFeatures expand a defined service (optional) by certain properties and in this way can "generate" offers through multiplication via an abstraction of the data. A Service Feature can thus only appear in combination with at least one service and expands this by an additional characteristic. As in the Service element, in the booking element a code is defined for the booking mask via the <emphasis role="bold">ServiceFeatureCode </emphasis>element which is then used for booking. The identifier for the ServiceFeature can be defined in the properties in the <emphasis role="bold">AddonServiceFeatureName </emphasis>element.</para>
					<para xml:id="de_745" xml:lang="de">Jedes ServiceFeature muss mit einem eindeutigen Schlüssel versehen werden.</para><para xml:id="en_745" xml:lang="en">Every ServiceFeature must be provided with an unambiguous key.</para>
					<bridgehead xml:id="de_746" xml:lang="de">CatchmentAirport</bridgehead><bridgehead xml:id="en_746" xml:lang="en">CatchmentAirport</bridgehead>
					<para xml:id="de_747" xml:lang="de">Der CatchmentAirport ist ein wichtiger Bestandteil um Addons zu Produkten
						zuzuordnen. Über den CatchmentAirport kann der Bezug zwischen den entsprechenden
						Komponenten hergestellt werden. Zum Beispiel bei zubuchbaren Transfers werden häufig
						die CatchmentAirports als Bezugsparameter benutzt. </para><para xml:id="en_747" xml:lang="en">The CatchmentAirport is an important component for assigning Addons to products. A connection can be made between the corresponding components by CatchmentAirport. For example, the CatchmentAirports are frequently used as a relevance parameter for bookable transfers.</para>
					<para xml:id="de_748" xml:lang="de">Einige Beispiele, wie Addons zu Produkten zugeordnet werden können, finden sich im
						Praxisteil "Produktregeln" im Kapitel "Optionale und obligatorische Addons". </para><para xml:id="en_748" xml:lang="en">Some examples of how Addons can be assigned to products can be found in the practice section "Product rules" in the chapter "Optional and mandatory Addons".</para>
				</section>
				<section xml:id="OtdsStrategyComponentDefinedComponents">
					<title><phrase xml:id="de_749" xml:lang="de">Neu definierte Komponenten (DefinedComponents)</phrase><phrase xml:id="en_749" xml:lang="en">Newly defined components (DefinedComponents)</phrase></title>
					<para xml:id="de_750" xml:lang="de">Unter kombinierten Komponenten verstehen wir in OTDS, wenn mehrere
						Einzel-Komponenten kombiniert werden und wiederum als Komponente in OTDS benutzt
						werden.</para><para xml:id="en_750" xml:lang="en">In OTDS we understand combined components as being several individual components combined and then used themselves as components in OTDS.</para>
					<para xml:id="de_751" xml:lang="de">In OTDS werden die dazu notwendigen Regeln in der Komponente "DefinedComponents"
						platziert. In OTDS V1.0 wird diese Vorgehensweise vorerst auf folgende Szenarien
						begrenzt:</para><para xml:id="en_751" xml:lang="en">In OTDS the rules required for this are located in the components "DefinedComponents". In OTDS V1.0 this process is for now limited to the following scenarios:</para>
					
					<orderedlist numeration="loweralpha">
						<listitem>
							<bridgehead xml:id="de_753" xml:lang="de">Erweiterte Onewayflüge</bridgehead><bridgehead xml:id="en_753" xml:lang="en">Extended OnewayFlights</bridgehead>
							<para xml:id="de_754" xml:lang="de">In manchen Veranstaltersystemen werden einzelne OnewayFlüge durch andere
								Onewayflüge erweitert. So ist es möglich, dass Hauptflüge mit
								verschiedenen Zubringer- und Verteilerflügen zu einer Vielzahl von
								Flugstrecken kombiniert werden können. In diesen Fällen reduziert sich die
								Datenmenge einer Datenlieferung ungemein, wenn man nicht die Kombinationen
								erzeugt und liefert, sondern nur die Einzelflüge liefert und die im
								Veranstaltersystem enthaltenen Kombinationsregeln. Neben der Datenmenge
								wirkt sich diese Vorgehensweise auch positiv auf die Aktualisierbarkeit
								der Daten hinsichtlich der Preise und Verfügbarkeiten aus. 
							</para><para xml:id="en_754" xml:lang="en">In some tour operator systems, individual OnewayFlights are extended using other OnewayFlights. In this way it is possible to combine main flights with various feeder flights and connecting flights to create a variety of flight routes. In these cases, the data quantity of a data delivery is greatly reduced if one does not create and deliver the combinations, but rather only the individual flights and the combination rules contained in the tour operator system. Alongside the consideration of data volumes, this process also benefits the updatability of the data regarding prices and availability.</para>
							<figure>
								<info>
									<title><phrase xml:id="de_755" xml:lang="de">Kombinierte OnewayFlights</phrase><phrase xml:id="en_755" xml:lang="en">Combined OnewayFlights</phrase></title>
								</info>
								<mediaobject>
									<imageobject>
										<imagedata fileref="figures/combineOnewayFlightsToOnewayFlight.png" format="PNG" contentwidth="30%"/>
									</imageobject>
									<textobject>
										<para xml:id="de_756" xml:lang="de">Aus mehreren OnewayFlights zusammengesetzter
											erweiterter OnewayFlight</para><para xml:id="en_756" xml:lang="en">An extended OnewayFlight made up of several OnewayFlights combined</para>
									</textobject>
								</mediaobject>
							</figure>
							
						</listitem>
						<listitem>
							<bridgehead xml:id="de_757" xml:lang="de">Aus Oneways zusammengesetzte Returnflüge</bridgehead><bridgehead xml:id="en_757" xml:lang="en">Return flights composed of combined Oneways</bridgehead>
							<para xml:id="de_758" xml:lang="de">Die gleiche Vorgehensweise kann angewendet werden, wenn im
								Veranstaltersystem zwei Einzelflüge zu einem Returnflug zusammenfügt
								werden. Wobei hier auch die vorher erweiterten Einzelflüge zur Kombination
								benutzt werden können. 
							</para><para xml:id="en_758" xml:lang="en">The same procedure can be applied if two individual flights are combined in the tour operator system to make a return flight. The previously extended individual flights can also be used for this combination.</para>
							<figure>
								<info>
									<title><phrase xml:id="de_759" xml:lang="de">Kombinierte OnewayFlights</phrase><phrase xml:id="en_759" xml:lang="en">Combined OnewayFlights</phrase></title>
								</info>
								<mediaobject>
									<imageobject>
										<imagedata fileref="figures/combineOnewayFlightsToReturnFlight.png" format="PNG" contentwidth="200"/>
									</imageobject>
									<textobject>
										<para xml:id="de_760" xml:lang="de">Aus zwei OnewayFlights zusammengesetzter
											ReturnFlight</para><para xml:id="en_760" xml:lang="en">A ReturnFlight made up of two OnewayFlights</para>
									</textobject>
								</mediaobject>
							</figure>
							
						</listitem>
						<listitem>
							<bridgehead xml:id="de_761" xml:lang="de">Erweiterte Returnflüge</bridgehead><bridgehead xml:id="en_761" xml:lang="en">Extended return flights</bridgehead>
							<para xml:id="de_762" xml:lang="de">Je nach Veranstaltersystem ist ggf. auch die Erweiterung von
								Returnflügen durch Ergänzung von Zubringer-Returnflügen oder
								Verteiler-Returnflügen erforderlich. Auch das kann in den CombiComponents
								erfolgen.
							</para><para xml:id="en_762" xml:lang="en">Depending on the tour operator system, it may be necessary to extend the return flights by adding feeder return flights or connecting return flights. This can also be done through the CombiComponents.</para>
							<figure>
								<info>
									<title><phrase xml:id="de_763" xml:lang="de">Erweiterte Returnflüge</phrase><phrase xml:id="en_763" xml:lang="en">Extended return flights</phrase></title>
								</info>
								<mediaobject>
									<imageobject>
										<imagedata fileref="figures/combineReturnFlightsToReturnFlight.png" format="PNG" contentwidth="30%"/>
									</imageobject>
									<textobject>
										<para xml:id="de_764" xml:lang="de">Aus ReturnFlights zusammengesetzter erweiterter
											ReturnFlight</para><para xml:id="en_764" xml:lang="en">Extended ReturnFlight made up of several ReturnFlights combined</para>
									</textobject>
								</mediaobject>
							</figure>
							
						</listitem>
					</orderedlist>
					
					<bridgehead xml:id="de_765" xml:lang="de">Flughüllen in DefinedComponents</bridgehead><bridgehead xml:id="en_765" xml:lang="en">Flight wrappers in DefinedComponents</bridgehead>
					<para xml:id="de_766" xml:lang="de">In den DefinedComponents ist auch die Umsetzung von sogenannten Flughüllen möglich.
						Flughüllen sind hier mehrere kombinierte Einzelflüge, deren Buchungsparameter durch
						explizit für diese Kombination definierte Parameter ersetzt werden. Die Flughüllen
						werden über die Regeln individuell mit realen Flügen gefüllt. Gebucht wird
						letztendlich immer die Flughülle, der dann innerhalb des Reservierungssystems die
						einzelnen Flugkomponenten zugeordnet werden. Die Zuordnung der Einzelflüge innerhalb
						des CRS-Systems regelt das CRS-System selbst. OTDS bildet lediglich genau diese Regeln
						ab um die Flüge in der Datenproduktion zusammenzuführen.</para><para xml:id="en_766" xml:lang="en">In DefinedComponents it is also possible to produce so-called flight wrappers. Flight wrappers are defined here as several combined individual flights, whose booking parameters are replaced by parameters explicitly defined for this combination. The flight wrappers are individually filled with real flights in accordance with the rules. It is ultimately the flight wrapper which is booked, with the individual flight components then being allocated to it within the reservation system. The allocation of individual flights within the CRS system is regulated by the CRS system itself. OTDS describes these rules exactly in order to combine the flights in the data production.</para>
					<para xml:id="de_767" xml:lang="de">Die so zusammengestellten Flüge können sowohl als Einzelprodukte definiert werden,
						als auch zur Kombination innerhalb von Pauschalangeboten benutzt werden. </para><para xml:id="en_767" xml:lang="en">The flights which are combined in this way can either be defined as single products, or used for combinations within package offers.</para>
					<para xml:id="de_768" xml:lang="de">Beispiele und weitere Erklärungen wie diese Regeln genau angewendet werden, erfahren
						Sie in einer der nächsten Kapitel über die <link linkend="OtdsStrategyRules">Regelwerke zur Bildung von Produkten oder auch zur Kombination von
						Flügen</link>.</para><para xml:id="en_768" xml:lang="en">Examples and further explanations of exactly how these rules are applied can be found in one of the following chapters via the <link linkend="OtdsStrategyRules"> rule sets for the composition of products or for the combination of flights</link>.</para>
				</section>
				<section xml:id="OtdsStrategyComponentProducts">
					<title><phrase xml:id="de_769" xml:lang="de">Produkte und Produktregeln (Product-Rules)</phrase><phrase xml:id="en_769" xml:lang="en">Products and product rules (ProductRules)</phrase></title>
					<para xml:id="de_770" xml:lang="de">Im Allgemeinen steckt hinter dem Produkt die Ware, die dem Endkonsumenten angeboten
						wird. In diesem Sinne definiert sich die Ware in der Touristik, zum Beispiel bzgl.
						eines Hotelaufenthaltes, als ein bestimmtes Zimmer und eine bestimmte Verpflegung in
						einem bestimmten Hotel. In der Touristik haben wir aber noch die Unterscheidung nach
						Teil-Produkten und Produkten. Denn bezogen auf Pauschalangebote stellt der
						Hotelaufenthalt, genau wie der dazugehörige Flug jeweils ein Teil-Produkt dar und erst
						beides zusammen bildet das Produkt. Dem folgen die Regelwerke zur Produktbildung.
						Diese definieren, welche Komponenten alleine oder auch zusammen ein Produkt bilden. </para><para xml:id="en_770" xml:lang="en">Generally the product represents the product which the end consumer is offered. In tourism for example, in the case of a hotel stay, the product is defined as a specific room and a specific board arrangement in a specific hotel. In tourism we also have a distinction between product components and products. This means that with regard to package offers, the hotel stay and the corresponding flight each represent a product component and the product is only formed by the two together. This is followed by the guidelines for product creation. These define which components form a product, either by themselves or taken together.</para>
					<para xml:id="de_771" xml:lang="de">Reisekomponenten sind wie bereits zuvor vorgestellt: Unterkünfte (Accommodations),
						Flüge (Flights), Zusatzleistungen (Addons) und werden in den entsprechenden Zweigen:
						Accommodations, Flights, AddonServices geliefert. In den Reisekomponenten werden
						Preisbestandteile (PriceItems), Verfügbarkeiten (Availabilities) und Eigenschaften
						(Properties) mitgeliefert. Die Preisberechnung findet bei der Produktbildung statt und
						nutzt dabei mitgelieferte Regeln an die Kombinierbarkeit der Preisbestandteile.</para><para xml:id="en_771" xml:lang="en">Travel components are as described previously: Accommodation (Accommodations), flights (Flights), additional services (Addons), and are supplied in the corresponding branches: Accommodations, Flights, AddonServices. In the travel components, price components (PriceItems), availability (Availabilities) and properties (Properties) are also supplied. The calculation of the price occurs at the point of product creation and uses the supplied rules for the combinability of the price components.</para>
					<para xml:id="de_772" xml:lang="de">Eine typische Datenlieferung wird nur wenige Einträge zu den Produkten benötigen, da
						hier mit wenigen generischen Regeln alles Notwendige abbildbar ist. </para><para xml:id="en_772" xml:lang="en">A typical data delivery will only require a few entries for the products, as it is possible here to describe everything necessary using a few generic rules.</para>
					<para xml:id="de_773" xml:lang="de">In OTDS ist es somit möglich "Nur-Hotel"- und "Pauschaldaten aber auch andere
						Produkttypen in einer Datenlieferung zusammenzufassen. </para><para xml:id="en_773" xml:lang="en">In OTDS it is therefore possible to combine "Hotel-Only" and "Package" data, as well as other product types in a data delivery.</para>
					<para xml:id="de_774" xml:lang="de">Die Regeln zur Produktbildung sind fast identisch mit den Regeln zur Erweiterung von
						Komponenten.</para><para xml:id="en_774" xml:lang="en">The rules for product creation are almost identical with the rules for the extension of components.</para>
					<para xml:id="de_775" xml:lang="de">Beispiele und weitere Erklärungen wie diese Regeln genau angewendet werden, erfahren
						Sie in einer der nächsten Kapitel über die <link linkend="OtdsStrategyRules">Regelwerke zur Bildung von Produkten oder auch zur Kombination von
						Flügen</link>.</para><para xml:id="en_775" xml:lang="en">Examples and further explanations of exactly how these rules are applied can be found in one of the following chapters via the <link linkend="OtdsStrategyRules"> rule sets for the composition of products or for the combination of flights</link>.</para>
				</section>
			</section>
			<section xml:id="OtdsStrategyKey">
				<title><phrase xml:id="de_776" xml:lang="de">Identifizierung von Datenknoten (Key)</phrase><phrase xml:id="en_776" xml:lang="en">Identification of data nodes (Key)</phrase></title>
				<para xml:id="de_777" xml:lang="de">In einem Veranstaltersystem existieren diverse Schlüssel, die für Steuerung aber auch
					für die Indizierung der internen Datenstrukturen benutzt werden. Genau diese Schlüssel
					finden sich im kompletten OTDS-XML-Baum an allen wichtigen Knoten bis zu einer bestimmten
					Tiefe wieder. Um bei mehrfachen Knoten eine eindeutige Adressierung zu ermöglichen,
					bekommen alle wichtigen mehrfachen Knoten das Attribut <emphasis role="italic">Key</emphasis> . Das Attribut <emphasis role="italic">Key</emphasis> stellt den
					Schlüssel für den Knoten innerhalb des übergreifenden Elternknotens dar und muss deshalb
					in diesem Bereich eindeutig sein. Durch diesen Key ist jeder dieser Knoten bezogen auf
					seinen jeweiligen Elternknoten eindeutig adressierbar. </para><para xml:id="en_777" xml:lang="en">In a tour operator system, various keys exist which are used for the control, but also for the indexing of the internal data structure. Precisely these keys can be found in the entire OTDS XML tree at all important nodes up to a specific depth. In order to enable unambiguous addressing in the case of multiple nodes, all important multiple nodes receive the attribute <emphasis role="italic">Key</emphasis> . The attribute <emphasis role="italic">Key</emphasis> represents the key for the node within the overarching parent node and must therefore be unambiguous in this area. Through this key, each of these nodes is unambiguously addressable in relation to its corresponding parent node.</para>
				<para xml:id="de_778" xml:lang="de">In den Veranstaltersystemen und auch in OTDS nehmen diese Key's eine entscheidende Rolle
					innerhalb des Regelsystems ein. Häufig sind die uns bekannten Buchungsparameter wie z.B.
					Leistungscode, Zimmercode, Verpflegungscode, Reiseart, Flughafencodes, Buchungsklasse
					Haupbestandteil der Key's. An vielen Stellen können diese Key's als Bedingung oder Filter
					verwendet werden. Bei Verpflegungen zum Beispiel entspricht der Key in der Regel dem
					Verpflegungsbuchungscode. Mit Hilfe einer entsprechenden Key-Condition kann man
					ausdrücken, dass ein bestimmter Zuschlag nur für eine bestimmte Verpflegung gilt. </para><para xml:id="en_778" xml:lang="en">In the tour operator systems and also in OTDS, these keys play a pivotal role within the rule system. Often, well-known booking parameters such as service code, room code, board code, travel type, airport codes and booking class are main components of the keys. In many places, these keys can be used as conditions or filters. In the case of board, for example, the key is often the same as the board booking code. With the aid of a corresponding key condition, it is possible to express that a particular surcharge is only valid for a particular board type.</para>
				<para xml:id="de_779" xml:lang="de">Die wichtigsten Knoten mit Key sind Brand, Product, Accommodation, SellingAccom, Unit,
					SellingUnit, Board, Flight, BookingClass, Addon und Service und noch einige mehr.</para><para xml:id="en_779" xml:lang="en">The most important nodes with a key are Brand, Product, Accommodation, SellingAccom, Unit, SellingUnit, Board, Flight, BookingClass, Addon and Service, as well as a few others.</para>
				<para xml:id="de_780" xml:lang="de">Der Key spielt aber auch eine besonders wichtige Rolle im Aufbau und der Verarbeiung von
					inkrementellen Datenlieferungen. Grundlage ist, dass jeder wichtige Knoten über seinen Key
					bezogen auf seinen jeweiligen Elternknoten eindeutig adressierbar ist. Dadurch wird ein
					Updatekonzept ermöglicht, so dass jeder dieser Knoten individuell mit neuen Daten versehen
					werden kann. Dem Updatekonzept widmet sich explizit eines der folgenden Kapitel. (Siehe
					dazu: Kapitel <link linkend="OtdsStrategyUpdateConcept">OTDS Update-Konzept</link>) </para><para xml:id="en_780" xml:lang="en">The key also plays a particularly important role in the construction and processing of incremental data deliveries. The basis is that each important node is unambiguously addressable via its key in relation to its corresponding parent node. In this way, an update concept is made possible through which each of these nodes can individually be supplied with new data. One of the following chapters is specifically dedicated to the update concept. (see the chapter <link linkend="OtdsStrategyUpdateConcept">OTDS Update Concept</link>)</para>
				<para xml:id="det_781" xml:lang="de"/>
			</section>
			<section xml:id="OtdsStrategyTag">
				<title><phrase xml:id="de_782" xml:lang="de">Kennzeichnung von Datenknoten (Tag)</phrase><phrase xml:id="en_782" xml:lang="en">Identification of data nodes (tag)</phrase></title>
				<para xml:id="de_783" xml:lang="de">Die Tag's sind so unscheinbar aber auch so mächtig, dass ihnen ein eigenes Kapitel in
					OTDS gewidmet ist. Tag's sind freie sehr präzise Markierungen an den logischen
					Datenknoten. Der Begriff "Tag" innerhalb der Touristik ist einer Erfindung von OTDS
					selbst. Die Inhalte von "Tag" selbst sind aber schon seit langer Zeit ein fester
					Bestandteil der Veranstaltersysteme. Innerhalb der Veranstaltersysteme entsprechen die
					Tags meist irgendwelchen speziellen Codes, Klassifizierungen oder Namen von
					Sondertabellen. Die Tag's finden genau wie die Key's Verwendung in den Regelsystemen und
					in der Preisberechnung. Wenn die Key's an Ihre Grenzen stoßen kommen Tag's zum Einsatz. </para><para xml:id="en_783" xml:lang="en">The tags are so inconspicuous yet so powerful that they have their own chapter dedicated to them in OTDS. Tags are free, very precise markings on the logical data nodes. The term "tag" within tourism is OTDS' own invention. The contents of "Tag" itself have however been a fixed component of tour operator systems for a long time. Within the tour operator systems, the tags usually represent special codes, classifications or names of special tables. Just like keys, tags are used in the rule systems and in the price calculation. When the keys reach their limits, the tags come into operation.</para>
				<para xml:id="de_784" xml:lang="de">Bei den Tag's handelt es sich um frei vergebbare Wertepaare, auf die man sich über
					Vergleichsoperatoren beziehen kann. Das Wertepaar besteht aus einem frei vergebbaren
					Attribut "Class" und dem entsprechenden Wert des Tag-Elements.</para><para xml:id="en_784" xml:lang="en">Tags are freely assigned pairs of values which can be referred to using relational operators. The pair of values consists of a freely assigned "Class" attribute and the corresponding value of the Tag element.</para>
				<para xml:id="de_785" xml:lang="de">So können an allen logischen Knotenpunkten beliebig viele dieser Wertepaare platziert
					werden.</para><para xml:id="en_785" xml:lang="en">Any number of these pairs of values can be placed on all logical node points.</para>
				<para xml:id="de_786" xml:lang="de">An allen Stellen, an denen Filter und Bedingungen platziert werden dürfen, kann sowohl
					in der Produkterstellung als auch in der Preisberechnung über Filter oder Conditions Bezug
					auf die Tags genommen werden. </para><para xml:id="en_786" xml:lang="en">At all points at which filters and conditions may be placed, it is also possible to refer to tags in product composition as well as in price calculation via filters or conditions.</para>
				<para xml:id="de_787" xml:lang="de">Ein Beispiel: </para><para xml:id="en_787" xml:lang="en">An example:</para>
				<para xml:id="de_788" xml:lang="de">
					<programlisting><![CDATA[<Tag Class="fluggruppe">AB</Tag>]]></programlisting>
				</para><para xml:id="en_788" xml:lang="en">
					<programlisting>
						<![CDATA[<Tag Class="fluggruppe">AB</Tag>]]></programlisting>
				</para>
				<para xml:id="de_789" xml:lang="de">Ein Datenlieferant möchte bei einem Flugangebot die Fluggruppe mit übermitteln. Er
					markiert jeden entsprechenden Flug durch ein Tag mit Class="Fluggruppe" und füllt dieses
					Feld mit dem Wert: AB. OTDS weiß nicht, dass es eine Fluggruppe ist. Für OTDS ist es ein
					beliebiges Tag mit einem bestimmten Namen. Erst durch die sinngemäße Verwendung in den
					Regeln wird es vom Datenlieferant wie eine Fluggruppe verwendet. Dann ist in dem
					Datenbestand "AB" als ein Wert für Fluggruppe gespeichert und kann z.B. für
					Produktzusammenstellungen benutzt werden. </para><para xml:id="en_789" xml:lang="en">A data provider wishes to include the flight group in a flight offer. The provider marks every corresponding flight with a tag with Class="Flight group" and in this fields enters the value: AB. OTDS does not know that this is a flight group. For OTDS it is an arbitrary tag with a specific name. Only when it is applied logically in the rules will it be used by the data provider as a flight group. "AB" is then saved in the database as a value for the flight group and can be used when putting together an offer, for example.</para>
				<para xml:id="de_790" xml:lang="de">So kann man zum Beispiel bei der Flugkombination die Bedingung formulieren, dass die
					miteinander kombinierbaren Flüge das gleiche Tag mit der Class="Fluggruppe" haben müssen. </para><para xml:id="en_790" xml:lang="en">When combining flights, it is possible to stipulate the condition that the flights being combined with one another must have the same tag with the Class="Flight group".</para>
				<para xml:id="de_791" xml:lang="de">Das sieht dann so aus:</para><para xml:id="en_791" xml:lang="en">This is how it should then look:</para>
				<programlisting><![CDATA[<MatchEqual>
		<Tag Source="#Zubringer" Class="Fluggruppe"/>
		<Tag Source="#Hauptflug" Class=Fluggruppe"/>
	</MatchEqual>
</Filter>
]]>		
				</programlisting>

				<para xml:id="de_792" xml:lang="de">In einem anderen Fall markieren Sie bestimmte Hotels mit Tags, die die Zugehörigkeit zu
					einem bestimmten Katalog ausdrücken. In der Preisberechnung lässt sich dann definieren,
					dass ein Abschlag nur dann gültig ist, wenn das Tag am Hotel vorhanden ist. Im folgenden
					ein kurzer Auszug mit entsprechenden Daten:</para><para xml:id="en_792" xml:lang="en">Another example would be that it is possible to mark hotels belonging to a certain catalogue with tags which indicate this. During the price calculation, it is then possible to specify that a discount is only valid if the hotel possesses that tag. Here is a small extract with the corresponding data:</para>
				<programlisting><![CDATA[<Accommodations>
	<Accommodation>
		<Tag Class="Brochure">FAMI</Tag>
		...
	</Accommodation>
	<Accommodation>
		<Tag Class="Brochure">FIT</Tag>
		...
	</Accommodation>
	<Accommodation>
		<Tag Class="Brochure">FAMI</Tag>
		...
	</Accommodation>
	...
	<PriceItems>
		<PriceItem Class="Familienrabatt">
			<Percent>
				<Value>-30</Value>
				...
			<Condition>
				<Tag Source="Accommodation" Class="Brochure">FAMI</Tag>
			</Condition>
		...
</Accommodations>]]>		
				</programlisting>
				<para xml:id="de_793" xml:lang="de">Dies soll die Funktionsweise der Tags veranschaulichen. Die Einsatzmöglichkeit von Tags
					geht über das hier gezeigte weit hinaus. Als Weiterentwicklung der Tags sollen schon hier
					die <link linkend="OtdsStrategyConditionalTag">"ConditionalTags"</link> erwähnt werden,
					die in einem späteren Kapitel nach Vorstellung der Conditions beschrieben werden.
					Beispiele aus der Praxis zu Tags und ConditionalTags finden sich in den folgenden
					Kapiteln: </para><para xml:id="en_793" xml:lang="en">This is to illustrate the way in which the tags work. The scope of application for tags extends far beyond what is illustrated here. As a further development of the tags, the <link linkend="OtdsStrategyConditionalTag">"ConditionalTags"</link> should also be mentioned here. They will be described in more detail in a later chapter, following the introduction of the conditions. Examples of the use of tags and ConditionalTags in practice can be found in the following chapters:</para>
				<para xml:id="de_794" xml:lang="de">- <link linkend="OtdsProductsComponentsCombiComponents">Kombinierte Komponenten in der
						Praxis (CombiComponents)</link>
				</para><para xml:id="en_794" xml:lang="en">- <link linkend="OtdsProductsComponentsCombiComponents">Combined components in practice (CombiComponents)</link>
				</para>
				<para xml:id="de_795" xml:lang="de">- <link linkend="OtdsProductsComponentsProducts">Produktregeln in der Praxis
						(Products)</link>
				</para><para xml:id="en_795" xml:lang="en">- <link linkend="OtdsProductsComponentsProducts">Product rules in practice (Products)</link>
				</para>
				<para xml:id="de_796" xml:lang="de">- <link linkend="OtdsProductsComponentsAccommodationPriceItem">Preisbestandteile in
						Unterbringungen in der Praxis (Accommodations/PriceItems)</link>
				</para><para xml:id="en_796" xml:lang="en">- <link linkend="OtdsProductsComponentsAccommodationPriceItem">Price components in accommodation in practice (Accommodations/PriceItems)</link>
				</para>
			</section>
			<section xml:id="OtdsStrategyCondition">
				<title><phrase xml:id="de_797" xml:lang="de">Filter und Bedingungen (Filter und Condition)</phrase><phrase xml:id="en_797" xml:lang="en">Filters and conditions (Filter and Condition)</phrase></title>
				<section xml:id="OtdsStrategyConditionWhat">
					<title><phrase xml:id="de_798" xml:lang="de">Überblick über Conditions und Filter</phrase><phrase xml:id="en_798" xml:lang="en">Overview of conditions and filters</phrase></title>
					<para xml:id="de_799" xml:lang="de">Für Angebote aber auch für die Preise dieser Angebote gelten bestimmte Bedingungen.
						Wir unterscheiden in OTDS einerseits nach Bedingungen, die einschränkend auf die
						Anzahl der Angebote wirken und deshalb im OTDS Sprachgebrauch "Filter" heißen und
						andererseits Bedingungen, die zur Preiseberechnung benutzt werden und deshalb
						"Condition" heißen. </para><para xml:id="en_799" xml:lang="en">Certain conditions apply to offers, as well as to the prices of these offers. In OTDS we differentiate between conditions which restrict the amount of offers and are therefore referred to in OTDS language as "filters" on the one hand, and conditions which are used to calculate the price and are therefore called "conditions" on the other.</para>
					<para xml:id="de_800" xml:lang="de">Conditions kommen darüber hinaus auch noch in <link linkend="OtdsStrategyAvailability">Verfügbarkeiten</link>, <link linkend="OtdsStrategyBooking">Buchungsparametern</link> und <link linkend="OtdsStrategyConditionTypeStandard">Eigenschaften (Properties)</link> vor.
						Dazu aber mehr im entsprechenden Kapitel. Formal sind Filter und Conditions gleich. Es
						sind lediglich die Wurzelknoten anders benannt worden, um die unterschiedlichen
						Auswirkungen zu verdeutlichen. Außerdem soll durch die Wahl unterschiedlicher Begriffe
						eine dediziertere Beschreibung ermöglicht werden. Wir sprechen also im Kontext der
						Produktregeln von "Filtern in den Rules". Bei den Einschränkungen von Unterkünften
						bzgl. bestimmter Anreisetage oder Mindestaufenthalte sprechen wir von "Filtern",
						innerhalb der Preisberechnung sprechen wir von "Conditions". </para><para xml:id="en_800" xml:lang="en">Conditions are also discussed in <link linkend="OtdsStrategyAvailability">Availabilities</link>, <link linkend="OtdsStrategyBooking">Booking parameters</link> and <link linkend="OtdsStrategyConditionTypeStandard">Properties</link>. Further information will be offered in the relevant chapters. Filters and conditions are formally the same. It is just that the root nodes have a different name to illustrate their different effects. The choice of different terms should also facilitate a more dedicated description. In the context of product rules, we speak of "filters in the rules". When restricting the accommodation to certain arrival days or minimum lengths of stay, we speak of "filters", when calculating the price we speak of "conditions".</para>
					<para xml:id="de_801" xml:lang="de">Gemäß den XSDs sind in allen Condition- und Filter-Elementen alle Arten von
						Bedingungen zugelassen. Aber nicht jede macht in jedem Kontext Sinn und deshalb
						schränkt OTDS die Verwendung der Bedingungsarten in Abhängigkeit des
						Verwendungskontextes ein. Dazu gleich mehr bei der Beschreibung der einzelnen Arten
						von Bedingungen.</para><para xml:id="en_801" xml:lang="en">According to the XSDs, all types of conditions are permitted in all condition elements and filter elements. However, not all of them make sense in every context and because of this, OTDS restricts the use of the condition types in accordance with the context of use. More on this will follow shortly together with the description of the individual types of conditions.</para>
					<para xml:id="de_802" xml:lang="de">Eine Übersicht der möglichen Platzierung von Filtern und Conditions in OTDS befindet
						sich im <link linkend="AnhangConditionAndFilterPaths">Anhang</link>.</para><para xml:id="en_802" xml:lang="en">An overview of the possible positioning of filters and conditions in OTDS can be found in the <link linkend="AnhangConditionAndFilterPaths">attachment</link>.</para>
					<figure>
						<title><phrase xml:id="de_803" xml:lang="de">Struktur von Condition / Filter</phrase><phrase xml:id="en_803" xml:lang="en">Structure of condition/filter</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/condition-filter.png" format="PNG" contentwidth="70%"/>
							</imageobject>
							<textobject>
								<para xml:id="de_804" xml:lang="de">Condition / Filter</para><para xml:id="en_804" xml:lang="en">Condition/filter</para>
							</textobject>
							<caption>
								<para xml:id="de_805" xml:lang="de"> </para><para xml:id="en_805" xml:lang="en"/>
							</caption>
						</mediaobject>
					</figure>
					<para xml:id="de_806" xml:lang="de"> </para><para xml:id="en_806" xml:lang="en"/>
					<para xml:id="de_807" xml:lang="de">Die einzelnen Bedingungsarten beziehen sich auf verschiedene Parameter,
						beispielsweise auf Reisedatum und -dauer, den Buchungszeitpunkt, die Personen der
						Reise, auf Keys und TAGs, Flughäfen usw. Die Impact-Bedingungen spielen eine besondere
						Rolle. Die Impactbedingungen werden nur in der Preisberechnung verwendet und drücken
						eine Bedingung für einzelne Tage (DayImpact) bzw. einzelne Personen (PersonImpact)
						aus, also ob eine Preis für einen bestimmten Tag oder eine bestimmte Person gültig
						ist. Im Vergleich zu den "normalen" Bedingungen, die lediglich ausdrücken ob ein Preis
						generell (also für alle Tage und Personen) gilt oder nicht.</para><para xml:id="en_807" xml:lang="en">The individual condition types refer to various parameters, for example travel date and duration, the time of booking, the persons travelling, keys and tags, airports, etc. The impact conditions play a special role. The impact conditions are only used in price calculation and express a condition for individual days (DayImpact) or individual persons (PersonImpact), i.e. whether a price is valid for a particular day or a particular person. This is in contrast to the "normal" conditions, which only express whether a price applies generally (i.e. for all days and all persons) or not.</para>
					<para xml:id="de_808" xml:lang="de">Die unterschiedlichen Bedingungen werden im Folgenden beschrieben. Es wird nun nur
						noch von Conditions gesprochen. Die Beschreibung gilt jedoch ebenso für Filter.</para><para xml:id="en_808" xml:lang="en">The various conditions are described below. From now on, only conditions will be referred to. However, the description applies equally to filters.</para>
				</section>
				<section xml:id="OtdsStrategyConditionBasics">
					<title><phrase xml:id="de_809" xml:lang="de">Grundlagen zum Verständnis der Conditions</phrase><phrase xml:id="en_809" xml:lang="en">Foundations for understanding the conditions</phrase></title>

					<section xml:id="OtdsStrategyConditionBasicsSource">
						<title><phrase xml:id="de_810" xml:lang="de">Das Attribut <code>Source</code></phrase><phrase xml:id="en_810" xml:lang="en">The attribute <code>Source</code>
							</phrase></title>
						<para xml:id="de_811" xml:lang="de">Jede Condition besitzt ein Attribut <code>Source</code>. Dieses Attribut
							definiert die Komponenten/Unterkomponenten in deren Kontext eine Bedingung
							ausgewertet wird. In der Regel handelt sich dabei um einen Zielknoten im
							OTDS-XML-Baum bezogen auf das aktuell betrachtete Angebot. Diese Zielknoten
							stellen in der Regel Komponenten oder Unterkomponenten dar, an denen sich
							Parameter wie <code>Keys</code> und <code>Tags</code> befinden. Die Addressierung
							findet über eine festgelegte Struktur von in sich verschachtetelten
							Unterkomponenten statt. Diese Verschachtelung wird über eine definierte
							Punktnotation dargestellt und muss innerhalb der Komponenten-Definition den im
								<code>SourceAttributeType</code> aufgeführten Enumerations folgen. Eine
							Auflistung der möglichen Werte befindet sich weiter unten.</para><para xml:id="en_811" xml:lang="en">Each condition possesses a <code>Source</code> attribute. This attribute defines the components/subcomponents in the context of which a condition is evaluated. Usually it refers to a target node in the OTDS XML tree, in relation to the currently regarded offer. These target nodes usually portray components or subcomponents which have parameters such as <code>Keys</code> and <code>Tags</code> . The addressing occurs via a fixed structure of encapsulated subcomponents. This encapsulation is portrayed by a defined dot notation and must follow the specified enumerations in <code>SourceAttributeType</code> within the component definition. A list of the possible values can be found further below.</para>
						<para xml:id="de_812" xml:lang="de">Nur innerhalb der Rules kann ggf. von den im <code>SourceAttributeType</code>
							aufgeführten Vorgaben der allgemeine Komponentenname durch den in den Rules
							spezifisch genannten Namen einer <code>Component</code> ersetzt werden. Dabei
							müssen deren Unterkomponenten wieder unbedingt der Punktnotation folgen. </para><para xml:id="en_812" xml:lang="en">Only within the rules is it possible to replace the general component name from the specifications given in <code>SourceAttributeType</code> with the specific name of a <code>Component</code> as stated in the rules. In this case, it is essential that their subcomponents return to following dot notation.</para>
						<para xml:id="de_813" xml:lang="de">Eine Auflistung der möglichen Werte für <code>Source</code> ist weiter unten
							angegeben. Das Attribut <code>Source</code> wird sowohl im <link linkend="OtdsStrategyRulesAttributSource">Kapitel zur Produktdefinition</link>
							als auch im <link linkend="OtdsProcessSource">Verarbeitungsmodell</link> genauer
							beschrieben.</para><para xml:id="en_813" xml:lang="en">A list of the possible values for <code>Source</code> is provided further below. The attribute <code>Source</code> is described in more detail in the <link linkend="OtdsStrategyRulesAttributSource">chapter on product definition</link> as well as in the <link linkend="OtdsProcessSource">processing model</link>.</para>
						<para xml:id="de_814" xml:lang="de">OTDS definiert <link linkend="OtdsProcessRequestContextParameters">Primäre und
								daraus abgeleitete Rahmenparameter</link>, die grundlegend für die
							Produktbildung und Preisberechnung sind. Diese klären u.a. die Fragen "Wann wird
							gereist?", "Wer reist?" und "Wann wird gebucht?". Die Rahmenparameter legen den
							Rahmen eines Reisevorhabens fest und werden gebraucht, um Reiseangebote erzeugen
							und deren Preise berechnen zu können. Mit Hilfe der Rahmenparameter können also
							einzelne Produkte inkl. Preis und Verfügbarkeit zusammengestellt werden. Die
							Rahmenparameter sind:
						</para><para xml:id="en_814" xml:lang="en">OTDS defines the <link linkend="OtdsProcessRequestContextParameters">primary parameters and the framework parameters</link> derived from them, which are essential for product creation and price calculation. Among other things, these will answer questions such as "What are the travel dates?", "who is travelling?" and "when is the booking made?". The framework parameters create the framework of travel plans and are used to create travel offers and to calculate the price of these. In this way, individual products including price and availability can be compiled with the assistance of the framework parameters. The framework parameters are:</para>
						<itemizedlist>
							<listitem>
								<para xml:id="de_815" xml:lang="de">bezüglich Reisetermin: Reisebeginn, <code>Duration</code> (aus der
									Dauer ergibt sich das Reiseende), <code>Weekdays</code>
								</para><para xml:id="en_815" xml:lang="en">Regarding travel dates: Start of travel, <code>Duration</code> (the end of travel can be deduced from the duration),<code>Weekdays</code>
								</para>
							</listitem>
							<listitem>
								<para xml:id="de_816" xml:lang="de">bezüglich Buchungstermin: <code>BookingDate</code>,
										<code>BookingOffset</code></para><para xml:id="en_816" xml:lang="en">Regarding the booking date: <code>BookingDate</code> , <code>BookingOffset</code>
								</para>
							</listitem>
							<listitem>
								<para xml:id="de_817" xml:lang="de">bezüglich Personen: Anzahl und Alter der Personen</para><para xml:id="en_817" xml:lang="en">Regarding persons: Number and age of all persons</para>
							</listitem>
						</itemizedlist>
						<para xml:id="de_818" xml:lang="de">Im Zusammenhang mit diesen Rahmenparametern drückt das Attribute "Source" die
							Zugehörigkeit zu einer Komponente und damit die Betrachtung eines bestimmten
							Kontextes aus.</para><para xml:id="en_818" xml:lang="en">In connection with these framework parameters, the "Source" attribute expresses belonging to a component and therefore indicates the consideration of a specific context.</para>
						<para xml:id="de_819" xml:lang="de">Beispiele für einen unterschiedlichen Betrachtungskontext:</para><para xml:id="en_819" xml:lang="en">Examples of various considered contexts:</para>
						<itemizedlist>
							<listitem>
								<para xml:id="de_820" xml:lang="de"><code>Source="Accommodation"</code>: Bei einer <code>Date</code>
									Condition werden die Tage des Hotelaufenthaltes überprüft.</para><para xml:id="en_820" xml:lang="en">
									<code>Source="Accommodation"</code> : In the case of a <code>Date</code> condition, the dates of the hotel stay are checked.</para>
							</listitem>
							<listitem>
								<para xml:id="de_821" xml:lang="de"><code>Source="Product"</code>: Bei einer <code>Duration</code>
									Condition wird Dauer der Gesamtreise geprüft.</para><para xml:id="en_821" xml:lang="en">
									<code>Source="Product"</code> : With a <code>Duration</code> condition, the duration of the entire trip is checked.</para>
							</listitem>
							<listitem>
								<para xml:id="de_822" xml:lang="de"><code>Source="ReturnFlight.Inbound"</code>: Bei einer
										<code>Weekdays</code> Condition wird der Tag des Rückflugs
									überprüft</para><para xml:id="en_822" xml:lang="en">
									<code>Source="ReturnFlight.Inbound"</code> : With a<code>Weekdays</code> condition, the day of the return flight is checked.</para>
							</listitem>
						</itemizedlist>
						<para xml:id="det_823" xml:lang="de"/>
						<para xml:id="de_824" xml:lang="de">Für die anderen Rahmenparameter, die sich nicht auf Termine beziehen, gibt es
							nur den Kontext der Gesamtreise. Das Buchungsdatum kann sich also beispielsweise
							nur auf die Gesamtreise beziehen, nicht auf einzelne Komponenten. Dies wird sich
							möglicherweise in zukünftigen OTDS-Versionen ändern. Eine systemische
							Zusammenstellung aller möglichen Werte für <code>Source</code> in Abhängigkeit von
							der Condition findet sich in den folgenden beiden Tabellen. </para><para xml:id="en_824" xml:lang="en">For the other framework parameters, which are not related to dates, only the context of the entire trip exists. The booking date can thus, for example, only refer to the total trip and not to individual components. This may change in future versions of OTDS. A systemic combination of all possible values for <code>Source</code> independently of the condition can be found in the following two tables.</para>
						<para xml:id="det_825" xml:lang="de"/>
					</section>
					<section xml:id="OtdsStrategyConditionAttributeSourceTableOfValues">
						<title><phrase xml:id="de_826" xml:lang="de">Zuordnung einer <code>Source</code> in Conditions zu den entsprechenden Knoten in der
							OTDS-Datenstruktur</phrase><phrase xml:id="en_826" xml:lang="en">Assigning a <code>Source</code>  in Conditions to the corresponding node in the OTDS data structure.</phrase></title>
						<para xml:id="de_827" xml:lang="de">Die folgende Tabelle listet alle möglichen Werte für das Attribut
								<code>Source</code> auf und gibt die adressierte Position innerhalb der
							OTDS-Datenstruktur an.</para><para xml:id="en_827" xml:lang="en">The following table lists all possible values ​​for the attribute <code>Source</code>  and specifies the addressed position within the OTDS data structure.</para>
						<table frame="all">
							<title><phrase xml:id="de_828" xml:lang="de">Werte und Definition für <code>Source</code></phrase><phrase xml:id="en_828" xml:lang="en">Values ​​and definitions for <code>Source</code>
								</phrase></title>
							<tgroup cols="3" align="left" colsep="1" rowsep="1">
								<thead>
									<row>
										<entry>Abkürzung</entry>
										<entry>Wert für <code>Source</code></entry>
										<entry>Pfad in OTDS</entry>
									</row>
								</thead>
								<tbody>
									<row>
										<entry>a</entry>
										<entry>Brand</entry>
										<entry>/OTDS/Brands/Brand</entry>
									</row>
									<row>
										<entry>b</entry>
										<entry>Accommodation</entry>
										<entry>/OTDS/Accommodations/Accommodation</entry>
									</row>
									<row>
										<entry>c</entry>
										<entry>Accommodation.SellingAccom</entry>
										<entry>/OTDS/Accommodations/Accommodation/SellingAccom</entry>
									</row>
									<row>
										<entry>d</entry>
										<entry>Accommodation.SellingAccom.Unit</entry>
										<entry>/OTDS/Accommodations/Accommodation/SellingAccom/Unit</entry>
									</row>
									<row>
										<entry>e</entry>
										<entry>Accommodation.SellingAccom.Board</entry>
										<entry>/OTDS/Accommodations/Accommodation/SellingAccom/Board</entry>
									</row>
									<row>
										<entry>f</entry>
										<entry>Accommodation.SellingAccom.Unit.SellingUnit</entry>
										<entry>/OTDS/Accommodations/Accommodation/SellingAccom/SellingUnit</entry>
									</row>
									<row>
										<entry>g</entry>
										<entry>ReturnFlight</entry>
										<entry>/OTDS/Flights/ReturnFlights/ReturnFlight</entry>
									</row>
									<row>
										<entry>h</entry>
										<entry>ReturnFlight.Inbound</entry>
										<entry>/OTDS/Flights/ReturnFlights/ReturnFlight/Inbound</entry>
									</row>
									<row>
										<entry>j</entry>
										<entry>ReturnFlight.Outbound</entry>
										<entry>/OTDS/Flights/ReturnFlights/ReturnFlight/Outbound</entry>
									</row>
									<row>
										<entry>k</entry>
										<entry>ReturnFlight.Outbound.BookingClass</entry>
										<entry>/OTDS/Flights/ReturnFlights/ReturnFlight/BookingClass</entry>
									</row>
									<row>
										<entry>l</entry>
										<entry>OnewayFlight</entry>
										<entry>/OTDS/Flights/OnewayFlights/OnewayFlight</entry>
									</row>
									<row>
										<entry>m</entry>
										<entry>OnewayFlight.BookingClass</entry>
										<entry>/OTDS/Flights/OnewayFlights/OnewayFlight/BookingClass</entry>
									</row>
									<row>
										<entry>n</entry>
										<entry>Addon</entry>
										<entry>/OTDS/Addons/Addon</entry>
									</row>
									<row>
										<entry>o</entry>
										<entry>Addon.Service</entry>
										<entry>/OTDS/Addons/Addon/Service</entry>
									</row>
									<row>
										<entry>p</entry>
										<entry>Addon.Service.ServiceFeature</entry>
										<entry>/OTDS/Addons/Addon/ServiceFeature</entry>
									</row>
									<row>
										<entry>q</entry>
										<entry>Product</entry>
										<entry>/OTDS/Products/Product</entry>
									</row>
									<row>
										<entry>r</entry>
										<entry>GlobalValue</entry>
										<entry>/OTDS/Products/GlobalValues/GlobalValue</entry>
									</row>
								</tbody>
							</tgroup>
						</table>
						<para xml:id="de_829" xml:lang="de"><emphasis role="bold">Bitte beachten:</emphasis>
							<emphasis role="italic">Der angegebene OTDS-Pfad in der Tabelle soll nur
								veranschaulichen, dass ein Bezug zwischen dem Attribut "Source" und den Knoten
								im XML-Dokument existiert. Streng genommen ist dies aber nicht ganz korrekt.
								Es handelt sich hierbei vielmehr um eine Zuordnung zu den Knoten des zugrunde
								liegenden Verarbeitungsmodells. Dieses Verarbeitungsmodell ist aufgrund der
								möglichen Produkt- und Komponentenregeln etwas komplexer, da in diesem Modell
								auch berücksichtigt wird, dass auch Komponenten inneinander verschachtelt
								werden können. Zum Beispiel wenn ein Flug aus mehreren Einzelflügen besteht
								(Zubringer, Hauptflug und Verteiler). </emphasis>
						</para><para xml:id="en_829" xml:lang="en">
							<emphasis role="bold">Please note:</emphasis>
							<emphasis role="italic">The specified OTDS path in the table is intended only to illustrate that a relation between the "Source" attribute and the node in the XML document exists. Strictly speaking, it is not entirely correct however. It demonstrates an allocation to the nodes of the underlying processing model however. This processing model is slightly more complex due to the possible product and component rules, as this model also allows for the nesting of components inside each other. For example, if a flight consists of several individual flights (feeder, main flight and connecting flight).</emphasis>
						</para>
						<para xml:id="de_830" xml:lang="de">Die folgende Tabelle gibt einen Überblick über alle Conditions und den darin
							erlaubten Einträgen für das Attribut <code>Source</code>. Die Buchstaben a - r
							beziehen sich auf die vorherige Tabelle mit den entsprechenden
							Source-Werten.</para><para xml:id="en_830" xml:lang="en">The following table gives an overview of all conditions and the permitted entries for the attribute <code>Source</code> in each of them. The letters a - r refer to the previous table with the corresponding Source values.</para>
						<para xml:id="det_831" xml:lang="de"/>
						<table frame="all">
							<title><phrase xml:id="de_832" xml:lang="de">Gültige Einträge für <code>Source</code> in Conditions</phrase><phrase xml:id="en_832" xml:lang="en">Valid entries for <code>Source</code>  can be found in Conditions</phrase></title>
							<tgroup cols="21" align="left" colsep="1" rowsep="1">
								<thead>
									<row>
										<entry> Condition \ Source (siehe obige Tabelle)</entry>
										<entry>a</entry>
										<entry>b</entry>
										<entry>c</entry>
										<entry>d</entry>
										<entry>e</entry>
										<entry>f</entry>
										<entry>g</entry>
										<entry>h</entry>
										<entry>j</entry>
										<entry>k</entry>
										<entry>l</entry>
										<entry>m</entry>
										<entry>n</entry>
										<entry>o</entry>
										<entry>p</entry>
										<entry>q</entry>
										<entry>r</entry>
									</row>
								</thead>
								<tbody>
									<row>
										<entry>Date</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>-</entry>

									</row>
									<row>
										<entry>Duration</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>-</entry>

									</row>
									<row>
										<entry>BookingDate</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>-</entry>

									</row>
									<row>
										<entry>BookingDateOffset</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>-</entry>
									</row>
									<row>
										<entry>Weekdays</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>-</entry>

									</row>
									<row>
										<entry>PersonGroup</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>-</entry>

									</row>
									<row>
										<entry>Airports</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>

									</row>
									<row>
										<entry>Keys</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
									</row>
									<row>
										<entry>Tags</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
									</row>
									<row>
										<entry>ConditionalTags</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
									</row>
									<row>
										<entry>MatchEqual.Tag</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
									</row>
									<row>
										<entry>MatchEqual.Element mit Airports</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
									</row>
									<row>
										<entry>DayImpact.Date</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>-</entry>
									</row>
									<row>
										<entry>DayImpact.DayIndex</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>-</entry>
									</row>
									<row>
										<entry>DayImpact.Weekdays</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>-</entry>
									</row>
									<row>
										<entry>DayImpact.DayPriceIndex</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>-</entry>
									</row>
									<row>
										<entry>PersonImpact.PersonAge</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>-</entry>


									</row>
									<row>
										<entry>PersonImpact.PersonIndex</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>-</entry>

									</row>
									<row>
										<entry>PersonImpact.PersonGender</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>-</entry>
										<entry>X</entry>
										<entry>-</entry>

									</row>
									<row>
										<entry>Impact.ConditionalTags</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
										<entry>X</entry>
									</row>
								</tbody>
							</tgroup>
						</table>
						<para xml:id="de_833" xml:lang="de">Zusätzlich kann in <code>Product</code> anstatt des ersten Tokens bei
							Accommodation, OnewayFlight, ReturnFlight und Addon der ggf. in der
							Produktdefinition festgelegte konkrete Name der Komponente angegeben werden durch
							Voranstellen eines "#".</para><para xml:id="en_833" xml:lang="en">Rather than giving the first token in Accommodation, OnewayFlight, Return Flight and Addon, it is also possible in <code>Product</code>  to specify the actual fixed name of the component as it exists in the product description, by preceding it with a "#".</para>
						<para xml:id="de_834" xml:lang="de">Die Condition <code>DayPriceIndex</code> ist eine Bedingung, die aus diesem
							Rahmen fällt. Ein Bezug zu Komponenten erfolgt hier nicht, da die Vergleichsquelle
							eindeutig die ausgerechneten Preise sind.</para><para xml:id="en_834" xml:lang="en">The condition <code>DayPriceIndex</code>  is a condition which does not adhere to this. No reference to components is made here, as the source of the comparison is clearly the calculated prices.</para>
						<para xml:id="det_835" xml:lang="de"/>
					</section>
					<section xml:id="OtdsStrategyConditionWhereAllowed">
						<title><phrase xml:id="de_836" xml:lang="de">Condition / Filter in unterschiedlichem Kontext</phrase><phrase xml:id="en_836" xml:lang="en">Condition / Filter in various contexts</phrase></title>
						<para xml:id="de_837" xml:lang="de">Conditions und Filter finden an zahlreichen Stellen in OTDS Verwendung. Die
							folgende Übersicht gibt an, in welchem Zusammenhang welche Condition bzw. Filter
							genutzt werden darf. Eine Auflistung aller Pfade für Condition und Filter findet
							sich im <link linkend="AnhangConditionAndFilterPaths">Anhang</link>.
						</para><para xml:id="en_837" xml:lang="en">Conditions and Filters are used in numerous places in OTDS. The following overview indicates which Condition or Filter may be used in which context. A list of all the paths for Conditions and Filters can be found in the <link linkend="AnhangConditionAndFilterPaths">Appendix</link>.</para>
							<table frame="all">
								<title><phrase xml:id="de_838" xml:lang="de">Übersicht: Wo können Conditions / Filter verwendet werden</phrase><phrase xml:id="en_838" xml:lang="en">Overview: Where can Conditions / Filters be used?</phrase></title>
								<tgroup cols="2" align="left" colsep="1" rowsep="1">
									<thead>
										<row>
											<entry>Abkürzung</entry>
											<entry>Kontext der Condition</entry>
										</row>
									</thead>
									<tbody>
										<row>
											<entry>a</entry>
											<entry>Filter in Rules</entry>
										</row>
										<row>
											<entry>b</entry>
											<entry>Filter in Komponenten</entry>
										</row>
										<row>
											<entry>c</entry>
											<entry>Condition in PriceItem</entry>
										</row>
										<row>
											<entry>d</entry>
											<entry>Conditions in Availabilities</entry>
										</row>
										<row>
											<entry>e</entry>
											<entry>Conditions in BookingGroup</entry>
										</row>
										<row>
											<entry>f</entry>
											<entry>Conditions in PropertyGroup</entry>
										</row>
									</tbody>
								</tgroup>
							</table>
						<para xml:id="de_839" xml:lang="de">
						Die erste Zeile der folgenden Tabelle drückt beispielsweise aus, dass die
							Date-Condition überall verwendet werden kann. Die ConditonalTags-Condition in der
							zehnten Zeile kann nur innerhalb der PriceItems verwendet werden. Bitte beachten
							Sie diese Restriktionen. Die aktuellen OTDS-Validierungsmaßnahmen machen diesbzgl.
							keine Einschränkungen. 
						</para><para xml:id="en_839" xml:lang="en">The first line of the following table, for example, shows that the Date condition can be used everywhere. The ConditonalTags condition in the tenth row can only be used within the PriceItems. Please take note of these restrictions. The current OTDS validation measures make no restrictions in this regard.</para>
							<table frame="all">
								<title><phrase xml:id="de_840" xml:lang="de">Verwendbarkeit der einzelnen Conditions</phrase><phrase xml:id="en_840" xml:lang="en">Applicability of the individual conditions</phrase></title>
								<tgroup cols="5" align="left" colsep="1" rowsep="1">
									<thead>
										<row>
											<entry>Condition bzw. Filter / Kontext (siehe obige
												Tabelle)</entry>
											<entry>a</entry>
											<entry>b</entry>
											<entry>c</entry>
											<entry>d</entry>
											<entry>e</entry>
											<entry>f</entry>
										</row>
									</thead>
									<tbody>
										<row>
											<entry>Date</entry>
											<entry>X</entry>
											<entry>X</entry>
											<entry>X</entry>
											<entry>X</entry>
											<entry>X</entry>
											<entry>X</entry>
										</row>
										<row>
											<entry>Duration</entry>
											<entry>X</entry>
											<entry>X</entry>
											<entry>X</entry>
											<entry>X</entry>
											<entry>X</entry>
											<entry>X</entry>
										</row>
										<row>
											<entry>BookingDate</entry>
											<entry>X</entry>
											<entry>X</entry>
											<entry>X</entry>
											<entry>X</entry>
											<entry>X</entry>
											<entry>X</entry>
										</row>
										<row>
											<entry>BookingDateOffset</entry>
											<entry>X</entry>
											<entry>X</entry>
											<entry>X</entry>
											<entry>X</entry>
											<entry>X</entry>
											<entry>X</entry>
										</row>
										<row>
											<entry>Weekdays</entry>
											<entry>X</entry>
											<entry>X</entry>
											<entry>X</entry>
											<entry>X</entry>
											<entry>X</entry>
											<entry>X</entry>
										</row>
										<row>
											<entry>PersonGroup</entry>
											<entry>X</entry>
											<entry>X</entry>
											<entry>X</entry>
											<entry>X</entry>
											<entry>X</entry>
											<entry>X</entry>
										</row>
										<row>
											<entry>Airports</entry>
											<entry>X</entry>
											<entry>X</entry>
											<entry>X</entry>
											<entry>X</entry>
											<entry>X</entry>
											<entry>X</entry>
										</row>
										<row>
											<entry>Keys</entry>
											<entry>X</entry>
											<entry>X</entry>
											<entry>X</entry>
											<entry>X</entry>
											<entry>X</entry>
											<entry>X</entry>
										</row>
										<row>
											<entry>Tags</entry>
											<entry>X</entry>
											<entry>X</entry>
											<entry>X</entry>
											<entry>X</entry>
											<entry>X</entry>
											<entry>X</entry>
										</row>
										<row>
											<entry>ConditionalTags</entry>
											<entry>-</entry>
											<entry>-</entry>
											<entry>X</entry>
											<entry>-</entry>
											<entry>-</entry>
											<entry>-</entry>
										</row>
										<row>
											<entry>MatchEqual.Tag</entry>
											<entry>X</entry>
											<entry>-</entry>
											<entry>-</entry>
											<entry>-</entry>
											<entry>-</entry>
											<entry>-</entry>
										</row>
										<row>
											<entry>MatchEqual.Element mit Airports</entry>
											<entry>X</entry>
											<entry>-</entry>
											<entry>-</entry>
											<entry>-</entry>
											<entry>-</entry>
											<entry>-</entry>
										</row>
										<row>
											<entry>DayImpact.Date</entry>
											<entry>-</entry>
											<entry>-</entry>
											<entry>X</entry>
											<entry>-</entry>
											<entry>-</entry>
											<entry>-</entry>
										</row>
										<row>
											<entry>DayImpact.DayIndex</entry>
											<entry>-</entry>
											<entry>-</entry>
											<entry>X</entry>
											<entry>-</entry>
											<entry>-</entry>
											<entry>-</entry>
										</row>
										<row>
											<entry>DayImpact.Weekdays</entry>
											<entry>-</entry>
											<entry>-</entry>
											<entry>X</entry>
											<entry>-</entry>
											<entry>-</entry>
											<entry>-</entry>
										</row>
										<row>
											<entry>DayImpact.DayPriceIndex</entry>
											<entry>-</entry>
											<entry>-</entry>
											<entry>X</entry>
											<entry>-</entry>
											<entry>-</entry>
											<entry>-</entry>
										</row>
										<row>
											<entry>PersonImpact.PersonAge</entry>
											<entry>-</entry>
											<entry>-</entry>
											<entry>X</entry>
											<entry>-</entry>
											<entry>X</entry>
											<entry>-</entry>
										</row>
										<row>
											<entry>PersonImpact.PersonIndex</entry>
											<entry>-</entry>
											<entry>-</entry>
											<entry>X</entry>
											<entry>-</entry>
											<entry>X</entry>
											<entry>-</entry>
										</row>
										<row>
											<entry>PersonImpact.PersonGender</entry>
											<entry>-</entry>
											<entry>-</entry>
											<entry>X</entry>
											<entry>-</entry>
											<entry>X</entry>
											<entry>-</entry>
										</row>
										<row>
											<entry>Impact.ConditionalTags</entry>
											<entry>-</entry>
											<entry>-</entry>
											<entry>X</entry>
											<entry>-</entry>
											<entry>X</entry>
											<entry>-</entry>
										</row>
										<row>
											<entry>ProductPrice</entry>
											<entry>-</entry>
											<entry>-</entry>
											<entry>X</entry>
											<entry>-</entry>
											<entry>-</entry>
											<entry>-</entry>
										</row>
									</tbody>
								</tgroup>
							</table>
						
					</section>
					<section xml:id="OtdsStrategyConditionBasicsMultiComponentAllocation">
						<title><phrase xml:id="de_841" xml:lang="de">Die Attribute "DayAllocation" und "EvaluationMode"</phrase><phrase xml:id="en_841" xml:lang="en">The "DayAllocation" and "EvaluationMode" attributes</phrase></title>
						<para xml:id="de_842" xml:lang="de">In Verbindung mit CombiComponents kann es zu Situationen kommen, bei denen in
							einem Produkt mehrere Komponenten des gleichen Typs existieren (z:B. mehrere
							Flüge). In diesen Fällen kann es sein, dass die Adressierung über das Attribut
							"Source" nicht eindeutig ist, sondern mehrere Knoten addressiert. Gibt es keine
							Attribute "DayAllocation" und EvaluationMode" so ist die Auswertung der Bedingung
							explizit im Verarbeitungsmodell vorgegeben. (Siehe auch im Kapitel
							"Verarbeitungsmodell" unter <link linkend="OtdsProcessConditionsSource">Source,
								DayAllocation und EvaluationMode</link>). In allen anderen Fällen werden für
							die Auswertung der Condition alle adressierten Knoten betrachtet. In den meisten
							Fällen werden die weiter unten definierten Defaultwerte für "DayAllocation" und
							"EvaluationMode" die Anforderungen erfüllen. In Einzelfällen kann es aber sein,
							dass man auf die Art der Auswertung Einfluss nehmen will. Die genaue Semantik der
							Auswertung definieren in diesen Fällen die Attribute "DayAllocation" und
							"EvaluationMode" . </para><para xml:id="en_842" xml:lang="en">Situations may arise in connection with CombiComponents, in which several components of the same type exist within a product (e.g. several flights). In these cases, it can occur that the address provided in the "Source" attribute is not unambiguous and that it addresses several nodes. If there are no "DayAllocation" and EvaluationMode" attributes, the evaluation of the condition is explicitly specified in the processing model. (See also the "Processing model" chapter under <link linkend="OtdsProcessConditionsSource">Source, DayAllocation and EvaluationMode</link>). In all other cases, all addressed nodes are taken into account when evaluating a condition. The default values for "DayAllocation" and "EvaluationMode" defined further down this page will meet the requirements in most cases. In certain cases however, it may be desirable to influence the type of evaluation. The exact semantics of the evaluation are defined in these cases by the attributes "DayAllocation" and "EvaluationMode".</para>
						<bridgehead xml:id="de_843" xml:lang="de">DayAllocation</bridgehead><bridgehead xml:id="en_843" xml:lang="en">DayAllocation</bridgehead>
						<para xml:id="de_844" xml:lang="de">"DayAllocation" definiert die Zuweisung im Falle, dass die Werte im Attribut
							"Source" auf mehrere Komponenten verweisen. Das kann zum Beispiel vorkommen, wenn
							man ein Produkt definiert, welches zusammengesetzte Flüge über CombiComponents
							verwenden soll. Die Addressierung über Source kann nur den Flug im Allgemeinen
							ansprechen. Der Flug besteht aber in dem Falle aus mehreren Einzelkomponenten. Die
							Adressierung über "Source" wäre nicht eindeutig möglich. Über "DayAllocation"
							definiert man in diesen Fällen eine zeitlich eindeutige Auswertung von
							Komponenten, die zeitlich aufeinander folgen.</para><para xml:id="en_844" xml:lang="en">"DayAllocation" defines the allocation in cases where the values in the attribute "Source" refer to several components. This can occur if a product is defined which is to use composite flights via CombiComponents, for example. Addressing via Source can only refer to the flight in general. The flight in this case consists of several individual components however. Addressing via "Source" would not be unambiguous. "DayAllocation" is used in these cases to define a temporally unambiguous evaluation of components which follow on from one another in chronological order.</para>
						<para xml:id="de_845" xml:lang="de">Mögliche Werte für das Attribut "DayAllocation" sind: </para><para xml:id="en_845" xml:lang="en">Possible values for the "DayAllocation" attribute are:</para>
						<itemizedlist>
							<listitem>
								<para xml:id="de_846" xml:lang="de">"First": Nur die zeitlich erste Komponente wird bzgl. der Bedingung
									ausgewertet. Die zeitliche Reihenfolge entspricht der Sortierung des
									Attributs "DayAllocationIndex" der entsprechenden Komponenten.</para><para xml:id="en_846" xml:lang="en">"First": Only the chronologically first component is evaluated according to the condition. The chronological sequence follows the order of the "DayAllocationIndex" attribute of the corresponding components.</para>
							</listitem>
							<listitem>
								<para xml:id="de_847" xml:lang="de">"Last": Nur die zeitlich letzte Komponente wird bzgl. der Bedingung
									ausgewertet. Die zeitliche Reihenfolge entspricht der Sortierung des
									Attributs "DayAllocationIndex" der entsprechenden Komponenten.</para><para xml:id="en_847" xml:lang="en">"Last": Only the chronologically last component is evaluated according to the condition. The chronological sequence follows the order of the "DayAllocationIndex" attribute of the corresponding components.</para>
							</listitem>
							<listitem>
								<para xml:id="de_848" xml:lang="de">"All": Alle Komponenten werden bzgl. der Bedingung ausgewertet. Die
									Bedingung ist nur erfüllt wenn alle Komponenten die Bedingung
									erfüllen.</para><para xml:id="en_848" xml:lang="en">"All": All components are evaluated according to the condition. The condition is only met if all components fulfil the condition.</para>
							</listitem>
						</itemizedlist>
						<para xml:id="de_752" xml:lang="de">
							Im Standdardfall ist das Attribut nicht gefüllt. Dabei werden
							Standards verwendet, die in der Regel die Anforderung an die Auswertung erfüllen
							und von der betrachteten Condition abhängen. </para><para xml:id="en_752" xml:lang="en">This attribute is empty in standard cases. Standards are used which generally meet the requirements for the evaluation and are dependent on the regarded condition.</para>
						<bridgehead xml:id="de_849" xml:lang="de">EvaluationMode</bridgehead><bridgehead xml:id="en_849" xml:lang="en">EvaluationMode</bridgehead>
						<para xml:id="de_850" xml:lang="de">EvaluationMode definiert die Interpretation der Auswertung im Falle, dass die
							Werte im Attribut "Source" auch nach Auswertung der DayAllocation auf mehrere
							Komponenten verweisen. Das kann passieren, wenn gleiche Komponenten zur gleichen
							Zeit stattfinden also eine Überschneidung in der DayAllocation haben. Beispiel
							sind hier Addons, die sich zeitlich überschneiden können.</para><para xml:id="en_850" xml:lang="en">EvaluationMode defines the interpretation of the evaluation in a case where the values in the attribute "Source" refer to several components even after the DayAllocation has been evaluated. This can happen if the same components take place at the same time and thus overlap in DayAllocation. An example of this would be Addons, which can overlap with each other temporally.</para>
						<para xml:id="de_851" xml:lang="de">Mögliche Werte für das Attribut "EvaluationMode" sind:  </para><para xml:id="en_851" xml:lang="en">Possible values for the "EvaluationMode" attribute are:</para>
							
						<itemizedlist>
							<listitem>
								<para xml:id="de_852" xml:lang="de">"Any": Nur eine Komponente muss die Bedingung erfüllen.</para><para xml:id="en_852" xml:lang="en">"Any": Only one component must meet the condition.</para>
							</listitem>
							<listitem>
								<para xml:id="de_853" xml:lang="de">"All": Alle Komponenten müssen die Bedingung erfüllen.</para><para xml:id="en_853" xml:lang="en">"All": All components must meet the condition.</para>
							</listitem>
						</itemizedlist>
						<para xml:id="det_4952" xml:lang="de">
							Im Standdardfall ist das Attribut nicht gefüllt. Dabei werden
							Standards verwendet, die in der Regel die Anforderung an die Auswertung erfüllen
							und von der betrachteten Condition abhängen. </para>
						<para xml:id="de_854" xml:lang="de">Bei allen folgenden Conditions wird als Default "Last" verwendet:</para><para xml:id="en_854" xml:lang="en">"Last" is used as the default for all of the following conditions:</para>
						<para xml:id="de_855" xml:lang="de">- Alle Conditions in Verbindung mit dem DayType="CheckOut" </para><para xml:id="en_855" xml:lang="en">- All conditions in connection with the DayType="CheckOut"</para>
						<para xml:id="de_856" xml:lang="de">- MatchEqual mit &lt;Element&gt;ArrivalDate&lt;/Element&gt;</para><para xml:id="en_856" xml:lang="en">- MatchEqual with &lt;Element&gt;ArrivalDate&lt;/Element&gt;</para>
						<para xml:id="de_857" xml:lang="de"> MatchEqual mit &lt;Element&gt;ArrivalAirport&lt;/Element&gt; </para><para xml:id="en_857" xml:lang="en">MatchEqual with &lt;Element&gt;ArrivalAirport&lt;/Element&gt;</para>
						<para xml:id="de_858" xml:lang="de">Bei allen anderen Bedingungen wird als Default "First" verwendet. </para><para xml:id="en_858" xml:lang="en">For all other conditions, "First" is used as the default.</para>
						<para xml:id="de_859" xml:lang="de">(siehe <link linkend="OtdsStrategyRules">Regelwerke (Rules)</link> )</para><para xml:id="en_859" xml:lang="en">(See <link linkend="OtdsStrategyRules">Rule sets (Rules)</link> )</para>
					</section>
				</section>
				<section xml:id="OtdsStrategyConditionTypes">
					<title><phrase xml:id="de_860" xml:lang="de">Welche Arten von Bedingungen gibt es in OTDS?</phrase><phrase xml:id="en_860" xml:lang="en">What types of conditions are there in OTDS?</phrase></title>
					<section xml:id="OtdsStrategyConditionImpact">
						<title><phrase xml:id="de_861" xml:lang="de">Was sind Impact-Bedingungen?</phrase><phrase xml:id="en_861" xml:lang="en">What are Impact conditions?</phrase></title>
						<para xml:id="de_862" xml:lang="de">Eine sehr wichtige Rolle spielen Conditions innerhalb der Preisberechnung. In
							der Preisberechnung unterscheiden wir zwischen zwei Arten von Conditions. Es gibt
							die "normalen" Conditions, die ausdrücken, ob ein komplettes PriceItem angewendet
							wird oder nicht. Und es gibt Conditions die zusätzlich angeben, für welche
							Personen oder welche Tage ein Preis gültig ist. Da diese Bedingungen die
							Auswirkung der Preise beeinflussen, werden diese Bedingungen "Impact"-Bedingungen
							genannt. Wenn also die "normale" Bedingung beschreibt, dass ein Zuschlag gilt,
							wenn ein bestimmter Termin in einer Reise enthalten ist, dann beschreibt zum
							Beispiel eine entsprechene "Impact"-Bedingung, dass der Zuschlag nur für genau
							diesen Termin gilt. Innerhalb der Impact-Bedingungen unterscheiden wir nochmal, ob
							die Bedingungen sich auf die Tage (DayImpact), auf die Personen (PersonImpact)
							oder auf eine Kobination von Tagen/Personen auswirken. Um die ImpactConditions von
							den normalen Conditions klar zu unterscheiden, sind die entsprechenden Bedingungen
							jeweils durch die Elemente "PersonImpact", "DayImpact" und "Impact" geklammert. </para><para xml:id="en_862" xml:lang="en">Conditions play a very important role within price calculation. In price calculation, we differentiate between two different types of conditions. There are "normal" conditions which express whether or not a complete PriceItem is used. There are also conditions which additionally specify for which persons or for which days a price is valid. As these conditions influence the impact of the prices, they are called "Impact" conditions. If the "normal" condition describes that a surcharge applies if a certain date is included in a trip, then a corresponding "Impact" condition will describe that the surcharge is only valid for this particular date. Within the Impact conditions, we can also specify whether the conditions have an impact on the days (DayImpact) or on the persons (PersonImpact) or on a combination of days/persons. In order to be able to clearly differentiate between the ImpactConditions and the normal conditions, the elements "PersonImpact", "DayImpact" and "Impact" are attached to the corresponding conditions.</para>
						<para xml:id="de_863" xml:lang="de">Weitere Informationen finden Sie in der <link xlink:href="./technisch/otds_technisch.html#Impact">Technischen Dokumentation
								für OTDS </link>.</para><para xml:id="en_863" xml:lang="en">Additional information can be found in the <link xlink:href="./technisch/otds_technisch.html#Impact">Technical documentation for OTDS</link> .</para>
					</section>
					<section xml:id="OtdsStrategyConditionTypeStandard">
						<title><phrase xml:id="de_864" xml:lang="de">"Normale" Bedingungen (Nicht-Impact-Bedingungen)</phrase><phrase xml:id="en_864" xml:lang="en">"Normal" conditions (non-impact conditions)</phrase></title>
						<section xml:id="OtdsStrategyConditionDate">
							<title><phrase xml:id="de_865" xml:lang="de">Datum (Date)</phrase><phrase xml:id="en_865" xml:lang="en">Date (Date)</phrase></title>
							<figure>
								<title><phrase xml:id="de_866" xml:lang="de">Date</phrase><phrase xml:id="en_866" xml:lang="en">Date</phrase></title>
								<mediaobject>
									<imageobject>
										<imagedata fileref="figures/condition-date.png" format="PNG" contentwidth="50%"/>
									</imageobject>
									<textobject>
										<para xml:id="de_867" xml:lang="de">Date</para><para xml:id="en_867" xml:lang="en">Date</para>
									</textobject>
									<caption>
										<para xml:id="de_868" xml:lang="de"> </para><para xml:id="en_868" xml:lang="en"/>
									</caption>
								</mediaobject>
							</figure>
							<para xml:id="de_869" xml:lang="de">Das Element "Date" definiert die Bedingung, ob bestimmte Termine in der
								gerade betrachteten Reise enthalten sind. Es kann ein Datumsintervall
								angegeben werden oder eine Liste von Einzelterminen. Die Bedingung gilt als
								erfüllt, wenn ein Termin entsprechend der Bedingungen enthalten ist. Über das
								Attribut "DayType" muss zusätzlich definiert werden, welche Tage der Reise
								betrachtet werden (z.B.: nur der Anreisetag oder nur Aufenthaltstage). Über
								das Attribut "Source" wird der Kontext der betrachteten Reisetermine bestimmt
								(z.B.: Termine der Gesamtreise, des Hotels oder des Fluges). </para><para xml:id="en_869" xml:lang="en">The element "Date" defines the condition of whether specific dates are included in the currently regarded trip. Either a range of dates or a list of individual dates can be entered. The condition is considered to be met if one date is contained which fulfils the conditions. Via the attribute "DayType", it must also be defined which days of the trip are to be regarded (e.g. only the day of arrival or only the days of the stay). Via the attribute "Source" the context of the regarded travel dates is determined (e.g. dates of the entire trip, the hotel or the flight).</para>
							<para xml:id="de_870" xml:lang="de">Das folgende Beispiel zeigt eine Date-Condition:</para><para xml:id="en_870" xml:lang="en">The following example shows a Date condition:</para>
							<programlisting><![CDATA[<Condition>
 	 <DateType="Stay" Source="Accommodation">
    		<Min>2011-04-15</Min>
    		<Max>2011-05-27</Max>
  	</Date>
 </Condition>]]></programlisting>
							<para xml:id="de_871" xml:lang="de">Diese Bedingung überprüft, ob einer der Aufenthaltstage (DateType="Stay") im
								Hotel (Source="Accommodation") in dem Zeitraum zwischen 15.04.2011 und
								27.05.2011 enthalten ist. Um die Bedingung zu erfüllen, reicht es also, wenn
								ein Tag diese Bedingung erfüllt.</para><para xml:id="en_871" xml:lang="en">This condition checks whether one of the days of the stay (DateType="Stay") in the hotel (Source="Accommodation") is included in the period 15.04.2011 to 27.05.2011. To meet this condition, it therefore suffices if one day fulfils this condition.</para>
							<para xml:id="de_872" xml:lang="de">Diese Bedingung überprüft ausdrücklich nicht, ob bestimmte Tage einer Reise
								eine Terminbedingung erfüllen und deshalb Preise explizit für diese Tage
								gelten. Dies wird nur durch eine entsprechende DayImpact Bedingung
								erfüllt.</para><para xml:id="en_872" xml:lang="en">This condition explicitly does not check whether or not certain days of a trip fulfil a date condition, and therefore whether the prices are valid explicitly for these days. This is only fulfilled by a corresponding DayImpact condition.</para>
							<para xml:id="de_873" xml:lang="de">Weitere Informationen finden Sie in der <link xlink:href="./technisch/otds_technisch.html#Date">Technischen
									Dokumentation für OTDS </link>.</para><para xml:id="en_873" xml:lang="en">Additional information can be found in the <link xlink:href="./technisch/otds_technisch.html#Date">Technical documentation for OTDS</link> .</para>
						</section>
						<section xml:id="OtdsStrategyConditionWeekdays">
							<title><phrase xml:id="de_874" xml:lang="de">Wochentage (Weekdays)</phrase><phrase xml:id="en_874" xml:lang="en">Weekdays (Weekdays)</phrase></title>
							<figure>
								<title><phrase xml:id="de_875" xml:lang="de">Weekdays</phrase><phrase xml:id="en_875" xml:lang="en">Weekdays</phrase></title>
								<mediaobject>
									<imageobject>
										<imagedata fileref="figures/condition-weekdays.png" format="PNG" contentwidth="50%"/>
									</imageobject>
									<textobject>
										<para xml:id="de_876" xml:lang="de">Weekdays</para><para xml:id="en_876" xml:lang="en">Weekdays</para>
									</textobject>
									<caption>
										<para xml:id="de_877" xml:lang="de"> </para><para xml:id="en_877" xml:lang="en"/>
									</caption>
								</mediaobject>
							</figure>
							<para xml:id="de_878" xml:lang="de">Das Element "Weekdays" definiert die Bedingung, ob ein bestimmter Wochentag in der
								gerade betrachteten Reise enthalten ist. Die Bedingung gilt als
								erfüllt, wenn einer der angegebenen Wochentage in der betrachteten
								Reise enthalten ist. Dabei muss über das Attribut "DayType"
								zusätzlich bestimmt werden, dass nur bestimmte Tage der Reise
								betrachtet werden sollen (z.B.: nur der Anreisetag oder nur
								Aufenthaltstage). Das Element Weekdays kann mehrere Wochentage
								enthalten. Die Bedingung ist erfüllt, wenn einer der angegebenen
								Tage die Bedingung erfüllt (es handelt sich also um eine implizite
								"OR-Verknüpfung"). Über das Attribut "Source" wird der Kontext der
								betrachteten Reisetage bestimmt (z.B.: Termine im Hotel, des Fluges
								oder der kompletten Reise).</para><para xml:id="en_878" xml:lang="en">The element "Weekdays" defines the condition of whether a specific weekday is included in the currently viewed trip. The condition is considered to be fulfilled if the trip being currently regarded contains the weekday specified. It must also be specified via the attribute "DayType" that only certain days of the trip should be considered (e.g. only the day of arrival or only the days of the stay). The element Weekdays can contain more than one weekday. The condition is fulfilled if one of the specified days fulfils the condition (it therefore concerns an implicit "OR connective"). The context of the viewed days of the trip is determined via the attribute "Source" (e.g. dates at the hotel, of the flight or of the entire trip).</para>
							<para xml:id="de_879" xml:lang="de">Das folgende Beispiel zeigt eine Weekdays-Condition, die gültig ist, wenn
								der erste Tag (DayType=CheckIn) in der Unterkunft (Source=Accommodation) auf
								die beiden Wochentage "Montag" und "Dienstag" fällt.</para><para xml:id="en_879" xml:lang="en">The following example shows a Weekdays condition which is valid if the first day (DayType=CheckIn) at the accommodation (Source=Accommodation) occurs on the two weekdays "Monday" and "Tuesday".</para>
							<programlisting><![CDATA[<Condition>
 	<Weekdays Type="CheckIn" Source="Accommodation">Mon Tue</Weekdays>
</Condition>]]></programlisting>
							<para xml:id="de_880" xml:lang="de"><emphasis role="bold">Bitte beachten:</emphasis> Im Gegensatz zu
								den anderen Conditions ist im Falle der Weekdays-Condition der
								Default für "DayType" auf den Wert "CheckIn" gesetzt. Ist der
								DayType also nicht angegeben wird der DayType="CheckIn"
								vorausgesetzt.</para><para xml:id="en_880" xml:lang="en">
								<emphasis role="bold">Please note:</emphasis> In contrast to the other conditions, in the case of the Weekdays condition the default setting for "DayType" is the value "CheckIn". If the DayType is not specified, DayType="CheckIn" is therefore presupposed.</para>
							<para xml:id="de_881" xml:lang="de">Bei anderen Conditions ist der entsprechende Defaultwert="Stay". </para><para xml:id="en_881" xml:lang="en">For other conditions the corresponding default value="Stay".</para>
							<para xml:id="de_882" xml:lang="de">Weitere Informationen finden Sie in der <link xlink:href="./technisch/otds_technisch.html#Weekdays">Technischen
									Dokumentation für OTDS </link>.</para><para xml:id="en_882" xml:lang="en">Additional information can be found in the <link xlink:href="./technisch/otds_technisch.html#Weekdays">Technical documentation for OTDS</link> .</para>
						</section>
						<section xml:id="OtdsStrategyConditionDuration">
							<title><phrase xml:id="de_883" xml:lang="de">Dauer (Duration)</phrase><phrase xml:id="en_883" xml:lang="en">Duration (Duration)</phrase></title>
							<figure>
								<title><phrase xml:id="de_884" xml:lang="de">Condition &gt; Duration</phrase><phrase xml:id="en_884" xml:lang="en">Condition &gt; Duration</phrase></title>
								<mediaobject>
									<imageobject>
										<imagedata fileref="figures/condition-duration.png" format="PNG" contentwidth="50%"/>
									</imageobject>
									<textobject>
										<para xml:id="de_885" xml:lang="de">Duration</para><para xml:id="en_885" xml:lang="en">Duration</para>
									</textobject>
									<caption>
										<para xml:id="de_886" xml:lang="de"> </para><para xml:id="en_886" xml:lang="en"/>
									</caption>
								</mediaobject>
							</figure>
							<para xml:id="de_887" xml:lang="de">Das Element "Duration" definiert die Bedingung, ob die gerade betrachtete
								Reisedauer in einer Liste von Dauern enthalten ist. Dabei können erlaubte
								Reisedauern explizit angegeben werden oder Einschränkungen für gültigen
								Reisedauern angegeben werden (minimale bzw. maximale gültige Reisedauer).
								Ebenso ist es möglich, erlaubte Reisedauern über Schrittweiten anzugeben, z.B.
								das Vielfache von 7 Tagen. Über das Attribut "Source" wird der betrachtete
								Kontext (Reise, Accommodation, etc.) näher bestimmt. Bei den Dauern ist die
								nähere Bestimmung des Kontextes dann entscheidend, wenn es um Pauschalangebote
								bei Fernreisen geht. Dann kann die Dauer der Unterkunft von der Dauer der
								Reise abweichen, wenn Übernachtflüge benutzt werden. Die Bedingung kann
								minimale, maximale und auch einzelne Dauern enthalten. Außerdem kann die Dauer
								in unterschiedlichen Einheiten (Nächten, Stunden, Minuten) gelieferten werden
								(Siehe Attribut "DurationUnit").</para><para xml:id="en_887" xml:lang="en">The element "Duration" defines the condition of whether the currently viewed trip duration is included in a list of durations. Permitted durations can be explicitly entered, or restrictions for valid durations (minimum or maximum valid duration) can be provided. It is also possible to enter durations in increments, e.g. in multiples of 7 days. The regarded context (travel, accommodation, etc.) is more closely defined via the attribute "Source". For durations, a more precise definition of the context is crucial if it concerns package offers for long-distance trips. This is because the duration of the accommodation may differ from the duration of the trip if overnight flights are taken. The condition can contain minimum, maximum and also individual durations. The duration can also be delivered in different units (nights, hours, minutes). See the attribute "DurationUnit".</para>
							<para xml:id="de_888" xml:lang="de">Es folgen zwei Beispiele für Duration-Conditions:</para><para xml:id="en_888" xml:lang="en">The following are two examples of Duration conditions:</para>
							<programlisting><![CDATA[
<Condition>
 	<Duration Source="Accommodation">
    	<Durations>3 5</Durations>
  	</Duration>
 </Condition>]]></programlisting>
							<para xml:id="de_889" xml:lang="de">Diese Condition ist gültig bei 3 oder 5 Aufenthalttagen in der
								Unterbringung.</para><para xml:id="en_889" xml:lang="en">This condition is valid for 3 or 5-day stays in the accommodation.</para>
							<programlisting><![CDATA[<Condition>
 	<Duration Source="Product">
     	<Min>7</Min>
  	</Duration>
</Condition>]]></programlisting>
							<para xml:id="de_890" xml:lang="de">Diese Condition ist gültig wenn die Gesamtreise (Source=Product) mindestens
								7 Aufenthaltstage hat.</para><para xml:id="en_890" xml:lang="en">This condition is valid if the entire trip (Source=Product) consists of at least 7 days.</para>
							<para xml:id="de_891" xml:lang="de">Weitere Informationen finden Sie in der <link xlink:href="./technisch/otds_technisch.html#Duration">Technischen
									Dokumentation für OTDS </link>.</para><para xml:id="en_891" xml:lang="en">Please obtain further information from the <link xlink:href="./technisch/otds_technisch.html#Duration">Technical documentation for OTDS</link> .</para>

						</section>
						<section xml:id="OtdsStrategyConditionBookingDate">
							<title><phrase xml:id="de_892" xml:lang="de">Buchungsdatum (BookingDate)</phrase><phrase xml:id="en_892" xml:lang="en">BookingDate</phrase></title>
							<para xml:id="de_893" xml:lang="de">Das Element "BookingDate" definiert die Bedingung, ob sich das Buchungsdatum
								(bzw. das Datum zum Zeitpunkt der Preisanfrage) innerhalb einer bestimmten
								Terminspanne befindet oder in einer explizit angegebenen Liste von Tagen
								enthalten ist.</para><para xml:id="en_893" xml:lang="en">The element "BookingDate" defines the condition of whether the booking date (or the date of the price inquiry) is included within a specific timespan or in an explicitly stated list of days.</para>
							<para xml:id="de_894" xml:lang="de">Diese Bedingung kennt in Version 1.0 nur den Kontext der Gesamtreise. Source
								ist also immer "Product".</para><para xml:id="en_894" xml:lang="en">In version 1.0 this condition only knows the context of the entire trip. Source is therefore always "Product".</para>
							<para xml:id="de_895" xml:lang="de">Das folgende Beispiel zeigt eine BookingDate-Condition, die gültig ist, wenn
								der Buchungszeitpunkt im Zeitraum zwischen 01.10.2011 und 31.12.2011
								liegt.</para><para xml:id="en_895" xml:lang="en">The following example shows a BookingDate condition, which is valid if the time of booking falls in the period 01.10.2011 to 31.12.2011.</para>
							<programlisting><![CDATA[<Condition>
 	<BookingDate Source="Product">
		<Min>2011-12-29</Min>
		<Max>2011-12-31</Max>
 	</BookingDate>
</Condition>]]></programlisting>
							<para xml:id="de_896" xml:lang="de">Weitere Informationen finden Sie in der <link xlink:href="./technisch/otds_technisch.html#BookingDate">Technischen
									Dokumentation für OTDS </link>.</para><para xml:id="en_896" xml:lang="en">Please obtain further information from the <link xlink:href="./technisch/otds_technisch.html#BookingDate">Technical documentation for OTDS</link> .</para>
						</section>
						<section xml:id="OtdsStrategyConditionBookingDateOffset">
							<title><phrase xml:id="de_897" xml:lang="de">Buchungsdatum (BookingDateOffset)</phrase><phrase xml:id="en_897" xml:lang="en">BookingDateOffset</phrase></title>
							<figure>
								<title><phrase xml:id="de_898" xml:lang="de">BookingDateOffset</phrase><phrase xml:id="en_898" xml:lang="en">BookingDateOffset</phrase></title>
								<mediaobject>
									<imageobject>
										<imagedata fileref="figures/condition-bookingdateoffset.png" format="PNG" contentwidth="50%"/>
									</imageobject>
									<textobject>
										<para xml:id="de_899" xml:lang="de">BookingDateOffset</para><para xml:id="en_899" xml:lang="en">BookingDateOffset</para>
									</textobject>
									<caption>
										<para xml:id="de_900" xml:lang="de"> </para><para xml:id="en_900" xml:lang="en"/>
									</caption>
								</mediaobject>
							</figure>
							<para xml:id="de_901" xml:lang="de">Das Element "BookingDateOffset" definiert die Bedingung, ob sich das
								Buchungsdatum (bzw. das Datum zum Zeitpunkt der Preisanfrage) innerhalb eines
								bestimmten Zeitraums vor Reiseantritt befindet.</para><para xml:id="en_901" xml:lang="en">The element "BookingDateOffset" defines the condition of whether the booking date (or the date of the price inquiry) lies within a specific timespan before the start of the trip.</para>
							<para xml:id="de_902" xml:lang="de">Das folgende Beispiel zeigt eine BookingDateOffset-Condition, die gültig ist
								wenn der Buchungszeitpunkt mindestens 60 Tage vor Reiseantritt liegt.</para><para xml:id="en_902" xml:lang="en">The following example shows a BookingDateOffset condition, which is valid if the time of booking is at least 60 days before the start of the trip.</para>
							<programlisting><![CDATA[<Condition>
 	<BookingDateOffset Source="Product">
		 <Min>60</Min>
 	</BookingDateOffset>
</Condition>]]></programlisting>
							<para xml:id="de_903" xml:lang="de">Weitere Informationen finden Sie in der <link xlink:href="./technisch/otds_technisch.html#BookingDateOffset">Technischen
									Dokumentation für OTDS </link>.</para><para xml:id="en_903" xml:lang="en">Please obtain further information from the <link xlink:href="./technisch/otds_technisch.html#BookingDateOffset">Technical documentation for OTDS</link> .</para>
						</section>
						<section xml:id="OtdsStrategyConditionOccupancy">
							<title><phrase xml:id="de_904" xml:lang="de">Belegungen (PersonGroup)</phrase><phrase xml:id="en_904" xml:lang="en">PersonGroup</phrase></title>
							<figure>
								<title><phrase xml:id="de_905" xml:lang="de">PersonGroup</phrase><phrase xml:id="en_905" xml:lang="en">PersonGroup</phrase></title>
								<mediaobject>
									<imageobject>
										<imagedata fileref="figures/condition-persongroup.png" format="PNG" contentwidth="60%"/>
									</imageobject>
									<textobject>
										<para xml:id="de_906" xml:lang="de">PersonGroup</para><para xml:id="en_906" xml:lang="en">PersonGroup</para>
									</textobject>
									<caption>
										<para xml:id="de_907" xml:lang="de"> </para><para xml:id="en_907" xml:lang="en"/>
									</caption>
								</mediaobject>
							</figure>
							<para xml:id="de_908" xml:lang="de"> </para><para xml:id="en_908" xml:lang="en"/>
							<para xml:id="de_909" xml:lang="de">Das Element "PersonGroup" stellt eine Bedingung an die Personen der Reise.
								Diese Bedingung ist erfüllt, wenn die in der Bedingung definierten Personen in
								der Reise enthalten sind.</para><para xml:id="en_909" xml:lang="en">The element "PersonGroup" places a condition on the persons included in the trip. This condition is fulfilled if the persons defined in the condition are included in the trip.</para>
							<para xml:id="de_910" xml:lang="de">Die Eigenschaften einer Person bzw. auch mehrere Personen mit gleichen
								Eigenschaften werden beispielsweise durch folgendes Element definiert: <programlisting><![CDATA[<Person>
 	<MinAge>2</MinAge>
 	<MaxAge>14</MaxAge>
 	<Count>2</Count>
</Person>]]></programlisting></para><para xml:id="en_910" xml:lang="en">The properties of a person or more than one person with the same properties are, for example, defined by the following element: <programlisting>
									<![CDATA[<Person>
 	<MinAge>2</MinAge>
 	<MaxAge>14</MaxAge>
 	<Count>2</Count>
</Person>]]></programlisting>
							</para>
							<para xml:id="de_911" xml:lang="de">In diesem Fall geht es um 2 Personen im Alter von 2 - 14 Jahren. </para><para xml:id="en_911" xml:lang="en">In this case it concerns 2 persons aged 2 - 14 years.</para>
							<para xml:id="de_912" xml:lang="de">Für jede Person kann separat ein Alter (MinAge / MaxAge) angegeben werden.
								Als abkürzende Schreibweise können mehrere Personen durch die Angabe einer
								Anzahl (Count / MinCount / MaxCount) zusammengefasst werden, sofern die
								Eigenschaften der Personen gleich sind. Durch Angabe von MinCount=0 lassen
								sich Personen als optional definieren. </para><para xml:id="en_912" xml:lang="en">For each person a separate age (MinAge / MaxAge) can be entered. As an abbreviation more than one person can be entered as a number (Count / MinCount / MaxCount), as long as the attributes of the persons are the same. By entering MinCount=0 persons can be defined as optional.</para>
							<para xml:id="de_913" xml:lang="de">Eine PersonGroup-Condition kann mehrere dieser Person-Definitionen
								enthalten. Die Reihenfolge der "Person"-Elemente in der Condition ist
								entscheidend und entspricht der Reihenfolge der Reisenden, die dem Alter nach
								absteigend sortiert sind. Die PersonGroup-Condition ist dann gültig, wenn
								unter Berücksichtigung der Reihenfolge jede Personen-Bedingung durch genau
								einen Mitreisenden erfüllt ist. </para><para xml:id="en_913" xml:lang="en">A PersonGroup condition can contain several of these person definitions. The order of the "Person" elements in the condition is decisive and corresponds to the order of the travellers according to age in descending order. The PersonGroup condition is only valid if, in correspondence with the order, each Person condition is fulfilled by exactly one traveller.</para>
							<para xml:id="de_914" xml:lang="de">Im Gegensatz zur Definition der Occupancy in SellingUnit geht es hier um
								eine Bedingung an eine Teilgruppe der Mitreisenden. Dementsprechend können
								auch einzelne Mitreisende von der Bedingung unberücksichtigt bleiben. Dazu
								werden vor Auswertung derr Bedingung die betrachteten Personen aufgrund der in
								der Bedingung angegebenen Altersangaben eingeschränkt.</para><para xml:id="en_914" xml:lang="en">Contrary to the definition of the Occupancy in SellingUnit, here it concerns a condition for a subgroup of the travellers. Accordingly, individual travellers can also be left out of consideration from the condition. In addition, before the evaluation of the condition the concerned persons are restricted due to the ages entered into the condition.</para>
							<para xml:id="de_915" xml:lang="de">Das folgende Beispiel zeigt eine PersonGroup-Condition: Die Belegung muss
								entsprechend 2 Personen mit mindestens 18 Jahren enthalten und eine weitere
								Person im Alter zwischen 2 und 14 Jahren.</para><para xml:id="en_915" xml:lang="en">The following example shows a PersonGroup condition: An occupancy must contain 2 persons of at least 18 years and one additional person aged between 2 and 14 years.</para>
							<programlisting><![CDATA[
<Condition>
	<PersonGroup Source="Product">
		<Person>
	      	<MinAge>18</MinAge>
	      	<Count>2</Count>
		</Person>
		<Person>
			<MinAge>2</MinAge>
			<MaxAge>14</MaxAge>
			<Count>1</Count>
	    </Person>
	</PersonGroup>
 </Condition>
 ]]></programlisting>
							<para xml:id="de_916" xml:lang="de">Eine Belegung von 45,40,15,12 (Altersangaben) erfüllt dies Bedingung. In
								diesem Falle wird vor der Auswertung der Person-Elemente die Belegung auf die
								betrachteten Personen reduziert. Es werden also alle Personen gar nicht in
								Betracht gezogen, die weder zwischen 2 und 14 Jahren alt sind noch jünger 18
								Jahren.</para><para xml:id="en_916" xml:lang="en">An occupancy of 45, 40, 15, 12 (years of age) would fulfil this condition. In this case, before the evaluation of the person elements, the occupancy is reduced to the persons concerned. This means that all persons are disregarded who are neither aged between 2 and 14 years, nor are 18 years or above.</para>
							<para xml:id="de_917" xml:lang="de">Die PersonGroup-Bedingung betrachtet immer ob eine Personengruppe in der
								betrachteten Belgeung enthalten ist. Diese Bedingung überprüft ausdrücklich
								nicht, ob bestimmte Personen Bedingungen erfüllen und deshalb ggf. Preise
								explizit für diese Personen gelten. Dies wird nur durch die entsprechende
								PersonImpact Bedingung erfüllt.</para><para xml:id="en_917" xml:lang="en">The PersonGroup condition always looks at whether a person group is contained in the related occupancy. This condition expressly does not examine whether specific persons fulfil conditions and therefore whether or not prices apply specifically for these persons. This is only fulfilled through the relevant PersonImpact condition.</para>
							<para xml:id="de_918" xml:lang="de">Weitere Informationen finden Sie in der <link xlink:href="./technisch/otds_technisch.html#PersonGroup">Technischen
									Dokumentation für OTDS </link>.</para><para xml:id="en_918" xml:lang="en">Please obtain further information from the <link xlink:href="./technisch/otds_technisch.html#PersonGroup">Technical documentation for OTDS</link> .</para>
						</section>
						<section xml:id="OtdsStrategyConditionAirport">
							<title><phrase xml:id="de_919" xml:lang="de">Flughafen (Airports)</phrase><phrase xml:id="en_919" xml:lang="en">Airports</phrase></title>
							<figure>
								<title><phrase xml:id="de_920" xml:lang="de">Airports</phrase><phrase xml:id="en_920" xml:lang="en">Airports</phrase></title>
								<mediaobject>
									<imageobject>
										<imagedata fileref="figures/condition-airports.png" format="PNG" contentwidth="50%"/>
									</imageobject>
									<textobject>
										<para xml:id="de_921" xml:lang="de">Airports</para><para xml:id="en_921" xml:lang="en">Airports</para>
									</textobject>
									<caption>
										<para xml:id="de_922" xml:lang="de"> </para><para xml:id="en_922" xml:lang="en"/>
									</caption>
								</mediaobject>
							</figure>
							<para xml:id="de_923" xml:lang="de"> </para><para xml:id="en_923" xml:lang="en"/>
							<para xml:id="de_924" xml:lang="de">Das Element "Airports" definiert die Bedingung, ob der einer Komponente
								zugeordnete Flughafen mit einem der in dieser Bedingung angegebenen Flughäfen
								übereinstimmt. Es können mehrere Flughäfen in einer durch Space getrennten
								Liste angegeben werden. Die Angabe der Airports erfolgt im Iata-Format. Die
								betrachtete Komponente wird über den Inhalt des Attributs "Source" definiert.
								Das Attribut "AirportType" gibt an, ob es sich bei dem Airport um einen
								DepartureAirport, einen ArrivalAirport oder einen CatchmentAirport handelt.
								Für Source="Outbound"/"Inbound" stehen nur "DepartureAirport und
								ArrivalAirport zur Verfügung. Für Bedingungen mit Source="Addon" oder
								"Accommodation" steht nur "CatchmentAirport" zur Verfügung.</para><para xml:id="en_924" xml:lang="en">The element "Airports" defines the condition of whether an airport which has been assigned to a component matches the airport specified in this condition. Several airports can be specified in a list separated by a space. The airports are named using the IATA format. The components regarded are defined by the contents of the attribute "Source". The attribute "AirportType" indicates whether the airport is a "DepartureAirport", an "ArrivalAirport" or a "CatchmentAirport". For Source="Outbound"/"Inbound", only the options "DepartureAirport" and "ArrivalAirport" are available. For conditions with Source="Addon" or "Accommodation" only the option "CatchmentAirport" is available.</para>
							<para xml:id="de_925" xml:lang="de">Das folgende Beispiel zeigt eine Airports-Condition:</para><para xml:id="en_925" xml:lang="en">The following example shows an Airports condition:</para>
							<programlisting><![CDATA[<Condition>
	<Airports Source="ReturnFlight.Inbound" AirportType="Arrival">TFN TFS</Airports>
</Condition>]]></programlisting>
							<para xml:id="de_926" xml:lang="de">Weitere Informationen finden Sie in der <link xlink:href="./technisch/otds_technisch.html#Airports">Technischen
									Dokumentation für OTDS </link>.</para><para xml:id="en_926" xml:lang="en">Please obtain further information from the <link xlink:href="./technisch/otds_technisch.html#Airports">Technical documentation for OTDS</link> .</para>
						</section>
						<section xml:id="OtdsStrategyConditionKey">
							<title><phrase xml:id="de_927" xml:lang="de">Knotenreferenzen (Keys) wie z.B. Marke, Unterkunft, Verpflegung,
								BookingClass </phrase><phrase xml:id="en_927" xml:lang="en">Node references (Keys) such as Brand, Accommodation, Board, BookingClass</phrase></title>
							<figure>
								<title><phrase xml:id="de_928" xml:lang="de">Keys</phrase><phrase xml:id="en_928" xml:lang="en">Keys</phrase></title>
								<mediaobject>
									<imageobject>
										<imagedata fileref="figures/condition-keys.png" format="PNG" contentwidth="50%"/>
									</imageobject>
									<textobject>
										<para xml:id="de_929" xml:lang="de">Keys</para><para xml:id="en_929" xml:lang="en">Keys</para>
									</textobject>
									<caption>
										<para xml:id="de_930" xml:lang="de"> </para><para xml:id="en_930" xml:lang="en"/>
									</caption>
								</mediaobject>
							</figure>
							<para xml:id="de_931" xml:lang="de">Das Element "Keys" definiert die Bedingung, ob an einer über Source
								adressierten Komponente/Unterkomponente das Attribut "Key" mit einem
								bestimmten Wert enthalten ist. Es kann eine Liste von Keys angegeben werden.
								Die Bedingung ist erfüllt, wenn einer der angegebenen Keys mit dem Wert des
								durch Source adressierten Knotens übereinstimmt. </para><para xml:id="en_931" xml:lang="en">The element "Keys" defines the condition of whether, for a component/subcomponent addressed by Source, the attribute "Key" has a specific value. A list of Keys can be specified. The condition is fulfilled if one of the specified Keys matches the value of the node addressed by Source.</para>
							<para xml:id="de_932" xml:lang="de">Das folgende Beispiel zeigt 4 Keys-Conditions, die jeweils Keys des
								Veranstalters, der Unterkunft, des Zimmers und der Verpflegung
								überprüfen.</para><para xml:id="en_932" xml:lang="en">The following example shows 4 Keys conditions, which evaluate Keys of the tour operator, the accommodation, the room and the board respectively.</para>
							<programlisting><![CDATA[<Condition>
  <And>
    <Keys Source="Brand">ITS JAHN</Keys>
    <Keys Source="Accommodation">PMI215</Keys>
    <Keys Source="Accommodation.SellingAccom.Unit">DZ EZ</Keys>
    <Keys Source="Accommodation.SellingAccom.Board">AI</Keys>
  </And>
</Condition>]]></programlisting>
							<para xml:id="de_933" xml:lang="de">Weitere Informationen finden Sie in der <link xlink:href="./technisch/otds_technisch.html#Keys">Technischen
									Dokumentation für OTDS </link>.</para><para xml:id="en_933" xml:lang="en">Please obtain further information from the <link xlink:href="./technisch/otds_technisch.html#Keys">Technical documentation for OTDS</link>.</para>
						</section>
						<section xml:id="OtdsStrategyConditionTag">
							<title><phrase xml:id="de_934" xml:lang="de">Beliebige Knoten-Markierungen (Tags)</phrase><phrase xml:id="en_934" xml:lang="en">Selected node markers (Tags)</phrase></title>
							<figure>
								<title><phrase xml:id="de_935" xml:lang="de">Tags</phrase><phrase xml:id="en_935" xml:lang="en">Tags</phrase></title>
								<mediaobject>
									<imageobject>
										<imagedata fileref="figures/condition-tags.png" format="PNG" contentwidth="50%"/>
									</imageobject>
									<textobject>
										<para xml:id="de_936" xml:lang="de">Tags</para><para xml:id="en_936" xml:lang="en">Tags</para>
									</textobject>
									<caption>
										<para xml:id="de_937" xml:lang="de"> </para><para xml:id="en_937" xml:lang="en"/>
									</caption>
								</mediaobject>
							</figure>
							<para xml:id="de_938" xml:lang="de">Das Element "Tags" definiert die Bedingung, ob an einer über das Attribut
								"Source" adressierten Komponente/Unterkomponente des betrachteten Angebotes
								das Kind-Element "Tag" mit einem bestimmten Wert enthalten ist. </para><para xml:id="en_938" xml:lang="en">The element "Tags" defines the condition of whether, for a component/subcomponent of the regarded offer addressed by the attribute "Source", the child element "Tag" has a specific value.</para>
							<para xml:id="de_939" xml:lang="de">Es kann eine Liste von Tags angegeben werden. Die Bedingung ist erfüllt,
								wenn einer der Tags mit dem Wert des Zielknotens übereinstimmt (es handelt
								sich also um eine implizite "OR-Verknüpfung"). Der adressierte Knoten wird
								dabei durch Auswertung des Inhaltes der Attribute "Source" bestimmt. </para><para xml:id="en_939" xml:lang="en">A list of Tags can be specified. The condition is fulfilled if one of the tags matches the value of the target node (it can therefore be described as an implicit "OR-connective"). In this situation, the addressed node is defined through an evaluation of the contents of the attribute "Source".</para>
							<para xml:id="de_940" xml:lang="de">Durch Angabe der Attribute "Offset" und "Length" wird der Vergleich des
								Wertes des Tag-Elementes auf bestimmte Zeichen begrenzt. Offset ist dabei 0
								basiert. </para><para xml:id="en_940" xml:lang="en">Through the provision of the attributes "Offset" and "Length", the comparison of the value of the Tag element is limited to certain characters. Offset is based at 0.</para>
							<para xml:id="de_941" xml:lang="de">Das Attribut "Class" differenziert unterschiedliche Tags und muss in dem
								entsprechenden Tag-Element dann auch übereinstimmen, damit die Gesamtbedingung
								erfüllt ist. </para><para xml:id="en_941" xml:lang="en">The attribute "Class" differentiates various Tags and must then also match in the corresponding Tag element, in order that the overall condition is fulfilled.</para>
							<para xml:id="de_942" xml:lang="de">Damit die Bedingung erfüllt ist, reicht es, dass <emphasis role="bold">ein</emphasis> Tag am Zielknoten die Bedingung erfüllt. </para><para xml:id="en_942" xml:lang="en">In order for the condition to be fulfilled, it is enough for <emphasis role="bold">one</emphasis> Tag at the target node to fulfil the condition.</para>
							<para xml:id="de_943" xml:lang="de">Das folgende Beispiel zeigt eine Tags-Condition, die ein Tag des Zimmers und
								ein Tag der Unterkunft überprüft. Vom Tag der Unterkunft werden nur die ersten
								vier Zeichen überprüft. Beide Tags-Bedingungen müssen erfüllt sein, damit die
								Condition insgesamt erfüllt ist:</para><para xml:id="en_943" xml:lang="en">The following example shows a Tags condition which considers a Tag of the room and a Tag of the accommodation. Only the first four characters of the accommodation Tag are regarded. Both Tags conditions must be fulfilled in order for the condition as a whole to be fulfilled:</para>
							<programlisting><![CDATA[<Condition>
  <And>
    <Tags Source="Accommodation.SellingAccom.Unit" Class="KennzeichenA">AB1</Tags>
    <Tags Source="Accommodation" Offset="0" Length="4" Class="AccomCode">PMI1</Tags>
  </And>
</Condition>]]></programlisting>
							<para xml:id="de_944" xml:lang="de">Weitere Informationen finden Sie in der <link xlink:href="./technisch/otds_technisch.html#Tags">Technischen
									Dokumentation für OTDS </link>.</para><para xml:id="en_944" xml:lang="en">Please obtain further information from the <link xlink:href="./technisch/otds_technisch.html#Tags">Technical documentation for OTDS</link> .</para>
						</section>
						<section xml:id="OtdsStrategyConditionConditionalTags">
							<title><phrase xml:id="de_945" xml:lang="de">Bedingte Markierung von Personen und Tagen (ConditionalTags)</phrase><phrase xml:id="en_945" xml:lang="en">Conditional markers of persons and days (ConditionalTags)</phrase></title>
							<figure>
								<title><phrase xml:id="de_946" xml:lang="de">ConditionalTags</phrase><phrase xml:id="en_946" xml:lang="en">ConditionalTags</phrase></title>
								<mediaobject>
									<imageobject>
										<imagedata fileref="figures/condition-conditionaltags.png" format="PNG" contentwidth="50%"/>
									</imageobject>
									<textobject>
										<para xml:id="de_947" xml:lang="de">ConditionalTags</para><para xml:id="en_947" xml:lang="en">ConditionalTags</para>
									</textobject>
									<caption>
										<para xml:id="de_948" xml:lang="de"> </para><para xml:id="en_948" xml:lang="en"/>
									</caption>
								</mediaobject>
							</figure>
							<para xml:id="de_949" xml:lang="de">Das Element "ConditionalTags" definiert die Bedingung, ob an einer
								bestimmten über das Attribut "Source" adressierten Komponente/ Unterkomponente
								des betrachteten Angebotes das Kind-Element "ConditionalTag" mit einem
								bestimmten Tag-Value enthalten ist. Zusätzlich müssen noch die Bedingungen der
								entsprechenden ConditionalTag-Definition erfüllt sein. Es können mehrere Tags
								angegeben werden. Die Bedingung ist erfüllt, wenn einer der Tags mit dem am
								Zielknoten definierten ConditionalTag übereinstimmt (es handelt sich also um
								eine implizite "OR-Verknüpfung"). Der adressierte Knoten wird dabei durch
								Auswertung des Inhaltes der Attribute "Source" bestimmt. Durch Angabe der
								Attribute "Offset" und "Length" wird der Vergleich des Wertes des
								ConditionalTag-Elementes auf bestimmte Zeichen begrenzt. Zusätzlich
								differenziert das Attribut "Class" unterschiedliche Tags und muss in dem
								entsprechenden ConditionalTag-Element dann auch übereinstimmen, damit die
								Gesamtbedingung erfüllt ist. Damit die Bedingung erfüllt ist reicht es, dass
								ein ConditionalTag am Zielknoten die Bedingung erfüllt. </para><para xml:id="en_949" xml:lang="en">The element "ConditionalTags" defines the condition of whether, for a certain component/subcomponent of the regarded offer addressed by the attribute "Source", the child element "ConditionalTag" is included in a certain tag value. In addition, the conditions of the corresponding ConditionalTag definition must also be fulfilled. Several tags can be specified. The condition is fulfilled if one of the tags matches the ConditionalTag defined at the target node (it can therefore be described as an implicit "OR connective"). In this situation, the addressed node is defined through an evaluation of the contents of the attribute "Source". Through the provision of the attributes "Offset" and "Length", the comparison of the value of the ConditionalTag element is limited to certain characters. In addition, the attribute "Class" differentiates various tags and must then also match in the corresponding ConditionalTag element, in order that the overall condition is fulfilled. In order for the condition to be fulfilled, it suffices for a ConditionalTag at the target node to fulfil the condition.</para>
							<para xml:id="de_950" xml:lang="de">Das folgende Beispiel zeigt eine Condition, die zwei ConditionalTags prüft:
								Ein ConditionalTag der Unterkunft und ein ConditionalTag des Fluges</para><para xml:id="en_950" xml:lang="en">The following example shows a condition which evaluates two ConditionalTags: One ConditionalTag of the accommodation and one ConditionalTag of the flight.</para>
							<programlisting><![CDATA[<Condition>
  <And>
    <ConditionalTags Source="Accommodation.SellingAccom" Class="Season">A B C</ConditionalTags>
    <ConditionalTags Source="ReturnFlight" Class="Season">A B C</ConditionalTags>
  </And>
</Condition>]]></programlisting>
							<para xml:id="de_951" xml:lang="de">Weitere Informationen finden Sie in der <link xlink:href="./technisch/otds_technisch.html#ConditionalTags">Technischen
									Dokumentation für OTDS </link>.</para><para xml:id="en_951" xml:lang="en">Please obtain further information from the <link xlink:href="./technisch/otds_technisch.html#ConditionalTags">Technical documentation for OTDS</link> .</para>
						</section>
					</section>
					<section xml:id="OtdsStrategyConditionTypeRule">
						<title><phrase xml:id="de_952" xml:lang="de">Rules-Bedingungen</phrase><phrase xml:id="en_952" xml:lang="en">Rules conditions</phrase></title>
						<section xml:id="OtdsStrategyConditionMatchEqual">
							<title><phrase xml:id="de_953" xml:lang="de">MatchEqual</phrase><phrase xml:id="en_953" xml:lang="en">MatchEqual</phrase></title>
							<figure>
								<title><phrase xml:id="de_954" xml:lang="de">MatchEqual</phrase><phrase xml:id="en_954" xml:lang="en">MatchEqual</phrase></title>
								<mediaobject>
									<imageobject>
										<imagedata fileref="figures/condition-matchequal.png" format="PNG" contentwidth="70%"/>
									</imageobject>
									<textobject>
										<para xml:id="de_955" xml:lang="de">MatchEqual</para><para xml:id="en_955" xml:lang="en">MatchEqual</para>
									</textobject>
									<caption>
										<para xml:id="de_956" xml:lang="de"> </para><para xml:id="en_956" xml:lang="en"/>
									</caption>
								</mediaobject>
							</figure>
							<para xml:id="de_957" xml:lang="de">Bei der Zusammenstellung der Produkte und der Definition von erweiterten
								Flugangeboten wird in den Bedingungen das MatchEqual-Element ermöglicht. Mit
								dem Element "MatchEqual" können Werte von Elementen und Tags auf
								Übereinstimmung überprüft werden. </para><para xml:id="en_957" xml:lang="en">With the combining of the products and the definition of extended flight offers, the MatchEqual element is enabled in the conditions. With the element "MatchEqual", values from elements and tags can be checked for matches.</para>
							<para xml:id="de_958" xml:lang="de">Bei Tag's erfolgt die Addressierung der Komponente/ Unterkomponente über das
								Source-Attribut. Zusätzlich werden die Tags über das das Attribut "Class"
								differenziert. Die Attribute "Offset" und "Length" ermöglichen, dass man nur
								bestimmte Bereiche des Tag-Wertes betrachtet. </para><para xml:id="en_958" xml:lang="en">With Tags, the addressing of the components/subcomponents occurs via the Source attribute. In addition, the Tags are differentiated via the attribute "Class". The attributes "Offset" and "Length" make it possible to regard only certain areas of the Tag value.</para>
							<para xml:id="de_959" xml:lang="de">Es werden immer 2 oder mehrere Tags auf Gleichheit überprüft. Dem
								entsprechend ist das Element "Tag" in MatchEqual ein leeres Element, gibt also
								keinen eigenen Value vor. </para><para xml:id="en_959" xml:lang="en">Two or more Tags are always checked for parity. Accordingly, the element "Tag" in MatchEqual is an empty element and does not have its own value.</para>
							<para xml:id="de_960" xml:lang="de">Neben den Tags können auch Felder miteinander verglichen werden. Auch hier
								wird die betrachtete Komponente/Unterkomponente durch das Attribute "Source"
								definiert. Der Wert des Elementes "Element" definiert, welches Element bzgl.
								der Übereinstimmung betrachtet wird. In OTDS Version 1.0 sind hier lediglich
								die Airportfelder DepartureAirport, ArrivalAirport und CatchmentAirport
								möglich.</para><para xml:id="en_960" xml:lang="en">As well as Tags, fields can also be compared to one another. Here too, the regarded components/subcomponents are defined through the attribute "Source". The value of the element "Element" defines which element is being considered with regard to the match. In OTDS Version 1.0, only the airport fields DepartureAirport, ArrivalAirport and CatchmentAirport are possible here.</para>
							<para xml:id="de_961" xml:lang="de">Im folgenden Beispiel müssen die Elemente CatchmentAirport der Komponenten
								"Accommodation" und "Addon" übereinstimmen, damit die Bedingung erfüllt ist: </para><para xml:id="en_961" xml:lang="en">In the following example, the CatchmentAirport elements must agree with the components "Accommodation" and "Addon" in order for the condition to be fulfilled:</para>
							<para xml:id="de_962" xml:lang="de">
								<programlisting><![CDATA[<Condition>
    <MatchEqual>
	  <Element Source="Accommodation">CatchmentAirport</Element>
	  <Element Source="Addon">CatchmentAirport</Element>
	</MatchEqual>
 </Condition>]]></programlisting>
							</para><para xml:id="en_962" xml:lang="en">
								<programlisting>
									<![CDATA[<Condition>
    <MatchEqual>
	  <Element Source="Accommodation">CatchmentAirport</Element>
	  <Element Source="Addon">CatchmentAirport</Element>
	</MatchEqual>
 </Condition>]]></programlisting>
							</para>
							<para xml:id="de_963" xml:lang="de">Weitere Informationen finden Sie in der <link xlink:href="./technisch/otds_technisch.html#MatchEqual">Technischen
									Dokumentation für OTDS </link>.</para><para xml:id="en_963" xml:lang="en">Please obtain further information from the <link xlink:href="./technisch/otds_technisch.html#MatchEqual">Technical documentation for OTDS</link> .</para>
							<para xml:id="de_964" xml:lang="de"> </para><para xml:id="en_964" xml:lang="en"/>
						</section>
					</section>
					<section xml:id="OtdsStrategyConditionTypeDayImpact">
						<title><phrase xml:id="de_965" xml:lang="de">DayImpact-Bedingungen</phrase><phrase xml:id="en_965" xml:lang="en">DayImpact conditions</phrase></title>
						<figure>
							<title><phrase xml:id="de_966" xml:lang="de">DayImpact</phrase><phrase xml:id="en_966" xml:lang="en">DayImpact</phrase></title>
							<mediaobject>
								<imageobject>
									<imagedata fileref="figures/condition-dayimpact.png" format="PNG" contentwidth="70%"/>
								</imageobject>
								<textobject>
									<para xml:id="de_967" xml:lang="de">DayImpact</para><para xml:id="en_967" xml:lang="en">DayImpact</para>
								</textobject>
								<caption>
									<para xml:id="de_968" xml:lang="de"> </para><para xml:id="en_968" xml:lang="en"/>
								</caption>
							</mediaobject>
						</figure>
						<para xml:id="de_969" xml:lang="de">Die DayImpact-Bedingungen können nur innerhalb der PriceItems benutzt werden.
							Alle Bedingungen innerhalb DayImpact beziehen sich auf die einzelnen Tage der
							Reise und definieren eine Gültigkeit eines Preise nur für die durch die Bedingung
							vorgegebenen gültigen Tage. Zum Beispiel kann ein Wochenendpreis der also nur für
							Freitage, Samtage und Sonntage gilt nur durch eine Impact-Weekday-Bedingung
							ausgedrückt werden. </para><para xml:id="en_969" xml:lang="en">The DayImpact conditions can only be used within the PriceItems. All conditions within DayImpact relate to the individual days of the trip and define the validity of a price only for the the days identified as valid by the condition. For example, a weekend price which is only valid for Fridays, Saturdays and Sundays can only be expressed through an Impact-Weekday condition.</para>
						<para xml:id="de_970" xml:lang="de">Eine entsprechende "normale" Weekday-Bedingung würde im Gegensatz dazu
							ausdrücken, ich bin gültig wenn ein Freitag,Samstag oder Sonntag in der Reise
							enthalten ist. </para><para xml:id="en_970" xml:lang="en">A corresponding "normal" Weekday condition would express the contrary, and be valid when a Friday, Saturday or Sunday is included in the trip.</para>
						<section xml:id="OtdsStrategyConditionDayImpactDate">
							<title><phrase xml:id="de_971" xml:lang="de">Datum (Date) als DayImpact</phrase><phrase xml:id="en_971" xml:lang="en">Date as DayImpact</phrase></title>
							<figure>
								<title><phrase xml:id="de_972" xml:lang="de">Date</phrase><phrase xml:id="en_972" xml:lang="en">Date</phrase></title>
								<mediaobject>
									<imageobject>
										<imagedata fileref="figures/dayimpact-date.png" format="PNG" contentwidth="500"/>
									</imageobject>
									<textobject>
										<para xml:id="de_973" xml:lang="de">Date</para><para xml:id="en_973" xml:lang="en">Date</para>
									</textobject>
									<caption>
										<para xml:id="de_974" xml:lang="de"> </para><para xml:id="en_974" xml:lang="en"/>
									</caption>
								</mediaobject>
							</figure>
							<para xml:id="de_975" xml:lang="de">Das Element "Date" definiert die Bedingung, ob ein Preis für bestimmte
								Termine gilt. Dies geschieht strukturell in der gleichen Weise über Source und
								DayType und den entsprechenden Date-Values wie bereits <link linkend="OtdsStrategyConditionDate">weiter oben</link> beschrieben. Im
								Gegensatz zu den normalen Bedingungen überprüft jedoch die
								DayImpact-Date-Condition die Gültigkeit der einzelnen Tage.</para><para xml:id="en_975" xml:lang="en">The "Date" element defines the condition of if a price is valid for specific dates. This occurs structurally in the same way via Source and DayType, and the corresponding Date Values, as has already been described <link linkend="OtdsStrategyConditionDate">above</link>. In contrast to normal conditions, the DayImpact Date condition verifies the validity of each day.</para>
							<para xml:id="de_976" xml:lang="de">Das folgende Beispiel zeigt eine DayImpact-Condition unter Verwendung von
								Date: Ein Preis wird hier für alle Aufenthaltstage (DayType=Stay) im Hotel
								zwischen dem 24.12.2012 und 02.01.2013 gültig. Andere Aufenthaltstage der
								Reise, erfüllen die Bedingung nicht und bekommen dementsprechend nicht diesen
								Preis zugewiesen.</para><para xml:id="en_976" xml:lang="en">The following is an example of a DayImpact condition using Date: In this instance a price will be valid for all days (DayType="Stay") at the hotel between 24.12.2012 and 02.01.2013. Other days of the trip do not meet this condition and are accordingly not assigned this price.</para>
							<para xml:id="de_977" xml:lang="de">Klassiker hierzu sind unterschiedliche Tagespreise zu unterschiedlichen
								Termingültigkeiten.</para><para xml:id="en_977" xml:lang="en">A classic example of this would be where different day rates apply for specific dates.</para>
							<programlisting><![CDATA[<Condition>
  <DayImpact>
    <Date Source="Accommodation" DayType="Stay">
      <Min>2012-12-24</Min>
      <Max>2013-01-02</Max>
    </Date>
  </DayImpact>
</Condition>]]></programlisting>
							<para xml:id="de_978" xml:lang="de">Weitere Informationen finden Sie in der <link xlink:href="./technisch/otds_technisch.html#DayImpact">Technischen
									Dokumentation für OTDS </link>.</para><para xml:id="en_978" xml:lang="en">Please obtain further information from the <link xlink:href="./technisch/otds_technisch.html#DayImpact">Technical documentation for OTDS</link>.</para>
						</section>
						<section xml:id="OtdsStrategyConditionDayImpactDayIndex">
							<title><phrase xml:id="de_979" xml:lang="de">DayIndex</phrase><phrase xml:id="en_979" xml:lang="en">DayIndex</phrase></title>
							<figure>
								<title><phrase xml:id="de_980" xml:lang="de">DayIndex</phrase><phrase xml:id="en_980" xml:lang="en">DayIndex</phrase></title>
								<mediaobject>
									<imageobject>
										<imagedata fileref="figures/dayimpact-dayindex.png" format="PNG" contentwidth="50%"/>
									</imageobject>
									<textobject>
										<para xml:id="de_981" xml:lang="de">DayIndex</para><para xml:id="en_981" xml:lang="en">DayIndex</para>
									</textobject>
									<caption>
										<para xml:id="de_982" xml:lang="de"> </para><para xml:id="en_982" xml:lang="en"/>
									</caption>
								</mediaobject>
							</figure>
							<para xml:id="de_983" xml:lang="de"> </para><para xml:id="en_983" xml:lang="en"/>
							<para xml:id="de_984" xml:lang="de">Das Element "DayIndex" definiert eine Gültigkeit für bestimmte Tage eines
								Reiseverlaufs. Alle betrachteten Tage werden nach Reiseverlauf sortiert und
								bekommen dann jeweils einen von 1 aufsteigenden Index. Gleichzeitig werden
								auch alle Tage entgegengesetzt sortiert und bekommen einen zusätzlichen
								negativen Index von -1 absteigend. Jeder betrachtetet Tag der Reise erhält
								dadurch also 2 Inidices: einen Positiven und einen Negativen. Die Bedingung
								prüft nun durch Vergleich der Indizes welche Tage die DayIndex-Bedingung
								erfüllen. Der Vergleich erfolgt entweder durch eine durch Space getrennte
								Liste von einzelnen Indizes oder über die Angabe der Werte "Until" bzw.
								"From".</para><para xml:id="en_984" xml:lang="en">The "DayIndex" element defines a validity for specific days of an itinerary. All days are sorted according to the itinerary and placed in an index which ascends starting from 1. Simultaneously, all days are inversely sorted and given an additional descending negative value starting from -1. Every day of travel under consideration therefore has two indices: A positive and a negative. The indices are compared to determine which days meet the DayIndex condition. The comparison is done either through a list of individual indices separated by space or the through the specification of the values "Until" or "From".</para>
							<para xml:id="de_985" xml:lang="de"><emphasis role="bold">Until=X</emphasis> definiert in einer zeitlich
								aufsteigenden Liste der Tage, dass alle Tage dieser Liste bis zum Index X die
								Bedingung erfüllen. Die Auswertung ist dabei unabhängig davon ob x positiv
								oder negativ ist.</para><para xml:id="en_985" xml:lang="en">
								<emphasis role="bold">Until=X</emphasis> defines in a chronologically ascending list of days, that all days of the list satisfy the conditions up until Index X. The evaluation is independent of whether X is positive or negative.</para>
							<para xml:id="de_986" xml:lang="de">Einige Beispiele dazu: </para><para xml:id="en_986" xml:lang="en">A few examples:</para>
							<itemizedlist>
								<listitem>
									<para xml:id="de_987" xml:lang="de">Die ersten 3 Tage : <emphasis role="bold">Until =
										3</emphasis></para><para xml:id="en_987" xml:lang="en">The first 3 days : <emphasis role="bold">Until = 3</emphasis>
									</para>
								</listitem>
								<listitem>
									<para xml:id="de_988" xml:lang="de">Die ersten Tage bis zum 3.letzten Tag einschließlich : <emphasis role="bold">Until = - 3</emphasis></para><para xml:id="en_988" xml:lang="en">The first days up to and including the last three days: <emphasis role="bold">Until = - 3</emphasis>
									</para>
								</listitem>
								<listitem>
									<para xml:id="de_989" xml:lang="de">Alle Tage außer dem letzten Tag : <emphasis role="bold">Until =
											- 2</emphasis></para><para xml:id="en_989" xml:lang="en">All days except the last day: <emphasis role="bold">Until = - 2</emphasis>
									</para>
								</listitem>
							</itemizedlist>
							
							<para xml:id="de_990" xml:lang="de"><emphasis role="bold">From=X</emphasis> definiert in einer zeitlich
								aufsteigenden Liste der Tage, dass alle Tage dieser Liste ab dem Index X die
								Bedingung erfüllen. Die Auswertung ist dabei unabhängig davon ob x positiv
								oder negativ ist.</para><para xml:id="en_990" xml:lang="en">
								<emphasis role="bold">From = X</emphasis> defines an ascending chronological list of days that satisfy the conditions of index X. The evaluation is independent of whether X is positive or negative.</para>
							<para xml:id="de_991" xml:lang="de">Einige Beispiele dazu: </para><para xml:id="en_991" xml:lang="en">A few examples:</para>
							<itemizedlist>
								<listitem>
									<para xml:id="de_992" xml:lang="de">Die letzten 3 Tage: <emphasis role="bold">From = -
										3</emphasis></para><para xml:id="en_992" xml:lang="en">The last 3 days: <emphasis role="bold">From = - 3</emphasis>
									</para>
								</listitem>
								<listitem>
									<para xml:id="de_993" xml:lang="de">Die letzten Tage beginnend ab dem 4. Tag : <emphasis role="bold">From = 4</emphasis></para><para xml:id="en_993" xml:lang="en">The last days beginning from the 4th day: <emphasis role="bold">From = 4</emphasis>
									</para>
								</listitem>
								<listitem>
									<para xml:id="de_994" xml:lang="de">Alle Tage außer dem ersten Tag : <emphasis role="bold">From =
											2</emphasis></para><para xml:id="en_994" xml:lang="en">All days except the first day: <emphasis role="bold">From = 2</emphasis>
									</para>
								</listitem>
							</itemizedlist>
							
							<para xml:id="de_995" xml:lang="de"><emphasis role="bold">Indices="1 3 -2 -1</emphasis> definiert den 1. Tag,
								den 3. Tag, den vorletzten Tag und den letzten Tag als gültige Tage.</para><para xml:id="en_995" xml:lang="en">
								<emphasis role="bold">Indices="1 3 -2 -1"</emphasis> defines the 1st day, the 3rd day, the 2nd to last day and the last day as valid days.</para>
							<para>Die Elemente Until, From und Indices sind Und-Verknüpft. Im folgenden Beispiel würde nur der letzte
								Stay-Tag adressiert.  </para>
							<programlisting><![CDATA[<Condition>
  <DayImpact>
    <DayIndex Source="Product" >
      <Until>-1</Until>
      <From>-1/From>
    </DayIndex>
  </DayImpact>
</Condition>]]></programlisting>
							
							<bridgehead xml:id="de_997" xml:lang="de">Das Attribut "Repeat"</bridgehead><bridgehead xml:id="en_997" xml:lang="en">The "Repeat" attribute</bridgehead>
							<para xml:id="de_996" xml:lang="de">
								Über das Attribute "Repeat"	können weitere Einstellungen für sich wiederholende Muster von Tagen definiert
								werden. Repeat definiert dabei den Wiederholungszyklus. Im Zusammenspiel eines
								gesetzten Attributs "Repeat=X" beziehen sich alle angegebenen Indices nur auf
								diesen betracheteten Zyklus. Das bedeutet der Betrag eines angegebenen Indices
								kann nicht größer sein als X. Ist der Betrag eines Index denoch größer als der
								Wert von Repeat, so wird dies als Fehler betrachtet und die komplette
								Bedingung ist damit nicht erfüllt. </para><para xml:id="en_996" xml:lang="en">The "Repeat" attribute is used to define further settings for repeating patterns of days. Repeat defines the repeat cycle. If the attribute is set to "Repeat = X", all indices entered refer only to this specific cycle. This means the value of an index entered cannot be greater than X. Where the value of an index is greater than the value of Repeat, it is considered a fault and therefore the complete condition is not fulfilled.</para>
							<para xml:id="de_998" xml:lang="de"> </para><para xml:id="en_998" xml:lang="en"/>
							<para xml:id="de_999" xml:lang="de">Das folgende Beispiel zeigt eine DayImpact-Condition unter Verwendung von
								DayIndex. Die Bedingung ist gültig für den ersten und dritten Tag jeder Woche
								der Reise:</para><para xml:id="en_999" xml:lang="en">The following example shows a DayImpact condition defined using the DayIndex. The condition is valid for the first and third day of each week of the trip:</para>
							<programlisting><![CDATA[<Condition>
  <DayImpact>
    <DayIndex Source="Product" Repeat="7">
      <Indices>1 3</Indices>
    </DayIndex>
  </DayImpact>
</Condition>]]></programlisting>
							<para xml:id="de_1000" xml:lang="de">Weitere Informationen finden Sie in der <link xlink:href="./technisch/otds_technisch.html#DayImpact">Technischen
									Dokumentation für OTDS </link>.</para><para xml:id="en_1000" xml:lang="en">Please obtain further information from the <link xlink:href="./technisch/otds_technisch.html#DayImpact">Technical documentation for OTDS</link>.</para>
						</section>
						<section xml:id="OtdsStrategyConditionDayImpactWeekday">
							<title><phrase xml:id="de_1001" xml:lang="de">Wochentage (Weekdays)</phrase><phrase xml:id="en_1001" xml:lang="en">Weekdays</phrase></title>
							<figure>
								<title><phrase xml:id="de_1002" xml:lang="de">Weekdays</phrase><phrase xml:id="en_1002" xml:lang="en">Weekdays</phrase></title>
								<mediaobject>
									<imageobject>
										<imagedata fileref="figures/dayimpact-weekdays.png" format="PNG" contentwidth="50%"/>
									</imageobject>
									<textobject>
										<para xml:id="de_1003" xml:lang="de">Weekdays</para><para xml:id="en_1003" xml:lang="en">Weekdays</para>
									</textobject>
									<caption>
										<para xml:id="de_1004" xml:lang="de"> </para><para xml:id="en_1004" xml:lang="en"/>
									</caption>
								</mediaobject>
							</figure>
							<para xml:id="de_1005" xml:lang="de"> </para><para xml:id="en_1005" xml:lang="en"/>
							<para xml:id="de_1006" xml:lang="de">Das Element "Weekdays" definiert die Bedingung, für welche Wochentage der
								gerade betrachteten Reise ein Preis gilt. Dies geschieht strukturell in der
								gleichen Weise wie bereits zuvor in der <link linkend="OtdsStrategyConditionWeekdays">"normalen
									Weekdays-Bedingung</link> beschrieben. Im Gegensatz zu der "normalen"
								Weekdays-Condition hat die DayImpact-Weekdays-Condition eine Auswirkung auf
								einzelne Tage der Reise. </para><para xml:id="en_1006" xml:lang="en">The "Weekdays" element defines the condition for which days of the week a price applies to in the current trip. This is structurally the same as was described before in the <link linkend="OtdsStrategyConditionWeekdays">normal weekday conditions</link>. In contrast to the "normal" Weekdays condition, the DayImpact-Weekdays condition has an effect on individual days of the trip.</para>
							<para xml:id="de_1007" xml:lang="de">Das folgende Beispiel zeigt eine DayImpact-Condition unter Verwendung von
								Weekdays. Die Bedingung ist gültig für die Wochentage Freitag, Samstag und
								Sonntag. Ein Preis wäre also dementsprechen nur an diesen Tagen gültig.</para><para xml:id="en_1007" xml:lang="en">The following example shows a DayImpact condition using Weekdays. The condition is valid for Fridays, Saturdays and Sundays. Accordingly the price would be valid only on these days.</para>
							<programlisting><![CDATA[
	<Condition>
		<DayImpact>
	    	<Weekdays Source="Accommodation">Fri Sat Sun</Weekdays>
	  	</DayImpact>
	</Condition>
 ]]></programlisting>
							<para xml:id="de_1008" xml:lang="de"> Eine entsprechende "normale" (Nicht-Impact) Weekdays-Bedingung würde
								bedeuteten, dass ein Preis generell (also für alle Tage) gültig ist, wenn ein
								Freitag, Samstag oder Sonntag in der Reise enthalten ist. </para><para xml:id="en_1008" xml:lang="en">A corresponding "normal" (non-impact) Weekdays condition would mean that a price is valid (for all days), if a Friday, Saturday or Sunday is included in the period of travel.</para>
							<para xml:id="de_1009" xml:lang="de"><emphasis role="bold">Bitte beachten:</emphasis> Im Gegensatz zu
								den anderen Conditions ist im Falle der Weekdays-Condition der
								Default für "DayType" auf den Wert "CheckIn" gesetzt. Ist der
								DayType also nicht angegeben wird der DayType="CheckIn"
								vorausgesetzt.</para><para xml:id="en_1009" xml:lang="en">
								<emphasis role="bold">Please note:</emphasis> Contrary to the other conditions, in the case of the Weekdays condition the default for "DayType" is set to the value "CheckIn". If the DayType is therefore not provided, DayType="CheckIn" is used.</para>
							<para xml:id="de_1010" xml:lang="de">Weitere Informationen finden Sie in der <link xlink:href="./technisch/otds_technisch.html#DayImpact">Technischen
									Dokumentation für OTDS </link>.</para><para xml:id="en_1010" xml:lang="en">Please obtain further information from the <link xlink:href="./technisch/otds_technisch.html#DayImpact">Technical documentation for OTDS</link>.</para>
						</section>
					</section>
					<section xml:id="OtdsStrategyConditionTypePersonImpact">
						<title><phrase xml:id="de_1011" xml:lang="de">PersonImpact-Bedingungen</phrase><phrase xml:id="en_1011" xml:lang="en">PersonImpact conditions</phrase></title>
						<figure>
							<title><phrase xml:id="de_1012" xml:lang="de">PersonImpact</phrase><phrase xml:id="en_1012" xml:lang="en">PersonImpact</phrase></title>
							<mediaobject>
								<imageobject>
									<imagedata fileref="figures/condition-personimpact.png" format="PNG" contentwidth="60%"/>
								</imageobject>
								<textobject>
									<para xml:id="de_1013" xml:lang="de">PersonImpact</para><para xml:id="en_1013" xml:lang="en">PersonImpact</para>
								</textobject>
								<caption>
									<para xml:id="de_1014" xml:lang="de"> </para><para xml:id="en_1014" xml:lang="en"/>
								</caption>
							</mediaobject>
						</figure>
						<para xml:id="de_1015" xml:lang="de">Alle Bedingungen innerhalb dieses Elementes beziehen sich auf die einzelnen
							Reiseteilnehmer und definieren eine Gültigkeit für jeden dieser Teilnehmer.
							Preise, die mir einer PersonImpactBedingung verknüpft sind, sind nur für bestimmte
							Personen gültig und werden dementsprechend nur bestimmten Personen zugewiesen. </para><para xml:id="en_1015" xml:lang="en">All conditions within this element refer to the individual tour participants and define validity criteria for each of them. Prices which are linked to a PersonImpact condition are valid only for certain people and thus are assigned to specific persons.</para>
						<para xml:id="de_1016" xml:lang="de">Weitere Informationen finden Sie in der <link xlink:href="./technisch/otds_technisch.html#PersonImpact">Technischen
								Dokumentation für OTDS </link>.</para><para xml:id="en_1016" xml:lang="en">Please obtain further information from the <link xlink:href="./technisch/otds_technisch.html#PersonImpact">Technical documentation for OTDS</link> .</para>
						<section xml:id="OtdsStrategyConditionPersonImpactPersonAge">
							<title><phrase xml:id="de_1017" xml:lang="de">Personenalter (PersonAge)</phrase><phrase xml:id="en_1017" xml:lang="en">Age (PersonAge)</phrase></title>
							<figure>
								<title><phrase xml:id="de_1018" xml:lang="de">PersonAge</phrase><phrase xml:id="en_1018" xml:lang="en">PersonAge</phrase></title>
								<mediaobject>
									<imageobject>
										<imagedata fileref="figures/personimpact-personage.png" format="PNG" contentwidth="50%"/>
									</imageobject>
									<textobject>
										<para xml:id="de_1019" xml:lang="de">PersonAge</para><para xml:id="en_1019" xml:lang="en">PersonAge</para>
									</textobject>
									<caption>
										<para xml:id="de_1020" xml:lang="de"> </para><para xml:id="en_1020" xml:lang="en"/>
									</caption>
								</mediaobject>
							</figure>
							<para xml:id="de_1021" xml:lang="de">Das Element "PersonAge" definiert eine Bedingung an das Alter von einzelnen
								Personen der Reise. Es kann ein Mindestalter und ein maximales Alter angegeben
								werden. Ebenso kann ein Intervall für das Geburtsdatum angegeben werden.
								Gültig ist die Bedingung für alle Personen der Reise, deren Alter die
								angegebene Kriterien erfüllen. Ein Preis wird dann den Personen zugewiesen,
								für die die Bedingung gültig ist.</para><para xml:id="en_1021" xml:lang="en">The "PersonAge" element defines a condition applied to the age of each person travelling. A minimum or a maximum age can be specified. Similarly, an interval can be specified by date of birth. The condition is valid for all travellers that meet the specified age criteria. A price is then assigned to the persons for whom the condition is valid.</para>
							<para xml:id="de_1022" xml:lang="de">Das folgende Beispiel zeigt eine PersonImpact-Condition mit PersonAge, die
								für alle Personen zwischen 6 und 14 (einschließlich) gültig ist. Ein Preis
								wird dann genau diesen Personen zugewiesen.</para><para xml:id="en_1022" xml:lang="en">The following example shows a PersonImpact condition with PersonAge, valid for all people between 6 and 14 (up to and including). A price is then assigned to precisely these people.</para>
							<programlisting><![CDATA[
	<Condition>
		<PersonImpact>
	    	<PersonAge Source="Product">
	      		<MinAge>6</MinAge>
	      		<MaxAge>14</MaxAge>
	    	</PersonAge>
		</PersonImpact>
	</Condition>
	]]></programlisting>
							<para xml:id="de_1023" xml:lang="de">Weitere Informationen finden Sie in der <link xlink:href="./technisch/otds_technisch.html#PersonImpact"> Technischen
									Dokumentation für OTDS </link>.</para><para xml:id="en_1023" xml:lang="en">Please obtain further information from the <link xlink:href="./technisch/otds_technisch.html#PersonImpact">Technical documentation for OTDS</link> .</para>
						</section>
						<section xml:id="OtdsStrategyConditionPersonImpactPersonIndex">
							<title><phrase xml:id="de_1024" xml:lang="de">Bestimmte Person(en) adressieren (PersonIndex)</phrase><phrase xml:id="en_1024" xml:lang="en">Addressing specific person(s) (PersonIndex)</phrase></title>
							<figure>
								<title><phrase xml:id="de_1025" xml:lang="de">PersonIndex</phrase><phrase xml:id="en_1025" xml:lang="en">PersonIndex</phrase></title>
								<mediaobject>
									<imageobject>
										<imagedata fileref="figures/personimpact-personindex.png" format="PNG" contentwidth="80%"/>
									</imageobject>
									<textobject>
										<para xml:id="de_1026" xml:lang="de">PersonIndex</para><para xml:id="en_1026" xml:lang="en">PersonIndex</para>
									</textobject>
									<caption>
										<para xml:id="de_1027" xml:lang="de"> </para><para xml:id="en_1027" xml:lang="en"/>
									</caption>
								</mediaobject>
							</figure>
							<para xml:id="de_1028" xml:lang="de"> </para><para xml:id="en_1028" xml:lang="en"/>
							<para xml:id="de_1029" xml:lang="de">Dieses Element definiert die Bedingung an eine bestimmte Position einer
								Person in einer nach Alter absteigend sortierten Rangfolge der
								Reiseteilnehmer. Es kann mit Hilfe des "PersonFilter" zusätzlich eingeschränkt
								werden, welche Personen betrachtet werden. Dazu bekommen alle betrachteten
								Personen den Alter nach absteigend einen Index 1 bis X. Und gleichzeitig
								bekommen alle betrachteten Personen dem Alter nach aufsteigend einen Index -1
								bis -X.</para><para xml:id="en_1029" xml:lang="en">This element defines the conditions affecting a participant at a particular location, ranking participants in descending order according to age. Eligibility can be additionally constrained with the help of the "PersonFilter". All regarded persons arranged by age in descending order are assigned an index from 1 to X. At the same time all regarded persons in ascending order of age are assigned another index ranking from -1 to -X.</para>
							<para xml:id="de_1030" xml:lang="de">Dadurch beziehen sich positive Indizes auf die ältesten Reiseteilnehmer und
								negative Indizes auf die jüngsten Reiseteilnehmer. Der Index "1" bezieht sich
								also auf den ältesten, der Index "-1" auf den jüngsten Reiseteilnehmer. </para><para xml:id="en_1030" xml:lang="en">The positive indices refer to the oldest travel participants and the negative indices refer to the youngest. Thus index "1" refers to the oldest participant and index "-1" to the youngest participant.</para>
							<para xml:id="de_1031" xml:lang="de">Die Bedingung prüft nun durch Vergleich der Indizes welche Personen die
								PersonIndex-Bedingung erfüllen. Der Vergleich erfolgt entweder durch eine
								durch Space getrennte Liste von einzelnen Indizes oder über die Angabe der
								Werte "Until" bzw. "From".</para><para xml:id="en_1031" xml:lang="en">By comparing the indices, the condition now checks which persons meet the PersonIndex condition. The comparison is done either through a list separated by spaces of individual indices or through the specification of values "Until" or "From".</para>
							<para xml:id="de_1032" xml:lang="de"><emphasis role="bold">Until=X</emphasis> definiert in einer dem Alter nach
								absteigenden Liste der Personen, dass alle Personen dieser Liste bis zum Index
								X die Bedingung erfüllen. Die Auswertung ist dabei unabhängig davon ob X
								positiv oder negativ ist.</para><para xml:id="en_1032" xml:lang="en">
								<emphasis role="bold">Until=X</emphasis> defines in a list of persons sorted in descending order of ages, that all persons in this list satisfy the condition up to Index X. The evaluation is independent of whether X is positive or negative.</para>
							<para xml:id="de_1033" xml:lang="de">Einige Beispiele dazu: </para><para xml:id="en_1033" xml:lang="en">A few examples:</para>
							<itemizedlist>
								<listitem>
									<para xml:id="de_1034" xml:lang="de">Die ältesten 3 Personen : <emphasis role="bold">Until =
											3</emphasis></para><para xml:id="en_1034" xml:lang="en">The oldest 3 persons: <emphasis role="bold">Until = 3</emphasis>
									</para>
								</listitem>
								<listitem>
									<para xml:id="de_1035" xml:lang="de">Die ältesten Personen bis zur 3. jüngsten Person einschließlich
										: <emphasis role="bold">Until = - 3</emphasis></para><para xml:id="en_1035" xml:lang="en">The oldest person up to and including the 3rd youngest person: <emphasis role="bold">Until = - 3</emphasis>
									</para>
								</listitem>
								<listitem>
									<para xml:id="de_1036" xml:lang="de">Alle Personen außer der jüngsten Person : <emphasis role="bold">Until = - 2</emphasis></para><para xml:id="en_1036" xml:lang="en">All persons except the youngest person: <emphasis role="bold">Until = - 2</emphasis>
									</para>
								</listitem>
							</itemizedlist>
							<para xml:id="det_4953" xml:lang="de"><emphasis role="bold">From=X</emphasis> definiert in einer dem
								Alter nach absteigenden Liste der Personen, dass alle Personen dieser Liste ab
								dem Index X die Bedingung erfüllen. Die Auswertung ist dabei unabhängig davon
								ob X positiv oder negativ ist.
							</para>
							<para xml:id="de_1037" xml:lang="de">Einige Beispiele dazu: </para><para xml:id="en_1037" xml:lang="en">A few examples:</para>
								
							<itemizedlist>
								<listitem>
									<para xml:id="de_1038" xml:lang="de">Die jüngsten 3 Personen: <emphasis role="bold">From = -
											3</emphasis></para><para xml:id="en_1038" xml:lang="en">The youngest 3 persons: <emphasis role="bold">From = - 3</emphasis>
									</para>
								</listitem>
								<listitem>
									<para xml:id="de_1039" xml:lang="de">Die jüngsten Personen beginnend ab der 4. ältesten Person :
											<emphasis role="bold">From = 4</emphasis></para><para xml:id="en_1039" xml:lang="en">The youngest persons starting from the 4th oldest person: <emphasis role="bold">From = 4</emphasis>
									</para>
								</listitem>
								<listitem>
									<para xml:id="de_1040" xml:lang="de">Alle Personen außer der ältesten Person : <emphasis role="bold">From = 2</emphasis></para><para xml:id="en_1040" xml:lang="en">All persons except the oldest person: <emphasis role="bold">From = 2</emphasis>
									</para>
								</listitem>
							</itemizedlist>
							<para xml:id="de_1041" xml:lang="de"><emphasis role="bold">Indices="1 3 -2 -1</emphasis> definiert die älteste
								Person, die drittälteste Person, die zweitjüngste Person und die jüngste
								Person als gültige Personen.</para><para xml:id="en_1041" xml:lang="en">
								<emphasis role="bold">Indices="1 3 -2 -1"</emphasis> defines the oldest person, the third-oldest person, the second-youngest person and the youngest person as valid persons.</para>
							<para>Die Elemente Until, From und Indices sind Und-Verknüpft. Im folgenden Beispiel würde nur die älteste Person
								adressiert. </para>
							<programlisting><![CDATA[<Condition>
  <PersonImpact>
    <PersonIndex Source="Product">
      <Until>2</Until>
      <Indices>1</Indices>
    </PersonIndex>
  </PersonImpact>
</Condition>]]></programlisting>
							<bridgehead xml:id="de_1043" xml:lang="de">Der PersonFilter</bridgehead><bridgehead xml:id="en_1043" xml:lang="en">The PersonFilter</bridgehead>
							<para xml:id="de_1042" xml:lang="de">Mit Hilfe des PersonFilter kann die
								betrachtete Personengruppe eingeschränkt werden. Die Einschränkung kann durch
								eine Beschränkung der Altersangaben aber auch durch den Bezug auf ein
								ConditionalTag, welches bestimmte Personen markiert, vorgenommen werden. Die
								angegebenen Indices beziehen sich dann immer nur auf diese betrachtete
								Personengruppe. </para><para xml:id="en_1042" xml:lang="en">The regarded group of persons can be restricted with the aid of the PersonFilter. The restriction can occur through a limitation of the ages, but also through a reference to a ConditionalTag, which marks specific persons. The indices given then always relate to this regarded group of persons only.</para>
							<para xml:id="de_1044" xml:lang="de">Das folgende Beispiel zeigt eine PersonImpact-Condition mit PersonIndex und
								PersonFilter: Es werden nur mitreisende Kinder im Alter zwischen 2 und 6
								Jahren betrachtet (PersonFilter). Die Bedingung wird von den jüngsten 3
								Personen (From) dieser betrachteten Personengruppe erfüllt.</para><para xml:id="en_1044" xml:lang="en">The following example shows a PersonImpact condition with PersonIndex and PersonFilter: Only accompanying children aged between 2 and 6 years are regarded (PersonFilter). This condition is fulfilled by the youngest 3 persons (From) of this regarded group of persons.</para>
							<programlisting><![CDATA[<Condition>
   <PersonImpact>
      <PersonIndex Source="Product">
         <From>-3</From>
         <PersonFilter>
            <PersonAge>
               <Min>2</Min>
               <Max>6</Max>
            </PersonAge>
         </PersonFilter>
      </PersonIndex>
   </PersonImpact>
</Condition>]]></programlisting>
							<para xml:id="de_1045" xml:lang="de">Weitere Informationen finden Sie in der <link xlink:href="./technisch/otds_technisch.html#PersonImpact"> Technischen
									Dokumentation für OTDS </link>.</para><para xml:id="en_1045" xml:lang="en">Please obtain further information from the <link xlink:href="./technisch/otds_technisch.html#PersonImpact">Technical documentation for OTDS</link>.</para>
						</section>
						<section xml:id="OtdsStrategyConditionPersonImpactPersonGender">
							<title><phrase xml:id="de_1046" xml:lang="de">Bedingung an das Geschlecht der Mitreisenden</phrase><phrase xml:id="en_1046" xml:lang="en">Condition of the gender of the accompanying persons</phrase></title>
							<para xml:id="det_1047" xml:lang="de"/>
							<figure>
								<title><phrase xml:id="de_1048" xml:lang="de">PersonGenders</phrase><phrase xml:id="en_1048" xml:lang="en">PersonGenders</phrase></title>
								<mediaobject>
									<imageobject>
										<imagedata fileref="figures/personimpact-persongenders.png" format="PNG" contentwidth="60%"/>
									</imageobject>
									<textobject>
										<para xml:id="de_1049" xml:lang="de">PersonGenders</para><para xml:id="en_1049" xml:lang="en">PersonGenders</para>
									</textobject>
									<caption>
										<para xml:id="de_1050" xml:lang="de"> </para><para xml:id="en_1050" xml:lang="en"/>
									</caption>
								</mediaobject>
							</figure>
							<para xml:id="de_1051" xml:lang="de">Mit Hilfe der Condition <code>PersonGenders</code> kann das Geschlecht der
								Personen spezifiziert werden.</para><para xml:id="en_1051" xml:lang="en">With the aid of the Condition <code>PersonGenders</code> , the gender of the persons can be specified.</para>
							<para xml:id="de_1052" xml:lang="de">Mögliche Werte sind:</para><para xml:id="en_1052" xml:lang="en">Possible values are:</para>
							<itemizedlist>
								<listitem>
									<para xml:id="de_1053" xml:lang="de"><code>Male</code>: männliche Reiseteilnehmer</para><para xml:id="en_1053" xml:lang="en">
										<code>Male</code> : Male traveller</para>
								</listitem>
								<listitem>
									<para xml:id="de_1054" xml:lang="de"><code>Female</code>: weibliche Reiseteilnehmerinnen</para><para xml:id="en_1054" xml:lang="en">
										<code>Female</code> : Female traveller</para>
								</listitem>
								<listitem>
									<para xml:id="de_1055" xml:lang="de"><code>Undefined</code>: Angabe zum Geschlecht liegt nicht vor</para><para xml:id="en_1055" xml:lang="en">
										<code>Undefined</code> : No information is available regarding gender</para>
								</listitem>
							</itemizedlist>
							<para xml:id="de_1056" xml:lang="de">Es ist möglich eine durch Space getrennte Liste von Werten anzugeben. Die
								Liste definiert ein implizites "Oder" zwischen den Elementen.</para><para xml:id="en_1056" xml:lang="en">It is possible to provide a list of values separated by spaces. The list defines an implicit "or" between the elements.</para>
							<para xml:id="de_1057" xml:lang="de">Oft liegen Informationen zum Geschlecht nicht vor. Sollen solche
								Reisekomponenten nicht von der Bedingung ausgeschlossen werden, ist es
								notwendig, den Wert <code>Undefined</code> in die Condition aufzunehmen. Die
								Condition <code>PersonGenders</code> wird vorrangig für die Spezifizierung der
								Anrede in Booking genutzt, kann aber auch in der Preisberechnung Verwendung
								finden.</para><para xml:id="en_1057" xml:lang="en">There is often no information available regarding gender. If such travel components are not to be excluded by the condition, it is necessary to include the value <code>Undefined</code> in the condition. The condition <code>PersonGenders</code> is mainly used for the specification of the form of address in Booking, but may also be used in price calculation application.</para>
							<para xml:id="de_1058" xml:lang="de">Das folgende Beispiel zeigt die Bedingung, dass die Reiseteilnehmer nicht
								männlich sein dürfen, also weiblich sein müssen sofern Angaben zum Geschlecht
								vorliegen:</para><para xml:id="en_1058" xml:lang="en">The following example shows the condition that the travellers may not be male, but must be female, insofar as information regarding gender is available:</para>
							<programlisting><![CDATA[<Condition>
   <PersonImpact>
      <PersonGenders>Female Undefinded</PersonGenders>
   </PersonImpact>
</Condition>]]></programlisting>
							<para xml:id="det_1059" xml:lang="de"/>
						</section>
					</section>

					<section xml:id="OtdsStrategyConditionImpactConditionalTag">
						<title><phrase xml:id="de_1060" xml:lang="de">ConditionalTags-Bedingungen als Impact (bedingte Markierungen)</phrase><phrase xml:id="en_1060" xml:lang="en">ConditionalTags conditions as Impact (conditional markers)</phrase></title>
						<figure>
							<title><phrase xml:id="de_1061" xml:lang="de">ConditionalTags</phrase><phrase xml:id="en_1061" xml:lang="en">ConditionalTags</phrase></title>
							<mediaobject>
								<imageobject>
									<imagedata fileref="figures/impact-conditionaltags.png" format="PNG" contentwidth="50%"/>
								</imageobject>
								<textobject>
									<para xml:id="de_1062" xml:lang="de">ConditionalTags</para><para xml:id="en_1062" xml:lang="en">ConditionalTags</para>
								</textobject>
								<caption>
									<para xml:id="de_1063" xml:lang="de"> </para><para xml:id="en_1063" xml:lang="en"/>
								</caption>
							</mediaobject>
						</figure>
						<para xml:id="de_1064" xml:lang="de"> </para><para xml:id="en_1064" xml:lang="en"/>
						<para xml:id="de_1065" xml:lang="de">Auch die ConditionalTags-Bedingung kann sowohl als "normale" als auch als
							Impact-Bedingung definiert werden. Der Unterschied drückt sich folgendermaßen
							aus:</para><para xml:id="en_1065" xml:lang="en">The ConditionalTags conditions can be defined as "normal" or also as Impact conditions. The difference has the following effect:</para>
						<para xml:id="de_1066" xml:lang="de"><emphasis role="bold">Die Impact-Bedingung</emphasis> definiert, dass ein Preis
							für jeden Tag bzw. jede Person gültig ist, die eine entsprechende Markierung durch
							das ConditionalTag hat. Allen anderen wird der Preis nicht zugewiesen.</para><para xml:id="en_1066" xml:lang="en">
							<emphasis role="bold">The Impact condition</emphasis> defines that a price is valid for each day or person that has the corresponding marking through a ConditionalTag. All of the other persons are not considered for this price.</para>
						<para xml:id="de_1067" xml:lang="de">Im Gegensatz dazu definiert die<emphasis role="bold">"normale"
								Bedingung</emphasis>, dass ein Preis dann generell für alle Tage und alle
							Personen gültig ist, wenn wenigstens Tag oder eine Person mit einer entsprechenden
							Markierung in der Reise enthalten ist.</para><para xml:id="en_1067" xml:lang="en">In contrast, the<emphasis role="bold">"normal" condition</emphasis> defines a price as being generally valid for all days and all persons, if at least one day or one person for this trip has the corresponding marker.</para>
						<para xml:id="de_1068" xml:lang="de">Die Platzierung der ConditionalTag-Bedingung in einem eigenen Zweig "Impact"
							verdeutlicht, dass hier nicht festgelegt ist, ob es sich um einen DayImpact oder
							einen PersonImpact handelt. Diese Festlegung findet in der Definition des
							ConditionalTags statt. Siehe dazu auch etwas weiter unten <link linkend="OtdsStrategyConditionalTag">Kapitel: Bedingte Kennzeichnung von
								Knoten (ConditionalTags)</link>.</para><para xml:id="en_1068" xml:lang="en">The positioning of the ConditionalTag condition in its own branch "Impact" indicates that it is not determined here whether a DayImpact or a PersonImpact is referred to. This determination is made in the definition of the ConditionalTag. See also further below <link linkend="OtdsStrategyConditionalTag">chapter: Conditional marking of nodes (ConditionalTags)</link>.</para>
						<para xml:id="de_1069" xml:lang="de">Die Definition die Bedingung, ob an einem bestimmten Elternknoten des
							betrachteten Angebotes das Kind-Element "ConditionalTag" mit einem bestimmten
							Tag-Value enthalten ist. Dies geschieht strukturell in der gleichen Weise wie
							bereits <link linkend="OtdsStrategyConditionConditionalTags">weiter oben</link>
							beschrieben.</para><para xml:id="en_1069" xml:lang="en">The definition of the condition whether, at a specific parent node of the regarded offer, the child element "ConditionalTag" has a specific Tag value. This happens structurally in the same way as was already described in <link linkend="OtdsStrategyConditionConditionalTags">further above</link>.</para>
						<para xml:id="de_1070" xml:lang="de">Das folgende Beispiel zeigt eine ConditionalTag-Bedingung, die sich auf ein
							ConditionalTag "A" der Class=Season bezieht, welches an der Unterkomponente
							SellingAccom definiert ist. Die Bedingung wird für alle Tage/Personen gültig, die
							eine Markierung durch genau dieses ConditionalTag besitzen. Die letztendliche
							Auswirkung der Bedingung wird erst dann deutlich, wenn man die Definition des
							ConditionalTags mit dem hier vorgegebenen Value und der vorgegebenen Class
							betrachtet. Der sprechende Name der Class und der Value="A" läßt in diesem Falle
							darauf schließen, dass es sich bei der Definition um einen Saisonbuchstaben
							handelt. Die Definitionen der Saisonbuchstaben ist eine der Hauptverwendungen von
							ConditionalTags. </para><para xml:id="en_1070" xml:lang="en">The following example shows a ConditionalTag condition which refers to the ConditionalTag "A" of the Class=Season, which is defined at the subcomponent SellingAccom. The condition becomes valid for all days/persons that are marked by exactly this ConditionalTag. The final impact of the condition first becomes clear when one regards the definition of the ConditionalTag with the Value specified here and the specified Class. The descriptive name of the Class and the Value="A" in this case indicate that the definition refers to the letter of a season. The definition of the season letters is one of the main uses of ConditionalTags.</para>
						<programlisting><![CDATA[
	<Condition>
		<Impact>
			<ConditionalTags Source="Accommodation.SellingAccom" Class="Season">A</ConditionalTags>
		</Impact>
	</Condition>
	]]></programlisting>
						<para xml:id="de_1071" xml:lang="de">Die Source verweist auf den Knoten "SellingAccom", an dem die Definition des
							ConditionalTags zu finden ist. Zur Definition eines ConditionalTags gehört auch
							immer eine Condition innerhalb der Definition, die in der Regel einen Impact
							Anteil enthält. Nur wenn diese Condition erfüllt ist, ist auch die sich darauf
							beziehende ConditionalTags-Bedingung erfüllt. Betrachten wir die folgende
							Definition des ConditionalTags, so kann die oben angegebene
							ConditionalTags-Bedingung nur für Aufenthaltstagen zwischen dem 24.12.2012 und dem
							02.01.2013 erfüllt sein.<programlisting><![CDATA[<SellingAccom>
	<Tags>
		<ConditionalTag>
			<Tag Class="Season">A</Tag>
			<Condition>
				<DayImpact>
					<Date>
					   <Min>2012-12-24</Min>
      				 <Max>2013-01-02</Max>
					</Date>
				</DayImpact>
			</Condition>
		</ConditionalTag>
	</Tags>
	...	
	
</SellingAccom>]]></programlisting>
						</para><para xml:id="en_1071" xml:lang="en">The Source refers to the node "SellingAccom", where the definition of the ConditionalTag can be found. The definition of a ConditionalTag also always includes a condition within the definition, which usually includes an impact component. Only when this condition is fulfilled, is the ConditionalTag condition relating to it fulfilled. If we regard the following definition of the ConditionalTag, the above ConditionalTags condition can only be fulfilled for dates of stay between 24.12.2012 and 02.01.2013.<programlisting>
								<![CDATA[<SellingAccom>
	<Tags>
		<ConditionalTag>
			<Tag Class="Season">A</Tag>
			<Condition>
				<DayImpact>
					<Date>
					   <Min>2012-12-24</Min>
      				 <Max>2013-01-02</Max>
					</Date>
				</DayImpact>
			</Condition>
		</ConditionalTag>
	</Tags>
	...	
	
</SellingAccom>]]></programlisting>
						</para>
						<para xml:id="de_1072" xml:lang="de">Ein weiterer beliebter Anwendungsfall ist durch die Markierung von Personen
							eines bestimmten Typs gegeben. Beliebt ist hier die Definition von Vollzahlern.
							Jeder Veranstalter definiert seine Vollzahler unterschiedlich. Dadurch entstehen
							ganz unterschiedliche ConditionalTag-Definitionen. Die ConditionalTag-Bedingung
							wird aber in der Regel dieser Form entsprechen: <programlisting><![CDATA[<Condition>
	<Impact>
		<ConditionalTags Source="Accommodation.SellingAccom.Unit.SellingUnit" Class="PersonType">Vollzahler</ConditionalTags>
	</Impact>
</Condition>]]></programlisting>
						</para><para xml:id="en_1072" xml:lang="en">An additional popular instance of use is for the marking of persons of a particular type. Here the definition of full-paying guests is popular. Each tour operator defines its full-paying guests differently. Greatly varying ConditionalTag definitions are therefore created. The ConditionalTag condition will however usually correspond to this form: <programlisting>
								<![CDATA[<Condition>
	<Impact>
		<ConditionalTags Source="Accommodation.SellingAccom.Unit.SellingUnit" Class="PersonType">Vollzahler</ConditionalTags>
	</Impact>
</Condition>]]></programlisting>
						</para>
						<para xml:id="de_1073" xml:lang="de">Weitere Informationen finden Sie in der <link xlink:href="./technisch/otds_technisch.html#Impact">Technischen Dokumentation
								für OTDS </link>.</para><para xml:id="en_1073" xml:lang="en">Please obtain further information from the <link xlink:href="./technisch/otds_technisch.html#Impact">Technical documentation for OTDS</link> .</para>
					</section>

					<section xml:id="OtdsStrategyConditionDayPriceIndex">
						<title><phrase xml:id="de_1074" xml:lang="de">Bedingung an die Preishöhe (DayPriceIndexCondition)</phrase><phrase xml:id="en_1074" xml:lang="en">Condition for the price level (DayPriceIndexCondition)</phrase></title>
						<figure>
							<title><phrase xml:id="de_1075" xml:lang="de">DayPriceIndexCondition</phrase><phrase xml:id="en_1075" xml:lang="en">DayPriceIndexCondition</phrase></title>
							<mediaobject>
								<imageobject>
									<imagedata fileref="figures/dayimpact-daypriceindex.png" format="PNG" contentwidth="70%"/>
								</imageobject>
								<textobject>
									<para xml:id="de_1076" xml:lang="de">DayPriceIndexCondition</para><para xml:id="en_1076" xml:lang="en">DayPriceIndexCondition</para>
								</textobject>
								<caption>
									<para xml:id="de_1077" xml:lang="de"> </para><para xml:id="en_1077" xml:lang="en"/>
								</caption>
							</mediaobject>
						</figure>
						<para xml:id="de_1078" xml:lang="de">Es können Bedingungen an den günstigsten bzw. teuersten Tagespreis gestellt
							werden, um prozentuale Auf- oder Abschläge darauf anzuwenden. Im Gegensatz zu
							DayIndex werden die Reisetage in diesem Falle nicht nach Reiseverlauf sondern nach
							der TagesPreishöhe aufsteigen sortiert und bekommen dann genau wie beim DayIndex
							positive und negative Indices zugewiesen. Der Vergleich der Indices über From und
							Until erfolgt dann entsprechend wie bei DayIndex. Für die Auswertung der
							Tagespreis, um die richtige Sortierung vorzunehmen, können mit den
							Not-/ConsideredPriceItemClasses bestimmte Classes von PriceItems ein- bzw.
							ausgeschlossen werden. Durch <code>ConsideredPriceItems</code> kann angegeben
							werden, auf welche Preisanteile sich die Bedingung bezieht. Hier können ein oder
							auch mehrere PriceItem-Classes angegeben werden. Fehlt die Angabe, werden alle
							gültigen Preisbestandteile dieser Komponente berücksichtigt.</para><para xml:id="en_1078" xml:lang="en">Conditions can be set for the lowest or highest day prices, in order to apply percentage surcharges or discounts. In contrast to the DayIndex, the travel days in this case are not sorted according to travel itinerary, but according to ascending DayPrice levels and therefore receive positive and negative indices in the same way as the DayIndex. The comparison of the indices via From and Until can then occur in a similar way as with DayIndex. For the evaluation of the day price, in order to perform the right sorting, certain classes of PriceItems can be included or excluded with the Not-/ConsideredPriceItemClasses. With <code>ConsideredPriceItems</code> , it is possible to specify which price components the condition refers to. Here one or several PriceItem classes can be specified. If there is no entry, all valid price components of this component will be considered.</para>

						<para xml:id="de_1079" xml:lang="de">Bedingungen an den Tagespreis können erst ausgewertet werden, wenn die
							Kombinatorik vollständig abgeschlossen ist und aus den verbleibenden gültigen
							PriceItems erstmalig die Tagespreise berechenbar sind. Dies erfolgt durch die
							Angabe einer <code>Condition</code> mit dem Attribut
								<code>ImpactExecutionOrder="Last"</code> im Element <code>DayPriceIndex</code>
							unterhalb von <code>DayImpact</code>. Diese <code>Condition</code> bezieht sich
							auf die günstigsten oder teuersten Tagespreise bzw. Tagespreisanteile, um
							prozentuale Auf- oder Abschläge darauf anzuwenden. Die Adressierung der teuersten
							bzw. günstigsten Tage erfolgt durch Angabe eines Index. </para><para xml:id="en_1079" xml:lang="en">The conditions for the day price can first be evaluated when the combinatorics has been fully completed and the day prices are for the first time calculable from the remaining valid PriceItems. This occurs through the specification of a <code>Condition</code> with the attribute <code>ImpactExecutionOrder="Last"</code> in the element <code>DayPriceIndex</code> below <code>DayImpact</code> . This <code>Condition</code> refers to the lowest or highest day prices or day price components, in order to apply percentage surcharges or discounts. The addressing of the highest or lowest priced days occurs through the specification of an index.</para>
						<para xml:id="de_1080" xml:lang="de">Durch das optionale Attribut <code>Source</code> kann der Kontext der
							betrachteten Reisetermine bestimmt werden (z.B.: Termine der Gesamtreise, des
							Hotels oder des Fluges). Dadurch kann die Menge der betrachteten Tage
							eingeschränkt werden, auf die die Condition angewendet wird.</para><para xml:id="en_1080" xml:lang="en">Through the optional attribute <code>Source</code> , the context of the regarded travel dates can be defined (e.g. dates of the entire trip, the hotel or the flight). In this way the number of regarded days can be limited to those to which the condition refers.</para>
						<programlisting><![CDATA[<PriceItem Class="BasePrice">
  <Percent>
    ...
  </Percent>
  <Condition>
    <DayImpact ImpactExecutionOrder="Last">
      <DayPriceIndex>
        <Until>2<Until>
        <ConsideredPriceItems />
      </DayPriceIndex>
    </DayImpact>
  </Condition>
  
  <Combinatorics>
    ... (Kombinatorik ist bereits abgeschlossen bei Ausführung 
         von Conditions mit ImpactExecutionOrder="Last") ...
  </Combinatorics>
</PriceItem>]]></programlisting>
						<para xml:id="de_1081" xml:lang="de">Im Beispiel bezieht sich <code>Until=2</code> auf die zwei günstigsten Tage der
							Reise. Um die teuersten Tage zu adressieren, wird <code>From=-2</code> angegeben.
							Positive Indices beziehen sich auf die billigsten Tage, negative Indices beziehen
							sich auf die teuersten Tage. Mit <code>Until</code> addressiert man alle Tage
							"bis" zu einem angegebenen Index. Mit <code>From</code> addressiert man alle Tage
							"ab" einem angegebenen Index.</para><para xml:id="en_1081" xml:lang="en">In the example, <code>Until=2</code> refers to the two lowest priced days of the journey. In order to address the days with the highest prices, <code>From=-2</code> is specified. Positive indices refer to the days with the lowest prices, negative indices refer to the days with the highest prices. With <code>Until</code> one addresses all days "until" a specified index. With <code>From</code> one addresses all days "from" a specified index.</para>
						<para xml:id="de_1082" xml:lang="de">Weitere Details finden Sie in der <link xlink:href="./technisch/otds_technisch.html#DayPriceIndex">Technischen
								Dokumentation für OTDS </link>.</para><para xml:id="en_1082" xml:lang="en">Further details can be found in the <link xlink:href="./technisch/otds_technisch.html#DayPriceIndex">Technical documentation for OTDS</link> .</para>

					</section>
					<section xml:id="OtdsStrategyConditionProductPrice">
						<title><phrase xml:id="de_1083" xml:lang="de">Bedingung an die Preishöhe einer
								Productdefinition (ProductPriceCondition) (V1.9)</phrase><phrase
								xml:id="en_1083" xml:lang="en">Condition for the price level of a
								product definition (ProductPriceCondition) (V1.9)</phrase></title>
						<figure>
							<title><phrase xml:id="de_1084" xml:lang="de">ProductPriceCondition</phrase><phrase xml:id="en_1084" xml:lang="en">ProductPriceCondition</phrase></title>
							<mediaobject>
								<imageobject>
									<imagedata fileref="figures/productPriceCondition.png" format="PNG" contentwidth="70%"/>
								</imageobject>
								<textobject>
									<para xml:id="de_1085" xml:lang="de">ProductPriceCondition</para><para xml:id="en_1085" xml:lang="en">ProductPriceCondition</para>
								</textobject>
								<caption>
									<para xml:id="de_1086" xml:lang="de"> </para><para xml:id="en_1086" xml:lang="en"/>
								</caption>
							</mediaobject>
						</figure>
						<para xml:id="de_1087" xml:lang="de">Mit der ProducePriceCondition können Bedingungen an Preis einer Produktdefinition gestellt werden. Die
							Besonderheit dieser Bedingung ist, dass sich sich ausschließlich auf den Endpreis eines
							Produktes bezieht. Das bedeutet wenn die ProductPrice-Condition genutzt werden soll, dann
							müssen mindestens zwei Produktdefinitionen im OTDS existieren. Das folgende XML zeigt ein
							Beispiel für zwei Produktdefintionen.</para><para xml:id="en_1087" xml:lang="en">With the ProductPriceCondition conditions can be set for the price level of a product definition. The special feature of this condition is that it relates exclusively to the final price of a product. That means that when the ProductPrice condition is to be used, at least two product definitions must exist in the OTDS. The following XML shows an example for two product definitions.</para>
						<programlisting><![CDATA[<Products>
        <Product Key="Accom" ProductType="AccommodationOnly">
            <Components>
                <Accommodation/>
            </Components>
        </Product>
        <!-- Versicherungen die z.B. eine Preisabhängigkeit beinhalten, können immer nur als AddOn Komponente mit einer bestehenden Produktkomponente auftreten.
        Die Produktkomponente ist die Komponente auf die sich der Versicherungspreise beziehen -->
        <Product ProductType="Addon" Key="Versicherung">
            <Components>
                <ProductComponent Name="ProductForInsurance" ProductType="FlightAccommodation"/>
                <Addon/>
            </Components>
        </Product>
    </Products>]]></programlisting>
						<para xml:id="de_1088" xml:lang="de">Das erste (<code>Product</code>) definiert ein (<code>AccommodationOnly</code>) Produkt. Bei der Definition
							dieses Produktes muss noch nichts besonderes beachtet werden wenn der Gesamtpreis einem
							anderem Produkt in der (<code>ProductPrice</code>)-Condition zur Verfügung stehen soll. Das
							zweite (<code>Product</code>) (im Beispiel eine Versicherungsleistung) hat zum Ersten eine
								(<code>ProductComponent</code>) und dazu noch mindestens eine weitere Komponenten. In
							diesem Beispiel ist es eine (<code>Addon</code>)-Komponente. Aus der
								(<code>ProductComponent</code>) kann der Gesamtpreis genutzt werden um diesen als
							Bedingung in der (<code>ProductPrice</code>)-Condition in der
							(<code>Addon</code>)-Komponente zu nutzen.</para><para xml:id="en_1088" xml:lang="en">The first (<code>Product</code> ) defines a (<code>AccommodationOnly</code> ) product. With the definition of this product, nothing particularly has to be taken into consideration if the total price of another product is to be available in the (<code>ProductPrice</code> ) condition. The second (<code>Product</code> ) (in the example an insurance service) firstly has a (<code>ProductComponent</code> ) and then at least one additional component. In this example it is an (<code>Addon</code> ) component. From the (<code>ProductComponent</code> ), the total price can be used in order to use this as a condition in the (<code>ProductPrice</code> )condition in the (<code>Addon</code> ) component.</para>
						<para role="" xml:id="de_1089" xml:lang="de">Die einfachste Art der Preisabhängigkeit ist die Abhängigkeit auf den Gesamtpreis aller Teilnehmer.
							Um diese Anforderung zu erfüllen wird die <code>ProductPrice</code>-Condition eingeführt.
							Das Beispiel zeigt einen dreifach gestaffelten Versicherungspreis innerhalb der
								<code>Addon</code>-Komponente. Das Attribut <code>ConsiderationBase</code> gibt an
							welcher Anteil des Produktpreises betrachtet wird. In diesem Fall (<code>Total</code>) wird
							der Gesamtpreis für alle Teilnehmer, über alle Tage betrachtet.</para><para role="" xml:id="en_1089" xml:lang="en">The simplest form of price dependency is the dependency on the total price for all participants. To meet this requirement the<code>ProductPrice</code> condition is introduced. The example shows a three-tiered insurance price within the <code>Addon</code> component. The attribute <code>ConsiderationBase</code> states which part of the product price should be considered. In this case (<code>Total</code> ) the total price for all participants and all days is considered.</para>
						<para xml:id="de_1090" xml:lang="de">
							<programlisting><![CDATA[<Addon Key="VERS1">
    …
    <PriceItems Key="Prices">
        <PriceItem Class="VERS">
            <Absolute>
                <Value>12</Value>
                <DayBase>x</DayBase>
                <PersonBase>1</PersonBase>
            </Absolute>
            <Condition>
                <ProductPrice ConsiderationBase="Total">
                    <Max>1000.00</Max>
                </ProductPrice>
            </Condition>
        </PriceItem>
        <PriceItem Class="VERS">
            <Absolute>
                <Value>17</Value>
                <DayBase>x</DayBase>
                <PersonBase>1</PersonBase>
            </Absolute>
            <Condition>
                <ProductPrice ConsiderationBase="Total">
                    <Min>1000.01</Min>
                    <Max>1500.00</Max>
                </ProductPrice>
            </Condition>
        </PriceItem>
        <PriceItem Class="VERS">
            <Absolute>
                <Value>20</Value>
                <DayBase>x</DayBase>
                <PersonBase>1</PersonBase>
            </Absolute>
            <Condition>
                <ProductPrice ConsiderationBase="Total">
                    <Min>1500.01</Min>
                </ProductPrice>
            </Condition>
        </PriceItem>
    </PriceItems>
</Addon>]]>					</programlisting>
						</para><para xml:id="en_1090" xml:lang="en">
							<programlisting>
								<![CDATA[<Addon Key="VERS1">
    …
    <PriceItems Key="Prices">
        <PriceItem Class="VERS">
            <Absolute>
                <Value>12</Value>
                <DayBase>x</DayBase>
                <PersonBase>1</PersonBase>
            </Absolute>
            <Condition>
                <ProductPrice ConsiderationBase="Total">
                    <Max>1000.00</Max>
                </ProductPrice>
            </Condition>
        </PriceItem>
        <PriceItem Class="VERS">
            <Absolute>
                <Value>17</Value>
                <DayBase>x</DayBase>
                <PersonBase>1</PersonBase>
            </Absolute>
            <Condition>
                <ProductPrice ConsiderationBase="Total">
                    <Min>1000.01</Min>
                    <Max>1500.00</Max>
                </ProductPrice>
            </Condition>
        </PriceItem>
        <PriceItem Class="VERS">
            <Absolute>
                <Value>20</Value>
                <DayBase>x</DayBase>
                <PersonBase>1</PersonBase>
            </Absolute>
            <Condition>
                <ProductPrice ConsiderationBase="Total">
                    <Min>1500.01</Min>
                </ProductPrice>
            </Condition>
        </PriceItem>
    </PriceItems>
</Addon>]]>					</programlisting>
						</para>
						<para xml:id="de_1091" xml:lang="de">Für den Fall das sich eine Preisabhängigkeit nicht auf den Gesamtpreis für alle Teilnehmer bezieht, sondern
							Preise je Teilnehmer abhängig vom jeweiligen Teilnehmerpreis sind, müssen weitere Elemente
							ergänzt werden. Zur Abbildung der Teilnehmerpreisabhängigkeit wird das
								<code>PersonImpact</code> Element um die <code>ProductPrice</code>-Condition erweitert.
							Im Attribut <code>ConsiderationBase</code> innerhalb der <code>ProductPrice</code>-Condition
							wird mit dem Wert <code>Person</code> der Bezug zum Personenpreisanteil bestimmt. Zusätzlich
							wird in der <code>PersonImpact</code>-Condition definiert das sich der Preis nur auf
							Personen ab 2 Jahren auswirken soll.</para><para xml:id="en_1091" xml:lang="en">In the case that a price dependency does not refer to the total price for all participants, but rather the price per participant is dependant on respective participant prices, further elements must be completed. To depict the participant price dependency, the <code>PersonImpact</code> element is expanded with the <code>ProductPrice</code> -condition. In the attribute <code>ConsiderationBase</code> within the <code>ProductPrice</code> condition, the connection to the persons price part is determined with the value <code>Person</code> . In addition, the <code>PersonImpact</code> condition defines that the price should only apply to persons from 2 years on.</para>
						<para xml:id="de_1092" xml:lang="de">
							<programlisting><![CDATA[<Addon Key="VERS2">
    …
    <PriceItems Key="Prices">
        <PriceItem Class="VERS">
            <Absolute>
                <Value>7</Value>
                <DayBase>x</DayBase>
                <PersonBase>1</PersonBase>
            </Absolute>
            <Condition>
            	<And>
	                <PersonImpact>
	                    <ProductPrice ConsiderationBase="Person">
	                        <Max>500.00</Max>
	                    </ProductPrice>
	                </PersonImpact>
	                <PersonImpact>
						<PersonAge>
							<Min>2</Min>
						</PersonAge>
	                </PersonImpact>
				</And>
            </Condition>
        </PriceItem>
        <PriceItem Class="VERS">
            <Absolute>
                <Value>9</Value>
                <DayBase>x</DayBase>
                <PersonBase>1</PersonBase>
            </Absolute>
            <Condition>
            	<And>
	                <PersonImpact>
	                    <ProductPrice ConsiderationBase="Person">
	                        <Min>500.01</Min>
	                        <Max>1000.00</Max>
	                    </ProductPrice>
	                </PersonImpact>
	                <PersonImpact>
						<PersonAge>
							<Min>2</Min>
						</PersonAge>
	                </PersonImpact>
				</And>
            </Condition>
        </PriceItem>
        <PriceItem Class="VERS">
            <Absolute>
                <Value>13</Value>
                <DayBase>x</DayBase>
                <PersonBase>1</PersonBase>
            </Absolute>
            <Condition>
            	<And>
	                <PersonImpact>
	                    <ProductPrice ConsiderationBase="Person">
	                        <Min>1000.01</Min>
	                    </ProductPrice>
	                </PersonImpact>
	                <PersonImpact>
						<PersonAge>
							<Min>2</Min>
						</PersonAge>
		            </PersonImpact>
				</And>
            </Condition>
        </PriceItem>
    </PriceItems>
</Addon>]]>							</programlisting>

							</para><para xml:id="en_1092" xml:lang="en">
							<programlisting>
								<![CDATA[<Addon Key="VERS2">
    …
    <PriceItems Key="Prices">
        <PriceItem Class="VERS">
            <Absolute>
                <Value>7</Value>
                <DayBase>x</DayBase>
                <PersonBase>1</PersonBase>
            </Absolute>
            <Condition>
            	<And>
	                <PersonImpact>
	                    <ProductPrice ConsiderationBase="Person">
	                        <Max>500.00</Max>
	                    </ProductPrice>
	                </PersonImpact>
	                <PersonImpact>
						<PersonAge>
							<Min>2</Min>
						</PersonAge>
	                </PersonImpact>
				</And>
            </Condition>
        </PriceItem>
        <PriceItem Class="VERS">
            <Absolute>
                <Value>9</Value>
                <DayBase>x</DayBase>
                <PersonBase>1</PersonBase>
            </Absolute>
            <Condition>
            	<And>
	                <PersonImpact>
	                    <ProductPrice ConsiderationBase="Person">
	                        <Min>500.01</Min>
	                        <Max>1000.00</Max>
	                    </ProductPrice>
	                </PersonImpact>
	                <PersonImpact>
						<PersonAge>
							<Min>2</Min>
						</PersonAge>
	                </PersonImpact>
				</And>
            </Condition>
        </PriceItem>
        <PriceItem Class="VERS">
            <Absolute>
                <Value>13</Value>
                <DayBase>x</DayBase>
                <PersonBase>1</PersonBase>
            </Absolute>
            <Condition>
            	<And>
	                <PersonImpact>
	                    <ProductPrice ConsiderationBase="Person">
	                        <Min>1000.01</Min>
	                    </ProductPrice>
	                </PersonImpact>
	                <PersonImpact>
						<PersonAge>
							<Min>2</Min>
						</PersonAge>
		            </PersonImpact>
				</And>
            </Condition>
        </PriceItem>
    </PriceItems>
</Addon>]]>							</programlisting>

						</para>
						<para xml:id="de_1093" xml:lang="de">								<link xlink:href="../../example/ProductPriceCondition_Versicherung.xml">Beispiele für den Einsatz einer
							ProductPrice-Condition</link>
						</para><para xml:id="en_1093" xml:lang="en">
							<link xlink:href="../../example/ProductPriceCondition_Versicherung.xml">Examples for the implementation of a ProductPrice condition</link>
						</para>

						<para xml:id="de_1094" xml:lang="de">Weitere Details finden Sie in der <link xlink:href="./technisch/otds_technisch.html#DayPriceIndex">Technischen
							Dokumentation für OTDS </link>.</para><para xml:id="en_1094" xml:lang="en">Further details can be found in the <link xlink:href="./technisch/otds_technisch.html#DayPriceIndex">Technical documentation for OTDS</link>.</para>
						
					</section>					
					<section xml:id="OtdsStrategyConditionBasicsGlobalValues">
						<title><phrase xml:id="de_1095" xml:lang="de">Konfigurationsparameter (GlobalValues)</phrase><phrase xml:id="en_1095" xml:lang="en">Configuration parameter (GlobalValues)</phrase></title>
						<para xml:id="de_1096" xml:lang="de">GlobalValues sind Werte, die in OTDS durch das Vertriebssystem von außen
							vorgegeben werden. Die Angabe der GlobalValues erfolgt in dem Zweig "Products".
							Die Werte fließen in die Produktbildung und Preisberechnung mit ein. Beispiele für
							GlobalValues sind die Angabe von Subcontractors (Exklusivkunden) oder spezifischen
							SalesChannel wie Onlinevertrieb und Reisebürovertrieb. </para><para xml:id="en_1096" xml:lang="en">GlobalValues are values which are predefined externally by the sales system in OTDS. The specification of the GlobalValues is carried out in the "Products" branch. The values enter into the product creation and price calculation. Examples for GlobalValues are the specification of subcontractors (exclusive clients) or specific SalesChannels such as online sales and travel agency sales.</para>
						<para xml:id="de_1097" xml:lang="de">Auf die Konfigurationsparameter kann durch Keys-Conditions und Tags-Conditions
							Bezug genommen werden.</para><para xml:id="en_1097" xml:lang="en">The configuration parameter can be referred to in Keys conditions and Tags conditions.</para>
						<figure>
							<info>
								<title><phrase xml:id="de_1098" xml:lang="de">GlobalValues</phrase><phrase xml:id="en_1098" xml:lang="en">GlobalValues</phrase></title>
							</info>
							<mediaobject>
								<imageobject>
									<imagedata fileref="figures/globalvalues.png" format="PNG" contentwidth="80%"/>
								</imageobject>
								<textobject>
									<para xml:id="de_1099" xml:lang="de">GlobalValues</para><para xml:id="en_1099" xml:lang="en">GlobalValues</para>
								</textobject>
							</mediaobject>
						</figure>
						<para xml:id="de_1100" xml:lang="de">Weitere Informationen finden Sie in der <link xlink:href="./technisch/otds_technisch.html#GlobalValues">Technischen
								Dokumentation für OTDS </link>.</para><para xml:id="en_1100" xml:lang="en">Please obtain further information from the <link xlink:href="./technisch/otds_technisch.html#GlobalValues">Technical documentation for OTDS</link> .</para>

					</section>
				</section>
				<section xml:id="OtdsStrategyConditionBoolOperation">
					<title><phrase xml:id="de_1101" xml:lang="de">Logische Verknüpfungen der Bedingungen</phrase><phrase xml:id="en_1101" xml:lang="en">Logical connectives of the conditions</phrase></title>
					
						<bridgehead xml:id="de_1102" xml:lang="de">Logische Verknüpfungen</bridgehead><bridgehead xml:id="en_1102" xml:lang="en">Logical connectives</bridgehead>
						<para xml:id="de_1103" xml:lang="de">Mehrere Bedingungen können mit Hilfe boolescher Operatoren (And, Or, Not) oder
							Imply (If ... Then ...) verknüpft werden. Die booleschen Operatoren können
							verschachtelt werden:</para><para xml:id="en_1103" xml:lang="en">Several conditions can be connected through the use of Boolean operators (And, Or, Not) or Imply (If ... Then ...). The Boolean operators can be encapsulated:</para>
					
					<informaltable>
						<tgroup cols="2">
							<colspec colnum="1" colname="c1" colwidth="105.75pt"/>
							<colspec colnum="2" colname="c2" colwidth="669.75pt"/>
							<tbody valign="top">
								<row valign="top">
									<entry>
										<para xml:id="de_1104" xml:lang="de">And</para><para xml:id="en_1104" xml:lang="en">And</para>
									</entry>
									<entry>
										<para xml:id="de_1105" xml:lang="de">Alle der mindestens zwei Bedingungen müssen erfüllt sein.</para><para xml:id="en_1105" xml:lang="en">All of the at least two conditions must be met.</para>
									</entry>
								</row>
								<row valign="top">
									<entry>
										<para xml:id="de_1106" xml:lang="de">Or</para><para xml:id="en_1106" xml:lang="en">Or</para>
									</entry>
									<entry>
										<para xml:id="de_1107" xml:lang="de">Eine der Bedingungen muss erfüllt sein. Es muss mindestens eine
											Bedingung angegeben werden.</para><para xml:id="en_1107" xml:lang="en">One of the conditions must be met. At least one condition must be provided.</para>
									</entry>
								</row>
								<row valign="top">
									<entry>
										<para xml:id="de_1108" xml:lang="de">Not</para><para xml:id="en_1108" xml:lang="en">Not</para>
									</entry>
									<entry>
										<para xml:id="de_1109" xml:lang="de">Die Bedingung wird negiert bzw. ausgeschlossen. Es muss genau
											eine Bedingung angegeben werden.</para><para xml:id="en_1109" xml:lang="en">The condition is negated and excluded. Precisely one condition must be provided.</para>
									</entry>
								</row>
								<row valign="top">
									<entry>
										<para xml:id="de_1110" xml:lang="de">Imply: If ... Then ...</para><para xml:id="en_1110" xml:lang="en">Imply: If ... Then ...</para>
									</entry>
									<entry>
										<para xml:id="de_1111" xml:lang="de">Mit Imply können<emphasis role="italic"> If...
												Then...</emphasis> Konstrukte abgebildet werden, mit der sich
											eine Wenn-Dann-Implikation ausdrücken lässt. Diese werden dazu
											gebraucht, um zum Beispiel eine Einschränkung in einem
											eingegrenzten Kontext zu definieren. Die Impliktaion wird durch
											folgende Wahrheitstabelle definiert: 
										</para><para xml:id="en_1111" xml:lang="en">With Imply <emphasis role="italic">If... Then...</emphasis> constructs can be depicted, which can be expressed as an If-Then implication. These are required to define, for example, a restriction in a contained context. The implication is defined with the following truth table:</para>
										<table>
											<title><phrase xml:id="de_1112" xml:lang="de">Wahrheitstabelle von <emphasis role="italic"> If...
												Then...</emphasis></phrase><phrase xml:id="en_1112" xml:lang="en">Truth table of <emphasis role="italic">If... Then...</emphasis>
												</phrase></title>
											<tgroup cols="3" align="left" colsep="1" rowsep="1">
												<thead>
												<row>
												<entry>If</entry>
												<entry>Then</entry>
												<entry>Ergebnis der Implikation</entry>
												</row>
												</thead>
												<tbody>
												<row>
												<entry>wahr</entry>
												<entry>wahr</entry>
												<entry>wahr</entry>
												</row>
												<row>
												<entry>wahr</entry>
												<entry>falsch</entry>
												<entry>falsch</entry>
												</row>
												<row>
												<entry>falsch</entry>
												<entry>wahr</entry>
												<entry>wahr</entry>
												</row>
												<row>
												<entry>falsch</entry>
												<entry>falsch</entry>
												<entry>wahr</entry>
												</row>
												</tbody>
											</tgroup>
										</table>
										<para xml:id="det_4954" xml:lang="de">
											Die Implikation lässt sich folgendermaßen interpretieren:
												Nur wenn der If-Zweig wahr ist, wird der Then-Zweig ausgewertet
												(ansonsten ist die gesamte Bedingung wahr). Umgesetzt werden kann
												die Implikation "IF A THEN B" mathematisch äquivalent durch "(NOT
												A) OR B".
										</para>
									</entry>
								</row>
							</tbody>
						</tgroup>
					</informaltable>
					<para xml:id="de_1113" xml:lang="de">Das folgende Beispiel zeigt eine Condition, die <emphasis role="italic">And</emphasis>, <emphasis role="italic">Or</emphasis> sowie <emphasis role="italic">Not</emphasis> nutzt:</para><para xml:id="en_1113" xml:lang="en">The following example shows a condition, which uses <emphasis role="italic">And</emphasis>, <emphasis role="italic">Or</emphasis> and <emphasis role="italic">Not</emphasis>:</para>
					<programlisting><![CDATA[<Condition>
  <Or>
    <And>
      <Date Source="Accommodation" DayType="CheckOut">
        <Min>2011-12-11</Min>
      </Date>
      <Duration Source="Accommodation">
        <Min>6</Min>
      </Duration>
      <Not>
        <Weekdays Source="Accommodation" Type="CheckIn">Fri Mon</Weekdays>
      </Not>
    </And>
    <Keys Source="Accommodation">PMI215</Keys>
  </Or>
</Condition>]]></programlisting>
					<para xml:id="de_1114" xml:lang="de">Das nächste Beispiel zeigt eine Condition unter Verwendung von <emphasis role="italic">Imply</emphasis>: Es ist eine MinDauer von 3 Tagen verlangt. Wenn
						als Verpflegung "VP" vorliegt, erhöht sich die MinDauer auf 5 Tage (MinDauer=3 And
						MinDauer=5):</para><para xml:id="en_1114" xml:lang="en">The next example shows a condition using <emphasis role="italic">Imply</emphasis>: A minimum duration of 3 days is required. If "FB" is specified under board, the minimum duration increases to 5 days (MinDuration=3 And MinDuration=5):</para>
					<programlisting><![CDATA[<Condition>
  <And>
    <Duration Source="Accommodation">
      <Min>3</Min>
    </Duration>
    <Imply>
      <If>
        <Keys Source="Accommodation.SellingAccom.Board">VP</Keys>
      </If>
      <Then>
        <Duration Source="Accommodation">
          <Min>5</Min>
        </Duration>
      </Then>
    </Imply>
  </And>
</Condition>]]></programlisting>
				</section>
			</section>
			<section xml:id="OtdsStrategyRules">
				<title><phrase xml:id="de_1115" xml:lang="de">Regelwerke zur Bildung von Produkten und Kombination von Komponenten</phrase><phrase xml:id="en_1115" xml:lang="en">Rule sets for the compilation of products and combination of components</phrase></title>
				<section>
					<title><phrase xml:id="de_1116" xml:lang="de">Überblick</phrase><phrase xml:id="en_1116" xml:lang="en">Overview</phrase></title>
					<para xml:id="de_1117" xml:lang="de">Wie bereits im Kapitel <link linkend="OtdsStrategyComponentProducts">Produktregeln</link> und <link linkend="OtdsStrategyComponentDefinedComponents">Kombinierte Komponenten</link> erwähnt, werden in OTDS einheitliche aber trotzdem
						sehr flexible Regeln zur Kombinationen von Komponenten verwendet. Aus Komponenten
						werden dabei Produkte oder auch neue erweiterte Komponenten. </para><para xml:id="en_1117" xml:lang="en">As has already been mentioned in the chapters <link linkend="OtdsStrategyComponentProducts">Product Rules</link> and <link linkend="OtdsStrategyComponentDefinedComponents">Combined Components</link>, OTDS uses consistent, but nevertheless very flexible rules for the combination of components. In this way components are used to make products or new extended components.</para>
					<para xml:id="de_1118" xml:lang="de">Diese Regeln sind eine Erweiterung der Filter um die Angabe der beteiligten
						Komponenten und die zusätzliche Filtermöglichkeit "MatchEqual". Wie bereits im
						vorherigen Kapitel beschrieben ist MatchEqual ausschließlich für die Verwendung in
						diesen Regelwerken vorgesehen. MatchEqual ist die einzige Condition, die mehrere
						Komponenten miteinander vergleicht.</para><para xml:id="en_1118" xml:lang="en">These rules are an extension of the filter for the specification of components involved and the additional possible filter "MatchEqual". As has already been described in the previous chapter, MatchEqual is intended exclusively for use in these rule sets. MatchEqual is the only condition which compares several components with one another.</para>
					<para xml:id="de_1119" xml:lang="de">Mit Hilfe dieser Funktionalität lassen sich weitreichende Kombinationsmöglichkeiten
						von Komponenten beschreiben. Wie das funktioniert zeigen wir einmal anhand einer
						Produktdefinition und einmal anhand einer Flugerweiterung</para><para xml:id="en_1119" xml:lang="en">With the aid of this functionality, extensive potential combinations of components can be described. We will show how this works, once with reference to a product definition and once with reference to a flight extension.</para>
					<figure>
						<title><phrase xml:id="de_1120" xml:lang="de">Products</phrase><phrase xml:id="en_1120" xml:lang="en">Products</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/products.png" contentwidth="60%"/>
							</imageobject>
							<textobject>
								<para xml:id="de_1121" xml:lang="de">Products</para><para xml:id="en_1121" xml:lang="en">Products</para>
							</textobject>
						</mediaobject>
					</figure>

				</section>
				<section xml:id="OtdsStrategyRulesProductDefinition">
					<title><phrase xml:id="de_1122" xml:lang="de">Produktdefinition</phrase><phrase xml:id="en_1122" xml:lang="en">Product definition</phrase></title>
					<para xml:id="de_1123" xml:lang="de"> Produkte setzen sich aus den folgenden Komponenten zusammen:</para><para xml:id="en_1123" xml:lang="en">Products are compiled from the following components:</para>
					<itemizedlist>
						<listitem>
							<para xml:id="de_1124" xml:lang="de">Accommodation</para><para xml:id="en_1124" xml:lang="en">Accommodation</para>
						</listitem>
						<listitem>
							<para xml:id="de_1125" xml:lang="de">OnewayFlight</para><para xml:id="en_1125" xml:lang="en">OnewayFlight</para>
						</listitem>
						<listitem>
							<para xml:id="de_1126" xml:lang="de">ReturnFlight</para><para xml:id="en_1126" xml:lang="en">ReturnFlight</para>
						</listitem>
						<listitem>
							<para xml:id="de_1127" xml:lang="de">Addon</para><para xml:id="en_1127" xml:lang="en">Addon</para>
						</listitem>
						<listitem>
							<para xml:id="de_1128" xml:lang="de">Neu definierte Komponenten (<code>DefinedComponent</code>)</para><para xml:id="en_1128" xml:lang="en">Newly defined components (<code>DefinedComponent</code> )</para>
						</listitem>
						<listitem>
							<para xml:id="de_1129" xml:lang="de">Bereits definierte Produkte als Bezugskomponente
									(<code>ProductComponent</code>)</para><para xml:id="en_1129" xml:lang="en">Products which have already been defined as reference components (<code>ProductComponent</code> )</para>
						</listitem>
					</itemizedlist>
					<figure>
						<title><phrase xml:id="de_1130" xml:lang="de">Produktdefinition - Product</phrase><phrase xml:id="en_1130" xml:lang="en">Product definition - Product</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/product.png" contentwidth="40%"/>
							</imageobject>
							<textobject>
								<para xml:id="de_1131" xml:lang="de">Produktdefinition - Product</para><para xml:id="en_1131" xml:lang="en">Product definition - Product</para>
							</textobject>
						</mediaobject>
					</figure>
					<para xml:id="de_1132" xml:lang="de">Um ein Produkt zu definieren, wird ein neues Element <code>Product</code> im Zweig
						Products angelegt. Ein Zweig <code>Product</code> enthält mindestens eine Regel,
						welche die Erzeugung von Angeboten aus den Komponenten beschreibt. Es ist ebenso
						möglich, mehr als nur eine Regel anzugeben. In diesem Fall werden alle Regeln
						nacheinander angewendet und die erzeugten Angebote kumuliert unter Ausschluss gleicher
						Angebote. Eine Produktregel enthält mindestens eine Komponente im Zweig "Components"
						und ggf. weitere Filter Parameter bzgl. der Eigenschaften der Komponenten um das
						Produkt genauer einzuschränken.</para><para xml:id="en_1132" xml:lang="en">In order to define a product, a new <code>Product</code> element is placed in the "Products" branch. A <code>Product</code> branch contains at least one rule which describes the creation of offers from the components. It is also possible to specify more than just one rule. In this case, all rules are used after each other and the resulting offers cumulate, excluding identical offers. A product rule contains at least one component in the "Components" branch and sometimes additional filter parameters relating to the properties of the components to further refine the product.</para>
					<para xml:id="de_1133" xml:lang="de"> Beispiel für eine Produktdefinition</para><para xml:id="en_1133" xml:lang="en">Example for a product definition</para>
					<programlisting><![CDATA[<Products>
   <Product Key="Package2" ProductType="FlightAccommodation">
			<Components>
				<Accommodation Name="Unterkunft"/>
				<ReturnFlight/>
			</Components>
			<Filter>
				<And>
					<Not>
						<Keys Source="Accommodation">FUE102</Keys>
					</Not>
					<MatchEqual>
						<Tag Source="#Unterkunft" Class="Reiseart"/>
						<Tag Source="ReturnFlight" Class="Reiseart"/>
					</MatchEqual>
					<MatchEqual>
						<Element Source="Accommodation">CatchmentAirport</Element>
						<Element Source="ReturnFlight.Outbound">ArrivalAirport</Element>
					</MatchEqual>
				</And>
			</Filter>
		</Product>
  </Products>]]></programlisting>
					<para xml:id="de_1134" xml:lang="de">Im obigen Beispiel sind als Komponenten <code>Accommodation</code> und
							<code>ReturnFlight</code> angegeben. Die Produktdefinition beschreibt ein
						Pauschalangebot mit Flug und Unterkunft. Durch dieses Regelwerk können sehr flexibel
						alle Einzelkomponenten zu komplexen verkaufbaren Produkten zusammengefügt werden. Das
						funktioniert für Nur-Hotel-Produkte, Nur-Flug-Produkte, aber auch für Pauschalprodukte
						und eventuelle Zusatzleistungen. Dabei können den verschiedenen Angeboten ein oder
						mehrere passende Addons hinzugefügt werden. In dem Element <code>Booking</code> kann
						definiert werden, dass die Buchungsinformationen der Einzelkomponenten komplett
						überschrieben werden. Im Flugbereich wird dies häufig bei der Definition von
						Flughülsen verwendet, die die Buchungsinformationen der beteiligten Einzelflüge
						überschreiben. Im Bereich <code>Products</code> ist uns zurzeit kein Anwendungsfall
						analog zu den Flughülsen bekannt. Denkbar ist die Verwendung bei einer späteren
						Integration von Rundreisen. </para><para xml:id="en_1134" xml:lang="en">In the above example, the components <code>Accommodation</code> and <code>ReturnFlight</code> are specified. The product definition describes a package offer with flight and accommodation. Through this rule set, all individual components can be flexibly combined to form complex saleable products. This works for Hotel-Only products and Flight-Only products, as well as for package products and possible additional services. In doing this, one or several compatible Addons can be added on to the various offers. In the element <code>Booking</code> , it is possible to specify that the booking information of the individual components should be completely overwritten. In the context of flights, this is commonly used in defining flight wrappers that override the booking information of the individual flights involved. In the field <code>Products</code> , we are currently unaware of any application situations analogous to the flight wrappers. It is possible to imagine a usage in the case of a future integration of round trips.</para>
					<bridgehead xml:id="de_1135" xml:lang="de">Filter</bridgehead><bridgehead xml:id="en_1135" xml:lang="en">Filter</bridgehead>
					<para xml:id="de_1136" xml:lang="de">Durch Filterbedingungen (Filter) kann die Angebotsmenge beschränkt werden. Ein
							<code>Filter</code> kann zahlreiche Bedingungen enthalten, die sehr weitreichend
						miteinander logisch verknüpft werden können (siehe dazu das Kapitel <link linkend="OtdsStrategyConditionBoolOperation">Logische Verknüpfungen</link>). Diese
						Bedingungen können sich beispielsweise auf Termine oder Dauern beziehen.
						"Tag"-Bedingungen beziehen sich auf Tags, um Markierungen bestimmter Komponenten zu
						prüfen.</para><para xml:id="en_1136" xml:lang="en">Filter conditions (Filters) can be used to restrict the amount of offers. A <code>Filter</code> can contain numerous conditions which can be extensively logically connected to one another (see the <link linkend="OtdsStrategyConditionBoolOperation">Logical connections</link> chapter). These conditions could for example refer to dates or durations. "Tag" conditions refer to tags, in order to check the markers of certain components.</para>
					<bridgehead xml:id="OtdsStrategyRulesAttributSource" xml:lang="de">Referenzierung von Komponenten
						(Attribut <code>Source</code>)</bridgehead>
					<para xml:id="de_1137" xml:lang="de">Auf welche der aufgelisteten Komponenten sich die Bedingung bezieht, wird bei jeder
						Bedingung separat über das Attribut "<code>Source</code>" angegeben (siehe
						XML-Beispiel). Zusätzlich zu den vier Reisekomponenten (<code>Accommodation,
							ReturnFlight, OnewayFlight, Addons</code>) können Unterkomponenten referenziert
						werden, beispielsweise <code>Unit, Board, Inbound, Outbound, Addons.Service</code>
						oder die <code>BookingClass</code> bei Flugkomponenten. Die Referenzierung der
						Komponente geschieht über eine Punktnotation. Dabei wird die Hauptkomponente zuerst
						genannt, die Unterkomponenten folgen durch Punkte voneinander getrennt, also
						beispielsweise "<code>Accommodation.Unit</code>". Wenn in einer Produktdefinition
							(<code>Product</code>) mehrere gleiche Komponenten angegeben sind (beispielsweise
						mehrere Onewayflüge), so ist diese Referenzierung nicht mehr eindeutig. Für diesen
						Fall besteht die Notwendigkeit, jeder Komponente durch das Attribut
						"<code>Name</code>" einen eindeutigen Namen zuzuweisen, um sich auf die jeweilige
						Komponente beziehen zu können. Im obigen Beispiel hat die Accommodation Komponente
						exemplarisch den Namen "Unterkunft" bekommen. Die Verwendung von
						Source="Accommodation" und Source="Unterkunft" ist in diesem Fall identisch. Wie
						bereits gesagt kann aber bei mehrfachen gleichartigen Komponenten durch die Verwendung
						der Namen genau eine Komponente referenziert werden. Die Referenzierung über Namen
						kann auch in Verbindung mit der Punkt-Noatation erfolgen z.B.
						Source="#Unterkunft.Unit". Im Regelwerk zur Kombination von Einzelflügen, die dem
						gleichen Regelkonzept folgen, wird beispielsweise die individuelle Benennung gleicher
						Komponenten (=Flüge) notwendig. </para><para xml:id="en_1137" xml:lang="en">Which of the listed components a condition refers to is specified separately for each condition via the attribute "<code>Source</code> " (see XML example). In addition to the four travel components (<code>Accommodation, ReturnFlight, OnewayFlight, Addons</code> ), it is also possible to reference subcomponents, for example <code>Unit, Board, Inbound, Outbound, Addons,Service</code> or the <code>BookingClass</code> for flight components. Components are referenced using dot notation. The main components are named first and the subcomponents follow, separated by dots, e.g. "<code>Accommodation.Unit</code>". If there are several of the same component (several one-way flights, for example) in a product definition (<code>Product</code> ), the referencing is no longer unambiguous. In this case, each component must be allocated a unique name using the "<code>Name</code> " attribute in order to be able to refer to the particular component. In the above example the Accommodation component is given the name "Accommodation". The use of Source="Accommodation" and Source="Unterkunft" is identical in this case. As was previously mentioned, in the case of several components of the same type, one specific component can be referenced using a name. Referencing by name can also be combined with dot notation, e.g. Source="#Accommodation.Unit". In the rule set for the combination of one-way flights, which follow the same rule concept, components that are the same (=flights) are to be individually named.</para>
					<bridgehead xml:id="de_1138" xml:lang="de">Match-Filter</bridgehead><bridgehead xml:id="en_1138" xml:lang="en">Match filter</bridgehead>
					<para xml:id="de_1139" xml:lang="de">Neben den zahlreichen möglichen Bedingungen für Belegung, Saison, Flughafen,
						Verpflegung, Dauer etc. gibt es in diesen Rules darüber hinaus die Möglichkeit, Werte
						miteinander zu vergleichen. Dies geschieht mit Hilfe des Elements "MatchEqual". Es
						lassen sich Werte von Elementen (Unterelement "<code>Element</code>") sowie Tags
						(Unterelement "<code>Tag</code>") miteinander vergleichen. Eine MatchBedingung besteht
						demnach also immer aus mindestens 2 Tag-Referenzen oder 2 Element Referenzen. Die
						Referenzierung erfolgt auch hier in gleicher Weise über das Attribute "Source" und
						zusätzlich durch die Spezifizierung eines bestimmten "Tags" bzw eines bestimmten
						Elementes. </para><para xml:id="en_1139" xml:lang="en">In addition to the numerous possible conditions for Occupancy, Season, Airport, Board, Duration, etc., these rules also allow you to compare values with one another. This can be done using the element "MatchEqual". Values of elements (sub-element "<code>Element</code> ") and tags (sub-element "<code>Tag</code> ") can be compared with one another. A MatchCondition therefore consists of at least 2 tag references or 2 element references. This referencing is done in the same way via the "Source" attribute, and additionally by specifying a certain tag or a certain element.</para>
					<para xml:id="de_1140" xml:lang="de">Es werden die Werte aller angegebenen Referenzen miteinander auf Gleichheit
						überprüft. Eine Matchbedingung ist erfüllt, wenn alle referenzierten Werte gleich
						sind. Der Wertevergleich für Tags kann über die beiden optionalen Attribute
							"<code>Offset</code>" und "<code>Length</code>" genauer spezifiziert werden: Bei
						Angabe wird dann nicht das komplette Tag, sondern nur ein Teil davon beginnend ab der
						Position <code>Offset</code> mit der Länge <code>Length</code> für den Vergleich
						herangezogen. </para><para xml:id="en_1140" xml:lang="en">The values of all specified references are checked against each other for matches. A match condition is met if all referenced values are the same. The value comparison for tags can be more precisely specified using the two optional attributes "<code>Offset</code> " and "<code>Length</code> ": If something is entered here, it will not use the full tag for the comparison, but only the part of it beginning from the position <code>Offset</code> with the length <code>Length</code> .</para>
					<para xml:id="de_1141" xml:lang="de">Im obigen Beispiel kann man sehen, dass die Matchbedingungen mit den anderen
						Bedingungen beliebig logisch verknüpft werden können. </para><para xml:id="en_1141" xml:lang="en">In the example above you can see that the match conditions can be logically connected to any other related conditions.</para>
					<para xml:id="det_1142" xml:lang="de"/>
				</section>
				<section xml:id="OtdsStrategyRulesTags">
					<title><phrase xml:id="de_1143" xml:lang="de">Markierungen (Tags) in Produkten</phrase><phrase xml:id="en_1143" xml:lang="en">Markers (tags) in products</phrase></title>
					<para xml:id="de_1144" xml:lang="de">Innerhalb der Produktdefinition können besondere Markierungen (Tags) festgelegt
						werden. Auf diese Tags kann man sich innerhalb der Komponentendaten beziehen und damit
						spezielle Preise, Verfügbarkeiten oder andere Eigenschaften im Kontext eines
						spezifischen Produktes festlegen. Diese Tags entsprechen in der Regel bereits in den
						Veranstaltersystemen hinterlegten Codes oder Parametern. Alle in einer Produkt-Regel
						vergebenen Markierungen (Tags) gelten für alle Komponenten innerhalb des Produkts. Das
						Produkt selbst kann dadurch, innerhalb der Komponenten als Bedingung bei der
						Preisbildung herangezogen werden. </para><para xml:id="en_1144" xml:lang="en">Within the product definition, special markers (tags) can be defined. You can refer to these tags within the component data, and thereby specify special prices, availability, or other properties in the context of a specific product. These tags correspond to a rule already stored in the tour operator system's codes or parameters. All markers (tags) used in a product rule apply to all components within the product. The product itself may be used, within the components, as a condition in the price formation process.</para>
					<para xml:id="de_1145" xml:lang="de"> Beispiel für ein "Tag" in einem Produkt und die Verwendung in den Preisen:<programlisting><![CDATA[<Products>
  <Product Key="Package1" ProductType="AccommodationOnly">
    <Tag Class="Product">AccomOnly</Tag>
    <Filter>
      ...
    </Filter>
  </Product>
  ...
</Products>
<Accommodations>
	...
	<PriceItem>
		...
		<Condition>
			...
			<Tag Class="Product">AccomOnly</Tag>
		</Condition>
	</PriceItem>
</Accommodations>
]]></programlisting></para><para xml:id="en_1145" xml:lang="en">An example of a "tag" in a product and its use in pricing:<programlisting>
							<![CDATA[<Products>
  <Product Key="Package1" ProductType="AccommodationOnly">
    <Tag Class="Product">AccomOnly</Tag>
    <Filter>
      ...
    </Filter>
  </Product>
  ...
</Products>
<Accommodations>
	...
	<PriceItem>
		...
		<Condition>
			...
			<Tag Class="Product">AccomOnly</Tag>
		</Condition>
	</PriceItem>
</Accommodations>
]]></programlisting>
					</para>
					<para xml:id="de_1146" xml:lang="de">Das obige Beispiel zeigt eine Produktdefinition für den Produkttyp
						"AccommodationOnly". Einige Veranstalter belegen ihre Hotels, die als NurHotelProdukt
						verkauft werden, mit einem Zuschlag. Dadurch dass das Produkt im obigen Beispiel ein
						spezifisches "Tag" mit der Class="Product" und dem Wert="AccomOnly" bekommt, kann man
						Preise genau mit einer Bedingung bzgl. dieses Tags versehen. Preise, Zu- und Abschläge
						werden in ODTS in PriceItems definiert. Eine Condition legt fest unter welchen
						Bedingungen ein PriceItem gilt. Genau das wird in dem obigen Beispiel gemacht. Also
						nur wenn das Hotel als NurHotel verwendet wird, dann wird dieser Zuschlag gültig und
						damit in die Berechnung mit einbezogen. </para><para xml:id="en_1146" xml:lang="en">The above is an example of a product definition for the product type "AccommodationOnly" Some tour operators apply a surcharge to their hotels, which are sold as hotel-only products. By equipping the product in the example above with a specific "tag" with the class="Product" and value="AccomOnly", prices can be provided with a condition relating to this very tag. Prices, discounts and surcharges are defined in ODTS in PriceItems. A condition specifies the terms under which a PriceItem applies. Precisely this is demonstrated in the example above. Thus only if the hotel is used as a hotel-only product is this supplement valid and will be included in the calculation.</para>
					<para xml:id="de_1147" xml:lang="de"> </para><para xml:id="en_1147" xml:lang="en"/>
				</section>
				<section xml:id="OtdsStrategyRulesProductTypes">
					<title><phrase xml:id="de_1148" xml:lang="de">Festlegung der Produkttypen</phrase><phrase xml:id="en_1148" xml:lang="en">Definition of product types</phrase></title>
					<para xml:id="de_1149" xml:lang="de">OTDS 1.0 kennt aktuell 5 Produkttypen: </para><para xml:id="en_1149" xml:lang="en">OTDS 1.0 currently has 5 product types:</para>
						
					<itemizedlist>
						<listitem>
							<para xml:id="de_1150" xml:lang="de">AccommodationOnly</para><para xml:id="en_1150" xml:lang="en">AccommodationOnly</para>
							<para xml:id="de_1151" xml:lang="de">Zur Definition von Produkten, die nur eine Unterkunft enthalten</para><para xml:id="en_1151" xml:lang="en">For the definition of products which only contain accommodation</para>
						</listitem>
						<listitem>
							<para xml:id="de_1152" xml:lang="de">OnewayFlightOnly</para><para xml:id="en_1152" xml:lang="en">OnewayFlightOnly</para>
							<para xml:id="de_1153" xml:lang="de">Zur Definition von Produkten, die nur einen Einzelflug enthalten</para><para xml:id="en_1153" xml:lang="en">For the definition of products which contain only a one-way flight</para>
						</listitem>
						<listitem>
							<para xml:id="de_1154" xml:lang="de">ReturnFlightOnly</para><para xml:id="en_1154" xml:lang="en">ReturnFlightOnly</para>
							<para xml:id="de_1155" xml:lang="de">Zur Definition von Produkten die aus einen Hin- und einem Rückflug
								bestehen</para><para xml:id="en_1155" xml:lang="en">For the definition of products consisting of an outbound and a return flight</para>
						</listitem>
						<listitem>
							<para xml:id="de_1156" xml:lang="de">FlightAccommodation</para><para xml:id="en_1156" xml:lang="en">FlightAccommodation</para>
							<para xml:id="de_1157" xml:lang="de">Zur Definition von Produkten, die aus einem Hin-Und Rückflug plus
								entsprechender Unterkunft vor Ort bestehen</para><para xml:id="en_1157" xml:lang="en">For the definition of products consisting of an outbound and return flight plus corresponding accommodation at the destination</para>
						</listitem>
						<listitem>
							<para xml:id="de_1158" xml:lang="de">Addon</para><para xml:id="en_1158" xml:lang="en">Addon</para>
							<para xml:id="de_1159" xml:lang="de">Zur Definition von Zusatzleistungen, die optional zu Produkten angeboten
								werden können </para><para xml:id="en_1159" xml:lang="en">For the definition of additional services which are offered optionally in addition to the product</para>

						</listitem>
					</itemizedlist>
					
				</section>
				<section xml:id="OtdsStrategyRulesProductDefinedComponents">
					<title><phrase xml:id="de_1160" xml:lang="de">Regeln zur Definition kombinierter Komponenten (DefinedComponents)</phrase><phrase xml:id="en_1160" xml:lang="en">Rules for the definition of combined components (DefinedComponents)</phrase></title>
					<para xml:id="de_1161" xml:lang="de">Die gleichen Regelmechanismen finden auch Verwendung für die Erweiterung von
						Komponenten.</para><para xml:id="en_1161" xml:lang="en">The same rule mechanisms are also used for the expansion of components.</para>
					<figure>
						<info>
							<title><phrase xml:id="de_1162" xml:lang="de">Überblick über die Struktur von DefinedComponents</phrase><phrase xml:id="en_1162" xml:lang="en">Overview of the structure of DefinedComponents</phrase></title>
						</info>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/definedcomponents.png" format="PNG" contentwidth="80%"/>
							</imageobject>
							<textobject>
								<para xml:id="de_1163" xml:lang="de">Überblick über die Struktur von DefinedComponents</para><para xml:id="en_1163" xml:lang="en">Overview of the structure of DefinedComponents</para>
							</textobject>
						</mediaobject>
					</figure>
					<para xml:id="de_1164" xml:lang="de">Unter dem Element <code>DefinedComponents/DefineComponent</code> werden kombinierte
						Komponenten definiert, die aus mehreren Einzelkomponenten bestehen. Im Element
							<code>Components</code> werden die Komponenten festgelegt, aus denen sich das
						Produkt zusammensetzt. Jeder Komponente kann dabei durch das Attribut
							<code>Name</code> ein frei wählbarer Name gegeben werden, der innerhalb der
						OTDS-Datenlieferung eindeutig sein muss. Über den Namen kann in <code>Filter</code>
						und <code>Conditions</code> der eindeutige Bezug zu den einzelnen Komponenten
						hergestellt werden. Durch die OTDS weite Eindeutigkeit können auch innerhalb der
						Komponenten-Stammdaten Bezüge auf diese Namen hergestellt werden, wenn dies notwednig
						ist. Das optionale Attribut <code>DayAllocationIndex</code> bestimmt die Zuordnung der
						Komponenten im Reiseverlauf.</para><para xml:id="en_1164" xml:lang="en">Under the element <code>DefinedComponents/DefineComponent</code> combined components can be defined which consist of several individual components. In the element <code>Components</code> the components are determined which make up the product. Using the attribute <code>Name</code> , each component can be given a freely selectable name, which must be unambiguous within the OTDS data delivery. Via the name, it is possible to make an unambiguous reference to individual components in <code>Filter</code> and <code>Conditions</code> . Due to their unambiguity throughout OTDS, it is also possible to make reference to these names within the component master data if required. The optional attribute <code>DayAllocationIndex</code>  defines the allocation of the components in the itinerary.</para>
					<para xml:id="de_1165" xml:lang="de">Erlaubt sind in der OTDS Version 1.0 ausdrücklich nur die Kombination von Flügen
						gleichen Typs. Es können aus Einzelflügen Returnflüge zusammengestellt werden,
						Einzelflüge mit Zubringern erweitern werden oder Returnflüge mit Zubringern erweitert
						werden. Es ist denkbar, dass in zukünftigen Versionen auch andere Komponenten
						kombiniert werden können.</para><para xml:id="en_1165" xml:lang="en">In OTDS Version 1.0, specifically only the combination of flights of the same type is allowed. One-way flights can be combined to create return flights, one-way flights can be extended with feeder flights, or return flights can be extended with feeder flights. It is conceivable that in future versions it will also be possible to combine other components.</para>
					<para xml:id="de_1166" xml:lang="de">Das Element <code>Filter</code> definiert Filterbedingungen, die das Produkt
						erfüllen muss. Die Filter beziehen sich dabei über das Attribut <code>Source</code>
						auf die unter <code>Components</code> angegebenen Komponenten.</para><para xml:id="en_1166" xml:lang="en">The element <code>Filter</code>  defines filter conditions which the product must fulfil. The filters thereby refer via the attribute <code>Source</code> to the components specified under <code>Components</code> .</para>
					<para xml:id="de_1167" xml:lang="de">Buchungsinformationen werden im Element <code>Booking</code> hinterlegt und werden
						benutzt, um in einer Rule die Buchungsparameter der Einzelkomponenten komplett zu
						überschreiben. Im Flugbereich wird dies häufig bei der Definition von Flughülsen
						verwendet, die die Buchungsinformationen der beteiligten Einzelflüge
						überschreiben.</para><para xml:id="en_1167" xml:lang="en">Booking information is stored in the element <code>Booking</code> and is used to completely overwrite the booking parameters of the individual components in a Rule. In the context of flights, this is commonly used in defining flight wrappers that override the booking information of the individual flights involved.</para>
					<para xml:id="de_1168" xml:lang="de">Notwendig ist bei <code>DefinedComponents/DefineComponent</code> die Angabe des
						Attributs <code>Role</code>. Dieses Attribut definiert, welche Rolle die definierte
						Komponente bei der Produktbildung spielt, d.h. welchen Komponententyp sie erhält. Das
							<code>Role</code> Attribut wird bei der Auswertung von Komponentenreferenzen
						(Attribut <code>Source</code>) wie der statische Komponententyp echter Komponenten
						verwendet. Mögliche Werte sind aktuell <literal>OnewayFlight</literal> und
							<literal>ReturnFlight</literal>.</para><para xml:id="en_1168" xml:lang="en">For <code>DefinedComponents/DefineComponent</code> the specification of the attribute <code>Role</code> is necessary. This attribute defines which role the defined components play in the product creation, i.e. which component type they receive. The <code>Role</code> attribute is used for the evaluation of component references (attribute <code>Source</code> ) such as the static component type of true components. Currently, available values are <literal>OnewayFlight</literal> and <literal>ReturnFlight</literal> .</para>
					<para xml:id="de_1169" xml:lang="de">Das folgende Beispiel zeigt eine definierte Komponente, die drei Einzelflüge
						(Zubringer, Hauptflug und Verteiler) bündelt und als OnewayFlight (Attribut
							<code>Role</code>) einzeln buchbar ist oder auch mit anderen Komponenten zu einem
						komplexeren Produkt kombiniert werden kann. Die drei beteiligten OnewayFlights werden
						unter <code>Components</code> einzeln aufgeführt und können jeweils über das Attribut
							<code>Name</code> mit einem Namen versehen werden. Auf diesen <code>Namen</code>
						kann in <code>Filter</code> Bezug genommen, um sich auf bestimmte Parameter eines
						spezifischen OnewayFlights zu beziehen. Wenn man im Attribute <code>Source</code>
						einen Bezug zu einem Namen einer Komponente herstellen will so muss der Value von
							<code>Source</code> mit einem "#" beginnen.</para><para xml:id="en_1169" xml:lang="en">The following example shows a defined component which bundles three individual flights together (feeder flight, main flight and connecting flight) and can either be booked individually as a OnewayFlight (attribute <code>Role</code> ), or be combined with other components to make are more complex product. The three OnewayFlights used are individually listed under <code>Components</code> and can each be provided with a name via the attribute <code>Name</code> . This <code>Namen</code> can be referred to in <code>Filter</code> , in order to refer to particular parameters of a specific OnewayFlight. If you want to create a reference to a name of a component in the attribute <code>Source</code> , the Value of <code>Source</code> must begin with a "#" .</para>
					<programlisting><![CDATA[<DefineComponent Key="Kombi02" Role="OnewayFlight">
  <Booking>
    ...
  </Booking>
  <Components>
    <OnewayFlight Name="5" DayAllocationLevel="-1"/>
    <OnewayFlight Name="6" DayAllocationLevel="0"/>
    <OnewayFlight Name="7" DayAllocationLevel="1"/>
  </Components>
  <Filter>
    <And>
      <Tags Source="#5" Class="Zubringer">FRA</Tags>
      <Tags Source="#6" Class="Hauptflug">FRABKK</Tags>
      <Tags Source="#7" Class="Verteiler"/>
      <MatchEqual>
        <Element Source="#5">ArrivalAirport</Element>
        <Element Source="#6">DepartureAirport</Element>
      </MatchEqual>
      <MatchEqual>
        <Element Source="#6">ArrivalAirport</Element>
        <Element Source="#7">DepartureAirport</Element>
      </MatchEqual>
    </And>
  </Filter>
</DefineComponent>]]></programlisting>
					<para xml:id="det_1170" xml:lang="de"/>
				</section>
				<section xml:id="OtdsStrategyRulesGroupDefinitions">
					<title><phrase xml:id="de_1171" xml:lang="de">Gruppierung und Priorisierung von Angeboten in Angebotsgruppen (Thema:
							Flugpriorisierung) (V1.9: GroupDefinitions)</phrase><phrase xml:id="en_1171" xml:lang="en">Grouping and prioritisation of offers in offer groups (theme: flight prioritisation) (V1.9: GroupDefinitions)</phrase></title>
					<section xml:id="OtdsStrategyRulesGroupDefinitionsOverview">
						<title><phrase xml:id="de_1172" xml:lang="de">Überblick</phrase><phrase xml:id="en_1172" xml:lang="en">Overview</phrase></title>
						<para xml:id="de_1173" xml:lang="de">Eine Priorisierung von Angeboten bestimmter Angebotsgruppen existiert aktuell nur für das
							Thema "Flugpriorisierung" innerhalb von Pauschalobjekten. Ursprünglich
							entspringt die Notwendigkeit der Flugpriorisierung aus der Anforderung die
							Angebotsvielfalt im ersten Blick auf einen Flug je Abreisetag zu reduzieren.
							Es handelt sich hier um eine Anforderung aus den Anfängen des
							Pauschalreise-Vertriebs, welche sich bis heute durchgesetzt hat und deshlab auch in OTDS abbildbar sein muss. OTDS beschränkt sich dabei nicht auf Flüge im speziellen, sondern hält die Integration dieses Mechanismuss offen und erlaubt die Anwendung für beliebige Produkte und Anwendungsbereiche. Die BEschreibung indes bezieht sich vorerst rein auf die Flugpriorisierung.
						</para><para xml:id="en_1173" xml:lang="en">A prioritising of offers in specific offer groups currently only exists for the theme "Flight prioritisation" within the package objects. The necessity of flight prioritisation originally stems from the challenge of reducing the wide range of offers at first glance to a flight per departure day. This is a challenge existing since the beginning of package tour sales which has continued until today and must therefore also be addressed in OTDS. Here OTDS does not limit itself to flights specifically, but leaves the integration of the mechanism open and allows its use for any other products and areas of application. For now the description refers only to flight prioritisation.</para>
						<para xml:id="de_1174" xml:lang="de">Die Flug-Prioritäten geben bei der Kombination mit Unterkünften an, welche Flüge vorrangig
							angezeigt werden sollen. Hier gibt es ggf. 2 Ausprägungen: 
						</para><para xml:id="en_1174" xml:lang="en">When combined with accommodation, the flight priorities specify which flights should be shown first. This may be done in 2 ways:</para>
			
						<orderedlist>
						<listitem>
								<para xml:id="de_1175" xml:lang="de">Nur der am höchsten priorisierte Flug ist tatsächlich buchbar. Alle anderen sind nicht
									verfügbar.</para><para xml:id="en_1175" xml:lang="en">Only the most highly prioritised flight is actually bookable. All others are unavailable.</para>
						</listitem>
						<listitem>
								<para xml:id="de_1176" xml:lang="de">Es sind alle Flüge verfügbar. Aber der am höchsten priorisierte Flug wird unter
									Verwendung des FlightPairs (z.B. "DUS PMI") als Flugkennung buchbar
									gemacht. Alle anderen Flüge sind nur mit spezifischen
									Flugkettenkennern buchbar. </para><para xml:id="en_1176" xml:lang="en">All flights are available. However, the flight which is given the highest priority is made bookable using the FlightPair (e.g. "DUS PMI") as the flight identifier. All other flights are only bookable with specific flight string identifiers.</para>
							</listitem>
						</orderedlist> 
						<para xml:id="de_1177" xml:lang="de">Häufigste Regel bei der Priorisierung ist die Priorisierung über den günstigsten Preis
							des Fluges. Hier kann es ggf. schon Unterschiede geben, ob Hin- Und Rückflug
							separat betrachtet werden oder ob der Preis der Kombination betrachtet wird. </para><para xml:id="en_1177" xml:lang="en">The most common rule for prioritisation is prioritisation according to the lowest priced flight. Here it may even make a difference whether the outbound and return flights are considered separately, or whether the price for the combination is considered.</para><para xml:id="de_1178" xml:lang="de">Dazu kommt noch die Betrachtung von zusammengesetzten Flügen. Also ein Zubringer und ein
							Hauptflug. Auch hier kann es sein, dass die Flüge separat betrachtet werden
							sollen. </para><para xml:id="en_1178" xml:lang="en">Combined flights can also be regarded. These are a combination of a feeder flight and a main flight. Here too, it may be that the flights are to be considered separately.</para><para xml:id="de_1179" xml:lang="de">Häufig verwenden die Systeme zusätzlich eine Priorisierung, der sich die
							Flugpreis-Priorisierung unterordnen muss. Dies geschieht um für den
							Endkunden attraktivere Flüge in den Vordergrund zu holen, eine bessere
							Verfügbarkeit zu erzielen, oder aus strategischen Gründen. Beispiel wäre die
							höhere Priorisierung von Flügen mit weniger Stops oder Flüge mit bekannt
							schlechter Verfügbarkeitsqualität. </para><para xml:id="en_1179" xml:lang="en">Often the systems will additionally use a prioritisation which is superordinate to the flight price prioritisation. This is used in order to bring flights into the foreground which are more attractive for the end customer, to achieve better availability, or for strategic reasons. One example would be the higher prioritisation of flights with fewer stops or flights which are known to have poor availability.</para>
						
						<para xml:id="de_1180" xml:lang="de"> Die Umsetzung dieser Anforderungen erfolgt in 7 Bereichen der OTDS-Struktur, die im
							Folgenden beschrieben werden: </para><para xml:id="en_1180" xml:lang="en">The implementation of these requirements occurs in 7 areas of the OTDS structure, which are described below:</para>
						
						<orderedlist>
							<listitem>
								<para xml:id="de_1181" xml:lang="de">Definition der Fluggruppen also der Flüge, die miteinander um die Beste Priorisierung
									konkurrieren.</para><para xml:id="en_1181" xml:lang="en">Definition of the flight groups, i.e. the flights competing with each other for the best prioritisation.</para>
							</listitem>
							<listitem>
								<para xml:id="de_1182" xml:lang="de">Ergänzung der Definition von Tags zur Verwendung als Indices in der Sortierung</para><para xml:id="en_1182" xml:lang="en">Extended definition of Tags for use as Indices in the sorting.</para>
							</listitem>
							<listitem>
								<para xml:id="de_1183" xml:lang="de">Definition der Priorisierungs-Kriterien und ihrer hirarchischen Rangfolge </para><para xml:id="en_1183" xml:lang="en">Definition of the prioritisation criteria and their hierarchical ranking.</para>
							</listitem>
							<listitem>
								<para xml:id="de_1184" xml:lang="de">Formulierung einer Bedingung, die nur für den höchstprioriserten Flug gültig ist und in
									Buchungsparametern und Verfügbarkeiten platziert werden kann.</para><para xml:id="en_1184" xml:lang="en">Formulation of a condition which is only valid for the most highly prioritised flight and which can be positioned in booking parameters and availabilities.</para>
							</listitem>
							<listitem>
								<para xml:id="de_1185" xml:lang="de">Definition eines generischen CityPairs zur Ersetzung des FlugCodes </para><para xml:id="en_1185" xml:lang="en">Definition of a generic CityPair to replace the FlightCode</para>
							</listitem>
							<listitem>
								<para xml:id="de_1186" xml:lang="de">Definition OTDS-spezifischer Sortierkriterien im Produkt, welche die Sortierung bzw.
									Priorisierung der Flüge ausdrückt</para><para xml:id="en_1186" xml:lang="en">Definition of OTDS-specific sorting criteria in the product which express the sorting or prioritisation of the flights.</para>
							</listitem>
							<listitem>
								<para xml:id="de_1187" xml:lang="de">Erweiterung der Source, um innerhalb des Price-Elementes bestimmte PriceItems zu
									adressieren </para><para xml:id="en_1187" xml:lang="en">Extension of the Source, in order to address certain PriceItems within the PriceElement.</para>
							</listitem>
						</orderedlist> 
					</section>
					<section xml:id="OtdsStrategyRulesGroupDefinitionsGroupBy">
						<title><phrase xml:id="de_1188" xml:lang="de">Fluggruppen und Priorisierung (GroupBy)</phrase><phrase xml:id="en_1188" xml:lang="en">Flight groups and prioritisation (GroupBy)</phrase></title>
						<para xml:id="de_1189" xml:lang="de">Durch GroupDefinitions innerhalb der Produkte aber auch innerhalb der DefinedComponents werden die Angebote bzw. die Flüge in spezifische Gruppen aufgeteilt, welche dann miteinader zum Beispiel über den Preis verglichen werden können. Im Falle der klassischen FlugPriorisierung des Pauschalbereiches geht es hier um alle Flüge mit dem selben Abflugtermin, dem selben Abflughafen, dem selben Zielflughafen und dem selben Rückflugtermin (Dauer).
						Eine solche Definition erfolgt in der Regel im Bereich DefinedComponent, in der der ReturnFlug definiert wird.</para><para xml:id="en_1189" xml:lang="en">Through GroupDefinitions within the products, but also within the DefinedComponents, the offers or flights are sorted into specific groups, which can then be compared with one another, for example, in price. In the case of classic FlightPrioritisation in the package tour sector, we are dealing with all flights with the same departure date, the same departure airport, the same destination airport and the same return date (duration). This kind of definition is usually carried out in the DefinedComponent section, where the ReturnFlight is defined.</para>
						<para xml:id="de_1190" xml:lang="de">Hier ein Beispiel:</para><para xml:id="en_1190" xml:lang="en">Here is an example:</para>
						<programlisting language="xml"><![CDATA[<Otds...>
	...
	<DefineComponent ... Role="ReturnFlight"> 
		...
		<GroupDefinitions>
			<GroupDefinition Name="ReturnFlightGroupPrice">
				<GroupBy>
					<Element Source="Outbound">DepartureAirport</Element>
					<Element Source="Outbound">ArrivalAirport</Element>
					<Date Source="Outbound" DayType="CheckIn"/>
					<Duration Source="ReturnFlight"/>
				</GroupBy>
				...
			</GroupDefinition>
		</GroupDefinitions>
	</DefinedComponent>
	...
</Otds>]]>				</programlisting>
						 
						<para xml:id="de_1191" xml:lang="de">In den meisten Fällen wird die GroupDefinition genau so aussehen.</para><para xml:id="en_1191" xml:lang="en">In most cases the GroupDefinition will look exactly like this.</para>
								
						
					</section>
					<section xml:id="OtdsStrategyRulesGroupDefinitionsIndices">
						<title><phrase xml:id="de_1192" xml:lang="de">Verwendung von Tags als Indices für die Sortierung (Tags:
							Numeric)</phrase><phrase xml:id="en_1192" xml:lang="en">Use of Tags as Indices for sorting (Tags: Numeric)</phrase></title>
						<para xml:id="de_1193" xml:lang="de"> Für eine einfache und effektive Möglichkeit Priorisierungsindices in OTDS zu setzen,
							wird das Tag-Kozept von OTDS erweitert. In OTDS V1.0 war es bereits
							möglich an verschiedene Knotenpunkte freie Tags also Paare von
							Zeichenketten zu definieren, um sich später in Bedingungen darauf zu
							beziehen. </para><para xml:id="en_1193" xml:lang="en">For a simple and effective way of setting prioritisation indices in OTDS, the Tag concept of OTDS is extended. In OTDS V1.0 it was already possible to define free Tags, or pairs of character strings, at various node points, in order to refer to them later in conditions.</para>
						<para xml:id="de_1194" xml:lang="de">Beispiel:</para><para xml:id="en_1194" xml:lang="en">Example:</para><programlisting language="XML"><![CDATA[<Otds ...>
  ...
  <OnewayFlight ...> 
   <Tags>
     <Tag Class="KombiAirline">LH</Tag>
   </Tags>
  </OnewayFlight> 
 ...
</Otds>]]>				</programlisting>
						<para xml:id="det_1195" xml:lang="de"/>
						
						<para xml:id="de_1196" xml:lang="de">Die Erweiterung sieht nun vor, dass Tags nicht nur Zeichenketten enthalten können,
							sondern auch numerische Werte (TagType="Numeric") oder numerische Werte
							(TagType="Price"), welche mit Preisen in Interaktion tretten können. </para><para xml:id="en_1196" xml:lang="en">The extension now enables Tags to contain not only character strings, but also numeric values (TagType="Numeric") or numeric values (TagType="Price"), which can interact with prices.</para>
						<para xml:id="de_1197" xml:lang="de">Beispiel:</para><para xml:id="en_1197" xml:lang="en">Example:</para>
						<programlisting><![CDATA[<Otds ...>
  ...
  <OnewayFlight ...> 
   <Tags>
     <Tag Class="KombiAirline">LH</Tag>
     <Tag Class="ReturnFlightIndex" TagType="Numeric">5</Tag>
     <Tag Class="PreisIndex" TagType="Price">-35</Tag>
   </Tags>
  </OnewayFlight> 
 ...
</Otds>]]>				</programlisting>
						<para xml:id="de_1198" xml:lang="de">			
						Analog gilt dies auch für ConditionalTags.
						
						Die neuen Arten der Tags kommen im nächsten Kapitel zum Tragen.</para><para xml:id="en_1198" xml:lang="en">This also applies to ConditionalTags. The newest types of Tags will be discussed in the next chapter.</para>	
					</section>
					<section xml:id="OtdsStrategyRulesGroupDefinitionsSequence">
						<title><phrase xml:id="de_1199" xml:lang="de">Definition der Priorisierungs-Rangfolge (Sequence)</phrase><phrase xml:id="en_1199" xml:lang="en">Definition of the prioritisation sequence (Sequence)</phrase></title>
						<para xml:id="de_1200" xml:lang="de"> Eine GroupDefinition enthält immer auch eine Festlegung der Sortierreihenfolge der
							Gruppe. Diese erfolgt in dem Element &lt;Sequence&gt;.</para><para xml:id="en_1200" xml:lang="en">A GroupDefinition always additionally contains a determination of the sorting sequence of the group. This occurs in the element &lt;Sequence&gt;.</para>
							
						<para xml:id="de_1201" xml:lang="de">Klassisches Beispiel für die Sortierung nach Preis des Fluges:</para><para xml:id="en_1201" xml:lang="en">A classic example of sorting according to flight price:</para>
							
						<programlisting><![CDATA[<Otds...>
  ...
  <DefineComponent ... Role="ReturnFlight"> 
   ...
   <GroupDefinitions>
    <GroupDefinition Name="ReturnFlightGroupPrice">
      <GroupBy>
        <Element Source="Outbound">DepartureAirport</Element>
	<Element Source="Outbound">ArrivalAirport</Element>
	<Date Source="Outbound" DayType="CheckIn"/>
	<Duration Source="ReturnFlight"/>
      </GroupBy>
      <Sequence>
        <Sort Order="Ascending">
          <Price Source="Hirarchy.all:ReturnFlight"/>
        </Sort>
      </Sequence>
    </GroupDefinition>
   </GroupDefinitions>
  </DefinedComponent>
 ...
</Otds>]]>				</programlisting>
						<para xml:id="de_1202" xml:lang="de">
								Zur Interpretation der Source siehe Erklärungen im letzten Kapitel.</para><para xml:id="en_1202" xml:lang="en">For the interpretation of the Source, see the explanations in the last Chapter.</para>
							
							
						<bridgehead xml:id="de_1203" xml:lang="de">Sortierung über mehrere Hirarchiestufen</bridgehead><bridgehead xml:id="en_1203" xml:lang="en">Sorting over several steps of the hierarchy</bridgehead>
							
						<para xml:id="de_1205" xml:lang="de">Im folgenden Beispiel erfolgt die Sortierung zuerst nach FlightGroupIndex des Outbounds und danach nach FlightGroupIndex des Inbounds.</para><para xml:id="en_1205" xml:lang="en">In the following example, sorting occurs first according to the FlightGroupIndex of the Outbound and then according to the FlightGroupIndex of the Inbound.</para>							
						<programlisting><![CDATA[<Otds...><Otds...>
  ...
  <DefineComponent ... Role="ReturnFlight"> 
   ...
   <GroupDefinitions>
    <GroupDefinition Name="ReturnFlightGroupPrice">
      <GroupBy>
        <Element Source="Outbound">DepartureAirport</Element>
	<Element Source="Outbound">ArrivalAirport</Element>
	<Date Source="Outbound" DayType="CheckIn"/>
	<Duration Source="ReturnFlight"/>
      </GroupBy>
      <Sequence>
        <Sort Order="Ascending">
	  <Tag Source="Outbound" Class="FlightGroupIndex" TagType="Numeric"/>
	</Sort>
	<Sort Order="Ascending">
	  <Tag Source="Inbound" Class="FlightGroupIndex" TagType="Numeric"/>
	</Sort>
      </Sequence>
    </GroupDefinition>
   </GroupDefinitions>
  </DefinedComponent>
 ...
</Otds>]]>				</programlisting>
							
							<bridgehead xml:id="de_1206" xml:lang="de">Sortierung über kombinierte Indices</bridgehead><bridgehead xml:id="en_1206" xml:lang="en">Sorting over combined Indices</bridgehead>
							
							<para xml:id="de_1208" xml:lang="de">Das folgende Beispiel entspricht zwar nicht einer realen Sortierung, zeigt aber alle
							Möglichkeiten, wie &lt;Tag&gt; und &lt;Price&gt; kombiniert werden können. Es
							ist dabei möglich Summen oder Durschnittswerte aus Preisen und
							numersichen Tags zu bilden oder auch Zeichenketten zu verbinden.</para><para xml:id="en_1208" xml:lang="en">The following example does not represent a real sorting, but rather shows all possibilities of how &lt;Tag&gt; and &lt;Price&gt; can be combined. In doing this, it is possible to create totals or average values from prices and numeric Tags, or to connect character strings.</para>
							<programlisting><![CDATA[<Otds...><Otds...><Otds...>
  ...
  <DefineComponent ... Role="ReturnFlight"> 
   ...
   <GroupDefinitions>
    <GroupDefinition Name="ReturnFlightGroupPrice">
      <GroupBy>
        <Element Source="Outbound">DepartureAirport</Element>
	<Element Source="Outbound">ArrivalAirport</Element>
	<Date Source="Outbound" DayType="CheckIn"/>
	<Duration Source="ReturnFlight"/>
      </GroupBy>
      <Sequence>
        <Sort Order="Ascending">
          <Sum>
            <Tag Source="Outbound" Class="FlightGroupIndex" TagType="Numeric"/>
            <Tag Source="Inbound" Class="FlightGroupIndex" TagType="Numeric"/>
          </Sum>
        </Sort>
        <Sort Order="Ascending">
          <Average>
            <Tag Source="Outbound" Class="FlightGroupIndex" TagType="Numeric"/>
            <Tag Source="Inbound" Class="FlightGroupIndex" TagType="Numeric"/>
          </Average>
        </Sort>
        <Sort Order="Ascending">
          <Sum>
            <Price Source="Hirarchy.all:ReturnFlight"/>
            <Tag Source="Inbound" Class="FlightGroupIndex" TagType="Numeric"/>
          </Sum>
        </Sort>
        <Sort Order="Ascending">
          <Average>
            <Price Source="Hirarchy.all:ReturnFlight"/>
            <Tag Source="Inbound" Class="FlightGroupIndex" TagType="Numeric"/>
          </Average>
        </Sort>
        <Sort Order="Ascending">
          <Connect>
            <Tag Source="Outbound" Class="FlightCode" TagType="String"/>
            <Tag Source="Inbound" Class="FlightCode" TagType="String"/>
          </Connect>
        </Sort>
      </Sequence>
    </GroupDefinition>
   </GroupDefinitions>
  </DefinedComponent>
 ...
</Otds>]]>				</programlisting>
								
					</section>
					<section xml:id="OtdsStrategyRulesGroupDefinitionsGroupCondition">
						<title><phrase xml:id="de_1209" xml:lang="de">Bedingung für Buchungsparameter und Verfügbarkeiten
							(GroupCondition)</phrase><phrase xml:id="en_1209" xml:lang="en">Condition for booking parameters and availabilities (GroupCondition)</phrase></title>
						<para xml:id="de_1210" xml:lang="de"> Die Formulierung der Bedingung einer spezifischen GroupDefinition erfolgt im Element
							&lt;GroupCondition&gt;. Die GroupCondition kann sowohl in der BookingGroup
							als auch in an den Availabilties angegeben werden und definiert an der
							Stelle, dass die BookingGroup bzw. die Availabilities nur dann gültig
							sind, wenn die GroupDefinition erfüllt ist. Die GroupDefinition wird in
							der Regel bei FlugPriorisierungen immer wie im folgenden Beispiel
							aussehen:</para><para xml:id="en_1210" xml:lang="en">The formulation of the condition of a specific GroupDefinition occurs in the element &lt;GroupCondition&gt;. The GroupCondition can be specified in both the BookingGroup and the Availabilities and at that place defines that the BookingGroup or the Availabilities are only valid when the GroupDefinition is fulfilled. The GroupDefinition for FlightPrioritisation will usually always look like it does in the following example:</para>
							
							<programlisting><![CDATA[<Otds...>
  ...
  <BookingGroup Area="ServiceArea">
    ...
    <GroupCondition Ref="ReturnFlightGroupPrice">
      <MaxRows>1</MaxRows>
    </GroupCondition>
  </BookingGroup>
 ...
</Otds>]]>				</programlisting>
						<para xml:id="de_1211" xml:lang="de">Die GroupCondition ist nur für das Angebot erfüllt, welches in der sortierten referenzierten Group an erster Stelle steht.</para><para xml:id="en_1211" xml:lang="en">The GroupCondition is only fulfilled for the offer which appears in the first place in the sorted reference group.</para>
					</section>
					<section xml:id="OtdsStrategyRulesGroupDefinitionsCityPair">
						<title><phrase xml:id="de_1212" xml:lang="de">Definition eines generischen CityPairs (BookingParameter/Tag)</phrase><phrase xml:id="en_1212" xml:lang="en">Definition of a generic CityPair (BookingParameter/Tag)</phrase></title>
						<para xml:id="de_1213" xml:lang="de">
							Um eine generische Erstezung des Flugcodes durch das CityPair zu ermöglichen wird in den Buchungsparametern ermöglicht, dass in den Buchungsparametern auch Tags und ConditionalTags referenziert werden können, so dass deren Values als Buchungsvalue verwendet werden.</para><para xml:id="en_1213" xml:lang="en">In order to enable a generic replacement of the flight code with a CityPair, Tags and ConditionalTags can be referenced in the booking parameters, so that their Values are used as the booking value.</para>
						
						<para xml:id="de_1214" xml:lang="de">Im folgenden Beispiel ist die klassische Umsetzung des CityPairs aufgeführt. Es wird direkt in der Produktdefinition des Pauschalproduktes platziert.</para><para xml:id="en_1214" xml:lang="en">In the following example, the classic implementation of the CityPair is demonstrated. It is placed directly in the product definition of the package product.</para>  
						
						<programlisting><![CDATA[<Otds...>
  ...
  <Products>
    <Product Key="Package" ProductType="FlightAccommodation">
      ...
      <BookingGroup Area="ServiceArea" Source="Outbound" Priority="1">
       <!-- Ersetzt den ServiceCode des Outboundfluges durch das CityPair, wenn der Flug die höchste Prio hat. -->
       <BookingParameter Field="ServiceCode">
         <Tag Source="Outbound" Class="DepartureAirport"/>
       </BookingParameter>
       <BookingParameter Name="ServiceCode" Field="ServiceCode" Index="1">
         <Tag Source="Outbound" Class="ArrivalAirport"/>
       </BookingParameter>
       <BookingParameter Field="DateEnd">
	  <!-- Ersetzt den Endtermin der Outboundflugzeile durch den Starttermin des Rückfluges. -->
	  <Date Source="Inbound" DayType="CheckIn"/>
       </BookingParameter>
       <GroupCondition Ref="ReturnFlightGroupPrice">
         <MaxRows>1</MaxRows>
       </GroupCondition>
      </BookingGroup>
      ...
    </Product>
    ...
  </Products>  
  <Flights>
   <OnewayFlights>
     <OnewayFlight Key="DUSPMI20130212K2">
       <Tags>
	 <Tag Class="DepartureAirport">DUS</Tag>
         <Tag Class="ArrivalAirport">PMI</Tag>
         ...
       </Tags>
       ...
     </OnewayFlight>
     ...
   </OnewayFlights>
   ...
  </Flights>
   ...
</Otds>]]>				</programlisting>
						
						
						
					</section>
					<section xml:id="OtdsStrategyRulesGroupDefinitionsPreferences">
						<title><phrase xml:id="de_1215" xml:lang="de">Das Sortierkriterium Preis (Price)</phrase><phrase xml:id="en_1215" xml:lang="en">The sorting criterion price (Price)</phrase></title>
						<para xml:id="de_1216" xml:lang="de">
							Problematik: Die Source definiert aktuell eine Referenz auf Menge von Instanzen einer Komponente (weitestgehend entspricht dies bestimmten Knoten im XML-Baum). Damit wir eine Menge von PriceItems sinnvoll über Source referenzieren können, brauchen wir eine Erweiterung, mit deren Hilfe man auch wahlweise zusätzlich alle Ancestors, Descendants des Knotens referenzieren kann. Dies wird dadurch erreicht, dass wir in der Source zusätzlich die Möglichkeit schaffen Ancestors, Descendants und auch Virtual-Nodes zu inkludieren.</para><para xml:id="en_1216" xml:lang="en">Problem: The Source currently defines a reference to quantities of instances of a component (this usually corresponds to specific nodes in the XML tree). In order to be able to reference a quantity of PriceItems in a meaningful way via Source, we require an extension, with the aid of which one can choose to additionally reference all Ancestors and Descendants of the node. We do this in that we add the possibility in the Source of including Ancestors, Descendants and also VirtualNodes.</para>
						<para xml:id="de_1217" xml:lang="de">
						Zur Erinnerung mögliche Formen der bisherigen Source und deren Bedeutung am Beispiel der "Tags"-Condition:
						Grundlage der Betrachtung ist die XML-Struktur, welche dem VErabteiungsmodell zugrunde liegt. Im weitesten Sinne entspricht diese der OTDS XML-Struktur. Lesen Sie dazu auch die Kapitel in der Doku, die weiter unten aufgeführt werden.
						</para><para xml:id="en_1217" xml:lang="en">As a reminder of the possible forms of Source discussed and their significance with regard to the "Tags" condition: The basis of the analysis is the XML structure that underlies the processing model. This corresponds to the OTDS XML structure in the broadest sense. You should also read the chapters in the document which are listed below.</para>
						
						<programlisting><![CDATA[<Tags Class="Saison" Source="SellingAccom">A</Tags>]]>				</programlisting>

						<para xml:id="de_1218" xml:lang="de">Hiermit werden die Tags der Komponente "SellingAccom" referenziert.
							Diese Form impliziert bereits, dass eigentlich ein "local:" davor gestellt ist, welches ausdrückt, dass die referenzierte Komponente direkt einer der Ancestor-Komponenten oder Descendant-Komponenten ist.</para><para xml:id="en_1218" xml:lang="en">This references the tags of the component "SellingAccom". This form already implies that there is a "local:" placed in front of it, which denotes that the referred-to component is a direct descendant or ancestor component.</para> 
								<para xml:id="de_1219" xml:lang="de">Beispiel: die Bedingung ist in einem PriceItem in der Board-Element enthalten.</para><para xml:id="en_1219" xml:lang="en">Example: The condition is contained in a PriceItem in the Board element.</para>
						
						<programlisting><![CDATA[<Tags Class="Saison" Source="global:SellingUnit">A</Tags>]]>				</programlisting>

						<para xml:id="de_1220" xml:lang="de">Das "global:" definiert, dass sich die referenzierte Komponente im globalen Baum des Produktes befindet, aber nicht direkt in einem Ancestor oder Descendant.
						Beispiel: Die Bedingung liegt im Board aber referenziert eine SellingUnit. SellingUnit ist kein direkter Ancestor oder Descendant von Board.
						Um von Board zu SellingUnit zu kommen müsste man dass über XPath ungefähr so ausdrücken  Board/../Unit/SellingUnit.</para><para xml:id="en_1220" xml:lang="en">The "global:" defines that the component referred to is located in the global tree of the product, but not directly in an ancestor or descendant. Example: The condition is located in Board but refers to a SellingUnit. SellingUnit is not a direct ancestor or descendant of Board. To get from Board to SellingUnit, the XPath would have to be expressed roughly as follows: Board Express /.../ Unit/SellingUnit.</para>
						
							<programlisting><![CDATA[<Tags Class="Saison" Source="global:#Komponente1.SellingUnit">A</Tags>]]>				</programlisting>

							<para xml:id="de_1221" xml:lang="de">Das "global:" definiert, wie oben eine globale Position im Baum des Produktes. Über die # (Raute) wird angezeigt, das "Komponente1" ein explizit vergebener Component/@Name innerhalb einer ProduktDefinition oder einer DefinedComponent ist. Die Source referenziert also eine Unterkomponente "SellingUnit" in der Komponente mit dem Attribut @Name="Komponente1".</para><para xml:id="en_1221" xml:lang="en">The "global:" defines (as above) a global position in the product tree. The # (hash) indicates that "Component1" is an explicitly designated Component/@Name within a ProductDefinition or a DefinedComponent. The Source refers to a subcomponent, the "Selling Unit" in the component with the attribute @Name="Component1."</para>
						
						<programlisting><![CDATA[<Tags Class="Saison" Source="ReturnFlight">A</Tags>]]>				</programlisting>

						<para xml:id="de_1222" xml:lang="de">Per default handelt es sich hier wieder um eine "local:" Referenzierung. Mit "ReturnFlight" werden alle Child-Elemente des Elementes "ReturnFlights" referenziert. Aber auch alle DefinedComponent, deren Role="ReturnFlight" und die über die Product-Definition integriert sind.</para><para xml:id="en_1222" xml:lang="en">By default, it is again a "local:" reference. With "Return Flight", all of the child elements of the "Return Flights" element are referred to. But also all DefinedComponents, whose role="ReturnFlight" and which are integrated via the product definition.</para> 
						
						<programlisting><![CDATA[<Tags Class="Saison" Source="Outbound">A</Tags>]]>				</programlisting>

						<para xml:id="de_1223" xml:lang="de">Per default handelt es sich hier wieder um eine "local:" Referenzierung. Mit "Outbound" werden alle Elemente der Elemente "ReturnFlight/Outbound" referenziert. Aber auch alle DefinedComponent, deren Role="Outbound" ist und die über die Product-Definition integriert sind.</para><para xml:id="en_1223" xml:lang="en">By default, it is again a "local:" reference. "Outbound" refers to all elements of the "ReturnFlight/Outbound" element. It also refers to all DefinedComponents whose role="Outbound" and which are integrated via the product definition</para> 
						
						
						
						
						<para xml:id="de_1224" xml:lang="de">Bei den Parametern "global:" und "local:" handelt es sich um WErte der Eigenschaft "Scope", die eine Menge von Knotenreferenzen hat.
						Die Angabe einer spezifischen Eigenschaft filtert bestimmte Knotenreferenzen aus der Gesamtmenge der in Frage kommenden Knotenreferenzen herraus.
						Implizit wird in V1.0 immer nur der Knoten (Self) und nicht auch noch sein Umfeld (Ancestors und Descendants) betrachtet. Wir bezeichen diese Eigenschaft im folgenden als "Hirarchy". Man könnte also sagen, dass in V1.0 immer die Eigenschaft Hirarchy="Self" implizit vorrausgesetzt war.</para><para xml:id="en_1224" xml:lang="en">The parameters "global:" and "local:" refer to values with the property "Scope", which has a number of node references. The specification of a specific property filters particular node references from the total amount of eligible node references In V1.0 it is implicitly only the node (Self) and not its environment (Ancestors and Descendants) which is regarded. In the following, this property will be referred to as "Hierarchy". Thus it could be said that in V1.0, the property Hierarchy = "Self" is always implicitly assumed.</para>
						
						<para xml:id="de_1225" xml:lang="de">Genau hier setzt die Erweiterung an.</para><para xml:id="en_1225" xml:lang="en">This is where the expansion comes in.</para>
						
						<para xml:id="de_1226" xml:lang="de">In OTDS 1.9 kann man nun die "Hierarchy" als Eigenschaft
							explizit setzen.</para><para xml:id="en_1226" xml:lang="en">In OTDS 1.9, you can now explicitly set "Hierarchy" as a
							property.</para>
						<para xml:id="de_1227" xml:lang="de">	Darüber hinaus wird die Eigenschaft "DayAllocation", welche bisher ein eigenes Attribut war, zusätzlich mit in die Source hineingezogen, um eine flexible Kombination zu ermöglichen. Und schließlich wird auch noch der Knotentype als neue Eigenschaft "ComponentType"=real|virtual|both eingeführt, mit deren Hilfe man auch virtuelle Komponenten/SubKomponenten einbeziehen kann. Wir haben also nun 4 Eigenschaften von Knotenreferenzen mit mehreren KeyWord-Optionen:</para><para xml:id="en_1227" xml:lang="en">Moreover, the property "DayAllocation" (which was previously an independent attribute) is additionally taken up into Source in order to allow flexible combination. And finally, node type is introduced as the new property "ComponentType" = real|virtual|both, with the aid of which virtual components/subcomponents can also be included. We now have 4 properties of node references with multiple KeyWord options:</para>
						
						
						<itemizedlist>
							<listitem>
								<para xml:id="de_1228" xml:lang="de">Scope=local|global (Default=local)</para><para xml:id="en_1228" xml:lang="en">Scope=local|global (default=local)</para>
								<para xml:id="de_1229" xml:lang="de">Gleiche Bedeutung wie in V1.0</para><para xml:id="en_1229" xml:lang="en">Same meaning as in V1.0</para>
								
							</listitem>
							<listitem>
								<para xml:id="de_1230" xml:lang="de">Hirarchy=self|descendants|ancestors (Default=self)</para><para xml:id="en_1230" xml:lang="en">Hierarchy=self|descendants|ancestors (default=self)</para>
								<itemizedlist>
									<listitem>
										<para xml:id="de_1231" xml:lang="de">"self"</para><para xml:id="en_1231" xml:lang="en">"Self"</para>
										<para xml:id="de_1232" xml:lang="de">Mit "self" wird genau die Knotenreferenz referenziert</para><para xml:id="en_1232" xml:lang="en">"Self" refers explicitly to that node reference.</para>
									</listitem>
									<listitem>
								
										<para xml:id="de_1233" xml:lang="de">"descendants"</para><para xml:id="en_1233" xml:lang="en">"Descendants"</para>
										<para xml:id="de_1234" xml:lang="de">Mit "descendants" wird die Knotenreferenz und alle XML-Nachfahren referenziert</para><para xml:id="en_1234" xml:lang="en">"Descendants" refers to the node reference and all XML descendants.</para>
									</listitem>
									<listitem>
										
										<para xml:id="de_1235" xml:lang="de">"ancestors"</para><para xml:id="en_1235" xml:lang="en">"Ancestors"</para>
										<para xml:id="de_1236" xml:lang="de">Mit "ancestors" wird die Knotenreferenz und alle XML-Vorfahren referenziert</para><para xml:id="en_1236" xml:lang="en">"Ancestors" refers to the node reference and all XML ancestors.</para>
									</listitem>
								</itemizedlist>
							</listitem>		
							<listitem>
								<para xml:id="de_1237" xml:lang="de">ComponentType=real|virtual|all (Default=real)</para><para xml:id="en_1237" xml:lang="en">ComponentType=real|virtual|all (default=real)</para>
								<itemizedlist>
									<listitem>
										<para xml:id="de_1238" xml:lang="de">"real"</para><para xml:id="en_1238" xml:lang="en">"Real"</para>
										<para xml:id="de_1239" xml:lang="de">Mit "real" werden nur Knotenreferenz realer Komponenten/SubKomponenten referenziert. Nicht reale also virtuelle Komponenten sind z.b. DefinedComponents, CombiComponents.</para><para xml:id="en_1239" xml:lang="en">"Real" refers only to node references of real components/subcomponents. Non-real, i.e. virtual components include DefinedComponents and CombiComponents for example.</para>
									</listitem>
									<listitem>
										
										<para xml:id="de_1240" xml:lang="de">"virtual"</para><para xml:id="en_1240" xml:lang="en">"Virtual"</para>
										<para xml:id="de_1241" xml:lang="de">Mit "virtual" wird die Knotenreferenz von virtuellen referenziert. Virtuelle Komponenten sind z.b. DefinedComponents, CombiComponents. Es werden immer die nächst höheren unmittelbaren virtuellen Komponenten referenziert.
										</para><para xml:id="en_1241" xml:lang="en">"Virtual" refers to the node reference of virtual components. Virtual components include DefinedComponents and CombiComponents for example. It is always the next highest, directly virtual components which are referenced.</para>
									</listitem>
									<listitem>
										
										<para xml:id="de_1242" xml:lang="de">"all"</para><para xml:id="en_1242" xml:lang="en">"All"</para>
										<para xml:id="de_1243" xml:lang="de">Mit "all" wird die Knotenreferenz von realen und virtuellen Knoten referenziert. Es werden immer die nächst höheren unmittelbaren virtuellen Komponenten referenziert.
										</para><para xml:id="en_1243" xml:lang="en">"All" refers to the node reference of real and virtual nodes. It is always the next highest, directly virtual components which are referenced.</para>
									</listitem>
								</itemizedlist>
							</listitem>	
							<listitem>
								<para xml:id="de_1244" xml:lang="de">DayAllocation=first|last|all (Kontextabhängiger Default wie beim Attribut DayAllocation)</para><para xml:id="en_1244" xml:lang="en">DayAllocation=first|last|all (context dependent default as with the DayAllocation attribute)</para>
								<para xml:id="de_1245" xml:lang="de">Gleiche Bedeutung wie das Attribut "@DayAllocation" in V1.0</para><para xml:id="en_1245" xml:lang="en">Same meaning as the attribute "@ DayAllocation" in V1.0</para>
								
							</listitem>
						</itemizedlist>
						
						<para xml:id="de_1246" xml:lang="de">Grundsätzlich erfolgt die Angabe der Eigenschaften über eine Punktnotation "Eigenschaft.KeyWord" z.B. "ComponentType.real". Bei allen eindeutigen KeyWords, kann man aber auf die Punktnotation verzichten und nur "real" angeben. Da das KeyWord "all" nicht eindeutig ist, muss hier immer die Eigenschaft vorangestellt werden z.B. ComponentType.all .
							Die Source erfordert die Angabe eines KeyWords für jede Eigenschaft. Wird die Eigenschaft nicht explizit definiert, so wird der Defaultwert als gesetzter Wert angesehen.</para><para xml:id="en_1246" xml:lang="en">In general, properties are specified using the dot notation "Property.KeyWord" e.g. "ComponentType.real". For all unambiguous KeyWords, dot notation can be omitted and the specification "real" is sufficient. Because the KeyWord "all" is ambiguous, the property must be always precede it e.g. ComponentType.all. The Source requires that a KeyWord is specified for each property. Where the property is not explicitly defined, a default value is used as the set value.</para>
						
						<para xml:id="de_1247" xml:lang="de">Die Angabe mehrer Eigenschaften erfolgt analog wie bei XPath durch eine Verbindung mit "+". Den Abschluss der Eigenschaften bildet wie bisher ein Doppelpunkt ":" , auf den der Pfadverweis zur Knotenreferenz folgt. Die Reihenfolge der Eigenschaften ist beliebig. Eine Mehrfach-Angabe von Eigenschaften ist zwar theoretisch möglich aber praktisch nicht sinnvoll, da die Ergebnismenge alle angebenen Eigenschaften erfüllen muss.</para><para xml:id="en_1247" xml:lang="en">Specifying multiple properties is done in the same way as for XPath, using the connection "+". As before, the properties are concluded with a colon":" , followed by the path reference to the node reference. The order of the properties is user defined. A multiple specification of properties is theoretically possible but doesn't make sense in practice as the amount of results must fulfil all specified properties.</para>
						
						<para xml:id="de_1248" xml:lang="de">Somit lässt sich die in V1.0 verwendete Syntax zu 100% auf die in V1.0 verwendeten impliziten Werte zurückführen.</para><para xml:id="en_1248" xml:lang="en">Thus the syntax used in V1.0 can be traced back 100% to the implicitly applied values in V1.0.</para>
						<para xml:id="de_1249" xml:lang="de">Das Attribut "@DayAllocation" bleibt erhalten der Defaultwert von @DayAllocation wird durch den entsprechenden Wert/Defaultwert in der Source-Eigenschaft ersetzt. Existiert ein Widerspruch zwischen der Angabe in @DayAllocation und der Eigenschaft DayAllocation so ist die Angabe in der Eigenschaft maßgebend.</para><para xml:id="en_1249" xml:lang="en">The attribute "@ DayAllocation" remains; the default value of @DayAllocation is replaced by the corresponding value/default value in the Source property. Where there is a contradiction between the specification in @DayAllocation and the property DayAllocation, the specification in the property is defining.</para>
						
						<para xml:id="de_1250" xml:lang="de">So ergeben sich z.B. folgende neue Source-Konstrukte:</para><para xml:id="en_1250" xml:lang="en">This results in the following new Source constructs, for example:</para>
						
						<para xml:id="de_1251" xml:lang="de">Das folgende Beispiel referenziert alle Tags in virtuellen Knoteninstanzen der Knoten "SellingAccom" und sämtlicher untergeordneter virtuellen Knoten. Zusätzlich ist "local". Die Knoten müssen sich also in einem direkten Pfad ober und unterhalb des Knotens befinden, der diese "Source"-Angabe enthält. Zusätzlich ist "first" gesetzt.</para><para xml:id="en_1251" xml:lang="en">The following example refers to all tags in the virtual node instances of the "SellingAccom" node and all subordinate virtual nodes. "Local" is additional. The nodes must be in a direct path above and below the node which contains this "Source" specification. "First" is also set.</para>
						
						<programlisting><![CDATA[<Tags Class="Saison" Source="descendants+virtual:SellingAccom">A</Tags>]]>				</programlisting>
						
						
						<para xml:id="de_1252" xml:lang="de">Das folgende Beispiel referenziert alle Tags an allen reellen und virtuellen Knoteninstanzen der Knoten "SellingAccom" und sämtlicher untergeordneter, übergeordneter rellen und virtuellen Knoten. Da "global" gesetzt ist, können sich die Knoten bezogen auf die Platzierung der Source-Definition irgendwo im Produktbaum befinden. Zusätzlich ist "first" gesetzt.</para><para xml:id="en_1252" xml:lang="en">The following example refers to all tags on all real and virtual node instances of the "SellingAccom" node and all subordinate and superordinate real and virtual nodes. As the setting "global" is set, the nodes can be located anywhere in the product tree relative to the placement of the Source definition. "First" is also set.</para>
						
							
						<programlisting><![CDATA[<Tags Class="Saison" Source="global+Hirarchy.all+ComponentType.all:SellingAccom">A</Tags>]]>				</programlisting>
						
						
						
						<para xml:id="de_1253" xml:lang="de">Weitere Beispiele finden Sie in der Doku im 2. Kapitel</para><para xml:id="en_1253" xml:lang="en">For more examples, see the documentation in Chapter 2</para>
						
						
						
						
						
						
						
						
						
						
						
						<para xml:id="de_1254" xml:lang="de">Was bedeutet das nun für die FlugPriorisierung?</para><para xml:id="en_1254" xml:lang="en">What are the implications for flight prioritisation?</para>
						
						
						<para xml:id="de_1255" xml:lang="de">Das folgende Beispiel zeigt die Aufsplittung der Sortierung in eine getrennte Sortierung zuerst nach Outbound-Preis und danach nach Inboundpreis:</para><para xml:id="en_1255" xml:lang="en">The following example shows the splitting of the sorting into outbound price first and then inbound price:</para>
						
						<programlisting><![CDATA[<Otds...>
  ...
  <DefineComponent ... Role="ReturnFlight"> 
   ...
   <GroupDefinitions>
    <GroupDefinition Name="ReturnFlightGroupPrice">
      <GroupBy>
        <Element Source="Outbound">DepartureAirport</Element>
	<Element Source="Outbound">ArrivalAirport</Element>
	<Date Source="Outbound" DayType="CheckIn"/>
	<Duration Source="ReturnFlight"/>
      </GroupBy>
      <Sequence>
        <Sort Order="Ascending">
          <Price Source="Hirarchy.all:Outbound"/>
        </Sort>
        <Sort Order="Ascending">
          <Price Source="Hirarchy.all:Inbound"/>
        </Sort>
      </Sequence>
    </GroupDefinition>
   </GroupDefinitions>
  </DefinedComponent>
 ...
</Otds>]]>				</programlisting>
						
						
						
						
						
						
						
						
						
					</section>
					
					
				
					<section xml:id="OtdsStrategyRulesPreferences">
						<title><phrase xml:id="de_1256" xml:lang="de">Vorgabe einer Preferenz für eine Angebotsproduktion (Preferences)</phrase><phrase xml:id="en_1256" xml:lang="en">Setting a preference for offer production (Preferences)</phrase></title>
						<para xml:id="det_1257" xml:lang="de"/>
							
							<programlisting><![CDATA[<Otds...>
	...
	<Products>
		<Product Key="Package" ProductType="FlightAccommodation">
			...
			<Preferences>
				<Preference PreferenceType="PackageFlightPrio" Ref="ReturnFlightGroupPrice"></Preference>
			</Preferences>
			...
		</Product>
		...
	</Products>  
	...
</Otds>]]>				</programlisting>
							
						
					</section>
				</section>
			</section>
			<section xml:id="OtdsStrategyConditionalTag">
				<title><phrase xml:id="de_1258" xml:lang="de">Bedingte Kennzeichnung von Knoten aber auch Personen und Tagen zur Preisberechnung
					(ConditionalTags)</phrase><phrase xml:id="en_1258" xml:lang="en">Conditional marking of nodes, as well as persons and days, for price calculation (ConditionalTags)</phrase></title>
				<para xml:id="de_1259" xml:lang="de">ConditionalTags sind so wie auch Tags freie Markierungen, die aber in Ergänzung zu den
					Tags auch noch eine Condition enthalten. Genau wie die Tags definiert auch das
					ConditionalTag ein frei wählbares Wertepaar bestehend aus einem Attribut "Class" und dem
					Wert des ConditionalTag-Elements. ConditionalTags werden mit Hilfe von DayImpact- oder
					PersonImpact-Bedingungen benutzt um einzelne Tage oder Personen in Abhängigkeit einer
					Bedingung zu markieren. </para><para xml:id="en_1259" xml:lang="en">Like tags, ConditionalTags are free markers, but ones which additionally contain a condition. Just like tags, the ConditionalTag defines a freely selectable value pair, consisting of a "Class" attribute and the value of the ConditionalTag element. ConditionalTags are used in conjunction with DayImpact or PersonImpact conditions to mark individual days or persons, subject to a condition.</para>
				<para xml:id="de_1260" xml:lang="de">Im Vergleich zu normalen Tags gibt es bei der Verwendung von ConditionalTags jedoch
					einige Unterschiede: Ein ConditionalTag kann nur in Conditions von PriceItems und
					BookingGroups benutzt werden. Ein ConditionalTag kann daher nur zur Preisberechnung und
					zur Auswertung der Buchungsparameter genutzt werden. Als weiteren Unterschied zu normalen
					Tags enthält die Definition eines ConditionalTags eine Bedingung (Condition). Die
					Bedingung entscheidet darüber, wie welche Tage und welche Personen das Tag gesetzt wird
					bzw. gültig ist. Die Condition enthält dazu im Allgemeinen immer einen Impact-Anteil, der
					sich auf Tage und Personen bezieht. Erst dadurch wird das ConditionalTag für einzelne Tage
					bzw. Personen der Reise gültig. Die ConditionalTags markieren also einzelne Tage oder
					einzelne Personen. Dies ist der grundsätzliche Unterschied zu Tags.</para><para xml:id="en_1260" xml:lang="en">There are some differences when using ConditionalTags as opposed to normal tags: A ConditionalTag can only be used in conditions of PriceItems and BookingGroups. A ConditionalTag can therefore only be used for the price calculation and to evaluate the booking parameters. As a further difference to normal tags, the definition of a ConditionalTag includes a condition. The condition decides which days and which persons the tag is affixed to, i.e. is valid for. The condition also generally includes an Impact part, which refers to days and persons. Only then is the ConditionalTag valid for individual days and/or persons of the trip. The ConditionalTags therefore mark individual days or persons. This is their fundamental difference to tags.</para>
				<para xml:id="de_1261" xml:lang="de">Die Definition der ConditionalTags darf auch wieder Bedingungen anderer ConditionalTags
					enthalten. Um dabei Endlosschleifen zu vermeiden gilt folgende Definition: </para><para xml:id="en_1261" xml:lang="en">The definition of the ConditionalTag can also contain conditions of other ConditionalTags. To avoid infinite loops, the following definition applies:</para>
				<para xml:id="de_1262" xml:lang="de">Bezieht sich die Condition eines ConditionalTags erneut auf ein anderes ConditionalTag,
					so muss die Definition dieses ConditionalTags in der XML-Document-Order nachfolgend sein.
					Ein Bezug auf ConditionalTags, auf zuvor (bzgl. der XML-Document-Order) definierte
					ConditionalTags ist generell als "False" zu bewerten. </para><para xml:id="en_1262" xml:lang="en">If the condition of a ConditionalTag refers to another ConditionalTag, then the definition of this latter ConditionalTag should follow in the XML Document Order. A reference of a ConditionalTagige to previously defined (with reference to the XML Document Order) ConditionalTags is generally to be valued as "False".</para>
				<para xml:id="de_1263" xml:lang="de">Hier einige Beispiele für die DokumentOrder: </para><para xml:id="en_1263" xml:lang="en">Here are some examples of the DocumentOrder:</para>
				<itemizedlist>
					<listitem>
						<para xml:id="de_1264" xml:lang="de">Order im gesamten OTDS-Baum: Zuerst GlobalValues, dann Product, Brand,
							Accommodation, Flight, Addon </para><para xml:id="en_1264" xml:lang="en">Order in the complete OTDS tree: First GlobalValues, then Product, Brand, Accommodation, Flight, Addon</para>
					</listitem>
					<listitem>
						<para xml:id="de_1265" xml:lang="de">Order innerhalb der Accommodation: Zuerst Accommodation, dann SellingAccom,
							Board, Unit, SellingUnit</para><para xml:id="en_1265" xml:lang="en">Order within the Accommodation: First Accommodation, then SellingAccom, Board, Unit, SellingUnit</para>
					</listitem>
					<listitem>
						<para xml:id="de_1266" xml:lang="de">Order an einem Knoten gemäß Platzierung im XML</para><para xml:id="en_1266" xml:lang="en">Order on a node as per placement in the XML</para>
					</listitem>
				</itemizedlist>
				
				<para xml:id="de_1267" xml:lang="de">Ein typisches Beispiel für den praktischen Einsatz von ConditionalTags ist die
					Definition von Saisons. Jede Saison (A,B,C) wird durch spezielle Markierung von bestimmten
					Tagen dargestellt. Dies lässt sich mit normalen Tags nicht darstellen. Die Saison kann
					ohne weiteres während des Reiseverlaufs wechseln, wenn sich der Reiseverlauf über mehrere
					Saisondefinitionen erstreckt.</para><para xml:id="en_1267" xml:lang="en">A typical example for the practical use of ConditionalTags is the definition of seasons. Each season (A, B, C) is shown through the special marking of specific days. This cannot be depicted with normal Tags. The season can automatically change during the duration of the trip, if the trip duration is spread over more than one season definition.</para>
				<programlisting><![CDATA[<SellingAccom>
	...
	<ConditionalTag>
 	<Tag Class="Season">E</Tag>
  	<Condition>
    	<DayImpact>
      	<Date Source="Accommodation" DayType="Stay">
        	<Min>2012-07-01</Min>
        	<Max>2012-08-31</Max>
      	</Date>
    	</DayImpact>
  	</Condition>
	</ConditionalTag>
	...
</SellingAccom>]]></programlisting>
				<para xml:id="de_1268" xml:lang="de">Hier wird jeder "Stay"-Tag (Übernachtungstag) der Reise mit dem Season-Tag = "E"
					markiert, wenn der Tag im Zeitraum vom 01.07.- 31.08. liegt. Das nachfolgende Beispiel
					zeigt wie in einem PriceItem dieses Season-Tag als Bedingung definiert werden kann, so
					dass nur die mit dem Season-Tag= "E" markierten Tage den Preis zugewiesen bekommen
					(Tagespreis mit Saisonbezug). <programlisting><![CDATA[<PriceItem>
	...
	<Condition>
	...
	 <Impact>
 		<ConditionalTag Class="Season">E</Tag>
     </Impact>
	...
  	</Condition>
	...
</PriceItem>]]></programlisting>Weitere Beispiele aus der Praxis wie Saisonbezüge mit ConditionalTags
					umgesetzt werden, finden sie im Praxis-Kapitel <link linkend="OtdsProductsComponentsAccommodationSeason">Saisondefinitionen</link>.</para><para xml:id="en_1268" xml:lang="en">Here, each "Stay" day (accommodation day) is marked with the season tag = "E", if the day falls in the period 01.07. to 31.08. The following example shows how this season Tag can be defined as a condition in a PriceItem, so that only those days marked with the season Tag= "E" are assigned the price (day price with reference to season). <programlisting>
						<![CDATA[<PriceItem>
	...
	<Condition>
	...
	 <Impact>
 		<ConditionalTag Class="Season">E</Tag>
     </Impact>
	...
  	</Condition>
	...
</PriceItem>]]></programlisting>Further examples regarding how to use ConditionalTags with reference to seasons can be found in the practical chapter <link linkend="OtdsProductsComponentsAccommodationSeason">Saisondefinitionen</link>.</para>
				<para xml:id="de_1269" xml:lang="de">Eine andere typische Verwendung von ConditionalTags ist die Markierung von Personen. In
					dem folgenden Beispiel werden beispielsweise die ältesten beiden Mitreisenden als
					Vollzahler markiert.</para><para xml:id="en_1269" xml:lang="en">Another typical use of ConditionalTags is to mark certain persons. In the following example, the two oldest participants are marked as full-paying guests.</para>
				<programlisting><![CDATA[<SellingUnit>
	...
	<ConditionalTag >
  	<Tag Class="PersonType">Vollzahler</Tag>
  	<Condition>
    	<PersonImpact>
      	<PersonIndex Source="Product">
        	<Until>2</Until>
      	</PersonIndex>
    	</PersonImpact>
  	</Condition>
	</ConditionalTag>
	...
</SellingUnit>]]></programlisting>
				<para xml:id="de_1270" xml:lang="de">Die Integration dieses Tags erfolgt analog zum obigen Beispiel.</para><para xml:id="en_1270" xml:lang="en">This tag is integrated as shown in the example above.</para>
				<para xml:id="de_1271" xml:lang="de">Weitere Beispiele aus der Praxis, wie Personentypen mit ConditionalTags umgesetzt
					werden, finden sie im Praxis-Kapitel <link linkend="OtdsProductsComponentsAccommodationConditionalTags">Personendefinitionen
						(Vollzahler und Co)</link></para><para xml:id="en_1271" xml:lang="en">Further examples of how ConditionalTags are used for different person types in practice can be found in the chapter <link linkend="OtdsProductsComponentsAccommodationConditionalTags">Person definitions (full-paying guests and others)</link>
				</para>
				<para xml:id="det_1272" xml:lang="de"/>
			</section>
			<section xml:id="OtdsStrategyPriceItem">
				<title><phrase xml:id="de_1273" xml:lang="de">Preisbestandteile für Komponenten (PriceItem)</phrase><phrase xml:id="en_1273" xml:lang="en">Price components for components (PriceItem)</phrase></title>
				<section xml:id="OtdsStrategyPriceItemOverview">
					<title><phrase xml:id="de_1274" xml:lang="de">PriceItems - Überblick und Begriffsbestimmung</phrase><phrase xml:id="en_1274" xml:lang="en">PriceItems - overview and terminology definitions</phrase></title>
					<para xml:id="de_1275" xml:lang="de">In diesem Kapitel werden die Datenstrukturen beschrieben, die im Zusammenhang mit
						der Preisberechnung wichtig sind und deren Kenntnis Voraussetzung für das Verständnis
						des Verarbeitungsmodell zur Preisberechnung ist. (siehe dazu das Kapitel <link linkend="OtdsProcessPriceCalculation">Verarbeitung der Preisberechnung</link>
						)</para><para xml:id="en_1275" xml:lang="en">This chapter describes the data structures which are important to price calculation, a knowledge of them being essential for the understanding of the processing model for price calculation (see also the <link linkend="OtdsProcessPriceCalculation">Processing the price calculation</link> chapter).</para>
					<para xml:id="de_1276" xml:lang="de">Die Preise der einzelnen Komponenten setzen sich aus einzelnen Preisbestandteilen
						(PriceItem) zusammen. Mit den definierten Eigenschaften und Bedingungen der
						Preisbestandteile wird die Berechnung des Gesamtpreises gesteuert.</para><para xml:id="en_1276" xml:lang="en">The prices of individual components are composed from individual price components (PriceItems). The calculation of the total price can be controlled via the defined properties and conditions of the price components.</para>
					<para xml:id="de_1277" xml:lang="de">In den verschiedenen Reservierungssystemen liegen die Preisbestandteile und ihre
						Eigenschaften auf unterschiedliche Art und Weise in eigenen Datenstrukturen vor. Um
						dieser Verschiedenheit gerecht zu werden, bietet OTDS variable Möglichkeiten der
						Preisdatenlieferung durch Anordnung der Preisbestandteile (PriceItems) an vielen
						Positionen. OTDS bietet zudem eine flexible Art, generelle Regeln zur Produktbildung
						und Preisberechnung zu formulieren. Beides zusammen führt zu einem generellen Konzept
						und einer hohen Flexibilität bei der Preisberechnung aus den
						Preisbestandteilen.</para><para xml:id="en_1277" xml:lang="en">The price components and their properties are provided within different booking systems in different data structures. To allow for such differences, OTDS offers variable options for delivering price data, by assigning price components (PriceItems) to many different positions. OTDS additionally offers a flexible way of formulating general rules for product composition and price calculation. Together these offer a general concept and greater flexibility when calculating the price from the price components.</para>
					<para xml:id="de_1278" xml:lang="de">Durch die hohe Flexibilität der Organisation der Preisbestandteile in OTDS wird die
						OTDS Datenproduktion für die Veranstalter- und Reservierungssysteme enorm vereinfacht,
						da in vielen Fällen die Regeln sowie die Platzierung der Preisbestandteile beibehalten
						werden können.</para><para xml:id="en_1278" xml:lang="en">OTDS's high flexibility when organising price components means that OTDS data production is enormously simplified for tour operators and booking systems, as the rules and placement of price components can often be maintained.</para>
					<para xml:id="de_1279" xml:lang="de">Eine Übersicht der verschiedenen Positionen, an denen Preisbestandteile (PriceItems)
						in OTDS platziert werden können, zeigt folgende Abbildung. </para><para xml:id="en_1279" xml:lang="en">The following diagram gives an overview of the various positions at which price components (PriceItems) can be positioned in OTDS.</para>
					<para xml:id="de_1280" xml:lang="de"> </para><para xml:id="en_1280" xml:lang="en"/>
					<figure>
						<info>
							<title><phrase xml:id="de_1281" xml:lang="de">PriceItems-Overview</phrase><phrase xml:id="en_1281" xml:lang="en">PriceItems overview</phrase></title>
						</info>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/priceitems-overview.png" format="PNG" contentwidth="80%"/>
							</imageobject>
							<textobject>
								<para xml:id="de_1282" xml:lang="de">PriceItems-Overview</para><para xml:id="en_1282" xml:lang="en">PriceItems overview</para>
							</textobject>
						</mediaobject>
					</figure>

					<bridgehead xml:id="de_1283" xml:lang="de">Keine impliziten Regeln</bridgehead><bridgehead xml:id="en_1283" xml:lang="en">No implicit rules</bridgehead>
					<para xml:id="de_1284" xml:lang="de">Die Preisberechnung in OTDS verfolgt einen globalen Ansatz: Es gibt keine impliziten
						Berechnungsregeln, d.h. alle Eigenschaften, Regeln, Bedingungen und
						Kombinationsmöglichkeiten müssen immer mit den Daten geliefert werden. Es gibt keine
						veranstalterabhängigen impliziten Regeln. An manchen Stellen wird die OTDS Struktur
						ggf. aufgrund des hohen Detaillierungsgrades komplex erscheinen. Häufig stell man aber
						schon nach kurzer Zeit fest, dass ohne diese Detaillierung genau dort
						Interpretationsspielräume entstehen würden, die häufig durch die unterschiedlichen
						implizite Regeln in den Veranstaltersystemen entstehen. In OTDS werden diese
						Interpretationsspielräume durch genau zu spezifizierende Parameter präzisiert. </para><para xml:id="en_1284" xml:lang="en">Price calculation in OTDS follows a global approach: There are no implicit calculation rules, i.e. all properties, rules, conditions and combination possibilities must always be delivered with the data. There are no tour operator-specific implicit rules. The OTDS structure may appear to be complex in some places because of the high level of detail. However, you will often notice that without this detail, scope for interpretation would arise exactly at those points at which they would often arise due to the various implicit rules in the tour operating systems. In OTDS this scope for interpretation is refined by precisely specifiable parameters.</para>
					<para xml:id="de_1285" xml:lang="de">Die Kombinatorik der Preisbestandteile erfolgt über Indizes und Codes, die zur
						Kennzeichnung benutzt werden. Jedem PriceItem wird weiterhin eine frei wählbare Class
						zugeordnet, die zusätzlich in die Kombinatorik einfließt. Diese Class enthält dabei
						allerdings keine impliziten Regeln und es gibt keine vordefinierten Preisklassen, die
						unterschiedlich interpretiert werden. Vielmehr bildet die "Class" eine Klassifizierung
						innerhalb des Veranstaltersystems ab. Und die Zuordnung dieser "Class" zu bestimmten
						Regeln erfolgt durch den Veranstalter, der dadurch selbst die korrekte Verwendung der
						Preisbestandteile bestimmt. Es gibt damit keine spezifische Verwendung bestimmter
						Preistypen. Alle Preisbestandteile werden gleich behandelt. Die Preisberechnung in
						OTDS macht keine Unterscheidungen zwischen einem Preisbestandteil, der zum Beispiel
						einen Frühbucherabschlag definiert oder einem Preisbestandteil, der einen Preis für
						einen Erweiterungstag definiert. Die Verwendung wird allein durch die korrekt
						spezifizierten Eigenschaften des Preisbestandteils festgelegt.</para><para xml:id="en_1285" xml:lang="en">The combinatorics of price components is done by using indices and codes, which are used to identify them. A freely selectable Class that also influences the combination is assigned to each PriceItem. This Class does not contain implicit rules and there are no pre-defined price classes that can be interpreted differently. The "Class" is rather a classification within the tour operator system. This class is assigned to certain rules by the tour operator, who in doing so also determines the correct use of the price components. Thus there are no specific usages for certain price types. All price components are dealt with in the same way. The price calculation in OTDS does not differentiate between a price component that defines an early booking discount, for example, and a price component that defines a price for an optional extra day. The usage is determined solely by the correctly specified properties of the price component.</para>
					<para xml:id="de_1286" xml:lang="de">Die Kenntnis, um welche Art Preisbestandteil es sich handelt, ist also nicht mehr
						notwendig und liegt nur noch in den gelieferten Eigenschaften, Bedingungen und
						Kombinationsregeln, die letztendlich zur korrekten Preisberechnung führen. Außerdem
						können alle Regeln und Mechanismen auf alle Preisbestandteile angewendet werden. Zum
						Beispiel kann die Kombinatorik ohneweiteres auch auf Grund- oder Flugpreise angewendet
						werden, wenn dies ein Veranstaltersystem erfordert. </para><para xml:id="en_1286" xml:lang="en">Knowing which type of price component is concerned is no longer important and is found only in the delivered properties, conditions and combination rules, which ultimately lead to the correct price calculation. In addition, all rules and mechanisms can be applied to all price components. For example, the combinatorics can automatically also be used for basic rates or flight prices should this be required by an operator's system.</para>
					<bridgehead xml:id="de_1287" xml:lang="de">Eigenschaften, Bedingungen, Wirkung, Kombinatorik</bridgehead><bridgehead xml:id="en_1287" xml:lang="en">Properties, conditions, effect, combinatorics</bridgehead>
					<para xml:id="de_1288" xml:lang="de">OTDS bietet die Möglichkeit über Regeln und Bedingungen Einschränkungen zu
						vereinbaren und über die Regeln zur Kombination und Wirkung die einzelnen
						Preisbestandteile miteinander zu verknüpfen oder auszuschließen.</para><para xml:id="en_1288" xml:lang="en">OTDS offers the possibility to agree upon restrictions for rules and conditions, as well as to link the individual price components to one another or exclude them via the rules for combinations and effects.</para>
					<para xml:id="de_1289" xml:lang="de">In OTDS setzt sich ein Preisbestandteil aus den vier Bereichen Eigenschaften,
						Bedingungen, Wirkung und Kombinatorik zusammen:</para><para xml:id="en_1289" xml:lang="en">In OTDS a price component is assembled from the four fields of properties, conditions, effect and combinatorics:</para>
					<itemizedlist>
						<listitem>
							<para xml:id="de_1290" xml:lang="de"><emphasis role="bold">Eigenschaften</emphasis></para><para xml:id="en_1290" xml:lang="en">
								<emphasis role="bold">Properties</emphasis>
							</para>
							<itemizedlist>
								<listitem>
									<para xml:id="de_1291" xml:lang="de">Absolutes oder prozentuales PriceItem (<code>Absolute</code>,
											<code>Percent</code>)</para><para xml:id="en_1291" xml:lang="en">Absolute or percentage PriceItem (<code>Absolute</code> , <code>Percent</code> )</para>
								</listitem>
								<listitem>
									<para xml:id="de_1292" xml:lang="de">Höhe des Betrages</para><para xml:id="en_1292" xml:lang="en">Amount</para>
								</listitem>
								<listitem>
									<para xml:id="de_1293" xml:lang="de">Auf wie viele Tage bezieht sich das PriceItem
										(<code>DayBase</code>)</para><para xml:id="en_1293" xml:lang="en">How many days is the PriceItem referring to (<code>DayBase</code> )</para>
								</listitem>
								<listitem>
									<para xml:id="de_1294" xml:lang="de">Auf wie viele Personen bezieht sich das PriceItem
											(<code>PersonBase</code>)</para><para xml:id="en_1294" xml:lang="en">How many persons is the PriceItem referring to (<code>PersonBase</code> )</para>
								</listitem>
							</itemizedlist>
						</listitem>
						<listitem>
							<para xml:id="de_1295" xml:lang="de"><emphasis role="bold">Wirkung</emphasis></para><para xml:id="en_1295" xml:lang="en">
								<emphasis role="bold">Effect</emphasis>
							</para>
							<itemizedlist>
								<listitem>
									<para xml:id="de_1296" xml:lang="de">Auf welches absolute PriceItem wirkt ein prozentualer Zu-/Abschlag:
										ApplyTo, NotApplyTo</para><para xml:id="en_1296" xml:lang="en">Which absolute PriceItem does a percentage surcharge/discount have an effect on: ApplyTo, NotApplyTo</para>
								</listitem>
								<listitem>
									<para xml:id="de_1297" xml:lang="de">Welche prozentualen PriceItems wirken auf ein absolutes PriceItem:
										AppliedBy</para><para xml:id="en_1297" xml:lang="en">Which percentage PriceItems have an effect on an absolute PriceItem: AppliedBy</para>
								</listitem>
							</itemizedlist>
						</listitem>
						<listitem>
							<para xml:id="de_1298" xml:lang="de"><emphasis role="bold">Bedingungen</emphasis></para><para xml:id="en_1298" xml:lang="en">
								<emphasis role="bold">Conditions</emphasis>
							</para>
							<itemizedlist>
								<listitem>
									<para xml:id="de_1299" xml:lang="de">Bedingungen, für welche Tage und Personen ein Preis gültig ist
										(Impact-Conditions)</para><para xml:id="en_1299" xml:lang="en">Conditions on which days and persons a price is valid for (Impact Conditions)</para>
								</listitem>
								<listitem>
									<para xml:id="de_1300" xml:lang="de">Bedingungen, unter denen das PriceItem gültig ist:
											<code>Condition</code></para><para xml:id="en_1300" xml:lang="en">Conditions upon which the PriceItem is valid: <code>Condition</code>
									</para>
								</listitem>
								<listitem>
									<para xml:id="de_1301" xml:lang="de">Bedingungen an Tagespreise: <code>DayPriceIndex</code></para><para xml:id="en_1301" xml:lang="en">Conditions for day prices: <code>DayPriceIndex</code>
									</para>
								</listitem>
								<listitem>
									<para xml:id="de_1302" xml:lang="de">Bedingungen an Preise anderer Produktkomponenten
											<code>ProductPrice</code> (V1.9)</para><para xml:id="en_1302" xml:lang="en">Conditions for prices of other product components
											<code>ProductPrice</code> (V1.9)</para>
								</listitem>
							</itemizedlist>
						</listitem>
						<listitem>
							<para xml:id="de_1303" xml:lang="de"><emphasis role="bold">Kombinatorik</emphasis></para><para xml:id="en_1303" xml:lang="en">
								<emphasis role="bold">Combinatorics</emphasis>
							</para>
							<itemizedlist>
								<listitem>
									<para xml:id="de_1304" xml:lang="de">Abhängigkeiten und Bedingungen zwischen Preisbestandteilen sowie
										deren Kompatibilitäten</para><para xml:id="en_1304" xml:lang="en">Dependence and conditions concerning price components and their compatibilities.</para>
								</listitem>
								<listitem>
									<para xml:id="de_1305" xml:lang="de">Bedingungen, unter denen das PriceItem gültig ist:
											<code>Condition</code></para><para xml:id="en_1305" xml:lang="en">Conditions, under which the PriceItem is valid: <code>Condition</code>
									</para>
								</listitem>
								<listitem>
									<para xml:id="de_1306" xml:lang="de">Abbildung von Datennachlieferungen und Ersatzpreisen</para><para xml:id="en_1306" xml:lang="en">Depiction of data dispensations and replacement prices</para>
								</listitem>
							</itemizedlist>
						</listitem>
					</itemizedlist>
					<para xml:id="de_1307" xml:lang="de">Einen Überblick über die Bereiche und Elemente eines Preisbestandteils gibt folgende
						Übersicht:</para><para xml:id="en_1307" xml:lang="en">An overview of the fields and elements of a price component is as follows:</para>
					<figure>
						<info>
							<title><phrase xml:id="de_1308" xml:lang="de">PriceItem</phrase><phrase xml:id="en_1308" xml:lang="en">PriceItem</phrase></title>
						</info>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/priceitem.png" format="PNG" contentwidth="80%"/>
							</imageobject>
							<textobject>
								<para xml:id="de_1309" xml:lang="de">PriceItem</para><para xml:id="en_1309" xml:lang="en">PriceItem</para>
							</textobject>
						</mediaobject>
					</figure>
					<para xml:id="de_1310" xml:lang="de"> </para><para xml:id="en_1310" xml:lang="en"/>
				</section>
				<section xml:id="OtdsStrategyPriceItemClass">
					<title><phrase xml:id="de_1311" xml:lang="de">PriceItem Class</phrase><phrase xml:id="en_1311" xml:lang="en">PriceItem Class</phrase></title>
					<para xml:id="de_1312" xml:lang="de">Jedes PriceItem muss das Attribut <code>Class</code> enthalten, das einen frei
						wählbaren Namen enthält und den Typ oder die Kategorie des PriceItems beschreibt. In
						der Regel beinhaltet jedes Veranstaltersystem eine solche Klassifizierung von Preisen
						mit entsprechenden Bezügen innerhalb der Regeln. Auf diesen Wert wird in der
						Preisberechnung und der Kombinatorik Bezug genommen. Die prozentualen und absoluten
						PriceItems werden über das Attribut <code>Class</code> festgelegt. Die Abbildung von
						Ersatzpreisen, sowie die Nachlieferung von Daten werden ebenfalls über dieses Attribut
						gesteuert. Einige Veranstaltersysteme benutzen die "Class" auch für die Regeln der
						Kombinatorik. Andere Systeme benutzen dort eigene Kombinatorik-Codes. In OTDS gibt es
						deshalb ein von der PriceItem-Class entkoppelten CombinationCode, der je nach Bedarf
						natürlich auch mit der "Class" gefüllt werden kann. So wird OTDS allen Systemen
						gerecht.</para><para xml:id="en_1312" xml:lang="en">Each PriceItem must include the attribute <code>Class</code> , which contains a name that is completely elective and describes the type or the category of the PriceItem. In general each operator's system contains this type of classification of prices with corresponding references within the rules. This value is referred to in the price calculation and combinatorics. The percentage and absolute PriceItems are established through the attribute <code>Class</code> . The depiction of replacement prices, as well as the dispensation of data, is also controlled with this attribute. Some operator's systems also use the "Class" for the rules of the combinatorics. Other systems here use their own combinatorics codes. In OTDS there is therefore one CombinationCode which has been decoupled from the PriceItem class, and which, if necessary, can be filled with the "Class". In this way OTDS can function with all systems.</para>
				</section>
				<section xml:id="OtdsStrategyPriceItemAbsolute">
					<title><phrase xml:id="de_1313" xml:lang="de">PriceItems mit absoluten Preisen (Absolute)</phrase><phrase xml:id="en_1313" xml:lang="en">PriceItems with absolute prices (Absolute)</phrase></title>
					<para xml:id="de_1314" xml:lang="de">Bei vielen Zu- oder Abschlägen handelt es sich um Absolutbeträge. Die als
						Absolutwerte gelieferten Zu- oder Abschläge werden nach den mitgelieferten Regeln mit
						den entsprechenden Preisbestandteilen summiert - negative Werte als Abzug, positive
						Werte als Aufschlag. Der absolute Wert wird im Element <code>Value</code> angegeben. </para><para xml:id="en_1314" xml:lang="en">Many surcharges or discounts are depicted as absolute amounts. The surcharges or discounts, which are delivered as absolute values, are accumulated with the corresponding price components in accordance with the accompanying rules. The absolute value is given in the element <code>Value</code> .</para>
					<para xml:id="de_1315" xml:lang="de">Für ein absolutes PriceItem muss die Bezugsbasis festgelegt werden, d.h. wie der
						angegebene Preis auf einzelne Tage (<code>DayBase</code>) und auf einzelne Personen
							(<code>PersonBase</code>) verteilt wird. </para><para xml:id="en_1315" xml:lang="en">For an absolute PriceItem the reference base has to be defined, i.e. how the given price is spread over individual days (<code>DayBase</code> ) and individual persons (<code>PersonBase</code> ).</para>

					<bridgehead xml:id="de_1316" xml:lang="de">DayBase</bridgehead><bridgehead xml:id="en_1316" xml:lang="en">DayBase</bridgehead>
					<para xml:id="de_1317" xml:lang="de">In <code>DayBase</code> wird definiert wie sich der Value auf die einzelnen Tage
						verteilt. </para><para xml:id="en_1317" xml:lang="en">In <code>DayBase</code>  the way in which the value is spread over individual days is defined.</para>
					<para xml:id="de_1318" xml:lang="de">Das Attribut <code>Source</code> definiert anhand der Komponente welchen Tagen das
						PriceItem zugewiesen wird. Mögliche Werte sind: </para><para xml:id="en_1318" xml:lang="en">The attribute <code>Source</code> defines by means of the components, which days the PriceItem is assigned to. Possible values are:</para>
					<itemizedlist>
						<listitem>
							<para xml:id="de_1319" xml:lang="de"><code>ThisComponent</code>: Voreinstellung ist die Komponente, in der
								das PriceItem definiert ist</para><para xml:id="en_1319" xml:lang="en">
								<code>ThisComponent</code> : The component in which the PriceItem is defined serves as a default</para>
						</listitem>
						<listitem>
							<para xml:id="de_1320" xml:lang="de"><code>Accommodation</code></para><para xml:id="en_1320" xml:lang="en">
								<code>Accommodation</code>
							</para>
						</listitem>
						<listitem>
							<para xml:id="de_1321" xml:lang="de"><code>ReturnFlight</code></para><para xml:id="en_1321" xml:lang="en">
								<code>ReturnFlight</code>
							</para>
						</listitem>
						<listitem>
							<para xml:id="de_1322" xml:lang="de"><code>Outbound</code></para><para xml:id="en_1322" xml:lang="en">
								<code>Outbound</code>
							</para>
						</listitem>
						<listitem>
							<para xml:id="de_1323" xml:lang="de"><code>Inbound</code></para><para xml:id="en_1323" xml:lang="en">
								<code>Inbound</code>
							</para>
						</listitem>
						<listitem>
							<para xml:id="de_1324" xml:lang="de"><code>OnewayFlight</code></para><para xml:id="en_1324" xml:lang="en">
								<code>OnewayFlight</code>
							</para>
						</listitem>
						<listitem>
							<para xml:id="de_1325" xml:lang="de"><code>Addon</code></para><para xml:id="en_1325" xml:lang="en">
								<code>Addon</code>
							</para>
						</listitem>
						<listitem>
							<para xml:id="de_1326" xml:lang="de"><code>Product</code>: Alle Tage der Gesamtreise</para><para xml:id="en_1326" xml:lang="en">
								<code>Product</code> : All days of the entire 
								trip</para>
						</listitem>
					</itemizedlist>
					<para xml:id="de_1327" xml:lang="de">Das Attribut <code>IntervalType</code> legt dabei fest, auf welche Tage der Price
						verteilt wird (<code>Stay</code> oder <code>CheckInOut</code>).</para><para xml:id="en_1327" xml:lang="en">The attribute <code>IntervalType</code>  specifies on which days the Price is distributed across (<code>Stay</code> or <code>CheckInOut</code>).</para>
					<para xml:id="de_1328" xml:lang="de">Die folgende Tabelle gibt einen Überblick über mögliche Werte von
							<code>DayBase</code> inkl. des Attributs <code>IntervalType</code>.</para><para xml:id="en_1328" xml:lang="en">The following table provides an overview of the possible values of <code>DayBase</code>  including the <code>IntervalType</code> attribute.</para>
					<table frame="topbot" tocentry="1">
						<title><phrase xml:id="de_1329" xml:lang="de">Werte für DayBase und IntervalType</phrase><phrase xml:id="en_1329" xml:lang="en">Values for DayBase and IntervalType</phrase></title>
						<tgroup cols="2">
							<thead>
								<row valign="middle">
									<entry align="left">
										<para xml:id="de_1330" xml:lang="de"><code>DayBase</code></para><para xml:id="en_1330" xml:lang="en">
											<code>DayBase</code>
										</para>
									</entry>
									<entry align="left">
										<para xml:id="de_1331" xml:lang="de">Beschreibung</para><para xml:id="en_1331" xml:lang="en">Description</para>
									</entry>
								</row>
							</thead>
							<tbody valign="top">
								<row valign="top">
									<entry>
										<code>DayBase=x</code>, <code>IntervalType=Stay</code></entry>
									<entry>
										<para xml:id="de_1332" xml:lang="de">Das PriceItem bezieht sich auf alle Stay-Tage des Aufenthalts
											wird also allen StayTagen zugewiesen . DayBase=X bedeutet, dass
											der Value durch die Anzahl der Stay-Tage geteilt wird. (Es ist ein
											Gesamtpreis)</para><para xml:id="en_1332" xml:lang="en">The PriceItem refers to all the Stay days of the stay and is therefore assigned to all the StayDays. DayBase=X means that the value is divided by the number of Stay days. (It is a total price)</para>
									</entry>
								</row>
								<row valign="top">
									<entry>
										<code>DayBase=1</code>, <code>IntervalType=Stay</code>
									</entry>
									<entry>
										<para xml:id="de_1333" xml:lang="de">Das PriceItem bezieht sich auf alle Stay-Tage des Aufenthalts
											wird also allen StayTagen zugewiesen . DayBase=1 bedeutet, dass
											der Value durch 1 geteilt wird, also so bleibt. Es handelt sich um
											einen Tagespreis.</para><para xml:id="en_1333" xml:lang="en">The PriceItem refers to all the Stay days of the stay and is therefore assigned to all the StayDays. DayBase=1 means that the value is divided by 1, so that it remains the same. It refers to a price per day.</para>
									</entry>
								</row>
								<row valign="top">
									<entry>
										<code>DayBase=1</code>, <code>IntervalType=CheckInOut</code>
									</entry>
									<entry>
										<para xml:id="de_1334" xml:lang="de">Das PriceItem bezieht sich auf alle Tage zwischen CheckIn und
											CheckOut einschließlich wird also allen Tagen zugewiesen .
											DayBase=1 bedeutet, dass der Value durch 1 geteilt wird, also so
											bleibt. Es handelt sich um einen Tagespreis, der auch am
											CheckOutTag fällig wird.</para><para xml:id="en_1334" xml:lang="en">The PriceItem refers to all days between CheckIn and CheckOut, it is therefore assigned to all days. DayBase=1 means that the value is divided by 1, so that it remains the same. It refers to a day price, which is also due on the CheckOut day.</para>
									</entry>
								</row>
								<row valign="top">
									<entry>
										<code>DayBase=7</code>, <code>Stay</code>
									</entry>
									<entry>
										<para xml:id="de_1335" xml:lang="de">Das PriceItem bezieht sich auf alle Stay-Tage des Aufenthalts
											wird also allen StayTagen zugewiesen . DayBase=7 bedeutet, dass
											der Value durch 7 geteilt wird, bevor er den Tagen zugewiesen
											wird. Im System ist also ein Wochenpreis hinterlegt, der tageweise
											zugewiesen wird. Es handelt sich hierbei um einen wochenweisen
											Preis, der jedoch auf die einzelnen Tage gleichverteilt
											anfällt.</para><para xml:id="en_1335" xml:lang="en">The PriceItem refers to all the Stay days of the stay and is therefore assigned to all the StayDays. DayBase=7 means that the value is divided by 7, before it is assigned to the days. Hence a week price is deposited within the system, which is assigned evenly by the day. This deals with a weekly price which is then applied equally to individual days.</para>
										<para xml:id="de_1336" xml:lang="de">Es kann jede beliebige positive Zahl für <code>DayBase</code>
											angegeben werden. Es hängt vom System ab, welche Art Preis
											hinterlegt ist.</para><para xml:id="en_1336" xml:lang="en">Any chosen positive number can be entered as <code>DayBase</code> . It depends on the system, what type of price is then deposited.</para>
									</entry>
								</row>
							</tbody>
						</tgroup>
					</table>
					<para xml:id="de_1337" xml:lang="de">Bitte beachten: Wochenweise Preise die nur für komplette Wochen oder bereits
						komplett bei angefangenen Wochen berechnet werden, werden als tageweise Preise
						abgebildet, die dann unter Benutzung der DayIndex-Bedingung für bestimmte Tage (z.B.
						jeder 1. und 8. etc. Tag) definiert werden.</para><para xml:id="en_1337" xml:lang="en">Please note: Weekly prices which are only charged for complete weeks or as soon as any new week begins, are displayed as daily prices, which are then defined by using the DayIndex condition for certain days (e.g. every 1st and 8th day, etc.).</para>
					<bridgehead xml:id="de_1338" xml:lang="de">PersonBase</bridgehead><bridgehead xml:id="en_1338" xml:lang="en">PersonBase</bridgehead>
					<para xml:id="de_1339" xml:lang="de"><code>PersonBase</code> gibt die Anzahl an Personen an, auf die sich ein PriceItem
						bezieht.</para><para xml:id="en_1339" xml:lang="en">
						<code>PersonBase</code>  provides the number of persons, to whom the PriceItem refers.</para>
					<para xml:id="de_1340" xml:lang="de">Die folgende Tabelle gibt einen Überblick über mögliche Werte von
							<code>PersonBase</code>.</para><para xml:id="en_1340" xml:lang="en">The following table gives as overview of the possible values of <code>PersonBase</code> .</para>
					<table frame="topbot" tocentry="1">
						<title><phrase xml:id="de_1341" xml:lang="de">Werte für PersonBase</phrase><phrase xml:id="en_1341" xml:lang="en">Values for PersonBase</phrase></title>
						<tgroup cols="2">
							<thead>
								<row valign="middle">
									<entry align="left">
										<para xml:id="de_1342" xml:lang="de"><code>DayBase</code></para><para xml:id="en_1342" xml:lang="en">
											<code>DayBase</code>
										</para>
									</entry>
									<entry align="left">
										<para xml:id="de_1343" xml:lang="de">Beschreibung</para><para xml:id="en_1343" xml:lang="en">Description</para>
									</entry>
								</row>
							</thead>
							<tbody valign="top">
								<row valign="top">
									<entry>
										<code>PersonBase=x</code></entry>
									<entry>
										<para xml:id="de_1344" xml:lang="de">Das PriceItem bezieht sich auf alle Person, also die gesamte
											Reisegruppe. Für jede Person wird der gleiche Anteil des
											PriceItems fällig.</para><para xml:id="en_1344" xml:lang="en">The PriceItem refers to all persons, i.e. the entire travel group. The same proportion of the PriceItems is payable by each person.</para>
									</entry>
								</row>
								<row valign="top">
									<entry>
										<code>PersonBase=1</code></entry>
									<entry>
										<para xml:id="de_1345" xml:lang="de">Das PriceItem bezieht sich auf eine Person. Das PriceItem wird
											für jede Person fällig.</para><para xml:id="en_1345" xml:lang="en">The PriceItem refers to one person. The PriceItem is payable for each person.</para>
									</entry>
								</row>
								<row valign="top">
									<entry>
										<code>PersonBase</code> mit Angaben größer als 1</entry>
									<entry>Für PersonBase gibt es zurzeit kein Anwendungsbeispiel für Angaben
										größer als 1.</entry>
								</row>
							</tbody>
						</tgroup>
					</table>
					<para xml:id="de_1346" xml:lang="de">Die detaillierte Beschreibung der Elemente ist in der <link xlink:href="./technisch/otds_technisch.html#PriceItem">Technischen Dokumentation
							für OTDS</link> enthalten.</para><para xml:id="en_1346" xml:lang="en">A detailed description of the elements can be found in the <link xlink:href="./technisch/otds_technisch.html#PriceItem">Technical documentation for OTDS</link>.</para>

					<bridgehead xml:id="de_1347" xml:lang="de">Beispiele</bridgehead><bridgehead xml:id="en_1347" xml:lang="en">Example</bridgehead>
					<para xml:id="de_1348" xml:lang="de">Es folgen Beispiele von Preisbestandteilen mit Absolutbeträgen:</para><para xml:id="en_1348" xml:lang="en">The following are examples of price components with absolute amounts:</para>
					<para xml:id="de_1349" xml:lang="de"><emphasis role="bold">Beispiel 1</emphasis>: Der Grundpreis von 250 fällt einmalig
						für den gesamten Reisezeitraum pro Person an. <code>DayBase=x</code> gibt an, dass der
						Absolutbetrag von 250 auf alle Tage der Reise gleichmäßig verteilt wird.</para><para xml:id="en_1349" xml:lang="en">
						<emphasis role="bold">Example 1</emphasis>: The basic price of 250 is charged once per person for the entire travel period. <code>DayBase=x</code> indicates that the absolute amount of 250 is distributed evenly across all days of the trip.</para>
					<programlisting><![CDATA[<PriceItem Class="Grundpreis">
  <Absolute>
    <Value>250</Value>
    <DayBase>x</DayBase>
    <PersonBase>1</PersonBase>
  </Absolute>
  </PriceItem>]]></programlisting>
					<para xml:id="de_1350" xml:lang="de"><emphasis role="bold">Beispiel 2</emphasis>: Der Betrag von 15 für einen
						Erweiterungstag fällt pro Tag und pro Person an.</para><para xml:id="en_1350" xml:lang="en">
						<emphasis role="bold">Example 2</emphasis>: The amount of 15 for an extension day is incurred per day and per person.</para>
					<programlisting><![CDATA[<PriceItem Class="Erweiterungstag">
  <Absolute>
    <Value>15</Value>
    <DayBase>1</DayBase>
    <PersonBase>1</PersonBase>
  </Absolute>
</PriceItem>]]></programlisting>

					<para xml:id="de_1351" xml:lang="de"><emphasis role="bold">Beispiel 3</emphasis>: Ein Betrag von 128, der jeden Tag für
						alle Personen fällig wird.</para><para xml:id="en_1351" xml:lang="en">
						<emphasis role="bold">Example 3</emphasis>: An amount of 128, which is payable each day for all persons.</para>
					<programlisting><![CDATA[<PriceItem Class="BasePrice">
  <Absolute>
    <Value>128.00</Value>
    <DayBase>1</DayBase>
    <PersonBase>X</PersonBase>
  </Absolute>
  </PriceItem>]]></programlisting>
					<para xml:id="det_1352" xml:lang="de"/>
					<para xml:id="de_1353" xml:lang="de"><emphasis role="bold">Beispiel 4</emphasis>: Dies ist eine wochenweiser Betrag von
						500, der anteilig für jeden Tag der Reise je Person anfällt. <programlisting><![CDATA[<PriceItem Class="UnitPrice">
  <Absolute>
    <Value>500</Value>
    <DayBase>7</DayBase>
    <PersonBase>1</PersonBase>
  </Absolute>
</PriceItem>]]></programlisting></para><para xml:id="en_1353" xml:lang="en">
						<emphasis role="bold">Example 4</emphasis>: This is a weekly amount of 500, which is distributed proportionally across each day of the trip for each person. <programlisting>
							<![CDATA[<PriceItem Class="UnitPrice">
  <Absolute>
    <Value>500</Value>
    <DayBase>7</DayBase>
    <PersonBase>1</PersonBase>
  </Absolute>
</PriceItem>]]></programlisting>
					</para>
				</section>
				<section xml:id="OtdsStrategyPriceItemPercent">
					<title><phrase xml:id="de_1354" xml:lang="de">PriceItems mit prozentualen Auf- und Abschlägen (Percent)</phrase><phrase xml:id="en_1354" xml:lang="en">PriceItems with percentage mark-ups and discounts (percent)</phrase></title>
					<para xml:id="de_1355" xml:lang="de">PriceItems können auch prozentuale Auf- und Abschläge definieren. Diese PriceItems
						müssen sich immer auf mindestens ein absolutes PriceItem beziehen, um wirksam zu
						werden. Siehe dazu Kapitel <link linkend="OtdsStrategyPriceItemApplyTo">"Wirkung"</link>. Negative Prozentwerte definieren eine Reduktion, positive
						Prozentwerte eine prozentuale Erhöhung des Preises. </para><para xml:id="en_1355" xml:lang="en">PriceItems can also define percentage mark-ups and discounts. These PriceItems must always refer to at least one absolute PriceItem in order to be effective. Please refer to the chapter <link linkend="OtdsStrategyPriceItemApplyTo">"Taking Effect"</link>. Negative percentage values ​​define a reduction in price, positive percentages an increase.</para>
					<para xml:id="de_1356" xml:lang="de">Typische prozentuale Abschläge gibt es bei Kinder- oder Frühbucherrabatten. Ein
						typischer prozentualer Zuschlag ist z.B. ein Einzelzimmerzuschlag. Der Wert wird im
						Element Value als Prozentwert angegeben, beispielsweise „-5“ für 5-prozentigen
						Abschlag oder „10“ für einen Aufschlag von 10%.</para><para xml:id="en_1356" xml:lang="en">Percentage reductions typically relate to children's or early booking discounts. A typical example of a percentage surcharge would be a single room supplement. The value is expressed as a percentage in the Value element, for example, "-5" for a 5% discount, or "10" for a 10% surcharge.</para>
					<para xml:id="de_1357" xml:lang="de">In OTDS werden auch Dauerreduktionen als prozentualer Abschlag von 100% für die
						festgeleten Tage definiert, da die angewandten Mechanismen zu 100% identisch sind und
						sich dies perfekt in OTDS Preisberechnungsstrategie einfügt.</para><para xml:id="en_1357" xml:lang="en">Duration discounts in OTDS can also be defined as percentage discounts of 100% for the respective days to which they apply because the mechanisms used are 100% identical and this corresponds perfectly with the OTDS pricing strategy.</para>
					<bridgehead xml:id="de_1358" xml:lang="de">Beispiele</bridgehead><bridgehead xml:id="en_1358" xml:lang="en">Example</bridgehead>
					<para xml:id="de_1359" xml:lang="de">Das erste Beispiel zeigt als PriceItem einen 30 %igen Rabatt für eine Person, die 15
						Jahre oder jünger ist, und der sich auf die PriceItems mit der Class "Erweiterungstag"
						und "Grundpreis" bezieht.</para><para xml:id="en_1359" xml:lang="en">The first example shows as a PriceItem a 30% discount for a person who is 15 years or younger, and which refers to PriceItems with the class "Extra Day" and "Base Price".</para>
					<programlisting><![CDATA[<PriceItems>
  <PriceItem Class="Grundpreis">
    <Absolute> ... </Absolute>
  </PriceItem>

  <PriceItem Class="Erweiterungstag">
    <Absolute> ... </Absolute>
  </PriceItem>

  <PriceItem Class="KinderRabatt">
    <Percent>
      <Value>-30</Value>
      <ApplyTo>Erweiterungstag Grundpreis</ApplyTo>
    </Percent>
    <Condition>
        <PersonImpact>
            <PersonAge>
                <Max>15</Max>
            </PersonAge>
        </PersonImpact>
    </Condition>
  </PriceItem>
</PriceItems>]]></programlisting>
					<para xml:id="de_1360" xml:lang="de">Das zweite Beispiel zeigt ein PriceItem mit dem Namen "Fruehbucher", das auf das
						absolute PriceItems "Basispreis“ angewendet wird:</para><para xml:id="en_1360" xml:lang="en">The second example shows a PriceItem with the name "Early Booker", which is applied to the absolute PriceItem "Base Price":</para>
					<programlisting><![CDATA[<PriceItems>
  <PriceItem Class="Basispreis">
    <Absolute> ... </Absolute>
  </PriceItem>

  <PriceItem Class="Fruehbucher">
    <Percent>
      <Value>-15</Value>
      <ApplyTo>Basispreis</ApplyTo>
    </Percent>
    <Condition>
        <BookingDateOffset>
            <Min>60</Min>
        </BookingDateOffset>
    </Condition>
  </PriceItem>
</PriceItems>]]></programlisting>
					<para xml:id="de_1361" xml:lang="de">Das dritte Beispiel zeigt ein PriceItem mit dem Namen "Dauerreduktion", das gültig
						ist bei einer Reisedauer von 14 bis 20 Tagen (<code>Duration, Min=14, Max=20</code>)
						und angewendet wird auf die letzten beiden Tage der Reise (<code>DayImpact, DayIndex,
							From=-2</code>). Durch die Angabe <code>Value=-100</code> entfallen sowohl Tages-
						als auch Verpflegungspreise (<code>ApplyTo= Tagespreis Verpflegungspreis</code>) für
						die letzen beiden Stay-Tage komplett. Auf diese Weise wird eine simple Dauerreduktion
						"14=12" abgebildet.</para><para xml:id="en_1361" xml:lang="en">The third example shows a PriceItem with the name "Duration Discount", which is valid for a duration of between 14 and 20 days (<code>Duration, Min=14, Max=20</code>) and will be applied to the last two days of the trip (<code>DayImpact, DayIndex, From=-2</code> ). By specifying <code>Value=-100</code>, both day and board prices (<code>ApplyTo= day and board prices</code>) will not be applied for the last two days of the stay. In this way, a simple duration discount, "14 = 12", is shown.</para>
					<programlisting><![CDATA[<PriceItems>
  <PriceItem Class="Tagespreis">
    <Absolute> ... </Absolute>
  </PriceItem>

  <PriceItem Class="Verpflegungspreis">
    <Absolute> ... </Absolute>
  </PriceItem>

  <PriceItem Class="Dauerreduktion">
    <Percent>
      <Value>-100</Value>
      <ApplyTo>Tagespreis Verpflegungspreis</ApplyTo>
    </Percent>
    <Condition>
      <And>
        <DayImpact ImpactExecutionOrder="BeforeCombinatorics">
          <DayIndex IntervalType="Stay">
            <From>-2</From>
          </DayIndex>
        </DayImpact>
        <Duration>
          <Min>14</Min>
          <Max>20</Max>
        </Duration>
      </And>
    </Condition>
  </PriceItem>
</PriceItems>]]></programlisting>
					<para xml:id="det_1362" xml:lang="de"/>
				</section>
				<section xml:id="OtdsStrategyPriceItemApplyTo">
					<title><phrase xml:id="de_1363" xml:lang="de">Wirkung (<code>ApplyTo</code>, <code>NotApplyTo</code>,
						<code>AppliedBy</code>)</phrase><phrase xml:id="en_1363" xml:lang="en">Effect (<code>ApplyTo</code> , <code>NotApplyTo</code> , <code>AppliedBy</code> )</phrase></title>
					<para xml:id="de_1364" xml:lang="de">Prozentuale PriceItems müssen sich immer auf mindestens ein absolutes PriceItem
						beziehen, um angewendet zu werden. Diese Beziehung wird bei den prozentualen
						PriceItems durch das Element <code>ApplyTo</code> hergestellt, in dem die
						PriceItem-Class des absoluten PriceItems angegeben wird. Es können in dem Element
						mehrere PriceItem-Classes angegeben werden, wenn das prozentuale PriceItem auf mehrere
						absolute PriceItems wirken soll. Alle absoluten PriceItems können durch Hinzufügen des
						leeren Elements <code>ApplyToAll</code> referenziert werden.</para><para xml:id="en_1364" xml:lang="en">Percentage PriceItems must always refer to at least one absolute PriceItem in order to function. This relationship with the percentage PriceItems is established through the element <code>ApplyTo</code>  in which the class of the absolute PriceItem is indicated. Multiple PriceItem classes can be entered in the element if the percentage PriceItem is to influence several absolute PriceItems. All absolute PriceItems can be referred to by adding the empty element <code>ApplyToAll</code> .</para>
					<para xml:id="de_1365" xml:lang="de">Der Wirkungsradius von <code>ApplyTo</code> ist standardmäßig auf absolute
						PriceItems derselben Komponente begrenzt. Dadurch ist sichergestellt, dass
						beispielsweise ein prozentuales PriceItem der Unterkunft sich nicht fälschlicherweise
						auf ein absolutes PriceItem des Fluges bezieht. Zur Abbildung von Sonderfällen, in
						denen ein komponentenübergreifender Bezug von PriceItems erwünscht ist, ist es
						möglich, diese Standardeinstellung zu ändern. Dies erfolgt durch Angabe des Attributes
							<code>Component</code>, in dem die gewünschte Zielkomponente explizit angegeben
						wird, wie das folgende Beispiel zeigt:</para><para xml:id="en_1365" xml:lang="en">The field of influence of <code>ApplyTo</code> is generally restricted to absolute PriceItems of the same component. This ensures that a percentage PriceItem of the accommodation does not incorrectly refer to an absolute PriceItem of the flight, for example. It is possible to alter the standard settings for the depiction of special cases in which a component-spanning reference to PriceItems is desired. This occurs through the specification of the attribute <code>Component</code> , in which the desired target component is explicitly specified, as shown in the following example:</para>
					<programlisting><![CDATA[<PriceItem> <!-- geliefert in Accommodations -->
  <Percent>
    <Value>-30</Value>
    <ApplyTo Component=“ReturnFlight“>Grundflugpreis</ApplyTo>
  </Percent>
</PriceItem>]]></programlisting>
					<para xml:id="de_1366" xml:lang="de">Statt die absoluten PriceItems anzugeben, auf die ein prozentuales PriceItem wirken
						soll, können alternativ auch die PriceItems angegeben werden, auf die das prozentuale
						PriceItem nicht wirken darf. Dies erfolgt durch das Element <code>NotApplyTo</code>.
						Wird <code>NotApplyTo</code> verwendet, wird das prozentuale PriceItem auf alle
						absoluten PriceItems angewendet, die nicht explizit ausgeschlossen sind. Dabei sind
						nur die PriceItems der Komponente eingeschlossen, die durch das Attribut
							<code>Component</code> angegeben ist. Im Standardfall ist es die Komponente, in
						der man sich befindet. </para><para xml:id="en_1366" xml:lang="en">Instead of specifying the absolute PriceItems which are to be influenced by a percentage PriceItem, it is also alternatively possible to specify the PriceItems which are not to be influenced by the percentage PriceItem. This occurs via the element <code>NotApplyTo</code> . If <code>NotApplyTo</code> is used, the percentage PriceItem is applied to all absolute PriceItems which are not explicitly excluded. In this, the only PriceItems included are those of the component which is specified by the attribute <code>Component</code> . In the standard case, it is the component you are currently in.</para>
					<para xml:id="de_1367" xml:lang="de">Manche Veranstalter hinterlegen die Beziehungen zwischen absoluten und prozentualen
						PriceItems nicht bei den prozuentualen PriceItems sondern bei den absoluten
						PriceItems. OTDS bietet für diesen Sonderfall die Möglichkeit, an Stelle von
							<code>ApplyTo</code> bei prozentualen PriceItems das Attribut
							<code>AppliedBy</code> bei absoluten PriceItems zu nutzen. Auch dort bezieht man
						sich jeweils innerhalb eines <code>AppliedBy</code> nur auf die im Attribut
							<code>Component</code> angegebene Komponente.</para><para xml:id="en_1367" xml:lang="en">Some tour operators do not store the relationships between absolute and percentage PriceItems with the percentage PriceItems, but rather with the absolute PriceItems. For this special case, OTDS offers the possibility of using the attribute <code>AppliedBy</code> for absolute PriceItems instead of <code>ApplyTo</code> for percentage PriceItems. Here too, within each <code>AppliedBy</code> , one only refers to the component specified in the attribute <code>Component</code> .</para>
					<para xml:id="de_1368" xml:lang="de">Es können die Komponenten Accommodation, OnewayFlight und ReturnFlight angegeben
						werden. Die Angabe <code>ThisComponent</code> ist die Standardeinstellung und
						referenziert die Komponente des prozentualen PriceItem selbst.</para><para xml:id="en_1368" xml:lang="en">The components Accommodation, OnewayFlight and ReturnFlight can be specified. The specification of <code>ThisComponent</code> is the default setting and refers to the component of the percentage PriceItem itself.</para>
					<para xml:id="de_1369" xml:lang="de">Die Angaben <code>ApplyTo</code>, <code>NotApplyTo</code> und <code>AppliedBy</code>
						sind optional. Fehlen die Angaben, so findet keine Zuweisung statt. Bei mehrfacher
						Verwendung von <code>ApplyTo</code> oder <code>NotApplyTo</code> werden die
						Percent-Values nur auf die Absolute-Values angewendet, die alle Bedingungen erfüllen.
							<code>ApplyTo</code> und <code>NotApplyTo</code> auf die gleiche PriceItemClass
						ist zwar sinnlos, aber nicht verboten. In einem solchen Fall werden beide Wirkungen
						angewendet.</para><para xml:id="en_1369" xml:lang="en">The specifications <code>ApplyTo</code> , <code>NotApplyTo</code> and <code>AppliedBy</code> are optional. If no specifications are given, nothing is assigned. With multiple use of <code>ApplyTo</code> or <code>NotApplyTo</code> , the PercentValues are only applied to the AbsoluteValues which fulfil all conditions. <code>ApplyTo</code> and <code>NotApplyTo</code> on the same PriceItemClass is senseless but not forbidden. In such a case, both effects are applied.</para>
					<para xml:id="de_1370" xml:lang="de">
						<emphasis role="bold">!Wichtig! Wird innerhalb eines Hotels <code>ApplyTo</code> oder
								<code>NotApplyTo</code> gleichzeitig mit <code>AppliedBy</code> angewendet,
							werden auch dort die Percent-Values nur auf die Absolut-Values bezogen, die alle
							Bedingungen erfüllen.</emphasis>
					</para><para xml:id="en_1370" xml:lang="en">
						<emphasis role="bold">Important! If &lt;code&gt;ApplyTo&lt;/code&gt; or &lt;code&gt;NotApplyTo&lt;/code&gt; is applied simultaneously with &lt;code&gt;AppliedBy&lt;/code&gt; within a hotel, then there too, the Percent-Values will only refer to the Absolute-Values which fulfil all of the conditions.</emphasis>
					</para>
					<para xml:id="det_1371" xml:lang="de"/>
				</section>
				<section xml:id="OtdsStrategyPriceItemCondition">
					<title><phrase xml:id="de_1372" xml:lang="de">Bedingungen (Condition)</phrase><phrase xml:id="en_1372" xml:lang="en">Conditions (Condition)</phrase></title>
					<para xml:id="de_1373" xml:lang="de">Bedingungen und Einschränkungen für die Gültigkeit von Preisbestandteilen werden
						durch Bedingungen (<code>Condition</code>) definiert.</para><para xml:id="en_1373" xml:lang="en">Conditions and restrictions on the validity of price components are defined by conditions (<code>Condition</code> ).</para>
					<para xml:id="de_1374" xml:lang="de">Es gibt folgende Arten von Bedingungen:</para><para xml:id="en_1374" xml:lang="en">The following types of conditions exist:</para>
					<itemizedlist>
						<listitem>
							<para xml:id="de_1375" xml:lang="de">Bedingungen, die festlegen, ob ein PriceItems überhaupt gültig ist und
								angewendet werden kann. Die Bedingungen gelten nur für das PriceItem selbst.
								PriceItems, die nicht gültig sind, werden verworfen. Typische Bedingungen
								beziehen sich auf die Reisedauer, den Buchungszeitpunkt oder ob ein bestimmter
								Termin enthalten ist. Die möglichen <code>Condition</code>s sind vielfältig
								und werden im Kapitel <link linkend="OtdsStrategyCondition">"Condition"</link>
								im Detail beschrieben.</para><para xml:id="en_1375" xml:lang="en">Conditions which define whether a PriceItem is at all valid and can be applied. The conditions only apply to the PriceItem itself. PriceItems which are not valid are discarded. Typical conditions refer to the duration of travel, the time of booking or whether a certain date is included. The possible <code>Condition</code> s are multiple and are described in detail in the chapter <link linkend="OtdsStrategyCondition">"Condition"</link>.</para>
						</listitem>
						<listitem>
							<para xml:id="de_1376" xml:lang="de">Bedingungen, die PriceItems auf bestimmte Tage beziehen, z.B. Wochentage
								oder Saisontermine (<link linkend="OtdsStrategyConditionTypeDayImpact">DayImpact</link>).</para><para xml:id="en_1376" xml:lang="en">Conditions which refer PriceItems to specific days, e.g. weekdays or seasonal dates (<link linkend="OtdsStrategyConditionTypeDayImpact">DayImpact</link>).</para>
						</listitem>
						<listitem>
							<para xml:id="de_1377" xml:lang="de">Bedingungen, die PriceItems auf bestimme Personen beziehen, z.B. Kinder-
								oder Seniorenrabatte (<link linkend="OtdsStrategyConditionTypePersonImpact">PersonImpact</link>)</para><para xml:id="en_1377" xml:lang="en">Conditions which relate PriceItems to specific persons e.g. discounts for children or seniors (<link linkend="OtdsStrategyConditionTypePersonImpact">PersonImpact</link>)</para>
						</listitem>
						<listitem>
							<para xml:id="de_1378" xml:lang="de">Bedingungen, die PriceItems auf bestimme Personen und/oder Tage beziehen
								(Impact)</para><para xml:id="en_1378" xml:lang="en">Conditions which relate PriceItems to specific persons and/or days (Impact)</para>
						</listitem>
						<listitem>
							<para xml:id="de_1379" xml:lang="de">Bedingungen, die sich auf berechnete Preise beziehen (<link linkend="OtdsStrategyConditionDayPriceIndex">DayPriceIndexCondition</link>) </para><para xml:id="en_1379" xml:lang="en">Conditions which refer to calculated prices (<link linkend="OtdsStrategyConditionDayPriceIndex">DayPriceIndexCondition</link>)</para>
						</listitem>
						<listitem>
							<para xml:id="de_1380" xml:lang="de">Bedingungen, die sich auf berechnete Preise anderer Produktkomponenten beziehen
								(<link linkend="OtdsStrategyConditionProductPrice">ProductPriceCondition</link>)</para><para xml:id="en_1380" xml:lang="en">Conditions which refer to the calculated prices of other product components (<link linkend="OtdsStrategyConditionProductPrice">ProductPriceCondition</link>)</para>
						</listitem>
					</itemizedlist>
					<para xml:id="de_1381" xml:lang="de">Die detaillierte Beschreibung der Auswirkungen der einzelnen Arten von Bedingungen
						auf die Preisberechnung finden Sie im Kapitel <link linkend="OtdsStrategyPriceItemCondition">Preisbestandteile - Bedingungen</link> .
						Bedingungen können miteinander über die booleschen Operatoren <code>And</code>,
							<code>Or</code>, <code>Not</code> und <code>Imply</code> verknüpft werden. Eine
						Beschreibung finden Sie im Kapitel <link linkend="OtdsStrategyConditionBoolOperation">Logische Verknüpfungen</link>.</para><para xml:id="en_1381" xml:lang="en">A detailed description of the effects of each type of condition on the price calculation can be found in the chapter <link linkend="OtdsStrategyPriceItemCondition">Price components - conditions</link> . Conditions can be combined with each other using the Boolean operators <code>And</code> , <code>Or</code> , <code>Not</code> and <code>Imply</code> . A description can found in the chapter <link linkend="OtdsStrategyConditionBoolOperation">Logic interconnections</link>.</para>
					<para xml:id="de_1382" xml:lang="de">Der Auswertungszeitpunkt von Impact-Teilbedingungen in der <code>Condition</code>
						kann durch das optionale Attribut <code>ImpactExecutionOrder</code> festgelegt werden.
						Dies hat weitreichende Auswirkungen auf die Kombinatorik und wird daher im nächsten
						Kapitel beschrieben.</para><para xml:id="en_1382" xml:lang="en">The point at which Impact subconditions are evaluated in the <code>Condition</code> can be set using the optional attribute<code>ImpactExecutionOrder</code> . This has wide-ranging effects on the combinatorics and is therefore described in the next chapter.</para>
					<para xml:id="det_1383" xml:lang="de"/>
				</section>

				<section xml:id="OtdsStrategyPriceItemCombinatorics">
					<title><phrase xml:id="de_1384" xml:lang="de">Kombinatorik von PriceItems (Combinatorics)</phrase><phrase xml:id="en_1384" xml:lang="en">Combinatorics of PriceItems (Combinatorics)</phrase></title>
					<para xml:id="de_1385" xml:lang="de">Die Kombinatorik von PriceItems dient dazu, Abhängigkeiten zwischen PriceItems zu
						beschreiben und auszuwerten. Vorhandene PriceItems werden daraufhin überprüft, ob sie
						in Abhängigkeit von anderen PriceItems gültig sind oder verworfen werden. Für diesen
						Zweck kann jedes PriceItem Codes oder Indizes erhalten sowie Bedingungen zur
						Kombinierbarkeit mit anderen PriceItems. Die komplette Kombinatorik der PriceItems
						wird in den Elementen <code>Combinatorics</code> definiert.</para><para xml:id="en_1385" xml:lang="en">The combinatorics of PriceItems are used to describe and evaluate dependencies between PriceItems. Existing PriceItems are checked to see whether they are valid when dependant on other PriceItems or whether they should be discarded. For this purpose, each PriceItem can be given codes or indices as well as conditions for combinability with other PriceItems. The complete combinatorics of PriceItems are defined in the <code>Combinatorics</code> elements.</para>
					<bridgehead xml:id="de_1386" xml:lang="de">Parameter der Kombinatorik</bridgehead><bridgehead xml:id="en_1386" xml:lang="en">Parameters of the combinatorics</bridgehead>
					<para xml:id="de_1387" xml:lang="de">Die Kompatibilität zwischen PriceItems kann über Kombinatorik-Codes
							(<code>CombinationCode</code>) definiert werden. Ein <code>CombinationCode</code>
						ist ein frei wählbarer Code, der in den Kombinatorikbedingungen anderer PriceItems
						geprüft werden kann. In der Regel enthalten Veranstaltersysteme genau diese Codes. </para><para xml:id="en_1387" xml:lang="en">Compatibility between PriceItems can be defined using the combinatorics codes (<code>CombinationCode</code> ). A <code>CombinationCode</code>  is a freely definable code which can be tested in the combinatorial conditions of other PriceItems. In general, tour operator systems contain precisely these codes.</para>
					<para xml:id="de_1388" xml:lang="de">Beispiel Combinatorics Element mit Code und NotCombinableWhen</para><para xml:id="en_1388" xml:lang="en">Example of a combinatorics element with Code and NotCombinableWhen</para>
					<para xml:id="de_1389" xml:lang="de">Zusätzlich zu diesen Codes können jedem PriceItem auch Indizes
							(<code>CombinationIndex</code>) zugewiesen werden, die ebenfalls in den
						Kombinatorikbedingungen anderer PriceItems geprüft werden können. In ihrer Verwendung
						sind <code>CombinationCode</code>s und <code>CombinationIndex</code>s gleich. Der
						Unterschied besteht in der Art des Vergleiches: <code>CombinationCode</code>s erlauben
						nur eine Prüfung auf Gleichheit, Kombinationindizes bieten zusätzlich die
						Möglichkeiten von Min/Max-Vergleichen. Für jedes PriceItem können beliebig viele der
						Parameter <code>CombinationCode</code> und <code>CombinationIndex</code> angeben
						werden. In diesem Fall können die unterschiedlichen Parameter
							<code>CombinationCode</code> bzw. <code>CombinationIndex</code> mit Hilfe des
						Attribut <code>Group</code> zusätzlich in Gruppen eingeteilt werden. Das Attribut ist
						frei wählbar und es kann in den Kombinationsbedingungen adressiert werden. Wird das
						Attribut <code>Group</code> nicht angegeben, werden Codes und Indizes der
							<code>Group</code> „Default“ zugewiesen. Die Verwendung des Attributs
							<code>Group</code> ist nur dann erforderlich, wenn ein Veranstalter einen ähnliche
						Klassifizierung vornimmt. </para><para xml:id="en_1389" xml:lang="en">In addition to these codes, every PriceItem can also be assigned indices (<code>CombinationIndex</code> ) which can be tested in the combinatorial conditions of other PriceItems. <code>CombinationCode</code>  and <code>CombinationIndex</code> are applied in the same way. The difference is in the type of comparison: <code>CombinationCode</code> s only allow checks for equivalence, whereas combination indices additionally offer the possibility of minimum/maximum comparisons. For each PriceItem, any number of <code>CombinationCode</code> and <code>CombinationIndex</code> parameters can be specified. In this case, the different parameters, <code>CombinationCode</code>  or <code>CombinationIndex</code>  can additionally be divided into groups using the attribute <code>Group</code> . This attribute can be freely specified by the user and can be addressed in the combination conditions. If the attribute <code>Group</code> is not specified, codes and indices are assigned the <code>Group</code> "default". The use of the attribute <code>Group</code>  is only required when a tour operator makes a similar classification.</para>
					<para xml:id="de_1390" xml:lang="de">Beispiel Combinatorics Element mit Index und NotCombinableWhen größer </para><para xml:id="en_1390" xml:lang="en">Example Combinatorics Element with Index and NotCombinableWhen larger</para>

					<bridgehead xml:id="de_1391" xml:lang="de">Bedingungen der Kombinatorik</bridgehead><bridgehead xml:id="en_1391" xml:lang="en">Conditions of combinatorics</bridgehead>
					<para xml:id="de_1392" xml:lang="de">Bedingungen an die Kombinierbarkeit (Kombinatoriktests) mit anderen PriceItems
						werden in dem untergeordneten Element <code>CombinableWhen</code> definiert. Es stehen
						drei Kombinatoriktests an die Parameter anderer PriceItems zur Auswahl:</para><para xml:id="en_1392" xml:lang="en">Conditions for combinability (combinatorial tests) with other PriceItems are defined in the subordinate element <code>CombinableWhen</code> . There are three combinatorial tests on the parameters of other PriceItems to choose from:</para>
					<itemizedlist>
						<listitem>
							<para xml:id="de_1393" xml:lang="de"><code>CombinationCode</code>: Dieser Test bezieht sich auf den
									<code>CombinationCode</code> eines anderen PriceItems, und prüft diesen
								auf Gleichheit.</para><para xml:id="en_1393" xml:lang="en">
								<code>CombinationCode</code> : This test relates to the <code>CombinationCode</code> of another PriceItem, which it checks for equality.</para>
							<para xml:id="de_1394" xml:lang="de">Beispiel: Das PriceItem "Dauerreduktion" ist nicht kombinierbar mit dem
								PriceItem "Fruebucher", da PriceItem "Fruebucher" den
									<code>CombinationCode=FB</code> hat, der von PriceItem "A" als
								unkombinierbar definiert wird.</para><para xml:id="en_1394" xml:lang="en">Example: The PriceItem "Duration discount" is not combinable with the PriceItem "Early booker", as the PriceItem "Early booker" has the <code>CombinationCode=FB</code> , which is defined by PriceItem "A" as uncombinable.</para>
							<programlisting><![CDATA[
<PriceItems>
  <PriceItem Class="Dauerreduktion">
    ...
    <Combinatorics>
      ...
      <CombinableWhen>
        <Not>
          <CombinationCode>FB</CombinationCode>
        </Not>
      </CombinableWhen>
    </Combinatorics>
  </PriceItem>

  <PriceItem Class="Fruehbucher">
    ...
    <Combinatorics>
      ...
      <CombinationCode>FB</CombinationCode>
    </Combinatorics>
  </PriceItem>
<PriceItems>
]]></programlisting>
						</listitem>
						<listitem>
							<para xml:id="de_1395" xml:lang="de"><code>CombinationMinIndex</code>: Dieser Test bezieht sich auf den
									<code>CombinationIndex</code> eines anderen PriceItems und prüft diesen
								gegen einen minimalen Wert</para><para xml:id="en_1395" xml:lang="en">
								<code>CombinationMinIndex</code> : This test relates to the <code>CombinationIndex</code> of another PriceItem and compares this to a minimum value.</para>
						</listitem>
						<listitem>
							<para xml:id="de_1396" xml:lang="de"><code>CombinationMaxIndex</code>: Dieser Test bezieht sich auf den
									<code>CombinationIndex</code> eines anderen PriceItems und prüft diesen
								gegen einen maximalen Wert</para><para xml:id="en_1396" xml:lang="en">
								<code>CombinationMaxIndex</code> : This test relates to the <code>CombinationIndex</code> of another PriceItem and compares this to a maximum value.</para>
							<para xml:id="de_1397" xml:lang="de">Beispiel: Das PriceItem "A" ist nicht kombinierbar mit dem PriceItem "B", da
								PriceItem "B" einen <code>CombinationIndex=2</code> hat, der von PriceItem "A"
								als unkombinierbar definiert wird.</para><para xml:id="en_1397" xml:lang="en">Example: The PriceItem "A" is not combinable with PriceItem "B", as PriceItem "B" has a <code>CombinationIndex=2</code>  which is defined by PriceItem "A" as uncombinable.</para>
							<programlisting><![CDATA[
<PriceItems>
  <PriceItem Class="A">
    ...								
    <Combinatorics>
      <CombinationIndex>1</CombinationIndex>
      <CombinableWhen>
        <Not>
          <CombinationIndexMax>0</CombinationIndexMax>
        </Not>
      </CombinableWhen>
    </Combinatorics>
  </PriceItem>

  <PriceItem Class="B">
    ...								
    <CombinationIndex>2</CombinationIndex>
  </PriceItem>
<PriceItems>
]]></programlisting>
						</listitem>
					</itemizedlist>
					<para xml:id="de_1398" xml:lang="de">Bei allen Tests kann das Attribut <code>Group</code> ergänzt werden, um auf Codes
						bzw. Indizes einer bestimmten <code>Group</code> Bezug zu nehmen. Durch diese
						Bedingungen kann präzise gesteuert werden, welche PriceItems zueinander kompatibel
						bzw. inkompatibel sind.</para><para xml:id="en_1398" xml:lang="en">For all of the tests, the attribute <code>Group</code> can be added to refer to codes or indices of a particular <code>Group</code> . Through these conditions, it is possible to precisely control which PriceItems are compatible or incompatible with each other.</para>
					<para xml:id="de_1399" xml:lang="de">Diese Tests können durch boolesche Operatoren miteinander verknüpft werden,
						Beschreibung finden Sie im Kapitel <link linkend="OtdsStrategyConditionBoolOperation">Logische Verknüpfungen</link>.</para><para xml:id="en_1399" xml:lang="en">These tests can be linked to one another by Boolean operators, descriptions of which can be found in the chapter <link linkend="OtdsStrategyConditionBoolOperation">Logical connectives</link>.</para>
					<para xml:id="de_1400" xml:lang="de">Alternativ zu <code>CombinableWhen</code> kann das Element
							<code>ExcludePriceItemClasses</code> definiert werden. Durch
							<code>ExcludePriceItemClasses</code> können PriceItems mit einer vorgegebenen
						Class in der Preiskombinatorik ausgeschlossen werden. Es ist dabei möglich mehrere
						Classes anzugeben. </para><para xml:id="en_1400" xml:lang="en">As an alternative to <code>CombinableWhen</code> , the element <code>ExcludePriceItemClasses</code> can be defined. Through <code>ExcludePriceItemClasses</code> , PriceItems with a specified Class can be excluded from the price combinatorics. When doing so, it is possible to specify several Classes.</para>
					<bridgehead xml:id="de_1401" xml:lang="de">Auswertung der Kombinatorik</bridgehead><bridgehead xml:id="en_1401" xml:lang="en">Evaluation of the combinatorics</bridgehead>
					<para xml:id="de_1402" xml:lang="de">Über die Angabe eines <code>CombinationLevel</code> wird gesteuert, welches
						PriceItembei einer Inkompatibilität seine Gültigkeit verliert. Die Kombinatorik
						beeinflusst immer nur PriceItems mit dem größeren <code>CombinationLevel</code>.
						PriceItems mit kleinerem <code>CombinationLevel</code> haben also eine höhere Relevanz
						und bleiben bei Inkompatibilitäten erhalten. Wenn zwei PriceItems zueinander
						inkompatibel sind, wird dementsprechend das PriceItem mit dem höheren
							<code>CombinationLevel</code> verworfen. Die Angabe eines
							<code>CombinationLevel</code> erfolgt einmalig für jedes Combinatorics-Element und
						ist optional. Fehlt die Angabe, wird ein <code>CombinationLevel</code> von 0
						angenommen. Es sind auch negative <code>CombinationLevel</code> zugelassen. Wenn zwei
						PriceItems das gleiche <code>CombinationLevel</code> haben, so beeinflussen sich diese
						gegenseitig nicht, d.h. diese PriceItems sind zueinander kompatibel ungeachtet
						sonstiger Angaben zur Kombinierbarkeit.</para><para xml:id="en_1402" xml:lang="en">Through the specification of a <code>CombinationLevel</code> , it is possible to control which PriceItem loses its validity in the case of an incompatibility. The combinatorics always only influences the PriceItems with the highest <code>CombinationLevel</code> . PriceItems with a lower <code>CombinationLevel</code> therefore have a higher relevance and remain as they are in the case of incompatibilities. Accordingly, if two PriceItems are incompatible with each other, the PriceItem with the higher <code>CombinationLevel</code> will be disregarded. The specification of a <code>CombinationLevel</code> occurs once for every combinatorics element and is optional. If no specification is given, a <code>CombinationLevel</code> of 0 is assumed. A negative <code>CombinationLevel</code>  is also allowed. If two PriceItems have the same <code>CombinationLevel</code> , they do not influence each other, i.e. these PriceItems are compatible with one another, regardless of any other specifications regarding combinability.</para>
					<bridgehead xml:id="de_1403" xml:lang="de">Beispiel: Anwendung der Kombinatorik basierend auf CombinationsCode und
						-Index</bridgehead><bridgehead xml:id="en_1403" xml:lang="en">Example: Use of combinatorics based on the CombinationsCode and Combination-Index</bridgehead>
					<programlisting><![CDATA[
<PriceItems>
  <PriceItem Class="Dauerreduktion">
    ...
    <Combinatorics>
      <CombinationLevel>2</CombinationLevel>
      <CombinationCode>DR</CombinationCode>
      <CombinationIndex>20</CombinationIndex>
      <CombinableWhen>
        <Not> 
          <And>
            <CombinationCode>FB</CombinationCode>
            <CombinationMinIndex>50</CombinationMinIndex>
            <CombinationMaxIndex>100</CombinationMaxIndex>
          </And>
        </Not>
      </CombinableWhen>
    </Combinatorics>
  <PriceItem>
  <PriceItem Class="Fruehbucher">
    ...
    <Combinatorics>
      <CombinationLevel>3</CombinationLevel>
      <CombinationCode>FB</CombinationCode>
      <CombinationIndex>75</CombinationIndex>
    </Combinatorics>
  <PriceItem>
  <PriceItems>
  ]]></programlisting>
					<para xml:id="de_1404" xml:lang="de">Im obigen Beispiel ist für das PriceItem „Dauerreduktion“ der
							<code>CombinationCode</code> DR angegeben, für das PriceItem „Fruehbucher“ der
							<code>CombinationCode</code> FB. Das PriceItem „Dauerreduktion“ ist nicht
						kombinierbar mit anderen PriceItems, die den <code>CombinationCode</code> „FB“ haben
						und deren <code>CombinationIndex</code> im Bereich zwischen 50 und 100 liegt. Über die
						Angabe des <code>CombinationLevel</code> ist festgelegt, dass das PriceItem
						„Dauerreduktion“ Vorrang vor dem PriceItem „Fruehbucher“ hat
							(<code>CombinationLevel</code>: 2 kleiner als 3). Da beide PriceItems zueinander
						nicht kompatibel sind, wird daher das PriceItem „Fruehbucher“ verworfen.</para><para xml:id="en_1404" xml:lang="en">In the above example, the PriceItem "Duration discount" is given the <code>CombinationCode</code> DR, while the PriceItem "Early booker" is given the <code>CombinationCode</code> FB. The PriceItem "Duration discount" is not combinable with other PriceItems which have the <code>CombinationCode</code> "FB" and which have a <code>CombinationIndex</code> of between 50 and 100. Via the specification of the <code>CombinationLevel</code> , it is determined that the PriceItem "Duration discount" has priority over the PriceItem "Early booker" (<code>CombinationLevel</code> : 2 lower than 3). As the two PriceItems are not compatible with each another, the PriceItem "Early booker" is discarded.</para>
					<bridgehead xml:id="de_1405" xml:lang="de">Kombinatorik auf mehreren Kombinatorikebenen</bridgehead><bridgehead xml:id="en_1405" xml:lang="en">Combinatorics on several combinatorics layers</bridgehead>
					<para xml:id="de_1406" xml:lang="de">Zur Abbildung bestimmter Anwendungsfälle, wie beispielsweise Datennachlieferungen
						oder Ersatzpreise kann in OTDS die Kombinatorik benutzt werden. Dafür ist es
						erforderlich, dass für diese verschiedenen Anwendungsfälle die Kombinatorik unabhängig
						voneinander ausgewertet werden kann. Dies wird in OTDS durch so genannten
						Kombinatoriklayern ermöglicht. Die Kombinatoriklayer beeinflussen sich dabei
						untereinander nicht. Gerade bei Datennachlieferungen und Ersatzpreisen ist die Nutzung
						dieser Möglichkeit sehr praktisch. Ebenfalls können mehrere Kombinatorikebenen der
						Strukturierung und der Übersichtlichkeit im Falle einer komplexen Kombinatorik
						dienen.</para><para xml:id="en_1406" xml:lang="en">In OTDS, combinatorics can be used for the illustration of specific cases of application, for example subsequent deliveries of data or replacement prices. For this it is necessary that the combinatorics for these various cases of application can be evaluated independently from each other. In OTDS this is made possible by so-called combinatorics layers. The combinatorics layers do not influence each other. The use of this option is especially practical in the case of subsequent deliveries of data and replacement prices. Several combinatorics layers can also benefit structure and clarity in the case of a complex combinatoric.</para>
					<bridgehead xml:id="de_1407" xml:lang="de">Strukturen von Kombinatorikebenen</bridgehead><bridgehead xml:id="en_1407" xml:lang="en">Structures of combinatorics layers</bridgehead>
					<para xml:id="de_1408" xml:lang="de">Mehrere Kombinatorikebenen (<code>Combinatorics</code>-Layer) werden durch mehrere
							<code>Combinatorics</code> Elemente definiert. Jedem <code>Combinatorics</code>
						Element kann über die Attribute <code>LayerLevel</code> und <code>LayerName</code> ein
						Level und ein Name zugeordnet werden. Jede eindeutige Kombination aus
							<code>LayerLevel</code> und <code>LayerName</code> definiert eine
						Kombinatorikebene.</para><para xml:id="en_1408" xml:lang="en">Several combinatorics layers (<code>Combinatorics</code> -Layer) are defined by several <code>Combinatorics</code> elements. Each <code>Combinatorics</code> element can be allocated a level and a name via the attributes <code>LayerLevel</code> and <code>LayerName</code> . Every distinct combination of <code>LayerLevel</code> and <code>LayerName</code> defines a combinatorics layer.</para>
					<bridgehead xml:id="de_1409" xml:lang="de">Abarbeitung von Kombinatorikebenen</bridgehead><bridgehead xml:id="en_1409" xml:lang="en">Processing of combinatorics layers</bridgehead>
					<para xml:id="de_1410" xml:lang="de">Kombinatorikebenen werden unabhängig voneinander ausgewertet, d.h.
						Kombinatorikbedingungen an Kombinationscodes oder Kombinationsindizes wirken immer nur
						innerhalb einer Kombinatorikebene. Eine Ausnahme bilden die Kombinatorikbedingungen an
						die PriceItem-Class, die über eine Kombinatorikebene hinaus wirken. Die Reihenfolge
						der Abarbeitung der einzelnen Kombinatoriklayer wird über die Angabe des
							<code>LayerLevel</code> gesteuert. Diese erfolgt in aufsteigender Reihenfolge der
							<code>LayerLevel</code>. Innerhalb jeder einzelnen Kombinatorikebene erfolgt die
						Abarbeitung in Reihenfolge der <code>CombinationLevel</code>. Auf jeder
						Kombinatorikebene werden einzelne PriceItem wegen fehlender Kombinierbarkeit
						ausgeschlossen. Als Ergebnis einer Kombinatorikebene verbleiben PriceItems, die sich
						auf dieser Kombinatorikebene als kompatibel herausgestellt haben.</para><para xml:id="en_1410" xml:lang="en">Combinatorics layers are evaluated independently from each other, i.e. the combinatorics conditions for combination codes or combination indices are always only effective within a combinatorics layer. The combinatorics conditions for the PriceItem class, which have an effect which goes beyond a combinatorics layer, are an exception to this. The processing sequence of the individual combinatorics layers is determined by the specification of the <code>LayerLevel</code> . This occurs in ascending order of the <code>LayerLevel</code> . Within each individual combinatorics layer, processing occurs in sequence of the <code>CombinationLevel</code> . On each combinatorics layer, individual PriceItems are excluded due to a lack of compatibility. As a result of a combinatorics layer, PriceItems are left remaining which have been shown to be compatible on this combinatorics layer.</para>
					<para xml:id="de_1411" xml:lang="de">Dieses Ergebnis wird an die nächste Kombinatorikebene übergeben. Wegen fehlender
						Kombinierbarkeit verworfene PriceItems hingegen stehen in darauf folgenden
						Kombinatorikebenen nicht mehr zur Verfügung. Die Abarbeitung der Kombinatorik in
						diesen verschiedenen Stufen lässt sich mit Datensieben vergleichen, die nacheinander
						angewendet werden und einzelne PriceItems herausfiltern.</para><para xml:id="en_1411" xml:lang="en">This result is passed on to the next combinatorics layer. PriceItems which have been disregarded due to a lack of compatibility on the other hand, are no longer available in the following combinatorics layers. The execution of the combinatorics at these various stages is comparable with data sieves which are used one after another and which filter out individual PriceItems.</para>
					<para xml:id="de_1412" xml:lang="de">Als Sonderfall zu betrachten sind mehrere Kombinatorikebenen mit demselben
							<code>LayerLevel</code> aber unterschiedlichen <code>LayerNamen</code>. Jede
						dieser Kombinatorikebenen bearbeitet parallel die zugeordneten PriceItems und filtert
						PriceItems aus, die in nachgeschalteten Kombinatorikebenen mit dem nächsthöheren
							<code>LayerLevel</code> nicht mehr verfügbar sind. Tatsächlich entfernt werden in
						diesem Sonderfall die PriceItems erst beim Übergang zur nächsten Kombinatorikebene mit
						höherem <code>LayerLevel</code> , damit alle relevanten PriceItems in jeder der
						gleichberechtigten Kombinatorikebenen zur Verfügung stehen.</para><para xml:id="en_1412" xml:lang="en">Several combinatorics layers with the same <code>LayerLevel</code> but different <code>LayerNamen</code>  present a special case. Each of these combinatorics layers processes the assigned PriceItems and simultaneously filters PriceItems out which are no longer available in downstream combinatorics layers with the next highest <code>LayerLevel</code> . In this special case, the PriceItems are only really removed with the progression to the next combinatorics layer with a higher <code>LayerLevel</code> , in order that all relevant PriceItems in each of the equally entitled combinatorics layers are available.</para>
					<para xml:id="de_1413" xml:lang="de">Die Angaben von <code>LayerLevel</code> und <code>LayerName</code> sind optional.
						Fehlen die Angaben, wird ein <code>LayerLevel</code> von 0 und der
							<code>LayerName</code> „Default“ gesetzt.</para><para xml:id="en_1413" xml:lang="en">The specification of <code>LayerLevel</code> and <code>LayerName</code> are optional. If the specifications are missing, a <code>LayerLevel</code> of 0 and the <code>LayerName</code> "Default" are given.</para>
					<para xml:id="de_1414" xml:lang="de">Als Ergebnis der gesamten Kombinatorik verbleiben alle gültigen PriceItems, den
						Regeln der Kombinatorik entsprechend. Alle verbleibenden PriceItems werden im nächsten
						Schritt zur Preisberechnung herangezogen. </para><para xml:id="en_1414" xml:lang="en">As a result of the entire combinatorics, all valid PriceItems remain, in accordance with the rules of combination. All remaining PriceItems are drawn in during the next step for price calculation.</para>
					<para xml:id="de_1415" xml:lang="de">Die Kombinatorik wird präziser im <link linkend="OtdsProcessPriceCalculation">Kapitel zur Preisberechnung</link> beschrieben.</para><para xml:id="en_1415" xml:lang="en">The combinatorics are more precisely described in the <link linkend="OtdsProcessPriceCalculation">chapter on price calculation</link>.</para>
					<bridgehead xml:id="de_1416" xml:lang="de">Auswertungszeitpunkt der Conditions</bridgehead><bridgehead xml:id="en_1416" xml:lang="en">Point of evaluation of the conditions</bridgehead>
					<para xml:id="de_1417" xml:lang="de">Das Element <code>Condition</code> enthält in den Impact-Teilbedingungen das
						Attribut <code>ImpactExecutionOrder</code> , das den Auswertungszeitpunkt der
						Teilbedingungen festlegt. Es sind die drei Angaben <code>BeforeCombinatorics</code>
						(Standardwert), <code>AfterCombinatorics</code> und <code>Last</code> möglich. Bei der
						Angabe von <code>BeforeCombinatorics</code> werden die Bedingungen für die PriceItems
						ausgewertet, bevor die Verträglichkeit der PriceItems untereinander überprüft wird,
						bei <code>AfterCombinatorics</code> erfolgt die Überprüfung direkt nach der Auswertung
						der Kompatibilität der PriceItems. Mit einer Auswertung der Conditions vor der
						Kombinatorik lassen sich die üblichen Bedingungen an PriceItems abbilden. Eine
						Auswertung der <code>Condition</code> nach der Kombinatorik erlaubt die Abbildung von
						Sonderfällen, beispielsweise das Entfernen eines Preisbestandteils, der jedoch zuvor
						an der Kombinatorik teilgenommen hat und so auf andere Preisbestandteile wirken
						konnte. Mit <code>ImpactExecutionOrder=Last</code> wird eine <code>Condition</code>
						zum letzten möglichen Zeitpunkt ausgewertet wenn bereits die Tagespreisanteile
						vorliegen, um darauf prozentuale Auf- und Abschläge anzuwenden. </para><para xml:id="en_1417" xml:lang="en">The element <code>Condition</code> contains the attribute <code>ImpactExecutionOrder</code> in the impact sub-conditions, which determines the point at which the sub-conditions are evaluated. Three specifications are possible: <code>BeforeCombinatorics</code> (standard value), <code>AfterCombinatorics</code> and <code>Last</code> . If <code>BeforeCombinatorics</code> is specified, the conditions for the PriceItems are evaluated before the compatibility of the PriceItems with one another is assessed, with <code>AfterCombinatorics</code> , the assessment occurs directly after the evaluation of the compatibility of the PriceItems. With an evaluation of the conditions before the combinatorics, the usual conditions can be applied to PriceItems. An evaluation of the <code>Condition</code> after the combinatorics allows the depiction of special cases, for example the removal of a price component which had previously taken part in the combinatorics and in this way was able to influence the price components. With <code>ImpactExecutionOrder=Last</code> , a <code>Condition</code> is evaluated at the latest possible point in time, when the day price components already exist, in order to apply percentage surcharges and discounts.</para>
					<bridgehead xml:id="de_1418" xml:lang="de">Übertragung der veranstaltereigenen Kombinatorik in OTDS</bridgehead><bridgehead xml:id="en_1418" xml:lang="en">Transferring the tour operator's own combinatorics into OTDS</bridgehead>
					<para xml:id="de_1419" xml:lang="de">Eine Zielsetzung der Kombinatorik in OTDS ist es, die verschiedenartigen
						veranstaltereigenen Kombinationslogiken möglichst direkt abbilden zu können. OTDS
						bietet daher verschiedene Möglichkeiten, die Kombinatorik abzubilden. Welche der
						angebotenen Möglichkeiten im Einzelfall genutzt wird, liegt in der Entscheidung des
						Veranstalters. Existiert beispielsweise beim Veranstalter eine mehrstufige Logik mit
						vor- und nachgeschalteten Berechnungen, kann es sich anbieten, dies in OTDS über
						Kombinatorikebenen abzubilden. Existiert hingegen eine komplette einstufige
						Kombinatorik, kann dies in OTDS über eine Kombinatorikebene abgebildet werden.
						Weiterhin besteht die Wahlmöglichkeit, vorhandene Abhängigkeiten zwischen
						Preisbestandteilen über Kombinationscodes, Kombinationsindizes oder Namen der
						Preisbestandteile in OTDS zu übertragen. Die möglicherweise auf den ersten Blick sehr
						komplex erscheinende Kombinationslogik von OTDS zeigt sich unter diesem Blickwinkel
						daher als Wahlmöglichkeit zwischen verschiedenen Kombinatoriksystemen. </para><para xml:id="en_1419" xml:lang="en">One of the objectives of the combinatorics in OTDS is to be able to depict various tour operators' own combinatorial logic as directly as possible. OTDS therefore offers a variety of ways in which to depict the combinatorics. Which of the available possibilities is used in each individual case is the decision of the tour operator. If, for example, a multi-level logic with preceding and downstream calculations is used by the tour operator, it would make sense to reproduce it in OTDS via combinatorics layers. If, however, a complete single level of combinatorics exists, this can be reproduced in OTDS via one combinatorics layer. There is also the option of transferring existing dependencies between price components into OTDS via the combination codes, combination indices or names of price components. The combinatorial logic of OTDS may initially seem very complex, but seen from this perspective it offers a choice between various combinatorics systems.</para>
					<section xml:id="OtdsStrategyCombinatoricsExamples">
						<title><phrase xml:id="de_1420" xml:lang="de">Combinatorics-Beispiele aus der Praxis</phrase><phrase xml:id="en_1420" xml:lang="en">Combinatorics - examples from practice</phrase></title>
						<para xml:id="de_1421" xml:lang="de">Im Folgenden werden einige Beispiele aus der Praxis und klassische
							Anwendungsfälle gezeigt. Es können BlockingLevel, CombiLevel, Ersatzpreise sowie
							Nachlieferungen von Daten komfortabel abgebildet werden.</para><para xml:id="en_1421" xml:lang="en">Here some practical examples and classic applications are shown. BlockingLevel, CombiLevel, replacement prices and subsequent data deliveries can be conveniently depicted.</para>
						<bridgehead xml:id="de_1422" xml:lang="de">BlockingLevel</bridgehead><bridgehead xml:id="en_1422" xml:lang="en">BlockingLevel</bridgehead>
						<para xml:id="de_1423" xml:lang="de">Die Begrifflichkeit "BlockingLevel" stammt aus dem Blanksystem. Dahinter
							verbirgt sich die Idee, die Kombinierbarkeit über Zahlen und einen Vergleich
							dieser Zahlen zu beschreiben statt über Kombinationscodes. Mit Hilfe von
								<code>CombinationLevel</code> können auf einer Kombinatorikebene BlockingLevel
							in OTDS abgebildet werden. Das folgende Beispiel demonstriert dies:</para><para xml:id="en_1423" xml:lang="en">The term "BlockingLevel" comes from the Blank system. Behind this is the idea of ​​describing combinability using numbers and a comparison of these numbers, rather than by combination codes. With the aid of <code>CombinationLevel</code> BlockingLevels can be depicted on a combinatorics layer in OTDS. The following example demonstrates this:</para>
						<programlisting><![CDATA[<PriceItem Class="AbsoluteReduction">
  <Absolute>
    <Value>-90</Value>
    <PersonBase>1</PersonBase>
  </Absolute>
  <Combinatorics>
    <CombinationLevel>10</CombinationLevel>
    <CombinationIndex>10</CombinationIndex>
    <CombinableWhen>
      <Not>
        <MinIndex>11</MinIndex>
      </Not>
    </CombinableWhen>
  </Combinatorics>
</PriceItem>]]></programlisting>
						<para xml:id="de_1424" xml:lang="de">Diesem PriceItem ist der <code>CombinationIndex=10</code> zugewiesen welche dem
							BlockingLevel entspricht. Außerdem ist dem PriceItem auch der Combination Index=10
							zugewiesen, welcher auch dem BlockingLevel entspricht. Die Bedingung für die
							Kombinierbarkeit ist, dass alle PriceItems mit einem größeren
							CombinationIndex/BlockingLevel nicht kombinierbar sind. Existieren in der gleichen
							Kombinatorikebene daher andere PriceItem mit größerem Index, sind diese PriceItem
							nicht kombinierbar und werden aufgrund des höheren CombinationLevel verworfen. </para><para xml:id="en_1424" xml:lang="en">This PriceItem is assigned the <code>CombinationLevel=10</code> , which reflects the BlockingLevel. In addition, the PriceItem is also assigned the Combination Index = 10, which also reflects the BlockingLevel. The condition for combinability is that all PriceItems with a higher CombinationIndex/BlockingLevel are not combinable. If other PriceItems with higher indices exist in the same combinatorics layer, these PriceItems are not combinable and will be discarded due to their higher CombinationLevel.</para>
						<para xml:id="de_1425" xml:lang="de">Dieses Konstrukt erlaubt eine sehr komplexe index- und zusätzlich ggf. auch
							codebezogene Steuerung. im folgenden Beispiel sieht man, dass es auch möglich ist,
							Bedingung miteinander zu verknüpfen, so dass man beispielsweise auf einen
							Indexbereich prüft. Auch das ist Bestandteil des Blanksystems.</para><para xml:id="en_1425" xml:lang="en">This construct allows a very complex index-related and where necessary also a code-related control. The following example shows that it is also possible to combine conditions with each other so that the index area is checked, for example. This is also a component of the Blank system.</para>
						<programlisting><![CDATA[<CombinableWhen>
  <Not>
    <And>
      <!-- MinIndex und MaxIndex beziehen sich auf CombinationIndex -->
      <MinIndex>3</MinIndex>
      <MaxIndex>6</MaxIndex>
    </And>
  </Not>
 </CombinableWhen>]]></programlisting>
						<para xml:id="det_1426" xml:lang="de"/>
						<bridgehead xml:id="de_1427" xml:lang="de">Nachlieferung von Daten</bridgehead><bridgehead xml:id="en_1427" xml:lang="en">Subsequent data deliveries</bridgehead>
						<para xml:id="de_1428" xml:lang="de">Was sind Nachlieferungen ? Nachlieferungen sind nachträglich geänderte Preise,
							die als zusätzliche zeitlich später erstellte Daten ergänzt werden ohne die
							ursprünglichen Daten anzupassen. Die nachgelieferten Daten überschreiben damit
							dann die ursprünglich gelieferten Daten, in den Bereichen gleicher Bedingungen. In
							OTDS wird genau dieses Überschreiben durch eine Spezifizierung bestimmter
							Combinatorics-Elemente definiert. </para><para xml:id="en_1428" xml:lang="en">What are subsequent deliveries? Subsequent deliveries are subsequently modified prices which are provided as additional, subsequently produced data, without adapting to the original data. The new data overwrites the originally supplied data in areas with the same conditions. In OTDS, precisely this overwriting is defined by the specification of certain combinatorics elements.</para>
						<para xml:id="de_1429" xml:lang="de">Ein Beispiel: Ein VA-System definiert am Anfang der Saison einen Tagespreis von
							30,- Euro für den ganzen September und Oktober. Nach kurzerZeit stellt sich
							herraus, dass man Mitte September zu teuer ist, um mit den Mitbewerbern
							mitzuhalten. Bei einer Nachlieferung wird nun einfach ein neues PriceItem ins
							Leben gerufen, welches einen Tagespreis von 20,- Euro zugrunde legt und vom 10. -
							25. September gilt. Dieses neue PriceItem soll das vorher gelieferte in der Zeit
							vom 10. - 25. September ersetzen. </para><para xml:id="en_1429" xml:lang="en">An example: At the start of the season, a tour operator system sets a day price of EUR 30 for the whole of September and October. After a short time, it becomes clear that the prices are too expensive to be competitive for mid-September. With a subsequent delivery, a new PriceItem is simply created which is valid from 10 - 25 September and has a day price of EUR 20. This new PriceItem is intended to replace the previously supplied one for the period from 10 - 25 September.</para>
						<para xml:id="de_1430" xml:lang="de">Nachlieferungen von Daten beziehen sich in der Regel immer auf PriceItems mit
							identischer Klassifizierung. Es wird ein Tagespreis für bereits früher gelieferte
							Tagespreise geliefert. Durch die Angabe des <code>CombinationLevel</code> kann
							gesteuert werden, das die nachgelieferten Daten die vorher gelieferten Daten
							überschreibt. Für den <code>CombinationLevel</code> und den
								<code>CombinationIndex</code> kann beispielsweise der negative Timestamp
							genutzt werden oder jede andere Reihenfolge, die im VA-System genutzt wird, um die
							zeitliche Abhängigkeit auszudrücken. Damit kann man eine Reihe von Nachlieferungen
							definieren, die sich alle gegenseitig überschreiben.</para><para xml:id="en_1430" xml:lang="en">Subsequent deliveries of data generally always refer to PriceItems with identical classification. A day price is delivered for day prices which have been delivered previously. By specifying the <code>CombinationLevel</code> , it is possible to determine that the subsequently delivered data overwrites the previously delivered data. For the <code>CombinationLevel</code> and the <code>CombinationIndex</code> , a negative Timestamp can for example be used, or any other sequence that is used in the tour operator system in order to express temporal dependence. In this way it is possible to define a sequence of subsequent deliveries, each of which overwrites the other.</para>
						<programlisting xml:id="ff"><![CDATA[<!-- vorhandene Daten -->
<PriceItem Class="Tagespreis">  
  ...
	<Combinatorics LayerLevel="-2" LayerName="Nachlieferung">
		<CombinationIndex Group="Tagespreis">0</CombinationIndex>
	</Combinatorics
  ...
</PriceItem>

<PriceItem Class="Tagespreis">   
  ...
  <Combinatorics LayerLevel="-2" LayerName="Nachlieferung">
    <CombinationLevel>-123456<CombinationLevel>
	<CombinationIndex Group="Tagespreis">-123456</CombinationIndex>
    <CombinableWhen>
      	<CombinationIndexMax Group="Tagespreis">-123456</CombinationIndexMax>
    </CombinableWhen>
  </Combinatorics>
  ...
</PriceItem>]]>

<![CDATA[<PriceItem Class="Tagespreis">   
  ...
  <Combinatorics LayerLevel="-2" LayerName="Nachlieferung">
    <CombinationLevel>-223456<CombinationLevel>
	<CombinationIndex Group="Tagespreis">-223456</CombinationIndex>
    <CombinableWhen>
      	<CombinationIndexMax Group="Tagespreis">-223456</CombinationIndexMax>
    </CombinableWhen>
  </Combinatorics>
  ...
</PriceItem>]]></programlisting>
						<para xml:id="de_1431" xml:lang="de">Das obige Beispiel zeigt die Combinatorics-Elemente von 3 möglichen PriceItems.
							Die Abgrenzung der Nachlieferung erfolgt durch einen VA-System internen Index
							(hier: 123456 und 223456 welcher zum Beispiel einen Timestamp oder eben
							irgendeinen zeitlichen Versatz widerspiegelt. Das erste PriceItem definiert keine
							Inkompatibilitäten. Die beiden folgenden PriceItems definieren jeweils, dass Sie
							nur mit PriceItems mit kleinerem CombinationIndex kompatibel sind. Dadurch wird
							eine Kompatibilität mit zetlich bereits vorher im System vorhandenen PriceItems
							ausgeschlossen. Genau das ist die Definition von Nachlieferungen.</para><para xml:id="en_1431" xml:lang="en">The above example shows the combinatorics elements of 3 possible PriceItems. The delimitation of the subsequent delivery occurs via an Index internal to the tour operator system (here: 123456 and 223456), which for example reflect a Timestamp or any other temporal differentiation. The first PriceItem does not define any incompatibilities. The two following PriceItems each define that they are only compatible with PriceItems with a lower CombinationIndex. In this way, compatibility with previously existing PriceItems in the system is excluded. This is exactly what defines subsequent deliveries.</para>
						<para xml:id="de_1432" xml:lang="de">In diesem Beispiel wurde das LayerLevel=-2 gesetzt. Klassisch erfolgt die
							Auswertung der Kombinatorik bzgl. Nachlieferung vor allen anderen
							Kombinatorikauswertungen. Letztenendes kann die Wahl des LayerLevels aber nach
							Bedarf des VA-Systems angepasst werden. </para><para xml:id="en_1432" xml:lang="en">In this example, LayerLevel=-2 is allocated. Typically, the evaluation of the combinatoric in relation to subsequent deliveries occurs before all other combinatorial evaluations. However, the choice of the LayerLevel can be tailored to the tour operator system if required.</para>
						<para xml:id="de_1433" xml:lang="de">Um Nachlieferungen von PriceItems mit unterschiedlichen Classes voneinander
							abzugrenzen, ist in diesem Beispiel das Attribut "Group" mit dem Wert der
							PriceItem-Class besetzt worden.</para><para xml:id="en_1433" xml:lang="en">In order to distinguish between subsequent deliveries of PriceItems with different Classes, the attribute "Group" has been given the value of the PriceItem-Class is this example.</para>
						<bridgehead xml:id="de_1434" xml:lang="de">Ersatzpreis</bridgehead><bridgehead xml:id="en_1434" xml:lang="en">Replacement price</bridgehead>
						<para xml:id="de_1435" xml:lang="de">Was sind Ersatzpreise? Ersatzpreise sind Preise, die andere Preise ersetzen bzw.
							ungültig werden lassen, sobald diese gemeinsam gelten. Klassisches Beispiel ist
							ein Kindertagespreis in Kombination mit einem normalen Tagespreis. Der normale
							Tagespreis hat normalerweise keine Einschränkung bzgl. des Alters. Sobald für eine
							Person aber der Kindertagespreis gilt, soll der normale Tagespreis für diese
							Person nicht mehr angewendet werden. Der Kindertagespreis ersetzt also in diesem
							Zusammenhang den normalen Tagespreis.</para><para xml:id="en_1435" xml:lang="en">What are replacement prices? Replacement prices are prices which replace other prices, i. e. make them invalid as soon as they are simultaneously valid. A classic example is a child day price in combination with a normal day price. The normal day price usually does not have any age restrictions which apply to it. As soon as the child day price applies for a person, however, the normal day price should no longer be used for this person. In this situation, the child day price therefore replaces the normal day price.</para>
						<para xml:id="de_1436" xml:lang="de">Im Gegensatz zu Nachlieferungen geht es nromalerweise beim Ersatzpreis um den
							gegenseitigen Ausschluss von PriceItems mit unterschiedlichen "Classes". Also ein
							Kindertagespreis schließt einen Tagespreis aus. Außerdem liegt nicht unbedingt
							eine kaskadierende Abhängigkeit wie bei den Nachlieferungen vor. </para><para xml:id="en_1436" xml:lang="en">In contrast to subsequent deliveries, replacement prices usually deal with the mutual exclusion of PriceItems with different "Classes". In this way, a child day price excludes a day price. In addition, a cascading dependence, as it exists for the subsequent deliveries, must not necessarily exist.</para>
						<para xml:id="de_1437" xml:lang="de">Die Auswertung der Ersatzpreise erfolgt in der Regel vor der Auswertung der
							normalen Kombinatorik. Damit muss das LayerLevel dementsprechend kleiner als das
							LayerLevel der normalen Kombinatorik gewählt werden. Standard für die normale
							Kombinatorik ist 0. Damit wählen wir für den Ersatzpreis das LayerLevel=-1. Das
							passt auch ganz gut wenn gleichzeitig eine Kombinatorik für Nachlieferungen
							angewendet wird, da diese in der Regel auch noch vor den Ersatzpreisen ausgewertet
							würde und damit dann bei LayerLevel = -2 liegen würde.</para><para xml:id="en_1437" xml:lang="en">Replacement prices are generally evaluated before the evaluation of the normal combinatorics. The LayerLevel chosen must therefore be lower than the LayerLevel of the normal combinatorics. The default for normal combinatorics is 0. We therefore choose LayerLevel=-1 for the replacement price. That also works well if combinatorics for subsequent deliveries are being applied at the same time, as these will generally be evaluated before the replacement prices and will therefore have LayerLevel= -2.</para>
						<para xml:id="de_1438" xml:lang="de">In der einfachsten Form arbeitet ein Ersatzpreis nicht mit "CombinableWhen"
							sondern mit "ExcludePriceItemClasses". ExcludePriceItemClasses schließt direkt
							alle PriceItems mit den angegebenen Classes aus. Das hat den Vorteil, dass bei
							Verwendung von ExcludePriceItemClassers der zu ersetzende Preis nichts von seiner
							Ersetzung wissen muss. Er muss also nicht den gleichen Combinatorics-Layer
							besetzen, um in die Kombinatorik mit einbezogen zu werden.</para><para xml:id="en_1438" xml:lang="en">In its simplest form, a replacement price does not work with "CombinableWhen", but rather with "ExcludePriceItemClasses". ExcludePriceItemClasses directly excludes all PriceItems with the specified classes. This has the advantage that if ExcludePriceItemClasses is used, the price to be replaced does not need to know anything about its replacement. This means that it does not necessarily have to be in the same combinatorics layer to be included in the combinatorics.</para>
						<para xml:id="det_1439" xml:lang="de"/>
						<programlisting><![CDATA[<PriceItem Class="Tagespreis">
  ...
</PriceItem>

<PriceItem Class="Kindertagespreis">
   ...
	<Combinatorics LayerLevel="-1" LayerName="ResetLayer">
		<ExcludePriceItemClasses>Tagespreis</ExcludePriceItemClasses>
	</Combinatorics>
  ...
</PriceItem>
]]></programlisting>
						<para xml:id="det_1440" xml:lang="de"/>
					</section>
				</section>
				<section xml:id="OtdsStrategyPriceItemProperties">
					<title><phrase xml:id="de_1441" xml:lang="de">Properties und Buchungsparameter (BookingParameter) in PriceItems (RoomUpgrades und
						BoardUpgrades)</phrase><phrase xml:id="en_1441" xml:lang="en">Properties and booking parameters (BookingParameter) in PriceItems (RoomUpgrades and BoardUpgrades)</phrase></title>
					<para xml:id="de_1442" xml:lang="de">Den Properties und Buchungsparametern innerhalb der PriceItems kommt eine besondere
						Rolle zu. Sie werden benutzt um Incentives in Form von Roomupgrades oder Boardupgrades
						zu definieren. Das bedeutet, dass unter bestimmten Bedingungen eine anderes Zimmer
						oder ein andereVerpflegung ohne oder gegen einen geringen Aufpreis angeboten werden.
						Entscheidend ist, dass diese Incentives an dieser Stelle auch in die Kombinatorik mit
						einbezogen werden. Sollten diese Incentives nicht in die Kombinatorik eingeschlossen
						sein, so empfiehlt das OTDS-Gremium, diese Abhängigkeiten anstatt in den PriceItems
						direkt in "Properties/Booking" unter der Verpflegung (Board-Element) oder beim Zimmer
						(Unit) zu integrieren.</para><para xml:id="en_1442" xml:lang="en">The properties and booking parameters within the PriceItems play a special role. They are used to define incentives in the form of RoomUpgrades or BoardUpgrades. This means that under certain conditions, another room or a different board type can be offered either free of charge or for a small surcharge. It is crucial that these incentives are also included in the combinatorics at this point. If these incentives are not included in the combinatorics, OTDS recommends that, instead of integrating them into the Price Items, these dependencies are directly integrated into "Properties/Booking" under board (BoardElement) or room (Unit).</para>
					<para xml:id="de_1443" xml:lang="de">Die Verarbeitung der Properties und Buchungsparameter erfolgt separat nach der
						Berechnung der Angebotspreise, dabei werden jeweils alle Properties und
						Buchungsparameter innerhalb des Angebotsbaums eingesammelt und danach entsprechend
						ausgewertet, so dass sich die Werte entweder ergänzen oder überschreiben. Dieses
						Verfahren wird etwas später in den Kapiteln zu Properties und Buchungsparametern
						genauer beschrieben. </para><para xml:id="en_1443" xml:lang="en">The properties and booking parameters are processed separately after the offer prices have been calculated. All properties and booking parameters within the offer tree are collected together and then evaluated correspondingly, so that the values either complete or overwrite each other. This process will be described in more detail later on, in the chapters on properties and booking parameters.</para>
					<para xml:id="de_1444" xml:lang="de">In den PriceItems haben Sie auch noch die Möglichkeit die Preise in bestimmte
						Preistypen (<code>PriceType</code> ) einzuteilen. Diese Preistypen können aus einer
						fest vorgegebenen Liste ausgewählt werden, beispielsweise <code>Base</code>,
							<code>EarlyBird</code>, <code>ExtraDay</code> oder <code>ChildReduction</code>.
						Diese Pricetypen werden ausdrücklich nicht in der Preisberechnung berücksichtigt
						beinhalten also auch keine implizite Regel, sondern dienen lediglich zur Anzeige in
						internen Systemen (z.B. Darstellung in einem Datenbrowser). Die komplette <link linkend="AnhangPropertiesPriceTypes">Liste der PriceTypes</link> findet sich im
						Anhang. </para><para xml:id="en_1444" xml:lang="en">In the PriceItems, you also have the opportunity of dividing the prices into specific price types (<code>PriceType</code> ) . These price types can be selected from a fixed, pre-set list, e.g. <code>Base</code> , <code>EarlyBird</code> , <code>ExtraDay</code> or <code>ChildReduction</code> . These price types are explicitly not considered during price calculation and do not come with any implicit rules, but merely serve as information within internal systems (e.g. display in a data browser). The complete <link linkend="AnhangPropertiesPriceTypes">list of PriceTypes</link> can be found in the appendix.</para>
					<para xml:id="de_1445" xml:lang="de">Weitergehende Informationen sind in der <link xlink:href="./otds_technisch.html#PriceType">Technischen Dokumentation für OTDS
						</link>Technischen Dokumentation für OTDS enthalten.</para><para xml:id="en_1445" xml:lang="en">Further information can be found in the <link xlink:href="./otds_technisch.html#PriceType">Technical documentation for OTDS</link>.</para>
					<para xml:id="det_1446" xml:lang="de"/>
				</section>
			</section>
			<section xml:id="OtdsStrategyAvailability">
				<title><phrase xml:id="de_1447" xml:lang="de">Verfügbarkeit von Angeboten (Availability)</phrase><phrase xml:id="en_1447" xml:lang="en">Availability of offers (Availability)</phrase></title>
				<section xml:id="OtdsStrategyAvailabilityOverview">
					<title><phrase xml:id="de_1448" xml:lang="de">Überblick</phrase><phrase xml:id="en_1448" xml:lang="en">Overview</phrase></title>
					<para xml:id="de_1449" xml:lang="de">Die Verfügbarkeiten (Availability) von Angeboten sind für Vertriebssysteme wichtige
						und notwendige Informationen, die möglichst zeitnah auf den aktuellsten Stand gebracht
						werden müssen.</para><para xml:id="en_1449" xml:lang="en">The availabilities (Availability) of offers are important and necessary pieces of information for distribution systems, and they should be regularly updated in order to be as accurate as possible.</para>
					<para xml:id="de_1450" xml:lang="de">Verfügbarkeitsinformationen (Availability) finden sich bei allen Einzelkomponenten
						wie Zimmer/Appartements, Flügen und Zusatzleistungen. </para><para xml:id="en_1450" xml:lang="en">You can find availability information in all individual components, such as rooms/apartments, flights and additional services.</para>
					<para xml:id="de_1451" xml:lang="de">Die folgende Grafik zeigt eine Übersicht über die Availability-Positionen in
						OTDS:</para><para xml:id="en_1451" xml:lang="en">The following diagram gives an overview of the availability positions in OTDS:</para>
					<figure>
						<title><phrase xml:id="de_1452" xml:lang="de">Availabilities - Übersicht</phrase><phrase xml:id="en_1452" xml:lang="en">Availabilities - overview</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/availabilities-overview.png" format="PNG" contentwidth="95%"/>
							</imageobject>
							<textobject>
								<para xml:id="de_1453" xml:lang="de">Availabilities Übersicht</para><para xml:id="en_1453" xml:lang="en">Availabilities overview</para>
							</textobject>
							<caption>
								<para xml:id="de_1454" xml:lang="de"> </para><para xml:id="en_1454" xml:lang="en"/>
							</caption>
						</mediaobject>
					</figure>
					<para xml:id="de_1455" xml:lang="de"> </para><para xml:id="en_1455" xml:lang="en"/>
					<para xml:id="de_1456" xml:lang="de">Werden in einer Hauptkomponente (Accommodation, Flight, Addon) nach Auswertung aller
						Ebenen keine Availabilities definiert, so wird diese Haupkomponente als nicht
						verfügbar angesehen. Falls es mehrere Ebenen von Availabilities gibt, wie im Fall der
						Accommodations und für den gleichen Tag ist auf beiden Ebenen eine Availability
						definiert, so wird eine definierte "negative Verfügbarkeit" vorrangig zu einer
						gleichzeitig definierten "positiven Verfügbarkeit" behandelt. Wird also z.B. auf der
						Accommodationebene ein Tag global für alle Units als "verfügbar" definiert und auf der
						SellingUnit Ebene wird dieser Tag als "nicht verfügbar" definiert, so gilt für die
						entsprechende SellingUnit die Definition der "Nicht Verfügbarkeit" als vorangig. </para><para xml:id="en_1456" xml:lang="en">If no availabilities are defined after evaluating all levels in a main component (Accommodation, Flight, Addon), this main component will be shown as not available. If there are several levels of availabilities, as is the case with accommodation and on the same day an availability is defined on both levels, then a defined "negative availability" is prioritised to a simultaneously defined "positive availability". Therefore, for example, if the accommodation level defines a day for all units as "available" and on the SellingUnit level the same day is defined as "not available", then the definition of "not available" for the relevant SellingUnit is prioritised.</para>
					<section xml:id="OtdsStrategyAvailabilities">
						<title><phrase xml:id="de_1457" xml:lang="de">Availabilities</phrase><phrase xml:id="en_1457" xml:lang="en">Availabilities</phrase></title>
						<para xml:id="de_1458" xml:lang="de">Unter dem Zweig <emphasis role="italic">Availabilities</emphasis> werden die
							Verfügbarkeiten eines Objektes definiert. Fehlt der Zweig, so wird damit keine
							Aussage zur Verfügbarkeit getroffen. Falls die Auswertung der Termine einer
							kompletten Hauptkomponente keine Aussage zur Verfügbarkeit ergeben, so gelten
							diese Termine als nicht verfügbar. </para><para xml:id="en_1458" xml:lang="en">In the <emphasis role="italic">Availabilities</emphasis> branch the availability of an object is defined. If the branch is missing then no reference is made to availability. If the evaluation of the dates for an entire main component provides no reference to availability, then the dates are shown as not available.</para>
						<figure>
							<title><phrase xml:id="de_1459" xml:lang="de">Availability</phrase><phrase xml:id="en_1459" xml:lang="en">Availability</phrase></title>
							<mediaobject>
								<imageobject>
									<imagedata fileref="figures/availability.png" format="PNG" contentwidth="50%"/>
								</imageobject>
								<textobject>
									<para xml:id="de_1460" xml:lang="de">Availability</para><para xml:id="en_1460" xml:lang="en">Availability</para>
								</textobject>
								<caption>
									<para xml:id="de_1461" xml:lang="de"> </para><para xml:id="en_1461" xml:lang="en"/>
								</caption>
							</mediaobject>
						</figure>




						<para xml:id="de_1462" xml:lang="de">Um einen Block von tageweisen Verfügbarkeiten zu definieren, wird ein neues
							Element <emphasis role="italic">Availability</emphasis> im Zweig <emphasis role="italic">Availabilities</emphasis> angelegt. Das Attribut <emphasis role="italic">StartDate</emphasis> gibt dabei den ersten Tag, das Attribut
								<emphasis role="italic">EndDate</emphasis> den letzten Tag des
							Verfügbarkeitsblocks an. In dem Zweig <code>Condition</code> werden Bedingungen
							für diesen Verfügbarkeitsblocks festgelegt. Nur wenn diese Bedingungen erfüllt
							sind, kommt der Verfügbarkeitsblock zum Tragen.</para><para xml:id="en_1462" xml:lang="en">To define a block of availabilities based on days, a new element <emphasis role="italic">Availability</emphasis> is applied in the branch <emphasis role="italic">Availabilities</emphasis>. The attribute <emphasis role="italic">StartDate</emphasis> here applies to the first day of the availability block, the attribute <emphasis role="italic">EndDate</emphasis> applies the last day of the availability block. In the branch <code>Condition</code> the conditions for these availability blocks are determined. Only when these conditions are met does the availability block come into effect.</para>
						<para xml:id="de_1463" xml:lang="de">Unterhalb der <emphasis role="italic">Availability</emphasis> muss ein Element
								<emphasis role="italic">DefaultDayState</emphasis> angegeben werden. Daneben
							können optional ein oder mehrere <emphasis role="italic">DayState</emphasis>
							Elemente definiert werden. Das <emphasis role="italic">DefaultDayState</emphasis>
							Element ist ein Defaultstatus, d.h. für jeden Tag, der zwar innerhalb des über das
								<emphasis role="italic">StartDate</emphasis> und <emphasis role="italic">EndDate</emphasis> definierten Availabilityblocks liegt, für den aber kein
							entsprechendes <emphasis role="italic">DayState</emphasis> Element geliefert
							wurde, werden die hier definierten Default-Stati gesetzt. </para><para xml:id="en_1463" xml:lang="en">Under <emphasis role="italic">availability</emphasis> a <emphasis role="italic">DefaultDayState</emphasis> element must be provided. In addition there is the option to define one or more <emphasis role="italic">DayState</emphasis> elements. The <emphasis role="italic">DefaultDayState</emphasis> element is a default status, meaning that for each day that lies between the availability block defined by the <emphasis role="italic">StartDate</emphasis> and <emphasis role="italic">EndDate</emphasis>, and for which, however, no corresponding <emphasis role="italic">DayState</emphasis> element has been supplied, the defined default statuses are applied.</para>
						<para xml:id="de_1464" xml:lang="de">In dem <emphasis role="italic">DayState</emphasis> Element wird hingegen der
							Verfügbarkeitsstatus eines bestimmten Tages aus dem <emphasis role="italic">Availability </emphasis>Block definiert. </para><para xml:id="en_1464" xml:lang="en">In the <emphasis role="italic">DayState</emphasis> element on the other hand, the availability status of a specific day from the <emphasis role="italic">Availability</emphasis> block is defined.</para>
						<para xml:id="de_1465" xml:lang="de">Das Attribut <emphasis role="italic">Offset</emphasis> stellt eine Beziehung zum
								<emphasis role="italic">StartDate</emphasis> im Elternknoten her. <emphasis role="italic">StartDate</emphasis> + <emphasis role="italic">Offset</emphasis>
							ergeben das Datum des betrachteten Tages. Der erste Tag (StartDate) hat damit das
							Offset = 0. </para><para xml:id="en_1465" xml:lang="en">The attribute <emphasis role="italic">Offset</emphasis> creates a relationship to the <emphasis role="italic">StartDate</emphasis> in the parent node. <emphasis role="italic">StartDate</emphasis> + <emphasis role="italic">Offset</emphasis> give the date of the regarded day. The first day (StartDate) has the Offset = 0.</para>
						<para xml:id="de_1466" xml:lang="de">Jeder <emphasis role="italic">DayState</emphasis> sowohl wie der <emphasis role="italic">DefaultDayState</emphasis> enthält eine Reihe von Informationen.
							Zunächst einen Tagesstatus: </para><para xml:id="en_1466" xml:lang="en">Each <emphasis role="italic">DayState</emphasis> as well as the <emphasis role="italic">DefaultDayState</emphasis> contains a sequence of information. First a day status:</para>
						<orderedlist numeration="loweralpha">
							<listitem>
								<para xml:id="de_1467" xml:lang="de">Open</para><para xml:id="en_1467" xml:lang="en">Open</para>
								<para xml:id="de_1468" xml:lang="de">Dieses Element enthält die Anzahl freier Verfügbarkeiten für diesen Tag.
									Optional kann noch ein Wert (Anzahl der Einheiten) im Body des Elementes
									angegeben werden: Open&gt;88 /Open&gt;. Ist das Element vorhanden, aber ohne
									Value, ist der Tag generell verfügbar. </para><para xml:id="en_1468" xml:lang="en">This element contains the amount of free availability for this day. There is also the option of entering a value (number of units) into the body of the element: Open&gt;88 /Open&gt;. If the element is present, but without value, the day is generally available.</para>
							</listitem>
							<listitem>
								<para xml:id="de_1469" xml:lang="de">Request</para><para xml:id="en_1469" xml:lang="en">Request</para>
								<para xml:id="de_1470" xml:lang="de">Dieses Element enthält die Anzahl verfügbarer Plätze, die aber nur bei
									Buchungsanfrage freigegeben werden. Optional kann noch ein Wert (Anzahl
									der Einheiten) im Body des Elementes angegeben werden:
									&lt;Request&gt;88&lt;/Request&gt;. Ist das Element vorhanden, aber ohne
									Value, ist der Tag generell nur auf Anfrage verfügbar. </para><para xml:id="en_1470" xml:lang="en">This element contains the number of available places, which will however only be revealed if a booking request is made. There is also the option of entering a value (number of units) into the body of the element: &lt;Request&gt;88&lt;/Request&gt;. If the element is present, but without value, the day is generally only available on request.</para>
							</listitem>
							<listitem>
								<para xml:id="de_1471" xml:lang="de">Closed</para><para xml:id="en_1471" xml:lang="en">Closed</para>
								<para xml:id="de_1472" xml:lang="de">Dieser Tag ist nicht verfügbar. </para><para xml:id="en_1472" xml:lang="en">This day is not available.</para>
							</listitem>
							<listitem>
								<para xml:id="de_1473" xml:lang="de">StopSales </para><para xml:id="en_1473" xml:lang="en">StopSales</para>
								<para xml:id="de_1474" xml:lang="de">Dieser Termin wird zurzeit nicht angeboten. </para><para xml:id="en_1474" xml:lang="en">This date is not currently offered.</para>
							</listitem>
							<listitem>
								<para xml:id="de_1475" xml:lang="de">Blacklisted </para><para xml:id="en_1475" xml:lang="en">Blacklisted</para>
								<para xml:id="de_1476" xml:lang="de">Dieser Termin kann zurzeit nicht angeboten werden, da er auf einer
									Blacklist steht. </para><para xml:id="en_1476" xml:lang="en">This date cannot currently be offered, as it has been placed on a blacklist.</para>
							</listitem>
						</orderedlist>
						<para xml:id="de_1477" xml:lang="de">Weiterhin ist optional eine Angabe möglich, ob an einem Tag ein CheckIn oder
							CheckOut erlaubt wird. Dies erfolgt durch die Elemente CheckIn und
							CheckOut:</para><para xml:id="en_1477" xml:lang="en">In addition, it is optionally possible to indicate whether CheckIn or CheckOut are permitted on a day. This occurs via the CheckIn and CheckOut elements:</para>
						<orderedlist numeration="loweralpha">
							<listitem>
								<para xml:id="de_1478" xml:lang="de">CheckIn</para><para xml:id="en_1478" xml:lang="en">CheckIn</para>
								<para xml:id="de_1479" xml:lang="de">An diesem Tag ist eine Anreise möglich.</para><para xml:id="en_1479" xml:lang="en">Arrival is possible on this day.</para>
							</listitem>
							<listitem>
								<para xml:id="de_1480" xml:lang="de">NoCheckIn</para><para xml:id="en_1480" xml:lang="en">NoCheckIn</para>
								<para xml:id="de_1481" xml:lang="de">An diesem Tag ist keine Anreise möglich.</para><para xml:id="en_1481" xml:lang="en">Arrival is not possible on this day.</para>
							</listitem>
							<listitem>
								<para xml:id="de_1482" xml:lang="de">CheckOut</para><para xml:id="en_1482" xml:lang="en">CheckOut</para>
								<para xml:id="de_1483" xml:lang="de">An diesem Tag ist eine Abreise möglich.</para><para xml:id="en_1483" xml:lang="en">Departure is possible on this day.</para>
							</listitem>
							<listitem>
								<para xml:id="de_1484" xml:lang="de">NoCheckOut</para><para xml:id="en_1484" xml:lang="en">NoCheckOut</para>
								<para xml:id="de_1485" xml:lang="de">An diesem Tag ist keine Abreise möglich.</para><para xml:id="en_1485" xml:lang="en">No departure is possible on this day.</para>
							</listitem>
						</orderedlist>
						<bridgehead xml:id="de_1486" xml:lang="de">Defaults für den <emphasis role="italic">DefaultDayState</emphasis></bridgehead><bridgehead xml:id="en_1486" xml:lang="en">Defaults for the <emphasis role="italic">DefaultDayState</emphasis>
						</bridgehead>
						<para xml:id="de_1487" xml:lang="de">Falls im <emphasis role="italic">DefaultDayState</emphasis> Element keine Angabe
							zur An/Abreise gemacht wird, so gilt als Default, dass sowohl &lt;CheckIn/&gt; als
							auch &lt;CheckOut/&gt; gesetzt sind.</para><para xml:id="en_1487" xml:lang="en">If no information is given in the <emphasis role="italic">DefaultDayState</emphasis> element regarding arrival/departure, then the default setting is for both &lt;CheckIn/&gt;and &lt;CheckOut/&gt;.</para>
						<para xml:id="de_1488" xml:lang="de">Falls im <emphasis role="italic">DefaultDayState</emphasis> Element keine Angabe
							zur Verfügbarkeit (Open, Closed, Request ...) gemacht wird, so gilt als Default,
							dass &lt;Open/&gt; gesetzt ist.</para><para xml:id="en_1488" xml:lang="en">If no information is given in the <emphasis role="italic">DefaultDayState</emphasis> element regarding availability (Open, Closed, Request...), the default setting is &lt;Open/&gt;.</para>
						<bridgehead xml:id="de_1489" xml:lang="de">Defaults für den <emphasis role="italic">DayState</emphasis></bridgehead><bridgehead xml:id="en_1489" xml:lang="en">Defaults for the <emphasis role="italic">DayState</emphasis>
						</bridgehead>
						<para xml:id="de_1490" xml:lang="de">Falls in einem <emphasis role="italic">DayState</emphasis> Element keine Angaben
							zu "Open, Request, Closed, StopSales, Blacklisted, CheckIn, CheckOut, NoCheckIn,
							NoCheckOut" gemacht werden, so werden die im <emphasis role="italic">DefaultDayState</emphasis> Element definierten Werte als Default
							herangezogen.</para><para xml:id="en_1490" xml:lang="en">If no information is given in a <emphasis role="italic">DayState</emphasis> element regarding "Open, Request, Closed, StopSales, Blacklisted, CheckIn, CheckOut, NoCheckIn, NoCheckOut", the values defined in the <emphasis role="italic">DefaultDayState</emphasis> element are taken as the default setting.</para>
						<para xml:id="de_1491" xml:lang="de"> </para><para xml:id="en_1491" xml:lang="en"/>
						<para xml:id="de_1492" xml:lang="de">Folgende Sonderfälle der Auswertung von Status-Kombinationen sind zu
							beachten:</para><para xml:id="en_1492" xml:lang="en">The following special cases of evaluation of status combinations are to be noted:</para>
						<itemizedlist>
							<listitem>
								<para xml:id="de_1493" xml:lang="de">Für Flüge machen Angaben zu CheckIn und CheckOut keinen Sinn und werden
									daher nur für Accommodations ausgewertet.</para><para xml:id="en_1493" xml:lang="en">Information regarding CheckIn and CheckOut has no relevance for flights and so these are only evaluated for Accommodations.</para>
							</listitem>
							<listitem>
								<para xml:id="de_1494" xml:lang="de">Hat ein Tag den Status "Closed/StopSales/Blacklisted", ist ein CheckIn
									nicht möglich. Der Tagesstatus hat also Vorrang vor Angaben zu
									CheckIn.</para><para xml:id="en_1494" xml:lang="en">If a day has the status "Closed/StopSales/Blacklisted", CheckIn is not possible. The day status therefore has precedence over information regarding CheckIn.</para>
							</listitem>
							<listitem>
								<para xml:id="de_1495" xml:lang="de">Liegen gleichzeitig Stati zu Open, Request, Closed, StopSales und
									Blacklisted vor, so überwiegt der höherwertige Status. Die höchste
									Wertigkeit bekommt dabei der Status "Closed" gefolgt von "StopSales",
									"Blacklisted", "Request" und "Open" ist der niederwertigste Status.</para><para xml:id="en_1495" xml:lang="en">If statuses for Open, Request, Closed, StopSales and Blacklisted are simultaneously present, the most high-value status prevails. The highest value is given to the status "Closed", followed by "StopSales", "Blacklisted", "Request", and then "Open" as the lowest-value status.</para>
							</listitem>
						</itemizedlist>
						<para xml:id="de_1496" xml:lang="de">Beispiele:</para><para xml:id="en_1496" xml:lang="en">Examples:</para>
						<programlisting><![CDATA[<Availability Start="2011-12-01" End="2011-12-31">
  <DefaultDayState>
    <Open/>
  </DefaultDayState>
  <DayState Offset="10"><Closed/></DayState>
  <DayState Offset="15"><Closed/></DayState>
</Availability>]]></programlisting>
						<para xml:id="de_1497" xml:lang="de">Außer dem 11.12.2011 und dem 16.12.2011 sind alle Tage in dem Zeitraum
							01.12.2011 – 31.12.2011 verfügbar. </para><para xml:id="en_1497" xml:lang="en">Except for the 11.12.2011 and the 16.12.2011, all days in the period 01.12.2011 – 31.12.2011 are available.</para>
						<programlisting><![CDATA[<Availability Key="2012-01-01" Start="2012-01-01" End="2012-01-31">
  <DefaultDayState>
    <Closed/>
  </DefaultDayState>
  <DayState Offset="18"><Open/></DayState> 
  <DayState Offset="19"><Open/></DayState>
  <DayState Offset="20"><Open/></DayState>
</Availability>]]></programlisting>
						<para xml:id="de_1498" xml:lang="de">Der 19.01.2012, der 20.01.2012 und der 21.01.2012 sind verfügbar. Alle anderen
							Tage in dem Zeitraum 01.01.2012 – 31.01.2012 sind nicht verfügbar. </para><para xml:id="en_1498" xml:lang="en">The 19.01.2012, the 20.01.2012 and the 21.01.2012 are available. All other days within the period 01.01.2012 – 31.01.2012 are not available.</para>
						<programlisting><![CDATA[<Availabilities Key="...">
  <Availability Key="..." Start="2012-03-01" End=“2012-03-31“>
    <DefaultDayState>
      <Open/>
    </DefaultDayState>
    <DayState Offset=“0“>
      <NoCheckIn/>
    </DayState>
    <DayState Offset=“10“>
      <NoCheckIn/>
      <NoCheckOut/>
    </DayState>
  </Availability>
</Availabilities>]]></programlisting>
						<para xml:id="de_1499" xml:lang="de">In dem Zeitraum 01.03.2012 – 31.03.2012 sind alle Tage verfügbar, am 01.03.2012
							ist jedoch keine Anreise und am 11.03.2012 ist weder An- noch Abreise
							möglich.</para><para xml:id="en_1499" xml:lang="en">In the period 01.03.2012 – 31.03.2012 all days are available, on the 01.03.2012, however, no arrivals are possible and on the 11.03.2012 neither arrivals nor departures are possible.</para>
						<para xml:id="de_1500" xml:lang="de">In der <link xlink:href="./technisch/otds_technisch.html#AvailabilityType">Technischen Dokumentation für OTDS </link>finden Sie weitergehende
							Informationen.</para><para xml:id="en_1500" xml:lang="en">You can find further information in the <link xlink:href="./technisch/otds_technisch.html#AvailabilityType">Technical documentation for OTDS</link>.</para>
					</section>
				</section>
			</section>
			<section xml:id="OtdsStrategyUpdateConcept">
				<title><phrase xml:id="de_1501" xml:lang="de">Das Updatekonzept</phrase><phrase xml:id="en_1501" xml:lang="en">The update concept</phrase></title>
				<section xml:id="OtdsStrategyUpdateConceptOverview">
					<title><phrase xml:id="de_1502" xml:lang="de">Übersicht</phrase><phrase xml:id="en_1502" xml:lang="en">Overview</phrase></title>
					<para xml:id="de_1503" xml:lang="de">Um einen Datenbestand immer auf dem neuesten Stand zu halten ist es notwendig
						schnell und problemlos Aktualisierungen einzuspielen. Die Daten müssen dabei
						konsistent gehalten werden. Neben der Möglichkeit einer Komplettlieferung muss es auch
						möglich sein, kurzfristig Updates unterschiedlicher Datenbereiche zu liefern. </para><para xml:id="en_1503" xml:lang="en">In order to keep a data set constantly updated, it is necessary to be able to carry out updates quickly and easily. The data must be kept consistent in doing so. In addition to the possibility of a complete delivery, it must also be possible to deliver short-term updates to various different data areas.</para>
					<para xml:id="de_1504" xml:lang="de">Durch die Vergabe von eindeutigen Schlüsseln (Key) und der Zuweisung eines definierten
						UpdateModes, die den Daten an den UpdateNodes mitgegeben werden, kann sehr
						genau das OTDS-Update-Verfahren gesteuert werden. </para><para xml:id="en_1504" xml:lang="en">The OTDS update process can be very precisely controlled, by assigning unique keys (Key) and allocating a defined UpdateMode, which are shared with the data on the UpdateNodes.</para>
					<para xml:id="de_1505" xml:lang="de">Mit diesem Konzept lassen sich folgende Update-Varianten abbilden:</para><para xml:id="en_1505" xml:lang="en">With this concept, it is possible to depict the following update options:</para>
					
					<itemizedlist>
						<listitem>
							<para xml:id="de_1507" xml:lang="de">Vollständige Updates</para><para xml:id="en_1507" xml:lang="en">Complete updates</para>
						</listitem>
						<listitem>
							<para xml:id="de_1508" xml:lang="de">Inkrementelle Updates</para><para xml:id="en_1508" xml:lang="en">Incremental updates</para>
						</listitem>
						<listitem>
							<para xml:id="de_1509" xml:lang="de">Löschoperationen </para><para xml:id="en_1509" xml:lang="en">Deletion operations</para>
						</listitem>
						<listitem>
							<para xml:id="de_1510" xml:lang="de">Partielle Ergänzungen</para><para xml:id="en_1510" xml:lang="en">Partial amendments</para>
						</listitem>
					</itemizedlist>
					
					<para xml:id="de_1511" xml:lang="de">Neben Komplett- oder Neulieferungen, die die Daten ersetzen, sind so auch <emphasis role="italic">Inkrementelle Updates</emphasis> möglich. Inkrementelle Updates
						enthalten veränderte oder zusätzliche Daten, die an den entsprechenden Knoten nur
						diese neu gelieferten Daten ersetzen oder ergänzen. So sind auch
						Verfügbarkeits-Updates und einzelne Löschungen von Einträgen möglich. Das
						Update-Konzept ermöglicht auch Vorab-Datenlieferungen, die sukzessive ergänzt, ersetzt
						oder gelöscht werden können. Die Datenlieferungen können dabei ihren Ursprung in
						verschiedenen Systemen haben und durch das Update-Konzept zu einem aktualisierten
						Datenbestand zusammengeführt werden.</para><para xml:id="en_1511" xml:lang="en">In addition to complete or new deliveries, which replace the data, it is also possible to carry out <emphasis role="italic">Incremental Updates</emphasis>. Incremental updates contain altered or additional data which, on the corresponding nodes, only replaces or amends that data which has been newly delivered. In this way, availability updates and the deletion of individual entries are also possible. The update concept also enables preliminary data deliveries, which can be amended, replaced or deleted step by step. With these, the data deliveries can be sourced from various systems and be combined into an updated data set via the update concept.</para>
					<para xml:id="de_1512" xml:lang="de">Das Update-Konzept nutzt die hierarchische Struktur von OTDS. Jeder wichtige Knoten
						innerhalb des Datenbaumes (Logical Node) hat die optionalen Attribute
							<emphasis role="italic">Key</emphasis> und <emphasis role="italic">UpdateMode</emphasis>. Das Attribut <emphasis role="italic">Key</emphasis> stellt den Schlüssel für den Knoten innerhalb des
						übergreifenden Knotens dar und muss deshalb in diesem Bereich eindeutig
						sein. In einem einfach strukturierten Datenbestand könnte man z.B. den
						Objektcode als Key für Accommodation verwenden und den Unterbringungscode
						als Key für das Angebot. Durch die Kombination von Objektcode und
						Unterbringungscode kann man so jedes gelieferte Zimmer eindeutig
						adressieren. Nur Knoten, die durch einen solchen kombinierten Schlüssel
						eindeutig adressierbar sind, können per Update geändert werden. </para><para xml:id="en_1512" xml:lang="en">The update concept uses the hierarchical structure of OTDS. Each important node within the data tree (Logical Node) has the optional attributes <emphasis role="italic">Key</emphasis> and <emphasis role="italic">UpdateMode</emphasis>. The attribute <emphasis role="italic">Key</emphasis> shows the key for the node within the overarching node and must therefore be unique within this area. In a simply structured data set, you could, for example, use the object code as a key for Accommodation and the accommodation code as a key for the Offer. Through the combination of object code and accommodation code, it is possible to unambiguously address each delivered room. Only nodes which can be unambiguously addressed via this kind of combined key can be altered by an update.</para>
					<para xml:id="det_1513" xml:lang="de"/>
				</section>
				<section xml:id="OtdsStrategyUpdateConceptUpdateNodes">
					<title><phrase xml:id="de_1514" xml:lang="de">Die Update-Nodes (Composite und Simple)</phrase><phrase xml:id="en_1514" xml:lang="en">The Update Nodes (Composite and Simple)</phrase></title>
					<para xml:id="de_1515" xml:lang="de">Während des Updates wird die Zuordnung der Daten über Update-Nodes realisiert. In OTDS
						werden die Update-Nodes in zwei Kategorien unterschieden: Composite-
						Update-Nodes und Simple-Update-Nodes. </para><para xml:id="en_1515" xml:lang="en">During the update, the allocation of data is achieved via update nodes. In OTDS, the update nodes are divided into two categories: Composite update nodes and Simple update nodes.</para>
					<para xml:id="de_1516" xml:lang="de">Jeder dieser Nodes beinhaltet ein Attribut @UpdateMode, dessen Wert angibt, wie mit den
						untergeordneten Knoten zu verfahren ist. Composite-Update-Nodes sind die
						Knoten, deren Child-Elemente einzeln updatebar sind. Nur wenn
						@UpdateMode="Merge" ist werden nur die in der Updatelieferung enthaltenen
						Child-Nodes des Composite-Update-Nodes aktualisiert. Bei Simple Nodes
						hingegen müssen immer alle Child-Elemente gemeinsam upgedatet werden. Bei
						Simple-Nodes kann dementsprechend @UpdateMode nicht den Wert "Merge"
						annehmen. </para><para xml:id="en_1516" xml:lang="en">Each of these nodes contains an attribute @UpdateMode, whose value specifies how to proceed with this subordinated node. Composite update nodes are nodes whose Child elements can be individually updated. When @UpdateMode="Merge", only the child nodes of the composite update node, contained within the update delivery, are updated. With simple nodes on the other hand, all Child elements must always be updated together. With simple nodes therefore, @UpdateMode cannot take the value "Merge".</para>
					<para xml:id="de_1517" xml:lang="de">Alle Composite-Update-Nodes und Simple-Update-Nodes sind damit generell einzeln
						aktualisierbar und besitzen das Attribut @UpdateMode. Sie werden im
						folgenden Logical-Nodes genannt. Alle anderen Knoten die dieses Attribut
						nicht besitzen, sind damit nicht einzeln updatebar und werden nachfolgend
						Non-Update-Nodes genannt. </para><para xml:id="en_1517" xml:lang="en">All composite update nodes and simple update nodes can therefore be individually updated on the whole and possess the attribute @UpdateMode. In the following, they will be called logical nodes. All other nodes which do not possess this attribute can therefore not be updated individually and will be called non-update nodes in the following.</para>
					<para xml:id="de_1518" xml:lang="de">Es gilt folgende Regel:</para><para xml:id="en_1518" xml:lang="en">The following rule applies:</para>
					<para xml:id="de_1519" xml:lang="de">Composite-Update-Nodes können als Kind-Elemente weitere Update-Nodes enthalten, wobei
						Simple-Update-Nodes ausschließlich Non-Update-Nodes enthalten. Das führt zu
						folgendem Schaubild: </para><para xml:id="en_1519" xml:lang="en">Composite update nodes as child elements may contain additional update nodes, while simple update nodes exclusively contain non-update nodes. This leads to the following diagram:</para>
					<para xml:id="det_1520" xml:lang="de"/>
					<figure>
						<title><phrase xml:id="de_1521" xml:lang="de">Update-Nodes</phrase><phrase xml:id="en_1521" xml:lang="en">Update nodes</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/update_nodes.png" format="PNG" contentwidth="65%"/>
							</imageobject>
							<textobject>
								<para xml:id="de_1522" xml:lang="de">Update-Nodes</para><para xml:id="en_1522" xml:lang="en">Update nodes</para>
							</textobject>
							<caption>
								<para xml:id="de_1523" xml:lang="de"> </para><para xml:id="en_1523" xml:lang="en"/>
							</caption>
						</mediaobject>
					</figure>
					<para xml:id="de_1524" xml:lang="de">Die Konsequenz ist, dass jeder Update-Node durch seinen direkten Update-Node-Ancestor
						eindeutig adressierbar ist. Simple-Update-Nodes sind die kleinsten
						veränderbaren Einheiten. Das Update von Non-Update-Nodes erfolgt
						ausschließlich dadurch, dass der nächste übergeordnete Update-Node komplett
						aktualisiert wird. Der neue Inhalt eines Simple-Nodes besteht nur aus
						Non-Update-Nodes und muss dementsprechend immer vollständig geliefert
						werden. </para><para xml:id="en_1524" xml:lang="en">The result is that every update node is unambiguously addressable through its direct update node ancestor. Simple update nodes are the smallest changeable units. The updating of non-update nodes can only occur if the next superior update node is completely updated. The new contents of a simple node consist only of non-update nodes and must therefore always be delivered in their entirety.</para>
				</section>
				<section xml:id="OtdsStrategyUpdateConceptKey">
					<title><phrase xml:id="de_1525" xml:lang="de">Das Attribut <code>Key</code></phrase><phrase xml:id="en_1525" xml:lang="en">The attribute <code>Key</code>
						</phrase></title>
					<para xml:id="de_1526" xml:lang="de">Auf Grund der Anforderung Elemente einzeln zu updaten, folgt die Einführung eines,
						innerhalb des Parent Nodes, eindeutigen Schlüssels @Key. </para><para xml:id="en_1526" xml:lang="en">Due to the requirement of updating elements individually, a key which is unambiguous within the parent node, the @Key, has been introduced.</para>
					<para xml:id="de_1527" xml:lang="de">Update-Nodes können innerhalb einer Ebene einzeln (singulär) bzw. mehrfach (multipel) in
						einer Sequenz auftreten. Aus diesem Grund wurde für mehrfach auftretende
						Elemente ein innerhalb seines Parent-Nodes eindeutiger Schlüssel „@Key“
						eingeführt, um eine gezielte Addressierung einzelner Knoten zu
						ermöglichen.</para><para xml:id="en_1527" xml:lang="en">Within a level, update nodes can appear once (singular) or several times (multiple) in a sequence. For this reason, a key "@Key", which is unambiguous within its parent node, has been introduced for elements appearing several times in order to make it possible to specifically address individual nodes.</para>
					<para xml:id="de_1528" xml:lang="de">Durch das Vorhandensein von Keys und der Anforderung ein Element einzeln zu updaten
						erfolgt die Aufteilung der Logical Nodes in zwei weitere Kategorien, den multiplen
						Logical Nodes (mit @Key) und den singulären Logical Nodes (ohne @Key). </para><para xml:id="en_1528" xml:lang="en">The existence of keys and the requirement of individually updating an element has resulted in the division of the logical nodes into two further categories, the multiple logical nodes (with @Key) and the singular logical nodes (without @Key).</para>
					<para xml:id="de_1529" xml:lang="de">Das Attribut @Key wird zur Bildung eines eindeutigen Updatepfades genutzt. Singuläre
						Nodes benötigen das @Key Attribut nicht, da sie ohnehin eindeutig
						sind.</para><para xml:id="en_1529" xml:lang="en">The attribute @Key is used for the creation of an unambiguous update path. Singular nodes do not require the @Key attribute, as they are already unambiguous.</para>
					<para xml:id="de_1530" xml:lang="de"> Das folgende Schaubild zeigt die Composite-Update-Nodes innerhalb der OTDS-Struktur: </para><para xml:id="en_1530" xml:lang="en">The following diagram shows the composite update nodes within the OTDS structure:</para>
					<figure xml:id="FigLogicalNodes">
						<title><phrase xml:id="de_1531" xml:lang="de">Update-Nodes in der OTDS-Datenstruktur</phrase><phrase xml:id="en_1531" xml:lang="en">Update nodes in the OTDS data structure</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/logicalnodes_overview.png" format="PNG" contentwidth="100%"/>
							</imageobject>
							<textobject>
								<para xml:id="de_1532" xml:lang="de">Update-Nodes in der OTDS Datenstruktur</para><para xml:id="en_1532" xml:lang="en">Update nodes in the OTDS data structure</para>
							</textobject>
							<caption>
								<para xml:id="de_1533" xml:lang="de"> </para><para xml:id="en_1533" xml:lang="en"/>
							</caption>
						</mediaobject>
					</figure>
					<para xml:id="de_1534" xml:lang="de">In der folgenden Grafik ist die SellingAccom abgebildet. Die SellingAccom selbst stellt
						einen Composite-Update-Node dar. Da es sich bei SellingAccom um ein
						multiples Element handelt, es also mehrere SellingAccoms geben kann, enthält
						der Knoten das Attribut @Key. Die Kindelemente des SellingAccom Knoten sind
						sowohl Simple-Update-Nodes (Properties, Booking) als auch erneut
						Composite-Update-Nodes (Board und Unit). </para><para xml:id="en_1534" xml:lang="en">In the following diagram, SellingAccom is depicted. SellingAccom itself represents a composite update node. As SellingAccom is a multiple element, i.e. as it is possible to have more than one SellingAccom, the node is given the attribute @Key. The child elements of the SellingAccom node are both simple update nodes (Properties, Booking) and further composite update nodes (Board and Unit).</para>
					<figure>
						<title><phrase xml:id="de_1535" xml:lang="de">SellingAccomType</phrase><phrase xml:id="en_1535" xml:lang="en">SellingAccomType</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/sellingaccom-ln.png" format="PNG" contentwidth="50%"/>
							</imageobject>
							<textobject>
								<para xml:id="de_1536" xml:lang="de">SellingAccomType</para><para xml:id="en_1536" xml:lang="en">SellingAccomType</para>
							</textobject>
							<caption>
								<para xml:id="de_1537" xml:lang="de"> </para><para xml:id="en_1537" xml:lang="en"/>
							</caption>
						</mediaobject>

					</figure>
					<para xml:id="de_1538" xml:lang="de">Der xml-technische Unterschied zwischen den Composite-Nodes und Simple-Nodes besteht
						lediglich darin, dass bei den CompositeNodes zusätzlich @UpdateMode="Merge"
						möglich ist.</para><para xml:id="en_1538" xml:lang="en">In XML terms, the difference between composite nodes and simple nodes is just that with CompositeNodes, @UpdateMode="Merge" is also possible.</para>
					<para xml:id="de_1539" xml:lang="de">CompositeNodes sind immer von dem XSD-Type CompositeLogicalNodeType abgeleitet.
						SimpleNodes sind immer von dem XSD-Type SimpleNodeType abgeleitet. </para><para xml:id="en_1539" xml:lang="en">CompositeNodes are always derived from the XSD type, CompositeLogicalNodeType. SimpleNodes are always derived from the XSD type, SimpleNodeType.</para>
					<para xml:id="det_1540" xml:lang="de"/>
				</section>
				<section xml:id="OtdsStrategyUpdateConceptUpdateMode">
					<title><phrase xml:id="de_1541" xml:lang="de">Das Attribut <code>UpdateMode</code></phrase><phrase xml:id="en_1541" xml:lang="en">The attribute <code>UpdateMode</code>
						</phrase></title>
					<para xml:id="de_1542" xml:lang="de">Die Aktualisierung wird auf verschiedenen Ebenen des Dokuments über das Attribut
						@UpdateMode der Logical-Nodes gesteuert. Es gibt an, ob bei einer Updatelieferung der
						gesamte Inhalt eines Knotens (@UpdateMode="New")  ersetzt oder gelöscht werden soll
						(@UpdateMode="Delete"). Innerhalb der Composite-Logical-Nodes kann das Attribut
						@UpdateMode außerdem den Wert „Merge“ annehmen. Dieser gibt an, dass nur die
						gelieferten Zweige eines Knotens ersetzt werden, die anderen bleiben unverändert. </para><para xml:id="en_1542" xml:lang="en">The update is controlled on different levels of the document via the attribute @UpdateMode in the Logical Nodes. This specifies whether the update delivery replaces (@UpdateMode = "New") or deletes (@UpdateMode = "Delete") the entire content of a node. Within the Composite Logical Nodes, the attribute @UpdateMode can also assume the value "Merge". This indicates that only the delivered branches of a node are to be replaced, while the others remain unchanged.</para>
					
						<table frame="topbot" tocentry="1">
							<title><phrase xml:id="de_1543" xml:lang="de">Werte für das Attribut UpdateMode</phrase><phrase xml:id="en_1543" xml:lang="en">Values for the attribute UpdateMode</phrase></title>
							<tgroup cols="2">
								<thead>
									<row valign="middle">
										<entry align="left">
											<para xml:id="de_1544" xml:lang="de">UpdateMode</para><para xml:id="en_1544" xml:lang="en">UpdateMode</para>
										</entry>
										<entry align="left">
											<para xml:id="de_1545" xml:lang="de">Beschreibung</para><para xml:id="en_1545" xml:lang="en">Description</para>
										</entry>
									</row>
								</thead>
								<tbody valign="top">
									<row valign="top">
										<entry>
											<emphasis role="bold">
												<emphasis role="italic">UpdateMode="New"</emphasis>
											</emphasis>
										</entry>
										<entry>
											<para xml:id="de_1546" xml:lang="de">Der Wert <emphasis role="italic">New</emphasis> ersetzt
												einen existierenden Knoten gleichen Namens. </para><para xml:id="en_1546" xml:lang="en">The value <emphasis role="italic">New</emphasis> replaces an existing node with the same name.</para>
											<para xml:id="de_1547" xml:lang="de">Wenn der Knoten noch nicht verfügbar ist, wird ein neuer
												Knoten angelegt und mit den gelieferten Daten gefüllt. Hat das
												oberste Element, das s.g. Wurzelelement otds den Wert
													<emphasis role="italic">New</emphasis> handelt es sich um
												eine komplette Ersetzung des Datenbestandes beim
												Datenkonsumenten. </para><para xml:id="en_1547" xml:lang="en">If the node is not yet available, a new node is created and populated with the delivered data. If the uppermost element, the so-called root element otds, has the value <emphasis role="italic"> New</emphasis>, it indicates the complete replacement of the data set for the data consumer.</para>
											<para xml:id="de_1548" xml:lang="de">Default: UpdateMode="New"</para><para xml:id="en_1548" xml:lang="en">Default: UpdateMode="New"</para>
										</entry>
									</row>
									<row valign="top">
										<entry><para xml:id="de_1549" xml:lang="de">
												<emphasis role="italic">
													<emphasis role="bold">UpdateMode="Merge"</emphasis></emphasis></para><para xml:id="en_1549" xml:lang="en">
											<emphasis role="italic">&lt;emphasis role="bold"&gt;UpdateMode="Merge"</emphasis>&lt;/emphasis&gt;</para>
											<para xml:id="de_1550" xml:lang="de"><emphasis role="italic"><emphasis role="bold"> (nur
													Composite Logical Node)</emphasis>
												</emphasis></para><para xml:id="en_1550" xml:lang="en">
											<emphasis role="italic">&lt;emphasis role="bold"&gt;(only Composite Logical Node)</emphasis>&lt;/emphasis&gt;</para>
										</entry>
										<entry>
											<para xml:id="de_1551" xml:lang="de">Mit dem Wert <emphasis role="italic">Merge</emphasis> wird
												ein echtes Update des Knoteninhalts ausgelöst.</para><para xml:id="en_1551" xml:lang="en">With the value <emphasis role="italic"> Merge </emphasis> an update of the node's actual content is triggered.</para>
											<para xml:id="de_1552" xml:lang="de">Nur die Unterelemente, die in der Update-Lieferung enthalten
												sind, ersetzen die entsprechenden Elemente im
												Datenbestand.</para><para xml:id="en_1552" xml:lang="en">Only the sub-elements, which are included in the update delivery replace the corresponding elements in the data set.</para>
											<para xml:id="de_1553" xml:lang="de">Elemente, die in der Updatelieferung nicht enthalten sind,
												beeinflussen den alten Datenbestand nicht.</para><para xml:id="en_1553" xml:lang="en">Elements that are not included in the update delivery do not affect the old data.</para>
										</entry>
									</row>
									<row valign="top">
										<entry>
											<emphasis role="italic">
												<emphasis role="bold">UpdateMode="Delete"</emphasis>
											</emphasis>
										</entry>
										<entry>
											<para xml:id="de_1554" xml:lang="de">Ein Knoten, der mit dem UpdateMode <emphasis role="italic">Delete</emphasis> geliefert wird, ist ein so genannter
												Delete-Node. Er darf keinen Inhalt haben. Ein Delete-Node
												führt zu der kompletten Entfernung genau dieses Knotens und
												aller enthaltenen Unterelemente. </para><para xml:id="en_1554" xml:lang="en">A node that is supplied with the UpdateMode <emphasis role="italic"> Delete </emphasis> is a so-called Delete node. It can have no content. A Delete node results in the complete removal of this particular node and all sub-elements it contains.</para>
										</entry>
									</row>
								</tbody>
							</tgroup>
						</table>
					
				</section>
				<section xml:id="OtdsStrategyUpdateConceptProcess">
					<title><phrase xml:id="de_1555" xml:lang="de">Der Update-Prozess</phrase><phrase xml:id="en_1555" xml:lang="en">The update process</phrase></title>


					<para xml:id="de_1556" xml:lang="de">In diesem Abschnitt wird kurz der Update-Prozess beschrieben. Eine detaillierte
						Beschreibung findet sich im Kapitel 3 Abschnitt <link linkend="OtdsProcessDataDelivery">"Verarbeitung der
						OTDS-Datenlieferungen"</link></para><para xml:id="en_1556" xml:lang="en">This section briefly describes the update process. A more detailed description can be found in Chapter 3, section,<link linkend="OtdsProcessDataDelivery">"Processing of OTDS data deliveries"</link>
					</para>
					
						<orderedlist>
							<listitem>
								<para xml:id="de_1558" xml:lang="de">Bestimmung des ersten Knotens mit dem Attribut @UpdateMode der
									Update-Datenlieferung</para><para xml:id="en_1558" xml:lang="en">Determination of the first node with the attribute @UpdateMode of the update data delivery</para>
							</listitem>
							<listitem>
								<para xml:id="de_1559" xml:lang="de">Bestimmung des Update-Key Pfades</para><para xml:id="en_1559" xml:lang="en">Determination of the update key path</para>
							</listitem>
							<listitem>
								<para xml:id="de_1560" xml:lang="de">Ermittlung des Target-Nodes in den zu akt. Daten über den
									Update-Node-Key-Path</para><para xml:id="en_1560" xml:lang="en">Determination of the Target node in the to be updated data via the Update node key path</para>
							</listitem>
							<listitem>
								<para xml:id="de_1561" xml:lang="de">Update des Target-Nodes</para><para xml:id="en_1561" xml:lang="en">Updating of Target node</para>
							</listitem>
						</orderedlist>
					
					<para xml:id="de_1562" xml:lang="de">Update eines Composite Logical Nodes:</para><para xml:id="en_1562" xml:lang="en">Updating a Composite Logical node:</para>
					<itemizedlist>
						<listitem>
							<para xml:id="de_1563" xml:lang="de">Der Composite Logical Node hat ein @UpdateMode Attribut mit einem Wert
								aus (New|Merge|Delete)</para><para xml:id="en_1563" xml:lang="en">The Composite Logical node has an @UpdateMode attribute with a value from (New|Merge|Delete)</para>
						</listitem>
						<listitem>
							<para xml:id="de_1564" xml:lang="de">@UpdateMode = New =&gt; Target des Logical Node wird durch Source
								ersetzt</para><para xml:id="en_1564" xml:lang="en">@UpdateMode = New =&gt; the target of the Logical node is replaced by source</para>
						</listitem>
						<listitem>
							<para xml:id="de_1565" xml:lang="de">@UpdateMode = Delete =&gt; Target des Logical Node wird gelöscht</para><para xml:id="en_1565" xml:lang="en">@UpdateMode = Delete =&gt; The target of the Logical node is deleted</para>
						</listitem>
						<listitem>
							<para xml:id="de_1566" xml:lang="de">@UpdateMode = Merge =&gt; Update aller Child‐Elemente entsprechend ihres
								eigenen @UpdateMode Attributs (also ggf. keine Veränderung, wenn das
								Attribut fehlt)</para><para xml:id="en_1566" xml:lang="en">@UpdateMode = merge =&gt; updates all Child elements according to their own @UpdateMode attributes (where this attribute is missing there is no change)</para>
						</listitem>
					</itemizedlist>
					
					<para xml:id="de_1567" xml:lang="de">Update eines Simple Logical Nodes</para><para xml:id="en_1567" xml:lang="en">Updating of a Simple Logical node</para>
					<itemizedlist>
						<listitem>
							<para xml:id="de_1568" xml:lang="de">Der Simple Logical Node hat ein @UpdateMode Attribut mit einem Wert aus
								(New| Delete)</para><para xml:id="en_1568" xml:lang="en">The Simple Logical node has an @UpdateMode attribute with a value of (New|Delete)</para>
						</listitem>
						<listitem>
							<para xml:id="de_1569" xml:lang="de">@UpdateMode = New =&gt; Target des Logical Node wird durch Source
								ersetzt</para><para xml:id="en_1569" xml:lang="en">@UpdateMode = New =&gt; the target of the Logical node is replaced by source</para>
						</listitem>
						<listitem>
							<para xml:id="de_1570" xml:lang="de">@UpdateMode = Delete =&gt; Target des Logical Node wird gelöscht</para><para xml:id="en_1570" xml:lang="en">@UpdateMode = Delete =&gt; The target of the Logical node is deleted</para>
						</listitem>
					</itemizedlist>
					<para xml:id="de_1571" xml:lang="de">Das bedeutet, dass die kleinste Einheit der Veränderung ein <emphasis role="italic">kompletter </emphasis>Simple Node ist. Das Ergänzen / Ersetzen / Löschen
							<emphasis role="italic">einzelner </emphasis>Child‐Elemente ist nur möglich, wenn
						das betreffende Element ebenfalls ein Attribut @UpdateMode besitzt.</para><para xml:id="en_1571" xml:lang="en">This means that the smallest unit of change is a <emphasis role="italic"> complete</emphasis> Simple node. The completion / replacement / deletion of an<emphasis role="italic"> individual</emphasis> Child element is only possible if the affected element also has an @UpdateMode attribute.</para>
					<para xml:id="det_1572" xml:lang="de"/>
				</section>
			</section>
			<section xml:id="OtdsStrategyDataDelivery">
				<title><phrase xml:id="de_1573" xml:lang="de">Datenlieferung</phrase><phrase xml:id="en_1573" xml:lang="en">Data delivery</phrase></title>
				<section xml:id="OtdsStrategyDataDeliveryOverview">
					<title><phrase xml:id="de_1574" xml:lang="de">Overview</phrase><phrase xml:id="en_1574" xml:lang="en">Overview</phrase></title>
					<para xml:id="de_1575" xml:lang="de">Eine OTDS-Datei ist eine XML-Datei.</para><para xml:id="en_1575" xml:lang="en">An OTDS file is an XML file.</para>
					<para xml:id="de_1576" xml:lang="de">Jede Datei in einer OTDS-Datenlieferung beginnt mit dem Wurzelelement <emphasis role="bold">Otds</emphasis>. </para><para xml:id="en_1576" xml:lang="en">Each file in an OTDS data delivery begins with the root element <emphasis role="bold">Otds</emphasis>.</para>
					<para xml:id="de_1577" xml:lang="de">
						<programlisting><![CDATA[<Otds Market="DE" UpdateMode="New" xmlns="http://otds-group.org/otds" Version="1.0">]]></programlisting>
					</para><para xml:id="en_1577" xml:lang="en">
						<programlisting>
							<![CDATA[<Otds Market="DE" UpdateMode="New" xmlns="http://otds-group.org/otds" Version="1.0">]]></programlisting>
					</para>
					<para xml:id="de_1578" xml:lang="de">Jede OTDS-Datenlieferung ist marktspezifisch. Das Attribut "Market" definiert für
						welchen Markt die Lieferung gedacht ist. </para><para xml:id="en_1578" xml:lang="en">Each OTDS data delivery is market specific. The attribute "Market" defines which market the delivery is intended for.</para>
					<para xml:id="de_1579" xml:lang="de">Die Angabe der OTDS-Datenlieferung zugrunde liegenden Version in dem Attribut
						"Version" ist Pflicht und für die korrekte Verarbeitung der Datenlieferung
						unerlässlich.</para><para xml:id="en_1579" xml:lang="en">The indication of the version on which the specification of the OTDS data delivery is based within the attribute "Version" is mandatory for the correct processing of the data delivery.</para>
					<para xml:id="de_1580" xml:lang="de"><link linkend="OtdsProcessDataDelivery">"Verarbeitung der
							OTDS-Datenlieferungen"</link></para><para xml:id="en_1580" xml:lang="en">
						<link linkend="OtdsProcessDataDelivery">"Processing of OTDS data deliveries"</link>
					</para>
					<bridgehead xml:id="de_1581" xml:lang="de">Gemeinsame Datenlieferungen</bridgehead><bridgehead xml:id="en_1581" xml:lang="en">Combined data deliveries</bridgehead>
					<para xml:id="de_1582" xml:lang="de">In OTDS ist es möglich, dass eine Datenlieferung Daten mehrerer Marken (Brand)
						enthält. An vielen Stellen können markenspezifische Gültigkeiten oder
						Preisbestandteile oder Regeln platziert werden. Dadurch können hohe Redundanzen in den
						Datenlieferungen vermieden werden. Das Gleiche gilt für die Lieferung
						kundenspezifischer Daten. In OTDS können nur die feinen kundenspezifischen
						Unterschiede geliefert werden. Dadurch können NegoSpaces und NegoFares bzw.
						Exklusivangebote innerhalb einer Datenlieferung integriert werden.</para><para xml:id="en_1582" xml:lang="en">In OTDS it is possible for a data delivery to contain several brands (Brand). In many places, market specific validities, price components or rules can be set. In this way it is possible to avoid high redundancies in the data delivery. The same applies for the delivery of customer specific data. In OTDS only the fine, customer specific differences can be delivered. In this way NegoSpaces and NegoFares or exclusive offers can be integrated within a data delivery.</para>
					<para xml:id="de_1583" xml:lang="de">Das führt zu erheblich reduzierten Datenmengen, aber garantiert eine optimale
						Updatebarkeit von Preisen und Verfügbarkeiten.</para><para xml:id="en_1583" xml:lang="en">This leads to greatly reduced data quantities, but guarantees an optimal updatability of prices and availabilities.</para>
					<bridgehead xml:id="de_1584" xml:lang="de">Separate Datenlieferungen der einzelnen Vertriebsmärkte</bridgehead><bridgehead xml:id="en_1584" xml:lang="en">Separate data deliveries of the individual distribution markets</bridgehead>
					<para xml:id="de_1585" xml:lang="de">In OTDS ist aktuell vorgesehen, dass Datenlieferungen nach Vertriebsmärkten getrennt
						und geliefert werden. Die Vertriebsmärkte teilen sich auf einzelne Länder auf. Die
						Angabe des Vertriebsmarktes erfolgt im Attribut "Market" im Element <emphasis role="italic">Otds</emphasis>.</para><para xml:id="en_1585" xml:lang="en">In OTDS it is currently planned that data deliveries will be divided and delivered according to distribution markets. The distribution markets are divided into individual countries. The specification of the distribution market occurs in the attribute "Market" in the element <emphasis role="italic">Otds</emphasis>.</para>
					<para xml:id="de_1586" xml:lang="de">Die Kennzeichnung in den Daten erfolgt durch den international gebräuchlichen
						2-Zeichen Ländercode (Länderkürzel nach ISO-3166 Alpha-2).</para><para xml:id="en_1586" xml:lang="en">Identification in the data occurs via the internationally used 2-letter country code (country abbreviations according to ISO-3166 Alpha-2).</para>
				</section>
				<section xml:id="OtdsDataDeliveryInitial">
					<title><phrase xml:id="de_1587" xml:lang="de">Initiale Datenlieferung</phrase><phrase xml:id="en_1587" xml:lang="en">Initial data delivery</phrase></title>
					<section xml:id="OtdsDataDeliveryInitialOverview">
						<title><phrase xml:id="de_1588" xml:lang="de">Überblick</phrase><phrase xml:id="en_1588" xml:lang="en">Overview</phrase></title>
						<para xml:id="de_1589" xml:lang="de">Die Initiallieferung kann ebenfalls aus einer oder mehreren Dateien bestehen.
							Folgende Liefervarianten sind möglich:</para><para xml:id="en_1589" xml:lang="en">The initial delivery can also consist of one or several files. The following delivery options are available:</para>
						
						<itemizedlist>
							<listitem>
								<para xml:id="de_1591" xml:lang="de">Komplettlieferung in einer Datei</para><para xml:id="en_1591" xml:lang="en">The complete delivery within one file</para>
								<para xml:id="de_1592" xml:lang="de">Alle Daten sind in einer Datei enthalten, d.h. Stammdaten und
									Verkaufsdaten (Preise, Verfügbarkeiten) sind in einer Datei enthalten
									und die Datenlieferung ist
									gültig<!-- (<link linkend="Validierung">siehe "Validierung der Datenlieferung"</link>)-->.</para><para xml:id="en_1592" xml:lang="en">All data is contained in one file, i.e. master data and sales data (prices, availability) are contained in the same file and the data delivery is valid.</para>
							</listitem>
							<listitem>
								<para xml:id="de_1593" xml:lang="de">Mehrere Dateien in der Initiallieferung - z.B. abteilungsbasierte
									Lieferung:</para><para xml:id="en_1593" xml:lang="en">Several files in the initial delivery - e.g. department based delivery:</para>
								<para xml:id="de_1594" xml:lang="de">Die erste Datei (nach alphanumerischer Auswertung s.o.) sollte die
									Stammdaten enthalten und alle Logischen Knoten haben als Attribute Key
									(eindeutiger Schlüssel) und UpdateMode="New" (<link linkend="OtdsStrategyUpdateConcept">siehe dazu Kapitel: OTDS
										Update-Konzept</link>). </para><para xml:id="en_1594" xml:lang="en">The first file (according to alphanumeric evaluation, see above) should contain the master data. All logical nodes as Attribute Key and UpdateMode="New" (<link linkend="OtdsStrategyUpdateConcept">, see chapter: OTDS Update Concept</link>).</para>
								<para xml:id="de_1595" xml:lang="de">Die weiteren Dateien müssen nach den beschriebenen Regeln benannt
									sein, um korrekt in der richtigen Reihenfolge eingelesen zu werden.
									Ergänzende Daten (z.B. Preise oder Verfügbarkeiten) müssen an den
									entsprechenden Logischen Knoten mit den entsprechenden Schlüsseln zur
									eindeutigen Zuordnung versehen sein. Nach den Regeln des
									Update-Konzepts muss das Attribut UpdateMode gesetzt werden - "New"
									ersetzt alles, "Merge" ersetzt nur die gelieferten Elemente unter den
									entsprechenden Logischen Knoten, "Delete" löscht den Knoten (<link linkend="OtdsStrategyUpdateConcept">siehe dazu Kapitel: OTDS
										Update-Konzept</link>). </para><para xml:id="en_1595" xml:lang="en">The additional files must be named according to the described rules in order to be correctly read in the right sequence. Supplementary data (e.g. prices or availabilities) must be provided with the corresponding keys at the corresponding logical nodes for unambiguous assignment. According to the rules of the update concept, the attribute UpdateMode must be set - "New" replaces everything, "Merge" only replaces the delivered elements under the corresponding logical node, "Delete" deletes the node (<link linkend="OtdsStrategyUpdateConcept">, see chapter: OTDS Update Concept</link>).</para>
							</listitem>
						</itemizedlist>
						
						<bridgehead xml:id="de_1596" xml:lang="de">Update-Lieferungen</bridgehead><bridgehead xml:id="en_1596" xml:lang="en">Update deliveries</bridgehead>
						<para xml:id="de_1597" xml:lang="de">In OTDS sind sowohl Komplett-Lieferungen als auch inkrementelle Datenlieferungen
							vorgesehen. Die Festlegung von eindeutigen Keys an relevanten Knotenpunkten und
							ein simples aber effektives Update-Konzept erlauben eine sehr individuelle
							Gestaltung von inkrementellen Updatelieferungen. Dabei werden auch die
							unabhängigen Lieferungen aus unterschiedlichen Systemen (z.B. Stammdaten,
							Preiskalkulation, Verfügbarkeit) berücksichtigt. </para><para xml:id="en_1597" xml:lang="en">OTDS allows both complete deliveries and incremental data deliveries. The determination of unambiguous keys at relevant node points and a simple but effective update concept allow a very individual creation of incremental update deliveries. In this, the independent deliveries from various systems (e.g. master data, price calculation, availability) are also taken into account.</para>
						<para xml:id="de_1598" xml:lang="de">Die Dateien müssen ebenfalls nach den oben beschriebenen Regeln benannt sein, um
							korrekt in der richtigen Reihenfolge eingelesen zu werden. Es dürfen keine schon
							gelieferten Dateinamen verwendet werden um Inkonsistenzen zu vermeiden. Werden in
							der Update-Lieferung Dateien geliefert, die in der alphanumerischen Einordnung vor
							schon gelieferten Dateien rangieren, wird die neue Datei und alle in der
							Rehenfolge danach kommenden Dateien neu eingelesen. </para><para xml:id="en_1598" xml:lang="en">The files must also be named according to the rules stated above, in order for them to be imported correctly in the right order. File names that have already been used should not be used to avoid inconsistencies. If files within the update delivery in terms of their alphanumeric ordering rank before files that have already been delivered, the new file, and all of those that rank later in the order, will be imported again.</para>
						<para xml:id="de_1599" xml:lang="de">Nach den Regeln des Update-Konzepts muss das Attribut UpdateMode entsprechend
							gesetzt werden - "New" ersetzt alles, "Merge" ersetzt nur die gelieferten Elemente
							unter den entsprechenden logischen Knoten, "Delete" löscht den kompletten Knoten
							(siehe dazu Kapitel: <link linkend="OtdsStrategyUpdateConcept">OTDS
								Update-Konzept</link>). </para><para xml:id="en_1599" xml:lang="en">According to the rules of the update concept, the UpdateMode attribute must be set correspondingly - "New" replaces everything, "Merge" replaces only the elements delivered under the appropriate logical nodes, "Delete" will delete the entire node (see the <link linkend="OtdsStrategyUpdateConcept">OTDS Update Concept</link> chapter).</para>
						<para xml:id="de_1600" xml:lang="de"> </para><para xml:id="en_1600" xml:lang="en"/>
					</section>
					<section xml:id="OtdsDataDeliveryInitialFileSystem">
						<title><phrase xml:id="de_1601" xml:lang="de">Dateisystem einer Datenlieferung</phrase><phrase xml:id="en_1601" xml:lang="en">File system of a data delivery</phrase></title>
						<para xml:id="de_1602" xml:lang="de">Eine OTDS-Datenlieferung wird immer in einer Archivdatei im ZIP-Format geliefert. Die
							einzelnen Lieferungen als ZIP-Datei können dabei eine oder mehrere
							OTDS-Datendateien enthalten. Die Dateinamen müssen mit einer 3 stelligen
							Ziffernfolge beginnen, diese Ziffernfolgen müssen für die Lieferung
							eindeutig sein. Die Lieferung enthält immer eine Steuerdatei
							delivery.xml mit weiteren Angaben zu der OTDS-Lieferung.</para><para xml:id="en_1602" xml:lang="en">An OTDS data delivery is always delivered in an archive file in ZIP format. The individual deliveries as ZIP files may contain one or several OTDS data files. The file names must begin with a 3-digit numerical sequence, and this sequence must be unique for the delivery. The delivery always includes a control file delivery.xml with further details about the OTDS delivery.</para>
						<para xml:id="de_1603" xml:lang="de">Weitere Details finden Sie im Kapitel 3: <link linkend="OtdsProcessMain">Dateiformat der
								Lieferung</link>)</para><para xml:id="en_1603" xml:lang="en">For further details, see chapter 3: <link linkend="OtdsProcessMain">File format of delivery</link>)</para>
						<para xml:id="de_1604" xml:lang="de"> </para><para xml:id="en_1604" xml:lang="en"/>
					</section>
				</section>
				<section xml:id="OtdsDataDeliveryValidation">
					<title><phrase xml:id="de_1605" xml:lang="de">Validierung der Datenlieferung</phrase><phrase xml:id="en_1605" xml:lang="en">Validation of data delivery</phrase></title>
					<para xml:id="de_1606" xml:lang="de">Die gelieferten Datenbestände müssen zu jedem Zeitpunkt gegenüber der original
						OTDS-Schemadatei "otds.xsd " validieren, das heißt, dass zu jedem Zeitpunkt ein
						gültiger Datenbestand vorhanden sein muss. </para><para xml:id="en_1606" xml:lang="en">The delivered data sets must be validated at all times against the original OTDS schema file "otds.xsd ", i.e. there must be a valid data set available at all times.</para>
					<para xml:id="de_1607" xml:lang="de">Bei der Lieferung von mehreren Dateien in einer Lieferung muss jede Einzeldatei
						zusätzlich eine Validierung gegen inkrementelle XSD, bei der der Großteil
						der Elemente optional ist, bestehen. Diese XSD (otds.xsd) befindet sich in
						den Schemaverzeichnis im Unterverzeichnis "incremental_xsds".</para><para xml:id="en_1607" xml:lang="en">If several files are delivered within a delivery, each individual file must additionally be validated against the incremental XSD, for which the majority of elements are optional. This XSD (otds.xsd) is to be found in the schema directory in the "incremental_xsds" sub-directory.</para>
					<para xml:id="de_1608" xml:lang="de"> </para><para xml:id="en_1608" xml:lang="en"/>
				</section>
			</section>
			<section xml:id="OtdsStrategyProperties">
				<title><phrase xml:id="de_1609" xml:lang="de">Stammdaten und Eigenschaften von Komponenten (Properties)</phrase><phrase xml:id="en_1609" xml:lang="en">Master data and properties of components (Properties)</phrase></title>
				<para xml:id="de_1610" xml:lang="de">Properties bezeichnen Stammdaten, Eigenschaften und Merkmale einer Komponente und werden
					entsprechend kontextbezogen angewendet. Bei allen Einzelbereichen wie Unterkunft,
					Apartment/Zimmer, Verpflegung oder Zusatzangeboten, die eine genauere Beschreibung der
					Ausstattungsvarianten oder Leistungsangebote benötigen, werden die beschreibenden Daten in
					den Properties geliefert. </para><para xml:id="en_1610" xml:lang="en">Properties identify the master data, properties and characteristics of a component and are applied according to context. For all individual areas, such as accommodation, apartment/room, board or addons, which require a more accurate description of the varying facilities or service offers, the descriptive data is delivered within the properties.</para>
				<para xml:id="de_1611" xml:lang="de">Properties dienen dazu, die Angebote näher zu beschreiben und somit diese Informationen
					für Suchanfragen zur Verfügung stellen. </para><para xml:id="en_1611" xml:lang="en">Properties serve to describe the offers more accurately, and to provide this information for search requests.</para>
				<para xml:id="de_1612" xml:lang="de">Das folgende Schaubild zeigt die Positionen der Properties in der OTDS-Struktur:</para><para xml:id="en_1612" xml:lang="en">The diagram below illustrates the positioning of properties in the OTDS structure:</para>
				<para xml:id="de_1613" xml:lang="de"> </para><para xml:id="en_1613" xml:lang="en"/>
				<figure>
					<title><phrase xml:id="de_1614" xml:lang="de">Properties - Übersicht</phrase><phrase xml:id="en_1614" xml:lang="en">Properties - overview</phrase></title>
					<mediaobject>
						<imageobject>
							<imagedata fileref="figures/properties_overview.png" format="PNG" contentwidth="80%"/>
						</imageobject>
						<textobject>
							<para xml:id="de_1615" xml:lang="de">Properties - Übersicht</para><para xml:id="en_1615" xml:lang="en">Properties - overview</para>
						</textobject>
						<caption>
							<para xml:id="de_1616" xml:lang="de"> </para><para xml:id="en_1616" xml:lang="en"/>
						</caption>
					</mediaobject>
				</figure>
				<para xml:id="de_1617" xml:lang="de">Durch Namespaces ist dieser Bereich so gestaltet, dass sich auch Veranstalter-eigene
					Merkmale komfortabel und vollständig abbilden lassen und somit der individuellen
					Darstellung den entsprechenden Raum geben. Die Namespaces sind für externe
					Attributierungssysteme vorgesehen, wie zum Beispiel von Firmen wie Giata oder Globaltypes
					oder auch Veranstalter-eigene Attributierungssysteme.</para><para xml:id="en_1617" xml:lang="en">By using namespaces this area is arranged in such a way, that individual tour-operator-specific characteristics can be displayed comfortably and in their entirety, therefore allowing sufficient scope for a customised presentation. The namespaces are intended for external attribute systems, those of companies such as Giata or Globaltypes, for example, or also tour operator-specific attribute systems.</para>
				<section>
					<title><phrase xml:id="de_1618" xml:lang="de">Allgemeines zur Verwendung der Properties</phrase><phrase xml:id="en_1618" xml:lang="en">General information on the use of properties</phrase></title>
					<section>
						<title><phrase xml:id="de_1619" xml:lang="de">Überblick</phrase><phrase xml:id="en_1619" xml:lang="en">Overview</phrase></title>
						<para xml:id="de_1620" xml:lang="de">In den Properties-Knoten werden die Eigenschaften der (Unter-)Komponenten
							festgelegt. Dies umfasst zum Beispiel den Ort einer Unterkunft, besondere Themen
							eines Hotels (Wellness, Familie) oder besondere Bestimmungen für das Gepäck bei
							Flügen. </para><para xml:id="en_1620" xml:lang="en">The properties of the (sub)components are specified in the properties nodes. This includes, for example, the location of an accommodation, certain hotel themes (spa, family) or particular luggage policies for flights.</para>
						<para xml:id="de_1621" xml:lang="de">Alle Properties sind in einer Gruppe zusammengefasst, jedoch dürfen für die
							einzelnen Komponenten jeweils nur die korrespondierenden Properties verwendet
							werden. Beispielsweise macht die Flugroute unter den Eigenschaften einer
							Unterkunft wenig Sinn und ist deshalb auch an dieser Stelle nicht erlaubt. Die
							Datenlieferung würde bei Verwendung nicht validieren und somit zumindest zum Teil
							ungültig sein.</para><para xml:id="en_1621" xml:lang="en">All properties are pooled together in a group, but only the corresponding properties can be used for individual components. For example, it makes little sense to have the flight route under the properties of the accommodation and is therefore not allowed in this position. The data delivery would not validate in this case and would be invalid to an extent.</para>
					</section>
					<section>
						<title><phrase xml:id="de_1622" xml:lang="de">Beschreibung der Elemente</phrase><phrase xml:id="en_1622" xml:lang="en">Description of the elements</phrase></title>
						<figure>
							<info>
								<title><phrase xml:id="de_1623" xml:lang="de">Überblick über die Struktur der Properties</phrase><phrase xml:id="en_1623" xml:lang="en">Overview of the structure of the properties</phrase></title>
							</info>
							<mediaobject>
								<imageobject>
									<imagedata fileref="figures/properties.png" format="PNG" contentwidth="70%"/>
								</imageobject>
								<textobject>
									<para xml:id="de_1624" xml:lang="de">Überblick über die Struktur der Properties</para><para xml:id="en_1624" xml:lang="en">Overview of the structure of the properties</para>
								</textobject>
							</mediaobject>
						</figure>

						<section>
							<title><phrase xml:id="de_1625" xml:lang="de">Accommodation</phrase><phrase xml:id="en_1625" xml:lang="en">Accommodation</phrase></title>
							<para xml:id="de_1626" xml:lang="de">Die unterschiedlichen Eigenschaften von Unterkünften spiegeln sich in der
								Vielzahl an Elementen, die für Accommodations verwendet werden dürfen, wieder.
								An dieser Stelle sollen nur exemplarisch eine Auswahl der gängigen und
								wichtigen Eigenschaften erwähnt werden, eine vollständige Auflistung findet
								sich im Anhang. </para><para xml:id="en_1626" xml:lang="en">The various properties of accommodation are reflected in the variety of elements which may be used for Accommodations. Here, only a selection of current and important properties are mentioned as an example, a complete listing can be found as an attachment.</para>
							<itemizedlist>
								<listitem>
									<para xml:id="de_1627" xml:lang="de">AccommodationCity: Stadt in der die Unterkunft liegt</para><para xml:id="en_1627" xml:lang="en">AccommodationCity: City in which the accommodation is located</para>
								</listitem>
								<listitem>
									<para xml:id="de_1628" xml:lang="de">AccommodationType: Art der Unterkunft wir Hotel, Club etc.</para><para xml:id="en_1628" xml:lang="en">AccommodationType: Type of accommodation, such as hotel, club, etc.</para>
								</listitem>
								<listitem>
									<para xml:id="de_1629" xml:lang="de">AccommodationName: Offizieller Name der Unterkunft</para><para xml:id="en_1629" xml:lang="en">AccommodationName: Official name of the accommodation</para>
								</listitem>
								<listitem>
									<para xml:id="de_1630" xml:lang="de">AccommodationOfficialCategory / AccommodationOperatorCategory:
										Offizielle, bzw. vom Veranstalter vergebene Kategorie (Sterne) der
										Unterkunft</para><para xml:id="en_1630" xml:lang="en">AccommodationOfficialCategory/AccommodationOperatorCategory: Official category of the accommodation, as given by the operator (stars)</para>
								</listitem>
								<listitem>
									<para xml:id="de_1631" xml:lang="de">AccommodationGeneralFacilities: Allgemeine Ausstattungsmerkmale wie
										Pool, Internetanschluss etc.</para><para xml:id="en_1631" xml:lang="en">AccommodationGeneralFacilities: General facility features, such as pool, Internet access, etc.</para>
								</listitem>
								<listitem>
									<para xml:id="de_1632" xml:lang="de">AccommodationAddress: </para><para xml:id="en_1632" xml:lang="en">AccommodationAddress:</para>
								</listitem>
							</itemizedlist>
							<figure xml:id="FigAccommodationAddress">
								<title><phrase xml:id="de_1633" xml:lang="de">Knoten AccommodationAddress</phrase><phrase xml:id="en_1633" xml:lang="en">AccommodationAddress node</phrase></title>
								<mediaobject>
									<imageobject>
										<imagedata fileref="figures/accommodation-address.png" format="PNG" contentwidth="40%"/>
									</imageobject>
									<textobject>
										<para xml:id="de_1634" xml:lang="de">Knoten AccommodationAddress</para><para xml:id="en_1634" xml:lang="en">AccommodationAddress node</para>
									</textobject>
								</mediaobject>
							</figure>
							<para xml:id="de_1635" xml:lang="de">Der Knoten AccommodationAddress enthält verschiedene Unterelemente, die
								genauere Informationen zu Lage und Kontaktmöglichkeit der entsprechenden
								Unterkunft enthalten. Dazu zählen beispielsweise Anschriftsdaten, Telefon/Fax
								und eine E-Mail Adresse.</para><para xml:id="en_1635" xml:lang="en">The AccommodationAddress node contains various subelements which contain more specific information on the location and contact possibilities of the relevant accommodation. These could include the address information, telephone number/fax and an email address for example.</para>
							<figure xml:id="FigGeoCodeGeoInfo">
								<title><phrase xml:id="de_1636" xml:lang="de">Knoten GeoInfo und GeoCode</phrase><phrase xml:id="en_1636" xml:lang="en">GeoInfo and GeoCode nodes</phrase></title>
								<mediaobject>
									<imageobject>
										<imagedata fileref="figures/geoinfo-geocode.png" format="PNG" contentwidth="40%"/>
									</imageobject>
									<textobject>
										<para xml:id="de_1637" xml:lang="de">Knoten Knoten GeoInfo und GeoCode </para><para xml:id="en_1637" xml:lang="en">GeoInfo and GeoCode nodes</para>
									</textobject>
								</mediaobject>
							</figure>
							<para xml:id="de_1638" xml:lang="de">Das Element GeoInfo seinerseits enthält der Unterkunft übergeordnete
								Regionsinformationen, wie das Land, die Region, das Zielgebiet und die
								geografischen Informationen. Unter dem Knoten GeoCode werden diese
								Informationen als Angabe des Längen- und Breitengrads hinterlegt.</para><para xml:id="en_1638" xml:lang="en">The GeoInfo element in turn contains the region information superordinate to the accommodation, such as country, region, destination region and the geographical information. This information is stored under the GeoCode node as a specification of the longitude and latitude.</para>
						</section>
						<section>
							<title><phrase xml:id="de_1639" xml:lang="de">Unit</phrase><phrase xml:id="en_1639" xml:lang="en">Unit</phrase></title>
							<para xml:id="de_1640" xml:lang="de">Spezifische Eigenschaften für Unterbringungen können zusätzlich übermittelt
								werden. Eine vollständige Aufstellung der Unit-spezifischen
								Properties-Elemente findet sich im Anhang. </para><para xml:id="en_1640" xml:lang="en">Specific properties for accommodation can also be provided. A full itemisation of the unit-specific Properties elements can be found in the attachment.</para>
							<itemizedlist>
								<listitem>
									<para xml:id="de_1641" xml:lang="de">UnitName: Angabe der Unterbringung als Freitext</para><para xml:id="en_1641" xml:lang="en">UnitName: Specification of the accommodation in free text</para>
								</listitem>
								<listitem>
									<para xml:id="de_1642" xml:lang="de">UnitType: Art der Unterkunft. Auswahl aus vorgegebener Liste kurzer Bezeichner
										wie Single, Double, Suite etc.</para><para xml:id="en_1642" xml:lang="en">UnitType: Type of accommodation. Selection from a predefined list of short identifiers such as Single, Double, Suite, etc.</para>
								</listitem>
								<listitem>
									<para xml:id="de_1643" xml:lang="de">UnitBedType: Art der Betten in der Unit / Unterkunft.
										Ab Version 1.9</para><para xml:id="en_1643" xml:lang="en">UnitBedType: Type of beds in the unit/accommodation. From
										Version 1.9</para>
								</listitem>
							</itemizedlist>
						</section>
						<section>
							<title><phrase xml:id="de_1644" xml:lang="de">Board</phrase><phrase xml:id="en_1644" xml:lang="en">Board</phrase></title>
							<para xml:id="de_1645" xml:lang="de">Für eine genauere Beschreibung der Eigenschaften der Verpflegungstypen sind
								diese unter anderem folgende Elemente zulässig:</para><para xml:id="en_1645" xml:lang="en">For a more precise description of the properties of the board types, the following elements are valid, among others:</para>
							<itemizedlist>
								<listitem>
									<para xml:id="de_1646" xml:lang="de">BoardName: Angabe der Verpflegung als Freitext, wie Frühstück,
										Halbpension etc</para><para xml:id="en_1646" xml:lang="en">BoardName: Specification of the board as free text, such as breakfast, half board, etc.</para>
								</listitem>
								<listitem>
									<para xml:id="de_1647" xml:lang="de">BoardType: Art der Verpflegung aus vorgegebener Auswahl wie
										Breakfast, Halfboard etc.</para><para xml:id="en_1647" xml:lang="en">BoardType: Type of board from a predefined selection such as breakfast, half-board, etc.</para>
								</listitem>
							</itemizedlist>
							<para xml:id="de_1648" xml:lang="de">Eine vollständige Aufstellung der Elemente ist im Anhang verfügbar.</para><para xml:id="en_1648" xml:lang="en">A full itemisation of the elements is available in the attachment.</para>
						</section>
						<section>
							<title><phrase xml:id="de_1649" xml:lang="de">Addon</phrase><phrase xml:id="en_1649" xml:lang="en">Addon</phrase></title>
							<para xml:id="de_1650" xml:lang="de">Eine Auswahl an gültigen Elemente für Zusatzleistungen ist</para><para xml:id="en_1650" xml:lang="en">A selection of valid elements for additional services is</para>
							<itemizedlist>
								<listitem>
									<para xml:id="de_1651" xml:lang="de">AddonName: Freitextangabe der Zusatzleistung</para><para xml:id="en_1651" xml:lang="en">AddonName: Free text entry of the additional service</para>
								</listitem>
								<listitem>
									<para xml:id="de_1652" xml:lang="de">AddonServiceType: Genaue Kategorisierung der Zusatzleistung, wie zum
										Beispiel "Reiserücktrittsversicherung". Die einzelnen vorgegebenen
										Auswahlmöglichkeiten sind in den Elementen vorgegeben, es handelt sich
										also nicht um einen Freitext.</para><para xml:id="en_1652" xml:lang="en">AddonServiceType: Exact categorisation of the additional service, for example "travel cancellation insurance". The selectable options are specified in the elements, so there is no free text involved.</para>
								</listitem>
								<listitem>
									<para xml:id="de_1653" xml:lang="de">AddonServiceName</para><para xml:id="en_1653" xml:lang="en">AddonServiceName</para>
								</listitem>
							</itemizedlist>
							<para xml:id="de_1654" xml:lang="de">Die vollständige Liste findet sich im Anhang.</para><para xml:id="en_1654" xml:lang="en">The complete list can be found in the attachment.</para>
						</section>
						<section>
							<title><phrase xml:id="de_1655" xml:lang="de">Flight</phrase><phrase xml:id="en_1655" xml:lang="en">Flight</phrase></title>
							<para xml:id="de_1656" xml:lang="de">Flugkomponenten werden unter anderem über folgende Properties-Elemente
								genauer spezifiziert werden:</para><para xml:id="en_1656" xml:lang="en">Flight components are more precisely specified by the following Properties elements, among others.</para>
							<itemizedlist>
								<listitem>
									<para xml:id="de_1657" xml:lang="de">FlightBookingClassBaggageAllowances</para><para xml:id="en_1657" xml:lang="en">FlightBookingClassBaggageAllowances</para>
								</listitem>
								<listitem>
									<para xml:id="de_1658" xml:lang="de">FlightBookingClassType</para><para xml:id="en_1658" xml:lang="en">FlightBookingClassType</para>
								</listitem>
								<listitem>
									<para xml:id="de_1659" xml:lang="de">FlightRoute</para><para xml:id="en_1659" xml:lang="en">FlightRoute</para>
								</listitem>
								<listitem>
									<para xml:id="de_1660" xml:lang="de">GeneralIncludedService</para><para xml:id="en_1660" xml:lang="en">GeneralIncludedService</para>
								</listitem>
							</itemizedlist>
							<para xml:id="de_1661" xml:lang="de">Eine vollständige tabelarrische Aufstellung der Elemente findet sich im
								Anhang unter Tabellen/Properties. </para><para xml:id="en_1661" xml:lang="en">A full, tabulated itemisation of the elements can be found in the attachment under Tables/Properties.</para>
						</section>
						<section>
							<title><phrase xml:id="de_1662" xml:lang="de">Figures (V1.9)</phrase><phrase xml:id="en_1662"
									xml:lang="en">Figures (V1.9)</phrase></title>
							<para xml:id="de_1663" xml:lang="de">Mit der Version 1.9 wurde das Figures-Element
								eingeführt. Innerhalb der Figures können Entfernungen (Strand,
								Stadtzentrum, ...) oder Zimmergrößen, sowie z.B. die Anzahl der
								Schlafzimmer definiert werden.</para><para xml:id="en_1663" xml:lang="en">With Version 1.9, the Figures element is introduced. Within the
								Figures, distances (beach, city centre, etc.) or room sizes, as well
								as the number of bedrooms, for example, can be defined.</para>
							<para xml:id="de_1664" xml:lang="de">Eine vollständige tabelarrische Aufstellung der Elemente findet sich im
								Anhang unter Tabellen/Properties. </para><para xml:id="en_1664" xml:lang="en">A full, tabulated itemisation of the elements can be found in the attachment under Tables/Properties.</para>
						</section>
					</section>
				</section>
			</section>
			<section xml:id="OtdsStrategyBooking">
				<title><phrase xml:id="de_1665" xml:lang="de">Buchungsparameter der Komponenten (BookingGroup)</phrase><phrase xml:id="en_1665" xml:lang="en">Booking parameters of the components (BookingGroup)</phrase></title>
				<para xml:id="de_1666" xml:lang="de">In den Booking-Elementen in den verschiedenen Zweigen werden alle für eine Buchung
					notwendigen Parameter hinterlegt. Die Spezifikation der Buchungsparameter
					erfolgt analaog zum Füllen einer Art Buchungsmaske. Trotz dieser Analogie sind
					die Buchungsparameter keinesfalls auf spezifische Buchungssysteme wie TOMA oder
					Merlin begrenzt. Heutige Buchungsmasken teilen sich in 3 verschiedene Bereiche
					auf, die durch die verschiedenen Werte des Attributes BookingGroup/@Area
					repräsentiert werden.  </para><para xml:id="en_1666" xml:lang="en">In the various branches of the Booking elements, all of the parameters necessary for booking can be found. The specification of the booking parameters occurs in a manner analogous to the filling in of a kind of booking mask. Despite this analogy, the booking parameters are in no way restricted to specific booking systems such as TOMA or Merlin. Modern booking masks can be divided into 3 different areas, which are represented by the various values of the attribute BookingGroup/@Area.</para>
				<para xml:id="de_1667" xml:lang="de">Mögliche Werte für Area sind:</para><para xml:id="en_1667" xml:lang="en">Possible values for Area are:</para>
				<itemizedlist>
					<listitem>
						<para xml:id="de_1668" xml:lang="de">GlobalArea (Für globale Werte wie Brand und TravelType)</para><para xml:id="en_1668" xml:lang="en">GlobalArea (For global values such as Brand and TravelType)</para>
					</listitem>
					<listitem>
						<para xml:id="de_1669" xml:lang="de">ServiceArea (Für alle Werte in Leistungszeilen)</para><para xml:id="en_1669" xml:lang="en">ServiceArea (For all values in service lines)</para>
					</listitem>
					<listitem>
						<para xml:id="de_1670" xml:lang="de">PersonArea (Für Werte die im Bereich der Reiseteilnehmer platziert werden)</para><para xml:id="en_1670" xml:lang="en">PersonArea (For values that are placed in the area of the travel participants)</para>
					</listitem>
				</itemizedlist>
			<section xml:id="OtdsStrategyBookingValue">
				<title><phrase xml:id="de_1671" xml:lang="de">Konstante Buchungsparameter (BookingParameter/Value)</phrase><phrase xml:id="en_1671" xml:lang="en">Constant booking parameters (BookingParameter/Value)</phrase></title>
				<para xml:id="de_1672" xml:lang="de">In einer Buchungsmakse gibt es bezogen auf das Angebot konstante Parameter, wie Veranstaltercode, Hotelcode und Zimmercode und flexible Parameter wie der Reisetermin, die Dauer oder die Alter der Mitreisenden Personen.</para><para xml:id="en_1672" xml:lang="en">In a booking mask there are parameters which are constant with regard to the offer, such as operator code, hotel code and room code, and parameters which are flexible, such as travel dates, the duration or the age of the travelling persons.</para>
				
				<para xml:id="de_1673" xml:lang="de">In OTDS werden die einzelenen Buchungsparameter als BookingParameter definiert und struktiriert an die Buchungssysteme übergeben.
					Jeder einzelne Parameter wird genau einer Leistungszeile und einem Feld in
					dieser Leistungszeile zugewiesen. Die Definition der Felder erfolgt über das
					Attribut "Field" und kann folgende Werte enthalten:</para><para xml:id="en_1673" xml:lang="en">In OTDS the individual booking parameters are defined as BookingParameters and transferred to the booking system in a structured form. Each individual parameter is allocated precisely one service line and a field in that service line. The definition of the fields occurs via the "Field" attribute and may contain the following values:</para>
				<itemizedlist>
					<listitem>
						<para xml:id="de_1674" xml:lang="de">Title (Personenanrede)</para><para xml:id="en_1674" xml:lang="en">Title (form of address)</para>
					</listitem>
					<listitem>
						<para xml:id="de_1675" xml:lang="de">Age (Alter einer Person)</para><para xml:id="en_1675" xml:lang="en">Age (age of a person)</para>
					</listitem>
					<listitem>
						<para xml:id="de_1676" xml:lang="de">BrandCode (Marke)</para><para xml:id="en_1676" xml:lang="en">BrandCode (brand)</para>
					</listitem>
					<listitem>
						<para xml:id="de_1677" xml:lang="de">TravelType (Reiseart)</para><para xml:id="en_1677" xml:lang="en">TravelType (type of travel)</para>
					</listitem>
					<listitem>
						<para xml:id="de_1678" xml:lang="de">RequestCode (Anforderungscode der Leistung)</para><para xml:id="en_1678" xml:lang="en">RequestCode (request code of the service)</para>
					</listitem>
					<listitem>
						<para xml:id="de_1679" xml:lang="de">ServiceCode (Buchungscode der Leistung)</para><para xml:id="en_1679" xml:lang="en">ServiceCode (booking code of the service)</para>
					</listitem>
					<listitem>
						<para xml:id="de_1680" xml:lang="de">ServiceFeatureCode (Zimmercode, Flugklasse, ...)</para><para xml:id="en_1680" xml:lang="en">ServiceFeatureCode (room code, flight class...)</para>
					</listitem>
					<listitem>
						<para xml:id="de_1681" xml:lang="de">BoardCode (Verpflegungscode)</para><para xml:id="en_1681" xml:lang="en">BoardCode (board code)</para>
					</listitem>
					<listitem>
						<para xml:id="de_1682" xml:lang="de">Assignment (Zuordnung)</para><para xml:id="en_1682" xml:lang="en">Assignment (assignment)</para>
					</listitem>
					<listitem>
						<para xml:id="de_1683" xml:lang="de">DateStart (Startdatum)</para><para xml:id="en_1683" xml:lang="en">DateStart (start date)</para>
					</listitem>
					<listitem>
						<para xml:id="de_1684" xml:lang="de">DateEnd (Enddatum)</para><para xml:id="en_1684" xml:lang="en">DateEnd (end date)</para>
					</listitem>
				</itemizedlist>
				
					<figure>
						<title><phrase xml:id="de_1686" xml:lang="de">Übersicht der "Field"-Values anhand der Analogie zur Buchungsmaske</phrase><phrase xml:id="en_1686" xml:lang="en">Overview of the "Field" values using the analogy of the booking mask</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/bookingmaskfieldexplanation.png" format="PNG" contentwidth="90%"/>
							</imageobject>
							<textobject>
								<para xml:id="de_1687" xml:lang="de">Übersicht aller Field-Values</para><para xml:id="en_1687" xml:lang="en">Overview of all Field values</para>
							</textobject>
							<caption>
								<para xml:id="de_1688" xml:lang="de"> </para><para xml:id="en_1688" xml:lang="en"/>
							</caption>
						</mediaobject>
					</figure>
				
				<para xml:id="de_1689" xml:lang="de">Jedes BuchungsParameter wird in OTDS im Element "BookingGroup/BookinParameter/Value"
					hinterlegt. Jeder BookingGroup und damit auch allen darin enthaltenen
					BookingParametern wird genau eine Leistungszeile zugewiesen. Die Zuweisung der
					Buchungszeile erfolgt in erster Linie über das Attribut "Source", welches eine
					Komponente einer bestimmten Buchungszeile zuordnet. Das Verwendung des
					Attributes "Source" erfolgt hier analog zur Verwendung von "Source" in den
					Conditions und Filtern. Entscheidend ist, dass alle BookingParameter einer
					Buchungszeile in Ihrer BookingGroup im Attribut "Source" den gleichen Value
					enthalten. (Details welche Angaben für Source erlaubt sind finden Sie im Kapitel
						<link linkend="OtdsStrategyConditionAttributeSourceTableOfValues">Zuordnung
						einer Source ...</link> ). 
				</para><para xml:id="en_1689" xml:lang="en">Every BookingParameter in OTDS is stored in the "BookingGroup/BookingParameter/Value" element. Every BookingGroup and therefore all BookingParameters contained within it is specifically allocated a service line. The allocation of a booking line mainly occurs via the "Source" attribute, which allocates a component to a specific booking line. The use of the "Source" attribute here occurs in the same way as the use of "Source" in the Conditions and Filters. It is decisive that all BookingParameters in a booking line have the same value in their BookingGroup in the "Source" attribute. (Details of which entries are allowed for Source can be found in the chapter <link linkend="OtdsStrategyConditionAttributeSourceTableOfValues">Allocation of a Source ...</link> ).</para>
				<para xml:id="de_1690" xml:lang="de">Im folgenden ein Beispiel für die oben abgebildete Buchungsmaske in OTDS definiert
					wird:</para><para xml:id="en_1690" xml:lang="en">The following is an example of how the above pictured booking page is defined in OTDS:</para>
				<programlisting><![CDATA[
<Otds ...>
	...
	<Brands>
		<BookingGroup Area="GlobalArea">
			...
			<BookingParameter Field="BrandCode">
				<Value>FTI</Value>
			</BookingParameter>
		</BookingGroup>
	</Brands>
	...
	<Accommodation>
		...
		<SellingAccom>
			...
			<Booking>
				<BookingGroup Area="ServiceArea">
					<BookingParameter Field="ServiceCode">
						<Value>PMI007</Value>
					</BookingParameter>
					<BookingParameter Field="RequestCode">
						<Value>H</Value>
					</BookingParameter>
				</BookingGroup>
			</Booking>
			<Board Key="F">
				<Booking>
					<BookingGroup Area="ServiceArea" Source="SellingAccom">
						<BookingParameter Name="BoardCode" Field="ServiceFeatureCode" Index="1">
							<!--In diesem Fall wird der Boardcode an den Zimmercode angefügt, wie es in aktuellen Buchungssystemen üblich ist.
								Die Angabe des Namens ist Vorraussetzung dafür, dass ein "Field" nicht überschrieben wird, sondern die Inhalte zusamengesetzt werden.
								 Der Index definiert dabei die Reihenfolge der Zusammensetzung. Der Zimmercode hat keinen Index (also Default=o). Somit wird der BoardCode an den Zimmercode angefügt.
								Siehe auch dazu: weiter unten die Definition des Zimmercodes unter SellingUnit.
								-->
							<Value>F</Value>
						</BookingParameter>
					</BookingGroup>
				</Booking>
				...
			</Board>
			...
			<Unit Key="A12">
				...
				<SellingUnit Key="A12_F">
						<Booking>
							<BookingGroup Area="ServiceArea" Source="SellingAccom">
								<BookingParameter Field="ServiceFeatureCode" PadLength="3">
									<!-- Das Attribute "PadLength" ist ein Hinweis daruf, dass in diesem Feld Parameter zusammengesetzt werden. Der Zimmercode wird dabei auf eine Zeichenlänge von 3 Stellen gebracht, in dem Spaces am Ende eingefügt werden.
											Die Art des Paddings kann spezifisch definiert werden. Bitte dazu die Beschreibung der anderen Attribute in der technischen Doku anschauen.
									 -->
									<Value>A12</Value>
								</BookingParameter>
							</BookingGroup>
						</Booking>
						...
				</SellingUnit>
				...
			</Unit>
			...
		<SellingAccom>
		...
	</Accommodation>
	...
	<OnewayFlights>
		<!-- Der Returnflight wird hier aus 2 OnewayFlights zusammengesetzt, was in dem Beispiel nicht weiter ausgeführt wird -->
		<OnewayFlight Key="DUSPMI">
			<Booking>
				<BookingGroup Area="ServiceArea" Source="OnewayFlight">
					<BookingParameter Field="RequestCode">
						<Value>F</Value>
					</BookingParameter>
					<BookingParameter Field="ServiceCode">
						<Value>DUS PMI</Value>
					</BookingParameter>
				</BookingGroup>
			</Booking>
			...
		
			<BookingClass Key="Y">
				<Booking>
					<BookingGroup Area="ServiceArea" Source="OnewayFlight">
						<BookingParameter Field="ServiceFeatureCode">
							<Value>Y</Value>
						</BookingParameter>
					</BookingGroup>
				</Booking>
				...
			</BookingClass>
			...
		</OnewayFlight>
		...
		<OnewayFlight Key="PMIDUS">
			<Booking>
				<BookingGroup Area="ServiceArea" Source="OnewayFlight">
					<BookingParameter Field="RequestCode">
						<Value>F</Value>
					</BookingParameter>
					<BookingParameter Field="ServiceCode">
						<Value>PMI DUS</Value>
					</BookingParameter>
				</BookingGroup>
			</Booking>
			...
			<BookingClass Key="Y">
				<Booking>
					<BookingGroup Area="ServiceArea" Source="OnewayFlight">
						<BookingParameter Field="ServiceFeatureCode">
							<Value>Y</Value>
						</BookingParameter>
					</BookingGroup>
				</Booking>
				...
			</BookingClass>
			...
		</OnewayFlight>
		...
	</OnewayFlights>
	...
</<Otds>]]></programlisting>
				<para xml:id="de_1691" xml:lang="de">Sollte eine Komponente mehrere Buchungszeilen zum Buchen benötigen, so kann
					man die einzelnen Buchungszeilen innerhalb einer Komponente über das Attribut
					"BookingGroup/@Class" adressieren. In diesem Falle landen alle Buchungsparameter
					mit gleicher "Source" und gleicher "Class" in der selben Buchungszeile. Ist das
					Attribut "Class" nicht besetzt, so erhält es per Default den Wert "Default". </para><para xml:id="en_1691" xml:lang="en">Should a component require several lines for the booking, you can address the individual booking lines within a component through the attribute "BookingGroup/@Class". In this case all booking parameters with the same "Source" and the same "Class" appear in the same booking line. If the attribute "Class" is not occupied it automatically receives the value "Default".</para>
				<para xml:id="de_1692" xml:lang="de">Hier ein Beispiel für einen gelieferten Returnflug der 2 Buchungszeilen definiert.</para><para xml:id="en_1692" xml:lang="en">Here is an example of a delivered return flight which has been defined in 2 booking lines.</para>
				<para xml:id="de_1693" xml:lang="de"><programlisting><![CDATA[
<Otds ...>
	...
	<ReturnFlights>
		<!-- Hier ein Beispiel für einen ReturnFlight, der 2 Buchungszeilen für diese Komponente benötigt. Das Beispiel beschränkt sich rein auf die Buchungsparameter.-->
		<ReturnFlight Key="DUSPMIDUS">
			<Booking>
				<BookingGroup Area="ServiceArea" Source="ReturnFlight" Class="Outbound">
					<BookingParameter Field="RequestCode">
						<Value>F</Value>
					</BookingParameter>
					<BookingParameter Field="ServiceCode">
						<Value>DUS PMI</Value>
					</BookingParameter>
				</BookingGroup>
				<BookingGroup Area="ServiceArea" Source="ReturnFlight" Class="Inbound">
					<BookingParameter Field="RequestCode">
						<Value>F</Value>
					</BookingParameter>
					<BookingParameter Field="ServiceCode">
						<Value>PMI DUS</Value>
					</BookingParameter>
				</BookingGroup>
			</Booking>
			<Outbound>
				<DepartureAirport>DUS</DepartureAirport>
				<ArrivalAirport>PMI</ArrivalAirport>
			</Outbound>
			<Inbound>
				<DepartureAirport>PMI</DepartureAirport>
				<ArrivalAirport>DUS</ArrivalAirport>
			</Inbound>
			<BookingClass Key="YX">
				<Booking>
					<BookingGroup Area="ServiceArea" Source="ReturnFlight" Class="Outbound">
						<BookingParameter Field="ServiceFeatureCode">
							<Value>Y</Value>
						</BookingParameter>
					</BookingGroup>
					<BookingGroup Area="ServiceArea" Source="ReturnFlight" Class="Inbound">
						<BookingParameter Field="ServiceFeatureCode">
							<Value>X</Value>
						</BookingParameter>
					</BookingGroup>
				</Booking>
			</BookingClass>
		</ReturnFlight>
	</ReturnFlights>
	...
</Otds>	
	]]></programlisting>
				
			</para><para xml:id="en_1693" xml:lang="en">
						<programlisting>
							<![CDATA[
<Otds ...>
	...
	<ReturnFlights>
		<!-- Hier ein Beispiel für einen ReturnFlight, der 2 Buchungszeilen für diese Komponente benötigt. Das Beispiel beschränkt sich rein auf die Buchungsparameter.-->
		<ReturnFlight Key="DUSPMIDUS">
			<Booking>
				<BookingGroup Area="ServiceArea" Source="ReturnFlight" Class="Outbound">
					<BookingParameter Field="RequestCode">
						<Value>F</Value>
					</BookingParameter>
					<BookingParameter Field="ServiceCode">
						<Value>DUS PMI</Value>
					</BookingParameter>
				</BookingGroup>
				<BookingGroup Area="ServiceArea" Source="ReturnFlight" Class="Inbound">
					<BookingParameter Field="RequestCode">
						<Value>F</Value>
					</BookingParameter>
					<BookingParameter Field="ServiceCode">
						<Value>PMI DUS</Value>
					</BookingParameter>
				</BookingGroup>
			</Booking>
			<Outbound>
				<DepartureAirport>DUS</DepartureAirport>
				<ArrivalAirport>PMI</ArrivalAirport>
			</Outbound>
			<Inbound>
				<DepartureAirport>PMI</DepartureAirport>
				<ArrivalAirport>DUS</ArrivalAirport>
			</Inbound>
			<BookingClass Key="YX">
				<Booking>
					<BookingGroup Area="ServiceArea" Source="ReturnFlight" Class="Outbound">
						<BookingParameter Field="ServiceFeatureCode">
							<Value>Y</Value>
						</BookingParameter>
					</BookingGroup>
					<BookingGroup Area="ServiceArea" Source="ReturnFlight" Class="Inbound">
						<BookingParameter Field="ServiceFeatureCode">
							<Value>X</Value>
						</BookingParameter>
					</BookingGroup>
				</Booking>
			</BookingClass>
		</ReturnFlight>
	</ReturnFlights>
	...
</Otds>	
	]]></programlisting>

					</para>
				<para xml:id="de_1694" xml:lang="de">Wie die Termine und Altersangaben in die Buchungsmaske übermittelt werden,
					sehen Sie im nächsten Kapitel.</para><para xml:id="en_1694" xml:lang="en">How the dates and age details are sent in the booking mask can be seen in the next chapter.</para>
			</section>
			<section xml:id="OtdsStrategyBookingDateDurationAge">
				<title><phrase xml:id="de_1695" xml:lang="de">Flexible Buchungsparameter der Komponenten (BookingGroup)</phrase><phrase xml:id="en_1695" xml:lang="en">Flexible component booking parameters (BookingGroup)</phrase></title>
				<para xml:id="de_1696" xml:lang="de">Eine vollständige tabellarische Aufstellung der Elemente findet sich im
					Anhang unter Tabellen/Properties. </para><para xml:id="en_1696" xml:lang="en">A complete table with a breakdown of the elements can be found in the appendage under Tables/Properties.</para>
				
					<itemizedlist>
						<listitem>
							<para xml:id="de_1698" xml:lang="de">Entweder eine Konstante. Diese wird mittels "Value" angegeben</para><para xml:id="en_1698" xml:lang="en">Either a constant. This is entered using "Value"</para>
						</listitem>
						<listitem>
							<para xml:id="de_1699" xml:lang="de">Oder eine Referenz auf einen Buchungsparameter. Erlaubt sind: 
							</para><para xml:id="en_1699" xml:lang="en">Or a reference to a booking parameter. Permitted are:</para>
								
							<itemizedlist>
								<listitem>
									<para xml:id="de_1700" xml:lang="de">Date mit DayType = CheckIn oder CheckOut</para><para xml:id="en_1700" xml:lang="en">Date with DayType = CheckIn or CheckOut</para>
								</listitem>
								<listitem>
									<para xml:id="de_1701" xml:lang="de">Duration</para><para xml:id="en_1701" xml:lang="en">Duration</para>
								</listitem>
								<listitem>
									<para xml:id="de_1702" xml:lang="de">PersonAge mit einem zusätzlichen AgeType = BookingAge,
										TravelAge, DateOfBirth</para><para xml:id="en_1702" xml:lang="en">PersonAge with an additional AgeType = BookingAge, TravelAge, DateOfBirth</para>
								</listitem>
							</itemizedlist>
						</listitem>
					</itemizedlist>
				
			</section>
			<section xml:id="OtdsStrategyBookingNamespaces">
					<title><phrase xml:id="de_1703" xml:lang="de">Unterschiedliche Buchungsparameter in unterschiedlichen Buchungssystemen (BookingNamespaces)</phrase><phrase xml:id="en_1703" xml:lang="en">Different booking parameters in different booking systems (BookingNamespaces)</phrase></title>
				<para xml:id="de_1704" xml:lang="de">Durch die Verwendung der für jedes Reservierungssystem eigenen Namespaces, können später
					für jedes Reservierungssystem spezifische Parameter hinterlegt werden. Die genaue
					Beschreibung der Parameter finden Sie in den <link xlink:href="./technisch/otds_technisch.html#Booking">Technischen Dokumentation für
						OTDS </link> jeweils bei dem entsprechenden Element. Eine Übersicht über alle
					vorkommenden Booking-Elemente finden sie in der folgenden Abbildung:</para><para xml:id="en_1704" xml:lang="en">Through the use of individual namespaces for each reservation system, specific parameters can later be assigned for each reservation system. The exact description of the parameters can be found at <link xlink:href="./technisch/otds_technisch.html#Booking">Technical documentation for OTDS</link> under the corresponding element. An overview of all existing booking elements can be seen in the following diagram:</para>
				<para xml:id="de_1705" xml:lang="de"> </para><para xml:id="en_1705" xml:lang="en"/>
				
				<figure>
					<title><phrase xml:id="de_1707" xml:lang="de">Übersicht über Vorkommen alle Booking-Elemente (außer PriceItem)</phrase><phrase xml:id="en_1707" xml:lang="en">Overview of all existing booking elements (except PriceItem)</phrase></title>
					<mediaobject>
						<imageobject>
							<imagedata fileref="figures/booking-overview.png" format="PNG" contentwidth="90%"/>
						</imageobject>
						<textobject>
							<para xml:id="de_1708" xml:lang="de">Übersicht über Vorkommen alle Booking-Elemente </para><para xml:id="en_1708" xml:lang="en">Overview of all existing booking elements</para>
						</textobject>
						<caption>
							<para xml:id="de_1709" xml:lang="de"> </para><para xml:id="en_1709" xml:lang="en"/>
						</caption>
					</mediaobject>
				</figure>
				
				<para xml:id="de_1710" xml:lang="de">Booking-Elemente können auf unterschiedlichen Ebenen in OTDS definiert werden
					können</para><para xml:id="en_1710" xml:lang="en">Booking elements can be defined on different levels in OTDS</para>
				<para xml:id="de_1711" xml:lang="de">Die Elemente werden nach ihrem Priority Attribut sortiert.</para><para xml:id="en_1711" xml:lang="en">The elements are sorted according to their priority attribute.</para>
				
					<figure>
						<title><phrase xml:id="de_1713" xml:lang="de">Booking-Details</phrase><phrase xml:id="en_1713" xml:lang="en">Booking details</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/booking-details.png" format="PNG" contentwidth="80%"/>
							</imageobject>
							<textobject>
								<para xml:id="de_1714" xml:lang="de">Booking-Details</para><para xml:id="en_1714" xml:lang="en">Booking details</para>
							</textobject>
							<caption>
								<para xml:id="de_1715" xml:lang="de"> </para><para xml:id="en_1715" xml:lang="en"/>
							</caption>
						</mediaobject>
					</figure>
				
				<para xml:id="de_1716" xml:lang="de"> Ein Beispiel für die Verwendung des Elements Booking auf unterschiedlichen
					Ebenen:</para><para xml:id="en_1716" xml:lang="en">An example for the use of the booking element on different levels:</para>
				
					<figure>
						<title><phrase xml:id="de_1718" xml:lang="de">Booking - Beispiel</phrase><phrase xml:id="en_1718" xml:lang="en">Booking - example</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/booking_example_xml.png" format="PNG" width="70%"/>
							</imageobject>
							<textobject>
								<para xml:id="de_1719" xml:lang="de">Booking - Beispiel </para><para xml:id="en_1719" xml:lang="en">Booking - example</para>
							</textobject>
							<caption>
								<para xml:id="de_1720" xml:lang="de"> </para><para xml:id="en_1720" xml:lang="en"/>
							</caption>
						</mediaobject>
					</figure>
				
				<para xml:id="de_1721" xml:lang="de">
					<link linkend="AppendixTablesBooking">Vorkommen von Booking Elementen auf
						unterschiedlichen Ebenen</link>
				</para><para xml:id="en_1721" xml:lang="en">
						<link linkend="AppendixTablesBooking">Instances of booking elements on different levels</link>
					</para>
				<para xml:id="de_1722" xml:lang="de">
					<link linkend="OtdsProcessBooking">Verarbeiten der BookingParameter</link>
				</para><para xml:id="en_1722" xml:lang="en">
						<link linkend="OtdsProcessBooking">Processing of the BookingParameter</link>
					</para>
			</section>
			</section>
			<section xml:id="OtdsStrategyNamespace">
				<title><phrase xml:id="de_1723" xml:lang="de">Erweiterungen durch Namespaces</phrase><phrase xml:id="en_1723" xml:lang="en">Extensions with namespaces</phrase></title>
				<section xml:id="OtdsStrategyNamespaceBooking">
					<title><phrase xml:id="de_1724" xml:lang="de">Booking Namespace</phrase><phrase xml:id="en_1724" xml:lang="en">Booking namespace</phrase></title>
					<para xml:id="de_1725" xml:lang="de">In jedem Booking-Zweig ist für die verschiedenen Reservierungssysteme ein eigener
						Namespace vorgesehen, durch den die Produkte zu 100% auf das Reservierungssystem
						zugeschnitten werden können. Die Freigabe dieser Namespaces erfolgt zu einem späteren
						Zeitpunkt und muss mit dem OTDS Gremium abgestimmt werden.</para><para xml:id="en_1725" xml:lang="en">In each booking branch an individual namespace is designated for the different reservation systems, with which the product can be 100% tailored to the reservation system. The approval of the namespaces follows at a later date and must be approved by the OTDS committee.</para>
					<para xml:id="de_1726" xml:lang="de"> </para><para xml:id="en_1726" xml:lang="en"/>
				</section>
				<section xml:id="OtdsStrategyNamespaceProperties">
					<title><phrase xml:id="de_1727" xml:lang="de">Properties Namespace</phrase><phrase xml:id="en_1727" xml:lang="en">Properties namespace</phrase></title>
					<para xml:id="de_1728" xml:lang="de">In jedem Properties-Zweig ist die Möglichkeit vorgesehen eigene Namespaces zu
						integrieren. Die Namespaces sind für eigene Attributierungssysteme vorgesehen, wie zum
						Beispiel von Firmen wie Giata oder Globaltypes oder auch veranstaltereigene
						Attributierungssysteme.</para><para xml:id="en_1728" xml:lang="en">In each properties branch the possibility to integrate your own namespaces is provided. The namespaces are provided for individual attribution systems, for example for companies such as GIATA or Globaltypes, or even operator's own attribution systems.</para>
					<para xml:id="de_1729" xml:lang="de"> </para><para xml:id="en_1729" xml:lang="en"/>
				</section>
			</section>
		</section>
	</section>
	<section xml:id="OtdsProductsComponents">
		<title><phrase xml:id="det_1730" xml:lang="de">Reisekomponenten und Produkte in der Praxis</phrase></title>
		<section xml:id="OtdsProductsComponentsOverview">
			<title><phrase xml:id="det_1731" xml:lang="de">Überblick</phrase></title>
			<para xml:id="det_1732" xml:lang="de">Wie in den Grundlagen schon erwähnt, unterscheidet OTDS nach Produkten und darin verknüpften
				Reisekomponenten. Ein Produkt ist ein Verkaufsangebot für einzelne oder kombinierte
				Reisekomponenten. </para>
			<para xml:id="det_1733" xml:lang="de">
				<emphasis role="bold">Folgende Reisekomponenten sind zu unterscheiden:</emphasis></para>
			<itemizedlist>
				<listitem>
					<para xml:id="det_1734" xml:lang="de">Unterbringungen (Accommodations)</para>
				</listitem>
				<listitem>
					<para xml:id="det_1735" xml:lang="de">Flüge (Flights)</para>
				</listitem>
				<listitem>
					<para xml:id="det_1736" xml:lang="de">Zusatzleistungen (AddonServices)</para>
				</listitem>
			</itemizedlist>
			
			<para xml:id="det_1737" xml:lang="de">Diese Reisekomponenten können mit dem in OTDS enthaltenen Produktregeln (Product) zu
					<emphasis role="bold">verkaufsfertigen Produkten (<link linkend="OtdsProductsComponentsProducts">Products</link>)</emphasis> zusammengestellt
				werden. </para>
			
				<informaltable>
					<tgroup cols="2">
						<thead>
							<row valign="middle">
								<entry align="left">
									<para xml:id="det_1738" xml:lang="de">Abbildbare Produkte</para>
								</entry>
								<entry align="left">Bestandteile</entry>
							</row>
						</thead>
						<tbody>
							<row valign="middle">
								<entry>
									<para xml:id="det_1739" xml:lang="de">Nur-Unterkünfte</para>
								</entry>
								<entry>Hotelkomponente</entry>
							</row>
							<row valign="top">
								<entry>
									<para xml:id="det_1740" xml:lang="de">Hin- und Rückflüge (Returnflight)</para>
								</entry>
								<entry>
									<para xml:id="det_1741" xml:lang="de">Flugkomponente oder Kombination von Flugkomponenten</para>
								</entry>
							</row>
							<row valign="top">
								<entry>
									<para xml:id="det_1742" xml:lang="de">Einzelflüge</para>
								</entry>
								<entry>
									<para xml:id="det_1743" xml:lang="de"> </para>
								</entry>
							</row>
							<row valign="top">
								<entry>
									<para xml:id="det_1744" xml:lang="de">Pauschalangebote Flug + Unterkunft / Hotel </para>
								</entry>
								<entry>
									<para xml:id="det_1745" xml:lang="de"> </para>
								</entry>
							</row>
							<row valign="top">
								<entry>
									<para xml:id="det_1746" xml:lang="de">Zusatzleistungen für Unterbringungen</para>
								</entry>
								<entry>
									<para xml:id="det_1747" xml:lang="de"> </para>
								</entry>
							</row>
							<row valign="top">
								<entry>
									<para xml:id="det_1748" xml:lang="de">Zusatzleistungen für Flüge</para>
								</entry>
								<entry>
									<para xml:id="det_1749" xml:lang="de"> </para>
								</entry>
							</row>
						</tbody>
					</tgroup>
				</informaltable>
			
			<para xml:id="det_1750" xml:lang="de"/>
			<para xml:id="det_1751" xml:lang="de"/>
			<para xml:id="det_1752" xml:lang="de"/>
			<para xml:id="det_1753" xml:lang="de">In der Datenlieferung werden also die verschiedenen <emphasis role="bold">Reisekomponenten</emphasis> definiert, um sie alleine oder in Kombination mit anderen
				Komponenten zu Produkten zusammenzufassen. </para>
			<para xml:id="det_1754" xml:lang="de"/>
			<para xml:id="det_1755" xml:lang="de">So ist es möglich, <emphasis role="italic">Nur-Hotel</emphasis> (AccommodationOnly) oder
					<emphasis role="italic">Pauschalangebote mit Flug und Hotel</emphasis>-Daten
				(FlightAccommodation) in einer Lieferung zusammenzufassen. Dabei kann z.B. ein Hotelangebot
				ein eigenständiges Produkt sein, aber auch in Kombination mit einem Hin- und Rückflug zu einem
				Pauschalangebot zusammengefasst werden. Zusatzleistungen können in der Produktdefinition
				geliefert werden, sind dann aber verpflichtende Addons. </para>
			<para xml:id="det_1756" xml:lang="de">In der Datenlieferung werden die verschiedenen <emphasis role="bold">Reisekomponenten</emphasis> definiert, um sie später alleine oder in Kombination mit
				anderen Komponenten zu Produkten zusammenzufassen. </para>
			<para xml:id="det_1757" xml:lang="de">Es ist also möglich, Komponenten sowohl für <emphasis role="italic">Nur-Unterbringung</emphasis> als auch für Pauschalangebote (Flug und Unterbringung) in
				einer Lieferung zusammenzufassen. Dabei kann z.B. eine Hotelkomponente ein eigenständiges
				Produkt sein, aber auch als Komponente zusammen mit einem Hin- und Rückflug zu einem
				Pauschalangebot zusammengefasst werden. Zusatzleistungen können sowohl als optionale als auch
				als Pflichtkomponente innerhalb eines Produktes definiert werden.</para>
			<para xml:id="det_1758" xml:lang="de">Unterbringungen werden in Produkte (Products) zu verkaufsfertigen Produkten zusammengefasst.
				Diese Produkte können Nur-Hotel (AccommodationOnly)-Angebote sein oder in Kombination mit
				einem Flug zu einer Pauschalreise verknüpft werden. Das Produkt kann wiederum in den Bedingung
				für eine spezielle Preisberechnung herangezogen werden (s.u.).</para>
			
			<bridgehead xml:id="det_1759" xml:lang="de">Unterbringungen</bridgehead>
				<para xml:id="det_1760" xml:lang="de">Eine der Reisekomponenten ist die Unterbringung, wobei es sich bei der Unterbringung
					nicht nur um Hotels, sondern auch um Ferienwohnung und andere lokal fixierte Unterkünfte
					handelt. Die Komponente "Unterbringung" (Accommodations) enthält alle Eigenschaften der
					Unterkunft, die für die Suche, Buchung und Preisberechnung der Unterkünfte notwendig sind.
					Beachte: Wohnmobile zählen nicht zu den Unterkünften sondern werden unter Zusatzleistungen
					(AddonServices) als Mietwagen mit besonderen Attributen geliefert. </para>
			
			
			<bridgehead xml:id="det_1761" xml:lang="de">Flüge</bridgehead>
				<para xml:id="det_1762" xml:lang="de">Eine weitere Komponente sind die Flüge. Diese Komponente enthält auch alle Eigenschaften
					der Flüge, die für die Suche, Buchung und Preisberechnung der Flüge notwendig sind Bei
					Flügen wird unterschieden zwischen der Lieferung von Einzelflügen (OnewayFlight) oder der
					Lieferung von Returnflügen, die bereits aus einem Hin- und Rückflug bestehen. Zusätzlich
					kann man innerhalb der CombiComponents noch Regeln definieren, durch die Flüge mit
					Zubringer- oder Verteilerflügen erweitert werden können. Ebenso können dort Regeln
					definiert werden, die zwei Einzelflüge zu einem Returnflug zusammenfügen. Dabei erlauben
					die Regeln auch die Definition von Flüghüllen, Genau wie bei den Accommodations können die
					Flüge direkt als Flugprodukt verwendet werden, aber auch als Bestandteil innerhalb eines
					Pauschalproduktes. </para>
			
			
			<bridgehead xml:id="det_1763" xml:lang="de">Zusatzleistungen</bridgehead>
				<para xml:id="det_1764" xml:lang="de">Die Zusatzleistungen können sowohl als Bestandteil der Komponenten Flug oder Unterkunft
					geliefert werden, als auch als eigenständige Komponenten. Bei der Lieferung als
					eigenständige Komponenten wird wiederum über die Rules definiert, ob es sich um optionale
					oder Plichtbestandteile eines Produktes handelt. Zu den Zusatzleistungen zählen zum
					Beispiel: Transfers, Versicherungen, zusätzliche Hotel- oder Flugservices, aber auch
					Mietwagen, Ausflüge, Sportangebote, Gesundheits- oder Wellnessleistungen, Skipässe und
					vieles mehr. </para>
			
			
			<bridgehead xml:id="det_1765" xml:lang="de">Kombinierte Komponenten</bridgehead>
				<para xml:id="det_1766" xml:lang="de"> </para>
			
		</section>
		<section xml:id="OtdsProductsComponentsAccommodation">
			<title><phrase xml:id="det_1767" xml:lang="de">Unterbringungen (Accommodations) </phrase></title>
			<section xml:id="OtdsProductsComponentsAccommodationOverview">
				<title><phrase xml:id="det_1768" xml:lang="de">Überblick</phrase></title>
				<para xml:id="det_1769" xml:lang="de">Der Zweig Accommodations beinhaltet alle in einer Datenlieferung enthaltenen
					Unterbringungen wie Hotels, Ferienwohnungen oder Ferienanlagen. Die jeweiligen Unterkünfte
					(Hotels, Ferienwohnungen oder Ferienanlagen) werden dann in einzelnen
					Accommodation-Zweigen geliefert. Das eigentliche Zimmer, Apartment oder Wohnung ist ein
					Bestandteil der Unterbringung (Accommodation) und wird in einer der nächsten Kapitel unter
					Zimmer (Unit) behandelt. </para>
				<para xml:id="det_1770" xml:lang="de">In OTDS hat jede Accommodation eine Stammdatenebene (Accommodation) und eine
					darunterliegende Kalkulationsebene (SellingAccom). Die Stammdatenebene enthält die
					physikalischen Eigenschaften und Ausstattungen einer Unterbringung. </para>
				<para xml:id="det_1771" xml:lang="de">In der Kalkulationsebene können von der Unterkunft vertriebsbedingt unterschiedliche
					Ausprägungen der Unterkunft angegeben werden. Hierbei geht es nicht um eine Zimmerart,
					sondern tatsächlich um eine unterschiedliche Charakteristik der Unterbringung. In der
					Realität begegnet uns dies häufig in der Form von unterschiedlichen Reisearten oder
					leichten Variationen des Leistungscodes. So kann ein Hotel als Familienhotel anders
					vertrieben werden als wenn es als Sporthotel angeboten wird. Der Vorteil der Trennung von
					Stammdatenebene und Kalkulationsdatenebene liegt in der Möglichkeit, dass beide Level
					unabhängig voneinander mit Daten beliefert werden können. Eine ähnliche Struktur wird uns
					auch später bei den Zimmern begegnen. </para>
				<para xml:id="det_1772" xml:lang="de">Hauptbestandteil der Stammdaten sind die Properties. Hier werden die unveränderlichen
					physikalischen Eigenschaften der Unterkunft, wie Name, Ort, Lage, geografische Position
					und besondere Einrichtungen und Angebote definiert. Auf dem Stammdatenlevel besteht auch
					noch die Möglichkeit der Definition unterkunftsspezifischer Zusatzleistungen. </para>
				<para xml:id="det_1773" xml:lang="de">Die Kalkulationsdaten der Unterbringung liefern dann spezifische Daten zur Buchung und
					die notwendigen Angaben zur Preisberechnung. Dort finden sich auch die Definitionen der
					möglichen Verpflegungsarten und Zimmer. Sowohl auf der Stammdatenebene als auch auf der
					Kalkulationsebene können über Bedingungen globale Einschränkungen der Gültigkeit angegeben
					werden. </para>
				<para xml:id="det_1774" xml:lang="de"> </para>
				<para xml:id="det_1775" xml:lang="de">Die Struktur der Daten der gelieferten Unterbringungen erläutert das folgende
					Schaubild:</para>
				<para xml:id="det_1776" xml:lang="de"> </para>
				<figure>
					<title><phrase xml:id="det_1777" xml:lang="de"> Accommodations (Unterbringungen / Hotels)</phrase></title>
					<mediaobject>
						<imageobject>
							<imagedata fileref="figures/accommodations.png" format="PNG" contentwidth="80%"/>
						</imageobject>
						<textobject>
							<para xml:id="det_1778" xml:lang="de">Accommodations (Unterbringungen / Hotels)</para>
						</textobject>
						<caption>
							<para xml:id="det_1779" xml:lang="de"> </para>
						</caption>
					</mediaobject>
				</figure>
				<para xml:id="det_1780" xml:lang="de"> </para>
			</section>
			<section xml:id="OtdsProductsComponentsAccommodationSellingAccom">
				<title><phrase xml:id="det_1781" xml:lang="de">Stammdatenebene - Kalkulationsdatenebene</phrase></title>
				<para xml:id="det_1782" xml:lang="de">In OTDS ist eine systematische Trennung von Stammdaten und Kalkulationsdaten vorgesehen,
					was insbesondere zwei Überlegungen zur Grundlage hat:</para>
				
				<orderedlist>
					<listitem>
						<para xml:id="det_1784" xml:lang="de">Stammdaten ändern sich selten bis nie. Dass sich ein Hotel umbenennt oder
							die Adresse ändert, ist kaum der Fall. Preisdaten hingegen sind sehr flexibel
							und können sich sogar täglich mehrmals ändern. Die Trennung trägt erheblich
							dazu bei, Update-Lieferungen zu vereinfachen und das zu übertragende
							Datenvolumen zu minimieren.</para>
					</listitem>
					<listitem>
						<para xml:id="det_1785" xml:lang="de">Verschiedene Zimmer/Appartements/... (Units) habe dennoch gemeinsame
							Stammdaten innerhalb der Unterkünfte (Accommodation). Sie sind beispielsweise
							alle unter derselben Anschrift geführt. Um nicht für jedes einzelne Angebot
							die Stammdaten separat angeben zu müssen, können die gemeinsamen Stammdaten in
							der Stammdatenenbene für die Unterkunft "global" angegeben werden. </para>
					</listitem>
				</orderedlist>
				
				<para xml:id="det_1786" xml:lang="de">Diese Trennung von Stammdaten und Kalkulationsdaten zieht sich durch alle Ebenen der
					Hoteldaten, angefangen bei</para>
			</section>
			<section xml:id="OtdsProductsComponentsAccommodationProperties">
				<title><phrase xml:id="det_1787" xml:lang="de">Stammdaten (Properties) der Unterbringung</phrase></title>
				<section xml:id="OtdsProductsComponentsAccommodationPropertiesAccommodation">
					<title><phrase xml:id="det_1788" xml:lang="de">Unterkunftsebene (Accommodation oder SellingAccom/Properties)</phrase></title>
					<para xml:id="det_1789" xml:lang="de">Alle relevanten unveränderlichen Basisdaten der Unterkunft werden im Element
						Accommodation in den Properties geliefert. Dies sind insbesondere der Zielort, die
						vollständige Adresse, Lage und Art der Unterbringung, Ausstattungsmerkmale,
						Angebotsmöglichkeiten, Geo-Informationen, zugeordnete Flughäfen oder Bahnhöfe, etc.
						Folgende Informationen können geliefert werden:</para>
					
					<itemizedlist>
						<listitem>
							<para xml:id="det_1791" xml:lang="de">Zielort</para>
						</listitem>
						<listitem>
							<para xml:id="det_1792" xml:lang="de">Vollständige Adresse der Unterkunft (Name, Anschrift, Land, Tel., Fax,
								Email, Homepage)</para>
						</listitem>
						<listitem>
							<para xml:id="det_1793" xml:lang="de">GeoInfo - Geo-Information der Unterkunft - gibt die geografische Lage
								und Umgebung der Unterkunft an</para>
							<para xml:id="det_1794" xml:lang="de">In dem Element GeoInfo werden die geografischen Informationen der
								Unterkunft hinterlegt. Damit wird genauer spezifiziert wo die Unterkunft
								geografisch zu finden ist. Dazu gehören auch die Geo-Koordinaten mit denen
								Systeme das Hotel auf einer Weltkarte entsprechend anzeigen können. In dem
								Element <emphasis role="italic">GeoCode</emphasis> können die Längen- und
								Breitengerade angegeben werden, wo sich die Unterkunft befindet. Damit
								kann eine geo-referenzierte Kartendarstellung der Ergenisse durchgeführt
								werden. In dem Element <emphasis role="italic">Accuracy</emphasis> kann
								die Genauigkeit in km bezogen auf die Koordinate angegeben werden. Gerade
								bei Objekten, die keine genaue Lokalisation haben, wie zum Beispiel
								Glückshotels kann damit angegeben werden, welchen Radius der Zielpunkt in
								etwa haben soll. </para>
							<itemizedlist>
								<listitem>
									<para xml:id="det_1795" xml:lang="de">Region</para>
								</listitem>
								<listitem>
									<para xml:id="det_1796" xml:lang="de">Land</para>
								</listitem>
								<listitem>
									<para xml:id="det_1797" xml:lang="de">Zielgebiet</para>
								</listitem>
								<listitem>
									<para xml:id="det_1798" xml:lang="de">GeoCode - Geografische Breite und Länge und Entfernungsangabe
										bezogen auf die Koordinate</para>
									<para xml:id="det_1799" xml:lang="de">(dient der Übergabe an entsprechende Darstellungssysteme)</para>
								</listitem>
							</itemizedlist>
						</listitem>
						<listitem>
							<para xml:id="det_1800" xml:lang="de">Dem Zielort zugeordnete Flughäfen </para>
						</listitem>
						<listitem>
							<para xml:id="det_1801" xml:lang="de">Dem Zielort zugeordnete Bahnstationen </para>
						</listitem>
					</itemizedlist>
					
					<para xml:id="det_1802" xml:lang="de">Die entsprechenden Eigenschaften der Unterkunft aus folgenden Bereichen können
						ebenfalls hier angegeben werden:</para>
					
					<itemizedlist>
						<listitem>
							<para xml:id="det_1804" xml:lang="de">Hotelkette</para>
						</listitem>
						<listitem>
							<para xml:id="det_1805" xml:lang="de">Art der Unterkunft (AccommodationType) z.B. Hotel, AppartmentHotel, Club
								etc.</para>
						</listitem>
						<listitem>
							<para xml:id="det_1806" xml:lang="de">Lage der Unterkunft</para>
						</listitem>
						<listitem>
							<para xml:id="det_1807" xml:lang="de">Art des Gebäudes </para>
						</listitem>
						<listitem>
							<para xml:id="det_1808" xml:lang="de">Offizielle und eigene Kategorie der Unterkunft</para>
						</listitem>
						<listitem>
							<para xml:id="det_1809" xml:lang="de">Allgemeine Merkmale und Eigenschaften der Unterkunft</para>
						</listitem>
						<listitem>
							<para xml:id="det_1810" xml:lang="de">Familienangebote, Sportangebote, Wellnessmöglichkeiten,
								Seniorenangebote</para>
						</listitem>
					</itemizedlist>
					
					<para xml:id="det_1811" xml:lang="de">Dieses allgemeine <link xlink:href="../../example/AccommodaionExamples.xml">Beispiel
							für die Verwendung von Properties</link> auf der Ebene der Accommodations gibt
						einen rudimentären Einstieg in die Anwendungen der Eigenschaften. Die Angabe der
						Eigenschaften kann sich jedoch um ein vielfaches komplexer gestalten, etwa wenn sich
						diese terminabhängig ändern Dies kann beispielsweise die <link xlink:href="../../example/AccommodationCategoryChange.xml">Hotelkategorie</link>,
						der <link xlink:href="../../example/AccommodationNameChange.xml">HotelName</link>
						(AccommodationName) oder ein jahreszeitenabhängiges <link xlink:href="../../example/AccommodationSportChange.xml">Sportangebot</link> sein.
						(@TODO Christian: Beispiele erstellen)</para>

					<para xml:id="det_1812" xml:lang="de">Eine vollständige <link linkend="AnhangPropertiesAccommodations">Liste von
							Unterkunftseigenschaften</link> finden Sie im Anhang!</para>
					<para xml:id="det_1813" xml:lang="de"> </para>
				</section>
				<section xml:id="OtdsProductsComponentsAccommodationPropertiesUnit">
					<title><phrase xml:id="det_1814" xml:lang="de">Zimmerebene (Unit- oder SellingUnit/Properties)</phrase></title>
					<para xml:id="det_1815" xml:lang="de">Die Stammdaten (Properties) liefern eine genauere Beschreibung des Unterkunfttyps
						(Zimmer, Ferienwohnung oder Ferienhaus) . Es kann einmal spezifiziert werden welche
						Art Unterkunft geliefert wird (UnitType), z.B. Einzel-, Doppel- oder Dreibettzimmer,
						Appartement, Suite, Bungalow etc. </para>
					<para xml:id="det_1816" xml:lang="de">Desweiteren wird die Ausstattung der einzelnen Unterkünfte detaillierter beschrieben
						durch das Attribut "RoomFacility". Ausstattungsvarianten sind z.B. Klimaanlage,
						Luxusausstattung, behindertengerecht, Meerblick, Familienzimmer aber auch
						einschränkende Eigenschaften wie Straßenseite, Bad/Toilette auf Korridor etc.
						Attribute können auch durch Verwendung eigener Namespaces erweitert werden. </para>
					<para xml:id="det_1817" xml:lang="de">Ab der Version 1.9 ist es möglich zu spezifizieren welche
						Arten von Betten (UnitBedType) in der Unterbringung vorhanden sind.</para>
					<para xml:id="det_1818" xml:lang="de">Eine vollständige <link linkend="AnhangPropertiesUnits">Liste der
							Unterkunftseigenschaften</link> finden Sie im Anhang!</para>
					<para xml:id="det_1819" xml:lang="de">
						<link xlink:href="./technisch/otds_technisch.html#UnitType">Definition des UnitType in
							der Technischen Dokumentation für OTDS </link>
					</para>
					<para xml:id="det_1820" xml:lang="de"> </para>
				</section>
				<section xml:id="OtdsProductsComponentsAccommodationPropertiesBoard">
					<title><phrase xml:id="det_1821" xml:lang="de">Verpflegungsebene (Board/Properties)</phrase></title>
					<para xml:id="det_1822" xml:lang="de">Die weitergehende Eigenschaften wie BoardType und BoardProperty der gelieferten
						Verpflegung wird unter Properties angegeben.</para>
					<para xml:id="det_1823" xml:lang="de">Unter den <emphasis role="bold">Verpflegungsarten (BoardType)</emphasis> wird die
						genaue Einordnung der definierten Verpflegung angegeben, z.B. nach Frühstück
						(Breakfast), Halbpension (HalfBoard) oder auch Selbstverpflegung (SelfCatering). </para>
					<para xml:id="det_1824" xml:lang="de">Eine vollständige Liste der möglichen <link xlink:href="./technisch/otds_technisch.html#Board">BoardTypes finden Sie in der
							Technischen Dokumentation für OTDS </link>
					</para>
					<para xml:id="det_1825" xml:lang="de">Die <emphasis role="bold">Verpflegungseigenschaften (BoardProperty)
						</emphasis>unterscheiden nach Diät, koscherem oder vegetarischem Essen.:</para>
					
					<itemizedlist>
						<listitem>
							<para xml:id="det_1827" xml:lang="de">Diet</para>
						</listitem>
						<listitem>
							<para xml:id="det_1828" xml:lang="de">Vegetarian</para>
						</listitem>
						<listitem>
							<para xml:id="det_1829" xml:lang="de">Kosher </para>
						</listitem>
					</itemizedlist>
					
					<para xml:id="det_1830" xml:lang="de">Eine vollständige <link linkend="AnhangPropertiesBoards">Liste der
							Verpflegungseigenschaften</link> finden Sie im Anhang!</para>
				</section>
				<section>
					<title><phrase xml:id="det_1831" xml:lang="de">Umgang mit gebundenen Namspaces in den Eigenschaften (Properties)</phrase></title>
					<para xml:id="det_1832" xml:lang="de">@TODO: Einfügen von OTDS bekannten Namespaces (PropertyNamespaceEntry)</para>
					<para xml:id="det_1833" xml:lang="de">Neben den fest vorgegebenen Ausstattungen und Angeboten sollen aber auch
						anbietereigene Erweiterungen integrierbar sein. OTDS bietet hier als Element einen
						Namespace für beliebige Erweiterungen, so dass auch komplexe Strukturen mit abgebildet
						werden können. Auf diesem Wege lassen sich zum Beispiel auch die von Firmen wie Giata
						oder Globaltypes oder auch veranstaltereigene Ausstattungsmerkmale einbinden.</para>
				</section>
				<section>
					<title><phrase xml:id="det_1834" xml:lang="de">Umgang mit ungebundenen Namspaces in den Eigenschaften (Properties)</phrase></title>
					<para xml:id="det_1835" xml:lang="de">@TODO: Einfügen von OTDS unbekannten Namespaces
						(OtdsUnboundedProperies/UnboundedPropertyNamespaceEntry)</para>
					<para xml:id="det_1836" xml:lang="de">Neben den fest vorgegebenen Ausstattungen und Angeboten sollen aber auch
						anbietereigene Erweiterungen integrierbar sein. OTDS bietet hier als Element einen
						Namespace für beliebige Erweiterungen, so dass auch komplexe Strukturen mit abgebildet
						werden können. Auf diesem Wege lassen sich zum Beispiel auch die von Firmen wie Giata
						oder Globaltypes oder auch veranstaltereigene Ausstattungsmerkmale einbinden.</para>
				</section>
			</section>
			<section xml:id="OtdsProductsComponentsAccommodationUnit">
				<title><phrase xml:id="det_1837" xml:lang="de">Zimmer (Unit)</phrase></title>
				<para xml:id="det_1838" xml:lang="de"> </para>
			</section>
			<section xml:id="OtdsProductsComponentsAccommodationOccupancy">
				<title><phrase xml:id="det_1839" xml:lang="de">Belegungen (Occupancy)</phrase></title>
				<section>
					<title><phrase xml:id="det_1840" xml:lang="de">Einführung</phrase></title>
					<para xml:id="det_1841" xml:lang="de">Die möglichen Belegungsvarianten für den definierten Zimmertyp werden an dieser
						Stelle festgelegt. Die minimale, maximale oder genaue Anzahl von Personen in
						bestimmten Altersbereichen wird hier definiert.</para>
					<para xml:id="det_1842" xml:lang="de">Festgelegt wird hier z.B. die maximale Anzahl von Personen in der Unterkunft, wie
						viele Kinder in einem definiertem Altersbereich gebucht werden können und ebenso ob
						Kleinkinder (Infants) erlaubt sind.</para>
					<para xml:id="det_1843" xml:lang="de">Die Auswahl erfolgt über die Altersdefinition und zusätzliche Auswahl von möglichen
						und nicht erlaubten Kombinationen.</para>
					<para xml:id="det_1844" xml:lang="de"> </para>
					<figure>
						<title><phrase xml:id="det_1845" xml:lang="de">Belegung - Occupancy</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/occupancy.png" format="PNG" contentwidth="50%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_1846" xml:lang="de">Belegung - Occupancy</para>
							</textobject>
							<caption>
								<para xml:id="det_1847" xml:lang="de"> </para>
							</caption>
						</mediaobject>
					</figure>
					<para xml:id="det_1848" xml:lang="de">Nachfolgend werden einige typische Beispiel für Occupancy-Lieferungen
						dargestellt.</para>
					<programlisting><![CDATA[<!-- Belegung für genau zwei Erwachsene -->
<Occupancy>
	<Person>
		<MinAge>18</MinAge>
		<Count>2</Count>
	<Person>
</Occupancy>]]></programlisting>
					<programlisting><![CDATA[<!-- Belegung für einen Erwachsenen und eine beliebige zweite Person -->
<Occupancy>
	<Person>
		<MinAge>18</MinAge>
		<Count>1</Count>
	<Person>
	<Person>
		<Count>1</Count>
	<Person>
</Occupancy>]]></programlisting>
					<programlisting><![CDATA[<!-- Belegung für zwei Erwachsenen und ein optionales Kind bis 14 -->
<Occupancy>
	<Person>
		<MinAge>18</MinAge>
		<Count>2</Count>
	<Person>
	<Person>
		<MaxAge>14</MaxAge>
		<MaxCount>1</MaxCount>
	<Person>
</Occupancy>]]></programlisting>
					<programlisting><![CDATA[<!-- Belegung für zwei Erwachsenen und ein Kind bis 14 und eine unbegrenzte Anzahl an Babys -->
<Occupancy>
	<Person>
		<MinAge>18</MinAge>
		<Count>2</Count>
	<Person>
	<Person>
		<MaxAge>14</MaxAge>
		<Count>1</Count>
	<Person>
	<Person>
		<MaxAge>1</MaxAge>
	<Person>
</Occupancy>]]></programlisting>
					<programlisting><![CDATA[<!-- Belegung für zwei Erwachsenen und ein Kind bis 14 und eine unbegrenzte Anzahl an Babys -->
<Occupancy>
	<Person>
		<MinAge>18</MinAge>
		<Count>2</Count>
	<Person>
	<Person>
		<MaxAge>14</MaxAge>
		<Count>1</Count>
	<Person>
	<Person>
		<MaxAge>1</MaxAge>
	<Person>
</Occupancy>]]></programlisting>
					<para xml:id="det_1849" xml:lang="de">
						<link xlink:href="../../example/Occupancy Example.xml">Mehr Belegungsbeispiele aus der
							Praxis</link>
					</para>
				</section>
				<section>
					<title><phrase xml:id="det_1850" xml:lang="de">Belegungen ausschließen </phrase></title>
					<para xml:id="det_1851" xml:lang="de">Über eine Ausschlussoption (Exclude) können bestimmte Belegungsvarianten verhindert
						werden.</para>
					<para xml:id="det_1852" xml:lang="de">Nachfolgend ein Beispiel für eine Occupancy-Lieferung bei denen eine bestimmte
						Belegungen ausgeschlossen wird.</para>
					<programlisting><![CDATA[<!-- Belegung für bis zu vier Personen, die vierste Person darf kein Kind sein, wenn bereits zwei Kinder dabei sind -->
<Occupancy>
	<Person>
		<MinAge>18</MinAge>
		<Count>1</Count>
	<Person>
	<Person>
		<MaxCount>3</MaxCount>
	<Person>
	<Exclude>
		<Person>
			<MinAge>14</MinAge>
			<Count>1</Count>
		<Person>
		<Person>
			<MaxAge>13</MaxAge>
			<Count>3</Count>
		<Person>
	</Exclude>
</Occupancy>]]></programlisting>
				</section>
			</section>
			<section xml:id="OtdsProductsComponentsAccommodationConditionalTags">
				<title><phrase xml:id="det_1853" xml:lang="de">Personendefintionen</phrase></title>
				<section>
					<title><phrase xml:id="det_1854" xml:lang="de">Einführung</phrase></title>
					<para xml:id="det_1855" xml:lang="de">Die Veranstalter definieren häufig Personentypen, um damit die Preisgestaltung einer
						Belegung zu steuern. In OTDS erfolgt die Festlegung der Personentypen durch eine
						entsprechende Definition von ConditionalTags. </para>
					<para xml:id="det_1856" xml:lang="de">Das folgende Beispiel zeigt wie die zwei ältesten Personen als "Vollzahler"
						definiert werden.</para>
					<programlisting><![CDATA[<ConditionalTag>
    <Tag Class="PersonType">Vollzahler</Tag>
    <Condition>
        <PersonImpact ImpactExecutionOrder="BeforeCombinatorics">
            <PersonIndex Source="Product">
                <Until>2</Until>
            </PersonIndex>
        </PersonImpact>
    </Condition>
</ConditionalTag>]]></programlisting>
					<para xml:id="det_1857" xml:lang="de">Das folgende Beispiel zeigt wie die jüngste Personen als Person im Zustellbett
						definiert wird, wenn genau drei Personen im Zimmer sind.</para>
					<programlisting><![CDATA[<ConditionalTag >
    <Tag Class="PersonType">Zustellbett</Tag>
    <Condition>
        <And>
            <PersonImpact ImpactExecutionOrder="BeforeCombinatorics">
                <PersonIndex Source="Product">
                    <From>-1</From>
                </PersonIndex>
            </PersonImpact>
            <PersonGroup Source="Product">
                <Person>
                    <Count>3</Count>
                </Person>
            </PersonGroup>
        </And>
    </Condition>
</ConditionalTag>]]></programlisting>
				</section>
			</section>
			<section xml:id="OtdsProductsComponentsAccommodationBoard">
				<title><phrase xml:id="det_1858" xml:lang="de">Verpflegungsarten (Board)</phrase></title>
				<para xml:id="det_1859" xml:lang="de">Im Bereich Board werden die verschiedenen angebotenen Verpflegungsmöglichkeiten wie z.B.
					Frühstück, Halbpension oder All Inclusive definiert. Geliefert werden neben den
					notwendigen Buchungsinformationen, den Eigenschaften und die Bezeichnung der Verpflegung
					auch die Einschränkungen und Zuordnungsbedingungen und die zugehörigen
					Preisbestandteile.</para>
			</section>
			<section xml:id="OtdsProductsComponentsAccommodationSeason">
				<title><phrase xml:id="det_1860" xml:lang="de">Saisondefinition</phrase></title>
				<para xml:id="det_1861" xml:lang="de">Hier werden die Saisonzeiten festgelegt und definiert.</para>
				
				<bridgehead xml:id="det_1862" xml:lang="de">Saisonkennzeichen (SeasonCode)</bridgehead>
					<para xml:id="det_1863" xml:lang="de">Der SeasonCode ist ein alphanumerischer Wert, dem in den gelieferten Daten
						festgelegte Zeiträume oder Einzeltage zugeordnet werden. Diesen Saisonkennzeichen
						können auch jeweils mehrere Zeiträume oder Einzeltage zugewiesen werden.</para>
				
				
				<bridgehead xml:id="det_1864" xml:lang="de">Regeln - Bedingungen (Condition)</bridgehead>
					<para xml:id="det_1865" xml:lang="de">Über die Bedingungen werden die Zeiträume oder Einzeltermine den Saisonkennzeichen
						(SeasonCode) zugeordnet. Weitere Bedingungen können in Abhängigkeit vom Buchungsdatum,
						der Aufenthaltsdauer, der zugeordneten Marke oder von bestimmten Wochentagen angegeben
						werden. </para>
				
				<para xml:id="det_1866" xml:lang="de">Saisonzeiten können als Einschränkungs- oder Zuordnungsbedingung z.B. bei der
					Preisberechnung, den Belegungs- oder Verpflegungsvarianten oder auch der Zubuchung von
					Zusatzleistungen benutzt werden. </para>
				<para xml:id="det_1867" xml:lang="de"> </para>
			</section>
			<section xml:id="OtdsProductsComponentsAccommodationFilter">
				<title><phrase xml:id="det_1868" xml:lang="de">Filter in der Unterbringung</phrase></title>
				<section xml:id="OtdsProductsComponentsAccommodationFilterOverview">
					<title><phrase xml:id="det_1869" xml:lang="de">Überblick</phrase></title>
					<para xml:id="det_1870" xml:lang="de"> </para>
				</section>
				<section>
					<title><phrase xml:id="det_1871" xml:lang="de">Unterkunftsfilter</phrase></title>
					<para xml:id="det_1872" xml:lang="de"> Hier werden die Gültigkeitsbereiche der einzelnen Unterkunftsarten festgelegt.
						Ebenso kann ein spezielles Produkt als Bedingung für die Gesamtpreisberechnung
						herangezogen werden.</para>
					<para xml:id="det_1873" xml:lang="de">Mehrere Bedingungen können mit Hilfe der Booleschen Operatoren (And, Or, Not) oder
						Imply (If ... Then ...) verknüpft werden.</para>
					<para xml:id="det_1874" xml:lang="de">Gültigkeitsbedingungen können z.B. für folgende Bereiche vereinbart werden:</para>
				</section>
				<section>
					<title><phrase xml:id="det_1875" xml:lang="de">Zimmerfilter</phrase></title>
					<para xml:id="det_1876" xml:lang="de"> Einschränkungen auf Unterkunftsebene werden unter dem Knoten "Filter" definiert. </para>
					<para xml:id="det_1877" xml:lang="de">Innerhalb der Filter werden Bedingungen an die Unterkunft formuliert, welche logisch
						mit "UND" und "ODER" verknüpft werden können.</para>
					<para xml:id="det_1878" xml:lang="de">Bedingungen werden u. a. zur Festlegung von Gültigkeitsbereichen bei Terminen, z.B.
						der Festlegung von Saisonzeiten oder bei Gewährung von Frühbucherrabatten,
						Alterseinteilungen in Unterkünften oder Buchung von Zusatzleistungen. eingesetzt. </para>
					<para xml:id="det_1879" xml:lang="de">Ebenso kann ein spezielles Produkt als Bedingung für die Gesamtpreisberechnung
						herangezogen werden.</para>
					<para xml:id="det_1880" xml:lang="de">Mehrere Bedingungen können mit Hilfe der Booleschen Operatoren (And, Or, Not) oder
						Imply (If ... Then ...) verknüft werden.</para>
					<para xml:id="det_1881" xml:lang="de"> </para>
					<itemizedlist>
						<listitem>
							<para xml:id="det_1882" xml:lang="de">Buchungsrelevante Bedingungen</para>
						</listitem>
						<listitem>
							<para xml:id="det_1883" xml:lang="de">Terminbedingungen am Zielort</para>
						</listitem>
						<listitem>
							<para xml:id="det_1884" xml:lang="de">Bedingungen bzgl. der Aufenthalts- oder Reisedauer</para>
						</listitem>
						<listitem>
							<para xml:id="det_1885" xml:lang="de">Bedingungen bzgl. der Belegung des Objekts</para>
						</listitem>
						<listitem>
							<para xml:id="det_1886" xml:lang="de">Produktspezifische Bedingungen </para>
						</listitem>
						<listitem>
							<para xml:id="det_1887" xml:lang="de">Bedingungen bzgl. des Vertriebskanals</para>
						</listitem>
					</itemizedlist>
					<para xml:id="det_1888" xml:lang="de"> </para>
				</section>
				<section>
					<title><phrase xml:id="det_1889" xml:lang="de">Verpflegungsfilter</phrase></title>
					<para xml:id="det_1890" xml:lang="de"/>
				</section>
			</section>
			<section xml:id="OtdsProductsComponentsAccommodationPriceItem">
				<title><phrase xml:id="det_1891" xml:lang="de">Preisbestandteile für Unterbringungen (PriceItems)</phrase></title>
				<section xml:id="OtdsProductsComponentsAccommodationPriceItemOverview">
					<title><phrase xml:id="det_1892" xml:lang="de">Überblick</phrase></title>
					<para xml:id="det_1893" xml:lang="de">Preise und Preisbestandteile können auf allen Ebenen des Accommodations-Zweigs
						definiert werden. Dies hat den Hintergrund, dass unterschiedliche Parameter
						(Verpflegung etc.) oder Eigenschaften (Propoerties) zu Abweichungen in eigentlich
						einheitlichen Zimmerpreisen führen können.</para>
				</section>
				<section xml:id="OtdsProductsComponentsAccommodationPriceItemSellingAccom">
					<title><phrase xml:id="det_1894" xml:lang="de">Preisbestandteile auf Unterkunftsebene</phrase></title>
					<para xml:id="det_1895" xml:lang="de">An dieser Stelle können für die gesamt Unterkunft allgemein gültige Preise
						hinterlegt werden. Diese werden an die Kind-Elemente vererbt.</para>
				</section>
				<section xml:id="OtdsProductsComponentsAccommodationPriceItemSellingUnit">
					<title><phrase xml:id="det_1896" xml:lang="de">Preisbestandteile auf Unit-/Zimmerebene</phrase></title>
					<para xml:id="det_1897" xml:lang="de">Einzelne Zimmer gleicher Kategoriene und Belegungen können sich dennoch preislich
						Unterscheiden. Dies kann seine Ursach beispielsweise in der Lage des Zimmers
						(Meerblick, seitlicher Meerblick, Straßenlage etc) haben.</para>
				</section>
				<section xml:id="OtdsProductsComponentsAccommodationsPriceItemBoard">
					<title><phrase xml:id="det_1898" xml:lang="de">Preisbestandteile auf Verpflegungsebene</phrase></title>
					<para xml:id="det_1899" xml:lang="de">Aufschläge können berechnet werden, falls die gewünschte von der Standardverpflegung
						abweicht. </para>
				</section>
				<section xml:id="OtdsProductsComponentsAccommodationsPriceItemAccommodations">
					<title><phrase xml:id="det_1900" xml:lang="de">Preisbestandteile auf oberster Ebene</phrase></title>
					<para xml:id="det_1901" xml:lang="de">Falls für alle Accommodations einheitliche (Grund-)Preise erhoben werden, können
						diese direkt als Kind-Element von Accommodations definiert werden.</para>
				</section>
			</section>
			<section xml:id="OtdsProductsComponentsAccommodationBooking">
				<title><phrase xml:id="det_1902" xml:lang="de">Buchungsinformationen der Unterbringung (Booking)</phrase></title>
				<section xml:id="OtdsProductsComponentsAccommodationBookingOverview">
					<title><phrase xml:id="det_1903" xml:lang="de">Überblick</phrase></title>
					<para xml:id="det_1904" xml:lang="de">In dieser Sektion werden alle für eine ordnungsgemäße Buchung notwendigen Angaben
						hinterlegt. Die Angaben werden vom Anbieter vorgegeben und sind normalerweise über
						vorher festgelegte Codes spezifiziert. </para>
					<para xml:id="det_1905" xml:lang="de">Notwendige Angaben sind der Buchungscode der Marke (BrandCode), der RequestCode für
						externe Reservierungssysteme und der Buchungscode der Leistung (BookingCode).Weitere
						mögliche Angaben sind freie anbieterspezifische Angaben sowie die Angabe der
						Verkaufssaison, der Reiseart oder des Veranstalterkatalogs. </para>
				</section>
				<section xml:id="OtdsProductsComponentsAccommodationBookingSellingAccom">
					<title><phrase xml:id="det_1906" xml:lang="de">Buchungsparameter auf Unterkunftsebene</phrase></title>
					<para xml:id="det_1907" xml:lang="de">Im Knoten SellingAccom befindet sich das Booking Element in dem die Buchungsdaten
						geliefert werden welche sich auf die gesamte Unterbringung beziehen. In diesem Knoten
						werden die schon oben beschriebenen notwendigen Angaben gemacht. </para>
					<table frame="all">
						<title><phrase xml:id="det_1908" xml:lang="de">Notwendige Buchungsparameter</phrase></title>
						<tgroup cols="3">
							<thead>
								<row>
									<entry>Buchungsparameter</entry>
									<entry>BookingGroup Area</entry>
									<entry>BookingParameter Field</entry>
								</row>
							</thead>
							<tbody>
								<row>
									<entry>Code der Marke (BrandCode)</entry>
									<entry>GlobalArea</entry>
									<entry>Brand</entry>
								</row>
								<row>
									<entry>Buchungscode der Leistung</entry>
									<entry>ServiceArea</entry>
									<entry>ServiceCode</entry>
								</row>
								<row>
									<entry>Anforderungscode der Leistung</entry>
									<entry>ServiceArea</entry>
									<entry>RequestCode</entry>
								</row>
								<row>
									<entry>Startdatum der Leistung</entry>
									<entry>ServiceArea</entry>
									<entry>DateStart</entry>
								</row>
								<row>
									<entry>Enddatum der Leistung</entry>
									<entry>ServiceArea</entry>
									<entry>DateEnd</entry>
								</row>
							</tbody>
						</tgroup>
					</table>
					<table frame="all">
						<title><phrase xml:id="det_1909" xml:lang="de">Optionale Buchungsparameter</phrase></title>
						<tgroup cols="3">
							<thead>
								<row>
									<entry>Buchungsparameter</entry>
									<entry>BookingGroup Area</entry>
									<entry>BookingParameter Field</entry>
								</row>
							</thead>
							<tbody>
								<row>
									<entry>Reiseart</entry>
									<entry>GlobalArea</entry>
									<entry>TravelType</entry>
								</row>
							</tbody>
						</tgroup>
					</table>
				</section>
				<section xml:id="OtdsProductsComponentsAccommodationBookingSellingUnit">
					<title><phrase xml:id="det_1910" xml:lang="de">Buchungsparameter auf Unit-/Zimmerebene</phrase></title>
					<para xml:id="det_1911" xml:lang="de">Im Knoten SellingUnit befindet sich das Booking Element in dem die Buchungsdaten
						geliefert werden welche sich auf das Zimmer beziehen. </para>
					<table frame="all">
						<title><phrase xml:id="det_1912" xml:lang="de">Es gibt folgende zimmerspezifischen Parameter</phrase></title>
						<tgroup cols="3">
							<thead>
								<row>
									<entry>Buchungsparameter</entry>
									<entry>BookingGroup Area</entry>
									<entry>BookingParameter Field</entry>
								</row>
							</thead>
							<tbody>
								<row>
									<entry>Zimmercode</entry>
									<entry>ServiceArea</entry>
									<entry>ServiceFeatureCode</entry>
								</row>
							</tbody>
						</tgroup>
					</table>
				</section>
				<section xml:id="OtdsProductsComponentsAccommodationBookingBoard">
					<title><phrase xml:id="det_1913" xml:lang="de">Buchungsparameter auf Verpflegungsebene</phrase></title>
					<table frame="all">
						<title><phrase xml:id="det_1914" xml:lang="de">Es gibt folgende verpflegungsspezifische Parameter</phrase></title>
						<tgroup cols="3">
							<thead>
								<row>
									<entry>Buchungsparameter</entry>
									<entry>BookingGroup Area</entry>
									<entry>BookingParameter Field</entry>
								</row>
							</thead>
							<tbody>
								<row>
									<entry>Verpflegungscode</entry>
									<entry>ServiceArea</entry>
									<entry>BoardCode</entry>
								</row>
							</tbody>
						</tgroup>
					</table>
					<para xml:id="det_1915" xml:lang="de">Wenn der Verpflegungscode mit dem Zimmertypen verknüpft ist, dann ist es auch
						möglich den Verpflegungscode in den Buchungsparameter auf Unit-/ Zimmerebene zu
						liefern</para>
					<para xml:id="det_1916" xml:lang="de">
						<link xlink:href="../../example/BookingActionsExamples.xml">Beispiel für die
							Verwendung des Booking-Elements für eine Unterbringung</link>
					</para>
				</section>
			</section>
		</section>
		<section xml:id="OtdsProductsComponentsFlights">
			<title><phrase xml:id="det_1917" xml:lang="de">Flüge (Flights)</phrase></title>
			<para xml:id="det_1918" xml:lang="de"> </para>
			<section xml:id="OtdsProductsComponentsFlightsOverview">
				<title><phrase xml:id="det_1919" xml:lang="de">Überblick</phrase></title>
				<figure>
					<title><phrase xml:id="det_1920" xml:lang="de">Reisekomponente Flights (Flugangebote)</phrase></title>
					<mediaobject>
						<imageobject>
							<imagedata fileref="figures/flights.png" format="PNG" contentwidth="50%"/>
						</imageobject>
						<textobject>
							<para xml:id="det_1921" xml:lang="de">Reisekomponente Flights (Flugangebote)</para>
						</textobject>
						<caption>
							<para xml:id="det_1922" xml:lang="de"> </para>
						</caption>
					</mediaobject>
				</figure>
				<para xml:id="det_1923" xml:lang="de">Flugangebote bestehen aus Einzelflügen (OnewayFlights) und aus Flugpärchen von Hin- und
					Rückflügen (ReturnFlights). In OTDS werden die Flugpaare der Einfachheit halber immer
					Returnflights genannt und sollten dementsprechend nicht mit einem einzelnen Rückflug
					verwechselt werden. In der OTDS-Struktur sind auch erweiterte Flugangebote möglich, die
					aus mehreren Einzel- bzw. Hin- und Rückflügen bestehen können. Durch die
					Kombinationsregeln (CombiComponents) wird z.B. ermöglicht, einen Hauptflug mit Zubringer-
					und Verteilerflügen zu einem erweiterten Einzelflug zu verbinden.</para>
				<para xml:id="det_1924" xml:lang="de">Das folgende Beispiel wie in einer DefineComponent aus zwei Oneway Flügen ein Return
					Flug gemacht wird, wenn Outbound Arrival mit Inbound Departure und Outbound Departure mit
					Inbound Arrival übereinstimmt.</para>
				<programlisting><![CDATA[<DefineComponent Role="ReturnFlight" Key="DefineComponentReturnFlight">
    <Components>
		<OnewayFlight Name="Outbound" DayAllocationLevel="0"/>
		<OnewayFlight Name="Inbound" DayAllocationLevel="0"/>
	</Components>
	<Filter UpdateMode="New">
		<And>
			<MatchEqual>
				<Element Source="Outbound" EvaluationMode="Any">DepartureAirport</Element>
				<Element Source="Inbound" EvaluationMode="Any">ArrivalAirport</Element>
			</MatchEqual>
			<MatchEqual>
				<Element Source="Inbound" EvaluationMode="Any">DepartureAirport</Element>
				<Element Source="Outbound" EvaluationMode="Any">ArrivalAirport</Element>
			</MatchEqual>
		</And>
	</Filter>
</DefineComponent>]]></programlisting>
				<para xml:id="det_1925" xml:lang="de">Die DefinedComponents erlauben auch die Definition von sogenannten Flughüllen.
					Flughüllen sind kombinierte Flüge, bei denen die Buchungsinformationen der Einzelflüge
					durch eine vereinfachte Buchungsinformation ersetzt wird. </para>
				<para xml:id="det_1926" xml:lang="de"><link linkend="OtdsStrategyRules">Regelwerke zur Bildung von Produkten oder auch zur
						Kombination von Flügen</link></para>
				<para xml:id="det_1927" xml:lang="de">Die Kombination der Flüge erfolgt über freie Tags und Flugparameter. Die Flüge
					unterstützen sowohl Flugkomponenten von Pauschalflügen, als auch Nur-Flüge von
					Hotelveranstaltern und Airlines. Die Preise und Flugzuschläge sind in den PriceItems
					enthalten und können sehr flexibel mit Bedingungen versehen werden. In den Availabilities
					stecken die Verfügbarkeiten der Flüge. Die integrierten Parameter decken die in den
					folgenden Absetzen aufgeführten Aspekte ab. </para>
				<para xml:id="det_1928" xml:lang="de"/>
			</section>
			<section xml:id="OtdsProductsComponentsFlightsOnewayFlight">
				<title><phrase xml:id="det_1929" xml:lang="de">OnewayFlight</phrase></title>
				<section>
					<title><phrase xml:id="det_1930" xml:lang="de">Überblick</phrase></title>
					<para xml:id="det_1931" xml:lang="de">Ein Oneway Flug kann aus einem oder mehreren Flugsegmenten bestehen. Abhängig vom
						Detailierungsgrad der Flugdatenlieferung stellt OTDS unterschiedliche Strukturen zur
						Datenlieferung zur Verfügung.</para>
					<para xml:id="det_1932" xml:lang="de">Für den Fall, dass keine Flugzeiten und keine weiteren Details zur Flugroute
						vorliegen, werden die Elemente "DepartureAirport" und "ArrivalAirport" innerhalb des
						OnewayFlight Knotens genutzt um die Flugstrecke zu definieren.</para>
					<figure>
						<title><phrase xml:id="det_1933" xml:lang="de">OnewayFlight</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/onewayflight.png" format="PNG" contentwidth="60%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_1934" xml:lang="de">OnewayFlight</para>
							</textobject>
							<caption>
								<para xml:id="det_1935" xml:lang="de"> </para>
							</caption>
						</mediaobject>
					</figure>
					<para xml:id="det_1936" xml:lang="de">Das folgende Beispiel zeigt einen Oneway Flug (Frankfurt - Fuerteventura) ohne
						detailierte Segmentinformationen, sowie ohne Preise und Verfügbarkeiten</para>
					<programlisting><![CDATA[<OnewayFlight UpdateMode="New" Key="FRAFUE">
	<Booking UpdateMode="New">
		<BookingGroup Priority="0" Area="ServiceArea" Source="ThisComponent" Class="Default">
			<BookingParameter Field="ServiceCode" PadLength="0" Index="0" PadCondition="Always" PadOrientation="Right" Padding=" " Name="Default">
				<Value>FRA FUE</Value>
			</BookingParameter>
		</BookingGroup>
	</Booking>
	<DepartureAirport UpdateMode="New">FRA</DepartureAirport>
	<ArrivalAirport UpdateMode="New">FUE</ArrivalAirport>
	<BookingClass Key="FRAFUE" UpdateMode="New">
		<Booking UpdateMode="New">
			<BookingGroup Priority="0" Area="ServiceArea" Source="ThisComponent" Class="Default">
				<BookingParameter Field="ServiceFeatureCode" PadLength="0" Index="0" PadCondition="Always" PadOrientation="Right" Padding=" " Name="Default">
					<Value>Y</Value>
				</BookingParameter>
			</BookingGroup>
		</Booking>
	</BookingClass>
</OnewayFlight>]]></programlisting>
					<para xml:id="det_1937" xml:lang="de">Das folgende Beispiel zeigt einen Oneway Flug (Frankfurt - Funchal) mit
						Segmentinformationen, Preisen und Verfügbarkeiten. Das Beispiel beschreibt einen Flug
						für den Zeitraum vom 01.05.2012 - 30.05.2012 mit dem Verkehrstag "Dienstag". </para>
					<programlisting><![CDATA[<OnewayFlight Key="FRAFNC">
    <Booking>
        <BookingGroup Area="ServiceArea">
            <BookingParameter Field="ServiceCode">
                <Value>FRAFNC</Value>
            </BookingParameter>
        </BookingGroup>
    </Booking>
    <Filter>
        <And>
            <Date Source="ThisComponent" DayType="CheckIn">
                <Min>2012-05-01</Min>
                <Max>2012-05-30</Max>
            </Date>
            <Weekdays Source="ThisComponent">Tue</Weekdays>
        </And>
    </Filter>
    <Properties>
        <PropertyGroup>
            <FlightRoute>
                <Departure>
                    <Airport>FRA</Airport>
                    <DateOffset>0</DateOffset>
                    <Time>09:20:00</Time>
                </Departure>
                <Arrival>
                    <Airport>FNC</Airport>
                    <DateOffset>0</DateOffset>
                    <Time>12:30:00</Time>
                </Arrival>
                <Operating>
                    <Carrier>
                        <Identifier>LH</Identifier>
                    </Carrier>
                    <FlightNumber>1234</FlightNumber>
                </Operating>
            </FlightRoute>
        </PropertyGroup>
    </Properties>
    <DepartureAirport>FRA</DepartureAirport>
    <ArrivalAirport>FNC</ArrivalAirport>
    <BookingClass Key="FRAFNC_Booking">
        <Booking UpdateMode="New">
            <BookingGroup Priority="0" Area="ServiceArea" Source="ThisComponent" Class="Default">
                <BookingParameter Field="ServiceFeatureCode" PadLength="0" Index="0" PadCondition="Always" PadOrientation="Right" Padding=" " Name="Default">
                    <Value>Y</Value>
                </BookingParameter>
            </BookingGroup>
        </Booking>
        <Properties>
            <PropertyGroup>
                <FlightBookingClassType>Economy</FlightBookingClassType>
            </PropertyGroup>
        </Properties>
        <Availabilities Key="FRAFNC_Availabilities">
            <Availability StartDate="2012-05-01" EndDate="2012-05-30" Key="Availability_FRAFNC">
                <DefaultDayState>
                    <Open/>
                </DefaultDayState>
                <DayState Offset="0" Key="Availability_FRAFNC_0">
                    <Open>4</Open>
                </DayState>
                <DayState Offset="7" Key="Availability_FRAFNC_7">
                    <Closed/>
                </DayState>
                <DayState Offset="14" Key="Availability_FRAFNC_14">
                    <Open>4</Open>
                </DayState>
                <DayState Offset="21" Key="Availability_FRAFNC_21">
                    <Open>8</Open>
                </DayState>
                <DayState Offset="28" Key="Availability_FRAFNC_28">
                    <Closed/>
                </DayState>
            </Availability>
        </Availabilities>
        <PriceItems Key="FRAFNC_PriceItems">
            <PriceItem Class="Kerosinzuschlag">
                <Absolute>
                    <Value>20</Value>
                    <DayBase>x</DayBase>
                    <PersonBase>1</PersonBase>
                </Absolute>
                <Condition>
                    <PersonImpact ImpactExecutionOrder="BeforeCombinatorics">
                        <PersonAge Source="ThisComponent">
                            <Min>2</Min>
                        </PersonAge>
                    </PersonImpact>
                </Condition>
            </PriceItem>
            <PriceItem Class="Flughafenabschlag">
                <Absolute>
                    <Value>-43</Value>
                    <DayBase>x</DayBase>
                    <PersonBase>1</PersonBase>
                </Absolute>
                <Condition>
                    <And>
                        <Date Source="ThisComponent" DayType="CheckIn">
                            <Min>2012-05-01</Min>
                            <Max>2012-05-22</Max>
                        </Date>
                        <PersonImpact ImpactExecutionOrder="BeforeCombinatorics">
                            <PersonAge Source="ThisComponent">
                                <Min>2</Min>
                            </PersonAge>
                        </PersonImpact>
                    </And>
                </Condition>
            </PriceItem>                        
            <PriceItem Class="Basis">
                <Absolute>
                    <Value>280</Value>
                    <DayBase>x</DayBase>
                    <PersonBase>1</PersonBase>
                </Absolute>
                <Condition>
                    <Date Source="ThisComponent" DayType="CheckIn">
                        <Min>2012-05-01</Min>
                        <Max>2012-05-20</Max>
                    </Date>
                </Condition>
            </PriceItem>
            <PriceItem Class="Basis">
                <Absolute>
                    <Value>258</Value>
                    <DayBase>x</DayBase>
                    <PersonBase>1</PersonBase>
                </Absolute>
                <Condition>
                    <Date Source="ThisComponent" DayType="CheckIn">
                        <Min>2012-05-21</Min>
                        <Max>2012-05-30</Max>
                    </Date>
                </Condition>
            </PriceItem>                        
            <PriceItem Class="Frühlingsbonus">
                <Absolute>
                    <Value>-50</Value>
                    <DayBase>x</DayBase>
                    <PersonBase>1</PersonBase>
                </Absolute>
                <Condition>
                    <And>
                        <Date Source="ThisComponent" DayType="CheckIn">
                            <Min>2012-05-01</Min>
                        </Date>                                        
                        <BookingDate Source="Product">
                            <Max>2012-04-01</Max>
                        </BookingDate>
                        <PersonImpact ImpactExecutionOrder="BeforeCombinatorics">
                            <PersonAge Source="ThisComponent">
                                <Min>18</Min>
                            </PersonAge>
                        </PersonImpact>
                    </And>
                </Condition>
            </PriceItem>                        
        </PriceItems>
    </BookingClass>
</OnewayFlight>]]></programlisting>
					<para xml:id="det_1938" xml:lang="de">
						<link xlink:href="../../example/Flight Rules Example.xml">Beispiel für die Kombination
							von Oneway Flügen (Zubringer, Hauptflug)</link>
					</para>
				</section>
			</section>
			<section xml:id="OtdsProductsComponentsFlightsReturnFlight">
				<title><phrase xml:id="det_1939" xml:lang="de">ReturnFlight</phrase></title>
				<section>
					<title><phrase xml:id="det_1940" xml:lang="de">Überblick</phrase></title>
					<para xml:id="det_1941" xml:lang="de">Definition aller gelieferten Hin- und Rückflüge</para>
					<para xml:id="det_1942" xml:lang="de"> </para>
					<figure>
						<title><phrase xml:id="det_1943" xml:lang="de">ReturnFlight</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/returnflight.png" format="PNG" contentwidth="60%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_1944" xml:lang="de">ReturnFlight</para>
							</textobject>
							<caption>
								<para xml:id="det_1945" xml:lang="de"> </para>
							</caption>
						</mediaobject>
					</figure>
				</section>
				<section>
					<title><phrase xml:id="det_1946" xml:lang="de">Unterschiede zu Einzelflügen</phrase></title>
					<para xml:id="det_1947" xml:lang="de">Der Unterschied zum Oneway Flug besteht in den Elementen Outbound und Inbound welche
						Hin und Rückflug separieren. </para>
					<section>
						<title><phrase xml:id="det_1948" xml:lang="de">Hinflug / Rückflug (Outbound/Inbound) </phrase></title>
						<para xml:id="det_1949" xml:lang="de">Im Outbound Element werden die Primäreigenschaften des Hinflugs geliefert.
							Innerhalb dieses Knotens besteht die Möglichkeit Preise zu liefern. Zum Beispiel
							würde hier ein Zuschlag geliefert der nur auf den Hinflug angewendet werden soll.
							Im Inbound-Knoten stehen dieselben Elemente für den Rückflug zur Verfügung. </para>
						<para xml:id="det_1950" xml:lang="de">Das folgende Beispiel zeigt einen Returnflug mit Segmentinformationen für
							Outbound und Inbound.</para>
						<programlisting><![CDATA[<ReturnFlight UpdateMode="New" Key="FRAPMI">
	<Outbound UpdateMode="New">
		<Properties UpdateMode="New">
			<PropertyGroup Priority="0">
				<FlightRoute>
					<Departure>
						<Airport>FRA</Airport>
						<DateOffset>0</DateOffset>
						<Time>19:20:00</Time>
					</Departure>
					<Arrival>
						<Airport>PMI</Airport>
						<DateOffset>0</DateOffset>
						<Time>22:00:00</Time>
					</Arrival>
					<FlightType>Main</FlightType>
				</FlightRoute>
			</PropertyGroup>
		</Properties>
		<DepartureAirport UpdateMode="New">FRA</DepartureAirport>
		<ArrivalAirport UpdateMode="New">PMI</ArrivalAirport>
	</Outbound>
	<Inbound UpdateMode="New">
		<Properties UpdateMode="New">
			<PropertyGroup Priority="0">
				<FlightRoute>
					<Departure>
						<Airport>PMI</Airport>
						<DateOffset>7</DateOffset>
						<Time>10:00:00</Time>
					</Departure>
					<Arrival>
						<Airport>FRA</Airport>
						<DateOffset>7</DateOffset>
						<Time>12:50:00</Time>
					</Arrival>
					<FlightType>Main</FlightType>
				</FlightRoute>
			</PropertyGroup>
		</Properties>
		<DepartureAirport UpdateMode="New">PMI</DepartureAirport>
		<ArrivalAirport UpdateMode="New">FRA</ArrivalAirport>
	</Inbound>
	<BookingClass Key="Y" UpdateMode="New">
		<Booking UpdateMode="New">
			<BookingGroup Priority="0" Area="ServiceArea" Source="ThisComponent" Class="Default">
				<BookingParameter Field="ServiceFeatureCode" PadLength="0" Index="0" PadCondition="Always" PadOrientation="Right" Padding=" " Name="Default">
					<Value>Y</Value>
				</BookingParameter>
			</BookingGroup>
		</Booking>
		<Availabilities Key="AvailFRAPMIReturn" UpdateMode="New">
			<Availability Key="2011-11-01" StartDate="2011-11-01" EndDate="2012-04-30" UpdateMode="New">
				<DefaultDayState UpdateMode="New">
					<Open/>
					<CheckIn/>
					<CheckOut/>
				</DefaultDayState>
			</Availability>
		</Availabilities>
	</BookingClass>
</ReturnFlight>]]></programlisting>
						<para xml:id="det_1951" xml:lang="de">
							<link xlink:href="../../example/ReturnFlight.xml">Weitere Beispiele für
								Returnflüge</link>
						</para>
					</section>
				</section>
			</section>
			<section xml:id="OtdsProductsComponentsFlightsProperties">
				<title><phrase xml:id="det_1952" xml:lang="de">Stammdaten des Fluges</phrase></title>
				<para xml:id="det_1953" xml:lang="de">Alle relevanten Basisdaten eines Fluges werden in den Properties und in den Elementen
					DepartureAirport und ArrivalAirport geliefert. In den Properties sind dies insbesondere
					die Definition der Gepäckbestimmungen und der Flugstrecke. </para>
				<section>
					<title><phrase xml:id="det_1954" xml:lang="de">Routen/Strecken</phrase></title>
					<para xml:id="det_1955" xml:lang="de">Wenn im Veranstaltersystem die Flugroute detailliert vorliegt dann kann diese im
						Element "FlightRoute" in den Properties geliefert werden.</para>
					<para xml:id="det_1956" xml:lang="de">Der Knoten FlightRoute beschreibt die Details zur Flugroute. Eine Route stellt dabei
						entweder ein Segment oder auch eine Zusammenfassung mehrere Segmente dar.
						Innerhalb des Segments ist es möglich abflug- und ankunftsbezogene
						Eigenschaften der Route zu liefern. Zudem werden Airline Informationen,
						Flugart (Zubringer, Hauptflug, ...), Fluggerät, Gesamtreisedauer und die
						Zahl der Stops geliefert.</para>
					<para xml:id="det_1957" xml:lang="de">Im Knoten Departure werden die Daten zum Abflug geliefert, im Knoten Arrival die
						Daten zur Ankunft. Innerhalb dieser Knoten wird auf die Angabe eines konkreten
						Flugtermins verzichtet. Im Element DateOffset kann ein vom Abflugtermin des Fluges aus
						betrachtetes Offset geliefert werden. Durch die relative Angabe von Terminen können
						Fluggruppen unabhängig von konkreten Terminen beschrieben werden.</para>
					<para xml:id="det_1958" xml:lang="de">Durch das Element "DateOffset" in den Knoten "Departure" und "Arrival" wird das Flugdatum
						der einzelnen Segmente bestimmt. Die Basis bildet das Datum, welches aus den
						"Availabilites" ermittelt wird. </para>
					<para xml:id="det_1959" xml:lang="de">Bei der Definition von Return-Flügen sind Hin und Rückflüge separat zu
						betrachten. Aus den Availabilities und Filtern ergeben sich Termine für den
						Rückflug. Diese Rückflugtermine bilden die Basis für die Offsets des
						Rückfluges.</para>
					<para xml:id="det_1960" xml:lang="de">Beachte: Für die Segemente des Rückfluges werdem ausdrücklich nicht die
						Offsets auf den Hinflugtermin bezogen.</para>
					<figure>
						<title><phrase xml:id="det_1961" xml:lang="de">FlightRoute</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/flightroute.png" format="PNG" contentwidth="50%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_1962" xml:lang="de">FlightRoute</para>
							</textobject>
							<caption>
								<para xml:id="det_1963" xml:lang="de"> </para>
							</caption>
						</mediaobject>
					</figure>
					<para xml:id="det_1964" xml:lang="de">
						<link xlink:href="../../example/Flight3Segments.xml">Beispiel für einen Oneway Flug
							mit drei Segmenten</link>
					</para>
					<para xml:id="det_1965" xml:lang="de"> </para>
				</section>
			</section>
			<section xml:id="OtdsProductsComponentsFlightsBookingClass">
				<title><phrase xml:id="det_1966" xml:lang="de">Buchungsklassen</phrase></title>
				<figure>
					<title><phrase xml:id="det_1967" xml:lang="de">Buchungsklassen</phrase></title>
					<mediaobject>
						<imageobject>
							<imagedata fileref="figures/flightBookingClass.png" format="PNG" contentwidth="40%"/>
						</imageobject>
						<textobject>
							<para xml:id="det_1968" xml:lang="de">Buchungsklassen</para>
						</textobject>
						<caption>
							<para xml:id="det_1969" xml:lang="de"> </para>
						</caption>
					</mediaobject>
				</figure>
				<para xml:id="det_1970" xml:lang="de">In der Buchungsklasse besteht die Möglichkeit Belegungsinformationen zu liefern. In der
					Regel wird die Belegung für Flüge sehr einfach gehalten. </para>
				<para xml:id="det_1971" xml:lang="de">Beispiel für eine klassische Flug Occupancy:</para>
				<programlisting><![CDATA[<Occupancy Key="Flight">
	<Person>
		<Count>1</Count>
	</Person>
 </Occupancy>]]></programlisting>
				<para xml:id="det_1972" xml:lang="de"/>
				<para xml:id="det_1973" xml:lang="de">Preisdaten und Verfügbarkeiten können ebenfalls im Knoten für die Buchungsklasse
					geliefert werden. </para>
				<para xml:id="det_1974" xml:lang="de">
					<link xlink:href="../../example/OneWayFlightBookingClassAvailability.xml">Beispiel für
						einen Oneway Flug mit unterschiedlichen Buchungsklassen und Verfügbarkeiten</link>
				</para>
			</section>
			<section xml:id="OtdsProductsComponentsFlightsReturnFlightFilter">
				<title><phrase xml:id="det_1975" xml:lang="de">Filter in den Flügen</phrase></title>
				<para xml:id="det_1976" xml:lang="de">Einschränkungen für einen Flug werden unter dem Knoten "Filter" definiert.</para>
				<para xml:id="det_1977" xml:lang="de">Innerhalb der Filter werden Bedingungen an den Flug, bzw. an Anfrageparameter
					formuliert, welche logisch mit "UND" und "ODER" verknüpft werden können.</para>
				<para xml:id="det_1978" xml:lang="de">Kategorien der Bedingungen sind z.B.</para>
				<itemizedlist>
					<listitem>
						<para xml:id="det_1979" xml:lang="de">Buchungsrelevante Bedingungen</para>
					</listitem>
					<listitem>
						<para xml:id="det_1980" xml:lang="de">Bedingungen bzgl. der Aufenthalts- oder Reisedauer, sowie einzelner
							Reisetage</para>
					</listitem>
					<listitem>
						<para xml:id="det_1981" xml:lang="de">Produktspezifische Bedingungen </para>
					</listitem>
					<listitem>
						<para xml:id="det_1982" xml:lang="de">Bedingungen bzgl. des Vertriebskanals</para>
					</listitem>
				</itemizedlist>
				<para xml:id="det_1983" xml:lang="de"> </para>
				<para xml:id="det_1984" xml:lang="de">Beispiel für eine Einschränkung welche definiert das ein Flug zwischen dem 01.05.2012
					und 31.07.2012 nur die Verkehrstage Dienstag und Donnerstag bedient:</para>
				<programlisting><![CDATA[<Filter>
  <And>
    <Weekdays Source="OnewayFlight">Tue Thu</Weekdays>
    <Date Source="ThisComponent">
      <Min>2012-05-01</Min>
      <Max>2012-07-31</Max>
    </Date>
  </And>
</Filter>
]]></programlisting>
			</section>
			<section xml:id="OtdsProductsComponentsFlightsReturnFlightAvailabilities">
				<title><phrase xml:id="det_1985" xml:lang="de">Verfügbarkeiten</phrase></title>
				<para xml:id="det_1986" xml:lang="de">Verfügbarkeiten werden je Buchungsklasse geliefert. Daher sind sie im Knoten
					BookingClass zu finden. Der Aufbau der Verfügbarkeiten ist identisch zu den
					Verfügbarkeiten für Unterbringungen</para>
				<para xml:id="det_1987" xml:lang="de">Beispiel für eine konstant verfügbare Anzahl von 6 Plätzen von Mai bis Juli</para>
				<programlisting><![CDATA[<Availabilities Key="Availabilities_FRAFNC">
    <Availability StartDate="2012-05-01" EndDate="2012-07-31" Key="Availability_FRAFNC_20120501_20120731">
        <DefaultDayState>
            <Open>6</Open>
        </DefaultDayState>
    </Availability>
</Availabilities>]]></programlisting>
				<para xml:id="det_1988" xml:lang="de">Beispiel für eine konstant verfügbare Anzahl von 6 Plätzen von Mai bis Juli, nur am
					03.05.2012 und am 10.05.2012 gibt es andere Verfügbarkeiten </para>
				<programlisting><![CDATA[<Availabilities Key="Availabilities_FRAFNC">
    <Availability StartDate="2012-05-01" EndDate="2012-07-31" Key="Availability_FRAFNC_20120501_20120731">
        <DefaultDayState>
            <Open>6</Open>
        </DefaultDayState>
        <DayState Offset="2" Key="Availability_FRAFNC_1">
            <Closed/>
        </DayState>        
        <DayState Offset="9" Key="Availability_FRAFNC_9">
            <Open>1</Open>
        </DayState>
	</Availability>        
</Availabilities>]]></programlisting>
				<para xml:id="det_1989" xml:lang="de">Beispiel für eine dauernabhängige Verfügbarkeit</para>
				<programlisting><![CDATA[<Availabilities Key="Availabilities_FRAFNC_Duration7">
    <Availability StartDate="2012-05-01" EndDate="2012-07-31" Key="Availability_FRAFNC_20120501_20120731_Duration7">
        <DefaultDayState>
            <Open>25</Open>
        </DefaultDayState>
	</Availability>
    <Condition>
        <Duration Source="ThisComponent">
            <Durations>7</Durations>
        </Duration>
    </Condition>	
</Availabilities>
<Availabilities Key="Availabilities_FRAFNC_Duration3_Duration4">
    <Availability StartDate="2012-05-01" EndDate="2012-07-31" Key="Availability_FRAFNC_20120501_20120731_Duration3_Duration4">
        <DefaultDayState>
            <Open>5</Open>
        </DefaultDayState>
	</Availability>
    <Condition>
        <Duration Source="ThisComponent">
            <Durations>3 4</Durations>
        </Duration>
    </Condition>	
</Availabilities>]]></programlisting>
				<para xml:id="det_1990" xml:lang="de"> </para>
			</section>
			<section xml:id="OtdsProductsComponentsFlightsPriceItems">
				<title><phrase xml:id="det_1991" xml:lang="de">Preisbestandteile</phrase></title>
				<para xml:id="det_1992" xml:lang="de">Preise können bei Oneway Flügen innerhalb je Buchungsklasse geliefert werden. Bei Return
					Flügen besteht die Möglichkeit Preise für den gesamten Return Flug oder separat für Hin-
					und Rückflug zu liefern. </para>
				<para xml:id="det_1993" xml:lang="de">Beispiel für eine einmaligen Flugpreis pro Person.</para>
				<programlisting><![CDATA[<PriceItem Class="Basis">
    <Absolute>
        <Value>428</Value>
        <DayBase>x</DayBase>
        <PersonBase>1</PersonBase>
    </Absolute>
</PriceItem>]]></programlisting>
				<para xml:id="det_1994" xml:lang="de">Beispiel für eine datumsabhängigen Kerosinzuschlag pro Person.</para>
				<programlisting><![CDATA[<PriceItem Class="Kerosinzuschlag">
	<Absolute>
	    <Value>20</Value>
	    <DayBase>x</DayBase>
	    <PersonBase>1</PersonBase>
	</Absolute>
	<Condition>
	    <Date Source="ThisComponent" DayType="CheckIn">
	        <Max>2012-04-30</Max>
	    </Date>
	</Condition>
</PriceItem>
<PriceItem Class="Kerosinzuschlag">
	<Absolute>
	    <Value>23</Value>
	    <DayBase>x</DayBase>
	    <PersonBase>1</PersonBase>
	</Absolute>
	<Condition>
	    <Date Source="ThisComponent" DayType="CheckIn">
	        <Min>2012-05-01</Min>
	    </Date>
	</Condition>
</PriceItem>]]></programlisting>
				<para xml:id="det_1995" xml:lang="de"> </para>
			</section>
			<section xml:id="OtdsProductsComponentsFlightsBooking">
				<title><phrase xml:id="det_1996" xml:lang="de">Buchungsinformationen Flug (Booking)</phrase></title>
				<section xml:id="OtdsProductsComponentsFlightBookingOverview">
					<title><phrase xml:id="det_1997" xml:lang="de">Überblick</phrase></title>
					<para xml:id="det_1998" xml:lang="de">In dieser Sektion werden alle für eine ordnungsgemäße Buchung notwendigen Angaben
						hinterlegt. Die Angaben werden vom Anbieter vorgegeben und sind normalerweise über
						vorher festgelegte Codes spezifiziert. </para>
					<para xml:id="det_1999" xml:lang="de">Notwendige Angaben sind der Buchungscode der Marke (BrandCode), der RequestCode für
						externe Reservierungssysteme und der Buchungscode des Fluges (BookingCode).Weitere
						mögliche Angaben sind freie anbieterspezifische Angaben sowie die Angabe der
						Verkaufssaison, der Reiseart oder des Veranstalterkatalogs. </para>
				</section>
				<section xml:id="OtdsProductsComponentsFlightBookingFlight">
					<title><phrase xml:id="det_2000" xml:lang="de">Buchungsparameter auf Flugebene</phrase></title>
					<para xml:id="det_2001" xml:lang="de">Im Knoten OnewayFlight, bzw. ReturnFlight befindet sich das Booking Element in dem
						die Buchungsdaten geliefert werden welche sich auf den Flug beziehen. In diesem Knoten
						werden die schon oben beschriebenen notwendigen Angaben gemacht. </para>
					<table frame="all">
						<title><phrase xml:id="det_2002" xml:lang="de">Notwendige Buchungsparameter</phrase></title>
						<tgroup cols="3">
							<thead>
								<row>
									<entry>Buchungsparameter</entry>
									<entry>BookingGroup Area</entry>
									<entry>BookingParameter Field</entry>
								</row>
							</thead>
							<tbody>
								<row>
									<entry>Code der Marke (BrandCode)</entry>
									<entry>GlobalArea</entry>
									<entry>Brand</entry>
								</row>
								<row>
									<entry>Buchungscode des Fluges</entry>
									<entry>ServiceArea</entry>
									<entry>ServiceCode</entry>
								</row>
								<row>
									<entry>Anforderungscode des Fluges</entry>
									<entry>ServiceArea</entry>
									<entry>RequestCode</entry>
								</row>
								<row>
									<entry>Startdatum des Fluges</entry>
									<entry>ServiceArea</entry>
									<entry>DateStart</entry>
								</row>
								<row>
									<entry>Enddatum des Fluges</entry>
									<entry>ServiceArea</entry>
									<entry>DateEnd</entry>
								</row>
							</tbody>
						</tgroup>
					</table>
				</section>
				<section xml:id="OtdsProductsComponentsFlightBookingBookingClass">
					<title><phrase xml:id="det_2003" xml:lang="de">Buchungsparameter auf Buchungsklassenebene</phrase></title>
					<para xml:id="det_2004" xml:lang="de">Im Knoten BookingClass befindet sich das Booking Element in dem die Buchungsdaten
						geliefert werden welche sich auf die Buchungsklasse beziehen. </para>
					<table frame="all">
						<title><phrase xml:id="det_2005" xml:lang="de">Es gibt folgende buchungsklassenspezifische Parameter</phrase></title>
						<tgroup cols="3">
							<thead>
								<row>
									<entry>Buchungsparameter</entry>
									<entry>BookingGroup Area</entry>
									<entry>BookingParameter Field</entry>
								</row>
							</thead>
							<tbody>
								<row>
									<entry>Code der Buchungsklasse</entry>
									<entry>ServiceArea</entry>
									<entry>ServiceFeatureCode</entry>
								</row>
							</tbody>
						</tgroup>
					</table>
					<para xml:id="det_2006" xml:lang="de">
						<link xlink:href="../../example/OneWayFlight.xml">Beispiel eines Booking-Elements für
							einen Oneway Flug</link>
					</para>
				</section>
			</section>
		</section>
		<section xml:id="OtdsProductsComponentsAddons">
			<title><phrase xml:id="det_2007" xml:lang="de">Zusatzleistungen (Addons)</phrase></title>
			<section>
				<title><phrase xml:id="det_2008" xml:lang="de">Überblick</phrase></title>
				<para xml:id="det_2009" xml:lang="de">Zu den Addon zählen alle zusätzlichen Leistungen, die über einen eigenen Buchungscode
					verfügen und somit in einer Buchungsmaske gebucht werden können. Üblicherweise geschieht
					dies zusammen mit einer anderen Leistung, wie einer Unterkunft, und verursacht zusätzliche
					Kosten. Dies muss allerdings nicht immer der Fall sein. </para>
				<para xml:id="det_2010" xml:lang="de">Zusatzleistungen können vielfältiger Natur sein. Die gängigsten sind Mietwagen,
					Aktivitäten und Zusatzleistungen im Hotel, Versicherung, Aktivitäten in der Region und
					Transfers. Ein vollständige Aufstellung der in OTDS bekannten Addons findet sich weiter
					unten in diesem Kapitel. </para>
				<para xml:id="det_2011" xml:lang="de">Pflicht Zusatzleistungen + Preis sind noch nicht als Komponenten integriert.</para>
				<para xml:id="det_2012" xml:lang="de">Die Kombinationsmöglichkeiten von Addons mit Hotels, Flügen, etc. sollten die Package
					Rules übernehmen. </para>
				<para xml:id="det_2013" xml:lang="de">Der Aufbau der Buchungsmaske wird später im
					Booking-Element voraussichtlich. ab OTDS V1.9 geregelt. Dabei sollte
					idealerweise schon die Bedingungen für die Termine mit integriert werden. 1.
					RelatedPrevGroup - Abhängig von dem größten Leistungstermin in der letzten
					Gruppe 2. RelatedNextGroup - Abhängig von dem größten Leistungstermin in der
					nächsten Gruppe Außerdem gibt es für beide Termine evtl. Vorgaben bzgl. Offsets. </para>
				<para xml:id="det_2014" xml:lang="de">Belegungen brauchen auch Geschlechtsspezifische Kennzeichen für zum Beispiel FrauenSauna
					oder ähnliches</para>
				<para xml:id="det_2015" xml:lang="de">Kranken-,Unfall-,Reiserücktritt-, Sportspezialversicherung (z.B. Ski)</para>
				<para xml:id="det_2016" xml:lang="de">Mietwagen: Kategorie, Grundpreis, Extratage, Versicherungsupgrades</para>
				<figure>
					<title><phrase xml:id="det_2017" xml:lang="de">AddonServices</phrase></title>
					<mediaobject>
						<imageobject>
							<imagedata fileref="figures/addons.png" format="PNG" contentwidth="80%"/>
						</imageobject>
						<textobject>
							<para xml:id="det_2018" xml:lang="de">Addons</para>
						</textobject>
						<caption>
							<para xml:id="det_2019" xml:lang="de"> </para>
						</caption>
					</mediaobject>
				</figure>
			</section>
			<section xml:id="AddonBaseData">
				<title><phrase xml:id="det_2020" xml:lang="de">Stammdaten der Addons</phrase></title>
				<section>
					<title><phrase xml:id="det_2021" xml:lang="de">Überblick</phrase></title>
					<para xml:id="det_2022" xml:lang="de">Die Stammdaten der Addons überschneiden sich teilweise mit denen der Accommodations.
						Dies liegt u.a. daran, dass die Zusatzleistungen häufig von oder in den Hotels selbst
						angeboten werden oder an die entsprechenden Angebote gebunden sind.</para>
				</section>
				<section>
					<title><phrase xml:id="det_2023" xml:lang="de">Zuordnung zu anderen Komponenten</phrase></title>
					<para xml:id="det_2024" xml:lang="de">Zusatzleistungen können verschiedenen Restriktionen unterliegen. Manche könne völlig
						frei gebucht werden, andere sind nur in Verbindung mit bestimmten Hotels verfügbar
						oder beschränken sich auf konkrete Regionen. Dies wird über die Erstellung von
						Produkten und deren Regeln ausgedrückt.</para>
				</section>
				<section>
					<title><phrase xml:id="det_2025" xml:lang="de">Zusatzleistungstypen</phrase></title>
					<para xml:id="det_2026" xml:lang="de">Im Wesentlichen gibt es 3 verschiedene Arten von Zusatzleistungen, was die
						Abhängigkeit von den Angeboten angeht: Inkludierte, optional und obligatorische. Diese
						werden im entsprechenden Kapitel (siehe unten) genauer erläutert.</para>
					<para xml:id="det_2027" xml:lang="de">Die übergeordneten Klassen, die in den Properties unter dem Element AddonServiceType
						angegeben werden können und natürlich noch feiner untergliedert sind, unterteilen sich
						derzeit in</para>
					
						<itemizedlist>
							<listitem>
								<para xml:id="det_2029" xml:lang="de">Versicherungen</para>
							</listitem>
							<listitem>
								<para xml:id="det_2030" xml:lang="de">Mietwagen</para>
							</listitem>
							<listitem>
								<para xml:id="det_2031" xml:lang="de">Wellnesspakete</para>
							</listitem>
							<listitem>
								<para xml:id="det_2032" xml:lang="de">Sport Arrangements</para>
							</listitem>
							<listitem>
								<para xml:id="det_2033" xml:lang="de">Transfer</para>
							</listitem>
							<listitem>
								<para xml:id="det_2034" xml:lang="de">Golf Arrangements</para>
							</listitem>
							<listitem>
								<para xml:id="det_2035" xml:lang="de">Tauchpakete</para>
							</listitem>
							<listitem>
								<para xml:id="det_2036" xml:lang="de">Ausflüge/Touren</para>
							</listitem>
							<listitem>
								<para xml:id="det_2037" xml:lang="de">Hotel Arrangements</para>
							</listitem>
							<listitem>
								<para xml:id="det_2038" xml:lang="de">Stadt Arrangements</para>
							</listitem>
							<listitem>
								<para xml:id="det_2039" xml:lang="de">Gourmet Arrangements</para>
							</listitem>
							<listitem>
								<para xml:id="det_2040" xml:lang="de">Sitzplatzreservierungen (Flug)</para>
							</listitem>
						</itemizedlist>
					
					<para xml:id="det_2041" xml:lang="de">Ab der Version 1.9 ist es nur noch möglich, eine
						Ausprägung des AddonServiceType zu definieren.</para>
					<programlisting><![CDATA[
	<Addons ...>
		<Addon ...>
			<Service ...>
				<Properties ...>
					<AddonServiceType>
						<Insurance>CancelationInsurance</Insurance>
					</AddonServiceType> 
				</Properties>
			</Service>		
		</Addon>
	</Addons>
]]></programlisting>
				</section>
			</section>
			<section xml:id="AddonBaseDataService">
				<title><phrase xml:id="det_2042" xml:lang="de">Service und ServiceFeature</phrase></title>
				<section>
					<title><phrase xml:id="det_2043" xml:lang="de">Überblick</phrase></title>
					<para xml:id="det_2044" xml:lang="de">In den Services werden die einzelnen speziellen Zusatzleistungen abgelegt.
						Zusätzlich dazu können diese durch bestimmte Spezialitäten erweitert werden. Diese
						können in den ServiceFeatures dargestellt und mit den Services verknüpft werden.
						Dadurch entstehen zusätzliche Angebote, die jedoch nicht einzeln geliefert werden
						müssen, sondern durch einfaches "Ausmultiplizieren" erzeugt werden können.
						Beispielsweise kann ein Mietwagen einer bestimmten Klasse als Service erzeugt und
						genau identifiziert werden. Derselbe Wagen kann aber um einen Kindersitz erweitert
						werden. In diesem Fall wird also nicht der komplette Service neu erzeugt, sondern
						lediglich das optionale ServiceFeature für den Kindersitz. Dieser Kindersitz wiederum
						kann sicher auch mit allen anderen Mietwagen des Anbieters verknüpft werden.</para>
				</section>
				<section>
					<title><phrase xml:id="det_2045" xml:lang="de">Services</phrase></title>
					<para xml:id="det_2046" xml:lang="de">Services können bestimmten Einschränkungen unterliegen. Diese können vom
						Veranstalter vorgegeben oder impliziert sein. Beispielsweise können Veranstaltungen
						ein Mindestalter aufweisen, ein mehrfacher Transfer vom Flughafen zum Hotel macht in
						der Regel keinen Sinn oder ein Mietwagen kann bei einem zweiwöchigen Aufenthalt für
						nur eine Woche im Paket enthalten sein.</para>
					<para xml:id="det_2047" xml:lang="de">Um diese Einschränkungen steuern zu können, sind folgende Elemente unter Service
						verfügbar:</para>
					
						<itemizedlist>
							<listitem>
								<para xml:id="det_2049" xml:lang="de">PeriodApplication: Gibt an, ob die Zusatzleistung einmalig, pro Tag oder
									auch mehrfach angeboten wird.</para>
							</listitem>
							<listitem>
								<para xml:id="det_2050" xml:lang="de">PersonApplication: Gibt an, ob die Zusatzleistung pro Person oder pro
									Buchung angeboten wird.</para>
							</listitem>
							<listitem>
								<para xml:id="det_2051" xml:lang="de">DateApplication: Gibt an, ob die Zusatzleistung für die gesamte
									Aufenthaltsdauer oder pro Tag angeboten wird.</para>
							</listitem>
							<listitem>
								<para xml:id="det_2052" xml:lang="de">ComponentApplication: Gibt an, ob die Zusatzleistung pro Komponente
									(z.B. Hotel) oder pro Booking angeboten wird.</para>
							</listitem>
						</itemizedlist>
					
					<para xml:id="det_2053" xml:lang="de">Im folgenden Beispiel wird ein Weihnachtsdinner an Heilig Abend definiert:</para>
					<programlisting><![CDATA[
   <Addons ...>
   	<Addon ...>
   	  <Service ...>
      	<Properties ...>
    		<AddonServiceType>
    			<BoardArrangement>XmasDinner</Insurance>
    		</AddonServiceType> 
  		</Properties>

  		<PeriodApplication>Once</PeriodApplication>
  		<PersonApplication>PerPerson</PersonApplication>

		  <Filter>
			<Date>
			  <Dates ...>2012-12-24</Dates>
			</Date>
		  </Filter
   	  </Service>		
    </Addon>   
   </Addons>
]]></programlisting>

				</section>
				<section>
					<title><phrase xml:id="det_2054" xml:lang="de">ServiceFeatures</phrase></title>
					<para xml:id="det_2055" xml:lang="de">Wie bereits oben beschrieben können ServiceFeatures Zusatzleistungen erweitern und
						somit "virtuell" neue Angebote erzeugen. Da diese Features aber immer an mindestens
						einen Service gebunden sind, enthalten diese nicht den vollen Umfang der Elemente wie
						die Services. ServiceFeatures sind auf Booking, Filter, Properties und PriceItems
						beschränkt. Applications werden direkt über den Service behandelt.</para>
				</section>
			</section>
			<section xml:id="AccommodationsPriceItems">
				<title><phrase xml:id="det_2056" xml:lang="de">Preisbestandteile für Addons</phrase></title>
				<para xml:id="det_2057" xml:lang="de">Die Preise für Addons können sich aus mehreren Bestandteilen zusammensetzen, je nachdem,
					ob neben dem einfachen Service noch ein oder mehrere ServiceFeatures herangezogen werden.
					Falls es sich um inkludierte Zusatzleistungen handelt, kann der Preis auch leer
					sein.</para>
				<para xml:id="det_2058" xml:lang="de">Die Möglichkeiten für Kombinatoik und die Conditions entsprechen denen der
					Accommodations und Flüge.</para>
			</section>
			<section xml:id="IncludedAddons">
				<title><phrase xml:id="det_2059" xml:lang="de">Inkludierte, optionale und obligatorische Zusatzleistungen (Addons)</phrase></title>
				<para xml:id="det_2060" xml:lang="de">Zusatzleistungen werden im Bereich Services geliefert. Dabei unterscheidet man nach
					inkludierten, optionalen und obligatorischen Zusatzleistungen. Zusatzleistungen können
					eigene Preisbestandteile haben. Bei der Buchung können die Zusatzleistungen im
					Hotel-Zimmercode enthalten sein, aber auch eine eigene Buchungszeile benutzen.</para>
				<para xml:id="det_2061" xml:lang="de">In diesem Element wird definiert welche zusätzlichen Leistungen in dem Produkt enthalten
					sein können. Leistungen die sich auf die Buchungszeilen der Accommodation auswirken zum
					Beispiel durch Änderung des Hotel oder Zimmer Buchungscodes müssen zwingend hier platziert
					werden.</para>
				<para xml:id="det_2062" xml:lang="de"> </para>
				<section>
					<title><phrase xml:id="det_2063" xml:lang="de">Inkludierte Zusatzleistungen (Addons)</phrase></title>
					<para xml:id="det_2064" xml:lang="de">Hier werden die Zusatzleistungen, die im Angebot enthalten sind definiert.
						Inkludierte Zusatzleistungen sind verpflichtend und gehören mit zum angebotenen
						Produkt. Im Knoten Service wird der genaue Umfang der angebotenen Leistung
						spezifiziert. Die einzelnen Angebote können eine eigene Preisstruktur besitzen oder im
						angebotenen Preis enthalten sein.</para>
					<para xml:id="det_2065" xml:lang="de">Typische Beispiele von inkludierten Zusatzleistungen:</para>
					
					<bridgehead xml:id="det_2066" xml:lang="de">Transfer Flughafen - Unterkunft / Hotel</bridgehead>
						<para xml:id="det_2067" xml:lang="de">Klassisches Zusatzangebot bei einem Pauschalangebot ist der Transfer Flughafen -
							Hotel. </para>
					
					
					<bridgehead xml:id="det_2068" xml:lang="de">Sport- und Wellnessangebote</bridgehead>
						<para xml:id="det_2069" xml:lang="de">Zusätzlich zu einem Hotelangebot finden sich Sportangebote wie Golf, Tennis oder
							Ski oder Gesundheits- und Wellnessangebote.</para>
					
					
						<bridgehead xml:id="det_2070" xml:lang="de">Unterkunftsbuchung mit Mietwagen</bridgehead>
						<para xml:id="det_2071" xml:lang="de">Weiteres Beispiel einer verbindlichen Zusatzleistung ist das Angebot Hotel oder
							Flug mit Mietwagen, z.B. "Fly and Drive". </para>
					
					<para xml:id="det_2072" xml:lang="de"> </para>
				</section>
				<section>
					<title><phrase xml:id="det_2073" xml:lang="de">Optionale Zusatzleistungen</phrase></title>
					<para xml:id="det_2074" xml:lang="de">Alle Zusatzangebote, die auf Wunsch hinzugebucht werden können, werden hier
						vereinbart. Sie haben im Normalfall eine eigene Preisstruktur. Im Knoten Service wird
						der genaue Umfang der angebotenen Leistung spezifiziert, auch muss entsprechend
						angegeben werden, ob der Zusatzpreis sich auf die gesamte Buchung, das gebuchte Objekt
						oder für alle oder eine Person bezieht.</para>
					<para xml:id="det_2075" xml:lang="de">Ebenso kann es Einschränkungen bzgl. Alter oder Anzahl der Personen geben, auch kann
						das Angebot zeitlich eingeschränkt sein, nur an bestimmten Wochentagen angeboten
						werden oder nur zu bestimmten Saisonzeiten verfügbar sein.</para>
					<para xml:id="det_2076" xml:lang="de"> </para>
					<para xml:id="det_2077" xml:lang="de">
						<link xlink:href="../../example/Addon_Examples.xml">Beispiele für Angebote mit
							Addons</link>
					</para>
				</section>
			</section>
			<section>
				<title><phrase xml:id="det_2078" xml:lang="de">Buchungsdaten der Addons</phrase></title>
				<para xml:id="det_2079" xml:lang="de">Für Addons existieren folgende Elemente für die Buchung unter dem Booking-Element</para>
				<table frame="all">
					<title><phrase xml:id="det_2080" xml:lang="de">Addon Buchungsparameter</phrase></title>
					<tgroup cols="3">
						<thead>
							<row>
								<entry>Buchungsparameter</entry>
								<entry>BookingGroup Area</entry>
								<entry>BookingParameter Field</entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry>Code der Marke (BrandCode)</entry>
								<entry>GlobalArea</entry>
								<entry>Brand</entry>
							</row>
							<row>
								<entry>Buchungscode des Addons</entry>
								<entry>ServiceArea</entry>
								<entry>ServiceCode</entry>
							</row>
							<row>
								<entry>Anforderungscode des Addons</entry>
								<entry>ServiceArea</entry>
								<entry>RequestCode</entry>
							</row>
							<row>
								<entry>Eigenschaft des Addons</entry>
								<entry>ServiceArea</entry>
								<entry>ServiceCode</entry>
							</row>
							<row>
								<entry>Startdatum des Addons</entry>
								<entry>ServiceArea</entry>
								<entry>DateStart</entry>
							</row>
							<row>
								<entry>Enddatum des Addons</entry>
								<entry>ServiceArea</entry>
								<entry>DateEnd</entry>
							</row>
						</tbody>
					</tgroup>
				</table>
				<para xml:id="det_2081" xml:lang="de">
					<link xlink:href="../../example/BookingActionsExamples.xml">Beispiel eines
						Booking-Elements für ein Addon</link>
				</para>
			</section>
		</section>
		<section xml:id="OtdsProductsComponentsCombiComponents">
			<title><phrase xml:id="det_2082" xml:lang="de">Kombinierte Komponenten</phrase></title>
			<section>
				<title><phrase xml:id="det_2083" xml:lang="de">Überblick</phrase></title>
				<para xml:id="det_2084" xml:lang="de"/>
			</section>
			<section>
				<title><phrase xml:id="det_2085" xml:lang="de">Definition kombinierter Komponenten</phrase></title>
				<para xml:id="det_2086" xml:lang="de"/>
			</section>
			<section>
				<title><phrase xml:id="det_2087" xml:lang="de">Erweiterung von Einzelflügen</phrase></title>
				<para xml:id="det_2088" xml:lang="de">Unter diesem Element werden die Regeln zur Kombination von erweiterten Einzelflügen
					(OnewayFlight) zusammengefasst. Mehrere Einzelflüge (OnewayFlight) können zu einem neuen
					erweiterten Einzelflug (OnewayFlight) zusammengefasst werden: z.B. kann ein Hauptflug mit
					einem oder mehreren Zubringer- und Verteilerflügen zu einem erweiterten Oneway zusammen
					gesetzt werden. Schon kombinierte (erweiterte) OnewayFlights können nicht wieder in der
					Kombinationsregel verwendet werden (keine Rekursion). Zur Kombination können alle Oneways
					verwendet werden. In diesem Element wird eine Flughülle mit Flügen gefüllt.</para>
				<para xml:id="det_2089" xml:lang="de">Schon kombinierte (erweiterte) OneWayFlights können nicht wieder in der
					Kombinationsregel verwendet werden (keine Rekursion).</para>
				<para xml:id="det_2090" xml:lang="de">. </para>
			</section>
			<section>
				<title><phrase xml:id="det_2091" xml:lang="de">Zusammenstellung von Returnflights aus Einzelflügen</phrase></title>
				<para xml:id="det_2092" xml:lang="de"> Unter diesem Element werden die Regeln zur Kombination von Return-Flügen aus Oneways
					zusammengefasst.</para>
				<para xml:id="det_2093" xml:lang="de"> </para>
			</section>
			<section>
				<title><phrase xml:id="det_2094" xml:lang="de">Erweiterung von Returnflügen</phrase></title>
				<para xml:id="det_2095" xml:lang="de">Mehrere Hin- und Rückflüge (ReturnFlight) können zu einem erweiterten Hin- und Rückflug
					(ReturnFlight) zusammengefasst werden. Es dürfen nur fertig gelieferte ReturnFlights oder
					aus OneWayFlights kombinierte ReturnFlights benutzt werden.</para>
				<para xml:id="det_2096" xml:lang="de">Unter diesem Element werden die Regeln zur Kombination von erweiterten Return-Flügen
					zusammengefasst. Die Regeln erlauben einer Hauptflugstrecke wahlweise einen PreFeeder
					voranzustellen und einen PostFeeder anzuhängen. Dabei werden nur Return-Flüge miteinander
					kombiniert. Zur Kombination können direkt gelieferte Return-Flüge aus dem Zweig
					ReturnFlight und auch kombinierte Oneways, die über die ReturnFlightRules entstehen,
					verwendet werden. </para>
				<para xml:id="det_2097" xml:lang="de">Eine rekursive Verwendung der bereits erweiterten Return-Flüge als Basis für weitere
					Kombinationen ist per Definition ausgeschlossen... </para>
				<para xml:id="det_2098" xml:lang="de"> </para>
			</section>
			<section xml:id="FlightWrapper">
				<title><phrase xml:id="det_2099" xml:lang="de">Definition von Flughüllen</phrase></title>
				<para xml:id="det_2100" xml:lang="de"/>
			</section>
		</section>
		<section xml:id="OtdsProductsComponentsProducts">
			<title><phrase xml:id="det_2101" xml:lang="de">Produktdefinition (Products)</phrase></title>
			<section>
				<title><phrase xml:id="det_2102" xml:lang="de">Überblick</phrase></title>
				<para xml:id="det_2103" xml:lang="de"> </para>
				<para xml:id="det_2104" xml:lang="de"> </para>
			</section>
			<section>
				<title><phrase xml:id="det_2105" xml:lang="de">Beispiele für Nur-Hotel-Produktregeln</phrase></title>
				<para xml:id="det_2106" xml:lang="de">Hier werden Produkte zusammengestellt, die nur aus Unterkunftskomponenten bestehen. Die
					Unterkünfte müssen den hier vereinbarten Bedingungen entsprechen. Die einzelnen
					Unterkünfte können allerdings noch eigene Regeln haben, die produktbezogen ausgewertet
					werden müssen. So kann z.B. bei einer Hotelkomponente explizit ausgeschlossen sein als
					Nur-Hotel-Produkt verwendet zu werden oder dass bestimmte Zimmer für Nur-Hotel-Produkte
					reserviert sind. </para>
				<para xml:id="det_2107" xml:lang="de"> </para>
			</section>
			<section>
				<title><phrase xml:id="det_2108" xml:lang="de">Beispiele für ReturnFlight-Only-Produktregeln</phrase></title>
				<para xml:id="det_2109" xml:lang="de">Ein ReturnFlightOnly-Produkt kann aus dem Zweig Flights&gt;ReturnFlight aber auch aus einem
					der beiden Zweige Flights&gt;ReturnFlightRules oder Flights&gt;ReturnFlightCombiRules kommen.
					Alle drei Zweige resultieren in buchbaren ReturnFlights. Zusätzlich müssen alle
					Bedingungen der ReturnFlightOnlyRules erfüllt werden. Jeder Flug oder auch die
					entsprechenden Kombinations-Regeln können noch selbst Einschränkungen bzgl. der
					ProductTags enthalten und ggf. dadurch nicht als ReturnFlightOnly verwendet werden. </para>
				<para xml:id="det_2110" xml:lang="de"> </para>
			</section>
			<section>
				<title><phrase xml:id="det_2111" xml:lang="de">Beispiele für OnewayFlight-Only-Produktregeln</phrase></title>
				<para xml:id="det_2112" xml:lang="de">Ein Einzelflug-Produkt benutzt die in der Komponente Flight definierten Einzelflüge aus
					normalen und erweiterten Einzelflügen. </para>
				<para xml:id="det_2113" xml:lang="de"> </para>
			</section>
			<section>
				<title><phrase xml:id="det_2114" xml:lang="de">Beispiele für Pauschal-Produktregeln</phrase></title>
				<para xml:id="det_2115" xml:lang="de">Pauschalangebote beinhalten häufig Flug plus Unterkunft. Dieses Produkt bedient sich der
					Komponenten Flug mit den dort definierten normalen und erweiterten Hin- und Rückflügen und
					Unterkunft.</para>
				<para xml:id="det_2116" xml:lang="de"> </para>
			</section>
			<section>
				<title><phrase xml:id="det_2117" xml:lang="de">Beispiel für Regeln von optinalen Zusatzleistungen für Hotels</phrase></title>
				<para xml:id="det_2118" xml:lang="de"> Die AddonAccommodationRules definieren kein fixes Produkt sondern die flexible
					optionale Produkterweiterung eines Hotelangebotes. Insofern ist es aktuell nicht
					vorgesehen, dass die AddonAccommodationRules in der Produktsuche berücksichtigt werden.
					Vielmehr sind diese zur nachgeschalteten Suche gedacht, wenn man sich bereits für ein
					Hotel entschieden hat. Ausgangspunkt ist demnach ein Objekt aus Accommodations, zu dem ein
					oder mehrere Objekte aus dem Zweig AddonServices entsprechend der AddonAccommodationRules
					passen. Jeder AddonService kann selbst Einschränkungen bzgl. der ProductTags enthalten und
					ggf. dadurch nicht als nachgeschalteter AddonService verwendet werden. </para>
				<para xml:id="det_2119" xml:lang="de"> </para>
			</section>
			<section>
				<title><phrase xml:id="det_2120" xml:lang="de">Beispiel für Regeln von optinalen Zusatzleistungen von Einzelflügen</phrase></title>
				<para xml:id="det_2121" xml:lang="de"> Die AddonFlightRules definieren kein fixes Produkt sondern die flexible optionale
					Produkterweiterung eines Einzel-Flugangebotes.</para>
				<para xml:id="det_2122" xml:lang="de"> </para>
			</section>
			<section>
				<title><phrase xml:id="det_2123" xml:lang="de">Beispiel für Regeln von optinalen Zusatzleistungen von Returnflügen</phrase></title>
				<para xml:id="det_2124" xml:lang="de"> Die AddonFlightRules definieren kein fixes Produkt sondern die flexible optionale
					Produkterweiterung eines Flugangebotes.</para>
				<para xml:id="det_2125" xml:lang="de"> </para>
			</section>
		</section>
		<section xml:id="OtdsPropertiesComponentsProducts">
			<title><phrase xml:id="det_2126" xml:lang="de">Properties der Komponenten</phrase></title>
			<para xml:id="det_2127" xml:lang="de">Mithilfe der Properties können statische und dynamische Eigenschaften einer Komponente
				definiert werden. Zum Beispiel können sich in Abhängigkeit des Reisedatums gewisse
				Eigenschaften, wie das Freizeitangebot eines Hotels ändern. Klassische Beispiele für
				saisonabhängige Angebote sind Ski- oder Surf-Schulen, die in der Off-Season geschlossen
				haben.</para>
			<para xml:id="det_2128" xml:lang="de">
				<link xlink:href="../../example/PropertiesExamples.xml">Beispiele für die Verwendung von
					(dynamischen) Properties</link>
			</para>

		</section>

	</section>
	<section xml:id="OtdsProcess">
		<title><phrase xml:id="det_2129" xml:lang="de">Das theoretische Verarbeitungsmodell</phrase></title>

		<para xml:id="det_2130" xml:lang="de">In diesem Kapitel wird das theoretische Verarbeitungsmodell vorgestellt. Dieses
			Verarbeitungsmodell ist dazu gedacht, das Verständnis der OTDS-Datenstruktur weiter zu vertiefen
			und Missverständnisse zu vermeiden. Dementsprechend handelt es sich in der Tat nur um ein
			theoretisches Verarbeitungsmodell, welches für die Benutzung in der Praxis nicht unbedingt
			geeignet ist oder zumindest optimiert werden muss. Gerade in Bezug auf die Masse der Daten und die
			Geschwindigkeit der Verarbeitung wird das theoretische Verarbeitungsmodell in der Praxis kaum
			benutzbar sein. Jede Optimierung in dem praktisch umgesetzten Verarbeitungsmodell legt dabei
			zwingend zu Grunde, dass das theoretische Verarbeitungsmodell auch durch die Optimierung
			vollständig erfüllt wird.</para>

		<section xml:id="OtdsProcessOverview">
			<title><phrase xml:id="det_2131" xml:lang="de">Überblick</phrase></title>
			<para xml:id="det_2132" xml:lang="de">Basis der OTDS Verarbeitung ist ein Begriffs- und Datenmodell, welches die Eigenschaften und
				Struktur der in OTDS relevanten Artefakte beschreibt. Dieses Modell definiert eine
				einheitliche Sprache und Semantik, auf welcher die einzelnen Verarbeitungsschritte
				aufbauen.</para>

			<para xml:id="det_2133" xml:lang="de">Das theoretische Verarbeitungsmodell unterteilt sich in verschiedene Einzelmodelle, die
				jeweils aufeinander aufbauen und separat betrachtet werden können. Wir beginnen dabei mit der
				generellen Anforderung, die eine OTDS-Lieferung und Verarbeitung erfüllen soll. Es wird ein
				Anfragekontext definiert, der die Ausgangssituation einer OTDS-Verarbeitung beschreibt
				(Beispiel: die Betrachtung eines bestimmten Reisetermins mit einer bestimmten Dauer und einem
				bestimmten Buchungstermin).</para>

			<para xml:id="det_2134" xml:lang="de">Nach der Definition des Anfragekontexts wenden wir uns der Auswertung der Produktregeln zu.
				Ergebnis dieser Auswertung ist die Definition der Menge aller zum Anfragekontext passenden
				Angebote und deren Eigenschaften. Angebote bilden an dieser Stelle nur die angebotene Ware
				(welche Reisen gibt es theoretisch für den Anfragekontext?) ohne konkrete Auswertung der
				Verfügbarkeit oder Preise ab. Im Zuge der Auswertung werden dementsprechend
				Verarbeitungsmodelle vorgestellt, wie Tags, Keys und alle anderen relevanten Daten bzgl. des
				jeweiligen Angebotes eingesammelt werden.</para>

			<para xml:id="det_2135" xml:lang="de">Nachdem alle Informationen bzgl. der einzelnen Angebote vorliegen, werden die
				Verarbeitungsmodelle für die Verfügbarkeitsauswertung und final die Preisberechnung
				vorgestellt.</para>

			<para xml:id="det_2136" xml:lang="de">Führt man die Verfügbarkeit und die Preisberechnung für jedes Angebot der Ergebnismenge aus,
				so erhält man alle zum Anfragekontext passenden Preisangebote.</para>

			<para xml:id="det_2137" xml:lang="de">Die Grundverarbeitung von OTDS gliedert sich in die Schritte:</para>
			<itemizedlist>
				<listitem>
					<para xml:id="det_2138" xml:lang="de">Lieferungsverarbeitung und Validierung</para>
				</listitem>
				<listitem>
					<para xml:id="det_2139" xml:lang="de">Verarbeitung der <code>GlobalValues</code> und Produktauswahl</para>
				</listitem>
				<listitem>
					<para xml:id="det_2140" xml:lang="de">Erstellung des Anfragekontextes</para>
				</listitem>
				<listitem>
					<para xml:id="det_2141" xml:lang="de">Angebotserzeugung</para>
					<itemizedlist>
						<listitem>
							<para xml:id="det_2142" xml:lang="de">Erzeugung der expandierten Produktregeln</para>
						</listitem>
						<listitem>
							<para xml:id="det_2143" xml:lang="de">Erzeugung der Angebotskandidaten</para>
						</listitem>
						<listitem>
							<para xml:id="det_2144" xml:lang="de">Allokation</para>
						</listitem>
						<listitem>
							<para xml:id="det_2145" xml:lang="de">Auswertung der Filterbedingungen</para>
						</listitem>
					</itemizedlist>
				</listitem>
				<listitem>
					<para xml:id="det_2146" xml:lang="de">Verfügbarkeitsprüfung</para>
				</listitem>
				<listitem>
					<para xml:id="det_2147" xml:lang="de">Preisberechnung</para>
				</listitem>
				<listitem>
					<para xml:id="det_2148" xml:lang="de">Verarbeitung von Eigenschaften (<code>Properties</code>,
						<code>Booking</code>)</para>
				</listitem>
			</itemizedlist>

			<para xml:id="det_2149" xml:lang="de">Viele dieser Verarbeitungsschritte basieren auf einigen zentralen und an mehreren Stellen
				verwendeten Untermodellen der OTDS Verarbeitung:</para>

			<itemizedlist>
				<listitem>
					<para xml:id="det_2150" xml:lang="de">Auswertung generischer Attribute (<code>Source</code>, <code>Component</code>,
							<code>DayType</code> usw.)</para>
				</listitem>
				<listitem>
					<para xml:id="det_2151" xml:lang="de">Auswertung von Bedingungen (<code>Filter</code> und <code>Condition</code>)</para>
				</listitem>
			</itemizedlist>

		</section>
		<section xml:id="OtdsProcessDataModel">
			<title><phrase xml:id="det_2152" xml:lang="de">Das OTDS Datenmodell</phrase></title>

			<para xml:id="det_2153" xml:lang="de">Die Datenstruktur von OTDS ist dahingehend optimiert, dass die Lieferung von redundanten
				Daten möglichst vermieden wird. Um dies zu erreichen, erlaubt OTDS die flexible
				Zusammenstellung von Angeboten aus einzelnen Teilen (Komponenten) mittels eines Regelsystems
				(Rules).</para>

			<para xml:id="det_2154" xml:lang="de">Die Zusammenstellung der Produkte lässt sich am einfachsten durch ein Substitutionsverfahren
				erläutern. Aus dem Ergebnis des Substitutionsverfahren folgt dann schnell das eigentliche OTDS
				Datenmodell.</para>

			<section xml:id="OtdsProcessDataModelSubstitutions">
				<title><phrase xml:id="det_2155" xml:lang="de">Substitutionen innerhalb der OTDS Datenstruktur</phrase></title>

				<para xml:id="det_2156" xml:lang="de">Basis des Substitutionsverfahrens ist die <emphasis>Komponenten- und
						Unterkomponentenstruktur</emphasis> der OTDS-Daten. Komponenten sind z.B. ein Hotel
					oder ein Flug oder auch deren Bestandteile wie z.B. eine Verpflegung oder ein Zimmer. Die
					genaue Definition des Komponentenbegriffes ist unter <xref linkend="OtdsProcessDataModelComponent"/> zu finden.</para>

				<para xml:id="det_2157" xml:lang="de">Das Regelsystem referenziert diese Komponenten durch Platzhalter. Im Rahmen der
					Verarbeitung werden diese Platzhalter durch die in der entsprechenden Komponente
					gelieferten Daten substituiert. So entsteht zu jedem Produkt ein Produktdatenbaum.
					Beispiele in den folgenden Kapiteln werden diesen Schritt veranschaulichen.</para>

				<section xml:id="OtdsProcessDataModelSubstitutionBrand">
					<title><phrase xml:id="det_2158" xml:lang="de">Substitution der Brands</phrase></title>

					<para xml:id="det_2159" xml:lang="de">In OTDS werden die Brands auf oberster Ebene parallel zu Products und Accommodations
						definiert. Brands spielen eine Sonderrolle in der OTDS Verarbeitung: Sie werden
							<emphasis>implizit</emphasis> (obwohl nicht explizit in der Produktregel
						referenziert) in jedem Produktdatenbaum substituiert. Im Weiteren wird deutlich, dass
						dies bedeutet, dass jedes Angebot für jeden Brand ausgewertet wird.</para>
				</section>
				<section xml:id="OtdsProcessDataModelSubstitutionProduct">
					<title><phrase xml:id="det_2160" xml:lang="de">Substitution innerhalb der Products</phrase></title>

					<para xml:id="det_2161" xml:lang="de">Die Substitution mittels der Produktregeln stellt das zentrale Mittel der
						Produktzusammenstellung in OTDS dar. Eine Produktregel spezifiziert durch Platzhalter,
						welche die Hauptkomponenten (Komponenten auf der obersten Ebene) referenzieren exakt,
						welche Anteile für dieses Produkt zusammenzustellen sind.</para>

					<programlisting><![CDATA[<Product ProductType="FlightAccommodation">
  <Components>
    <Accommodation/>
    <ReturnFlight/>
  </Components>
  <Filter>
    <MatchEqual>
      <Element Source="Accommodation">CatchmentAirport</Element>
      <Element Source="ReturnFlight.Outbound">ArrivalAirpot</Element>
    </MatchEqual>
  </Filter>
</Product>]]></programlisting>

					<para xml:id="det_2162" xml:lang="de">Dieses Beispiel besagt, dass ein Angebot vom Typ <code>FlightAccommodation</code>
						aus den Komponenten <code>Accommodation</code> und <code>ReturnFlight</code>
						zusammengestellt wird. Im Rahmen des Verarbeitungsdatenmodells werden an dieser Stelle
						nun die <code>/Otds/Accommodations</code> und <code>/Otds/Flights/ReturnFlights</code>
						Knoten für die Platzhalter <code>Accommodation</code> und <code>ReturnFlight</code>
						substituiert.</para>

					<para xml:id="det_2163" xml:lang="de">Die Flexibilität dieses Systems zeigt sich, wenn verschiedene Produktregeln
						definiert werden. Jedes dieser Produkte referenziert möglicherweise dieselben
						Bestandteile, stellt sie jedoch anders zusammen. So wird Redundanz vermieden. Hinzu
						kommt, dass jede Produktspezifikation eine Reihe von zusätzlichen Angaben beinhalten
						kann, welche die Angebotserzeugung mittels dieser Produktregel beeinflussen (z.B.
							<code>Tag</code> oder <code>Filter</code>).</para>

					<para xml:id="det_2164" xml:lang="de">Es ist erlaubt, dass mehrere Produktspezifikationen denselben
							<code>ProductType</code> enthalten dürfen. Alle Spezifikationen mit demselben
							<code>ProductType</code> definieren in ihrer Gesamtheit alle Angebote des
						entsprechenden Typs. Konkret bedeutet dies, dass nicht alle
							<code>FlightAccommodation</code> Angebote dieselbe Struktur haben müssen.
						Folgendes Beispiel fügt ein zusätzliches Pflicht-Addon hinzu. Diese Regel wird
						normalerweise zusätzlich zur vorherigen Regel angegeben werden. Es werden somit sowohl
						Angebote mit als auch solche ohne <code>Addon</code> erzeugt.</para>

					<programlisting><![CDATA[<Product ProductType="FlightAccommodation">
  <Components>
    <Accommodation/>
    <ReturnFlight/>
    <Addon/>
  </Components>
  <Filter>
    <And>
      <MatchEqual>
        <Element Source="Accommodation">CatchmentAirport</Element>
        <Element Source="ReturnFlight.Outbound">ArrivalAirpot</Element>
      </MatchEqual>
      <MatchEqual>
        <Tag Source="SellingAccom" Class="IncludedAddon"/>
        <Tag Source="Addon" Class="AddonType"/>
      </MatchEqual>
    </And>
  </Filter>
</Product>]]></programlisting>

				</section>
				<section xml:id="OtdsProcessDataModelCombiComponents">
					<title><phrase xml:id="det_2165" xml:lang="de"><code>CombiComponent</code>, <code>DefineComponent</code> und
							<code>DefinedComponent</code></phrase></title>

					<para xml:id="det_2166" xml:lang="de">Diese Elemente bieten die Möglichkeit, Komponenten zu gruppieren, neu
						zusammenzusetzen und wiederverwendbare Komponentenstrukturen zu definieren und zu
						referenzieren. Insbesondere (und dies ist in OTDS-1.0 auch die einzige Anwendung)
						können Flüge aus einzelnen Teilflügen zusammengestellt und in anderen Regeln als
						Ganzes referenziert werden.</para>

					<para xml:id="det_2167" xml:lang="de">Damit eine zusammengesetzten Komponentenstruktur als Komponente eines anderen Typs
						interpretiert werden kann, kann die <emphasis>Rolle</emphasis> entsprechend vergeben
						werden. Die Rolle ist der sichtbare Typ einer Komponente oder Komponentenstruktur. Die
						zusammengesetzte Komponente 'verkleidet' sich sozusagen als Komponente diesen Typs,
						bleibt aber in ihrer inneren Struktur unverändert. Auch alle Zugriffe auf
						Eigenschaften (z.B. Tags) dieser zusammengesetzten Komponente erfolgen über die innere
						Struktur. Für das Verarbeitungsmodell ist eine zusammengesetzte Komponente nur ein
						Platzhalter für eine komplexere Struktur aus mehreren Einzelkomponenten.</para>

					<variablelist>
						<varlistentry>
							<term xml:id="det_2168" xml:lang="de"><emphasis><code>CombiComponent</code></emphasis></term>
							<listitem>
								<para xml:id="det_2169" xml:lang="de">Eine <code>CombiComponent</code> erlaubt es, die Rolle einer Komponente
									oder auch einer Struktur aus mehreren Komponenten zu ändern. So kann z.B.
									zwei <code>OnewayFlight</code> Elementen die Rolle
										<code>ReturnFlight</code> Rolle zugeordnet werden.</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2170" xml:lang="de"><emphasis><code>DefineComponent</code></emphasis></term>
							<listitem>
								<para xml:id="det_2171" xml:lang="de">Eine <code>DefineComponent</code> ermöglicht es, eine Unterstruktur von
									Komponenten zu definieren. Diese Struktur kann dann aus
										<code>Product</code> und aus weiteren <code>DefineComponent</code>
									Definitionen mittels <code>DefinedComponent</code> referenziert
									werden.</para>
								<para xml:id="det_2172" xml:lang="de">Eine <code>DefineComponent</code> wird durch ihre Rolle identifiziert.
									Einer Rolle dürfen auch mehrere solche Definitionen zugeordnet werden.
									Wird diese Rolle referenziert, so wird diese Referenz durch
										<emphasis>alle</emphasis> diese Definitionen nacheinander
									ersetzt.</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2173" xml:lang="de"><emphasis><code>DefinedComponent</code></emphasis></term>
							<listitem>
								<para xml:id="det_2174" xml:lang="de">Eine <code>DefinedComponent</code> referenziert eine zuvor mittels
										<code>DefineComponent</code> definierte Komponentenstruktur.</para>
							</listitem>
						</varlistentry>
					</variablelist>

					<para xml:id="det_2175" xml:lang="de">Die Interpretation als zusammengesetzte Komponente erfolgt durch korrekte Auswertung
						der Bezüge auf diese Komponente: Das <code>Source</code> Attribut wird so ausgewertet,
						dass der Eindruck einer zusammengesetzten Komponente entsteht. Andere Bezüge (z.B. die
							<code>Airport</code> Bedingung) sind so definiert, dass sie beim Zugriff auf eine
						Struktur von mehreren Komponenten ein sinnvolles Ergebnis liefern.</para>

					<para xml:id="det_2176" xml:lang="de">Konkreter: <code>Source</code> Angaben, welche sich auf kombinierte Komponenten
						beziehen, liefern unter Umständen mehr als eine Komponente zurück. Diese werden dann
						je nach Kontext verarbeitet. Eine <code>Airport</code> Bedingung z.B. sucht sich je
						nach Flughafentyp (<code>Departure</code>, <code>Arrival</code> oder
							<code>Catchment</code>) die richtige Komponente aus dieser Menge heraus, also z.B.
						den zeitlich ersten Flug für <code>Departure</code>. So entsteht der Eindruck einer
						neuen, zusammengesetzten Komponente.</para>

					<para xml:id="det_2177" xml:lang="de">Die Definition einer <code>DefineComponent</code> entspricht weitestgehend dem
						Inhalt eines <code>Product</code> Elementes. Die Spezifikation in einem
							<code>DefineComponent</code> Element darf auch <code>DefinedComponent</code>
						Elemente enthalten (wobei diese Referenz auf später in
							<emphasis>document-order</emphasis> definierte <code>DefineComponent</code>
						Elemente eingeschränkt ist um Rekursion auszuschließen. Der Begriff
							<emphasis>document-order</emphasis> ist definiert im <emphasis>XQuery 1.0 and
							XPath 2.0 Data Model</emphasis> des W3C).</para>

					<para xml:id="det_2178" xml:lang="de">Die Sinnhaftigkeit einer solchen Zusammenstellung wird von der OTDS Verarbeitung
						nicht überprüft: Es ist z.B. möglich, einer <code>Accommodation</code>-Komponente die
						Rolle einer <code>BookingClass</code> zu geben. Da die <code>Accommodation</code>
						Komponente aber über andere Eigenschaften verfügt als die <code>BookingClass</code>,
						wird der Versuch auf Eigenschaften dieser Komponte zuzugreifen fehlschlagen.</para>

					<para xml:id="det_2179" xml:lang="de">Sinnvoll ist die Zusammenstellung von Komponenten in einer Form, welche die Struktur
						der dargestellten Komponente abbildet. Besitzt die dargestellte Komponente
						Unterkomponenten, so sollte die zusammengesetzte Struktur dieselben Unterkomponenten
						enthalten (wobei diese auch Unter-Unterkomponenten sein dürfen). Diese Einschränkungen
						finden sich auch in der Definition des <code>Source</code> Attributs wieder: Auf nicht
						korrekt zusammengesetzte Komponenten kann mittels <code>Source</code> nicht
						zugegriffen werden, da die Definition der <code>Source</code> nur bestimmte Angaben
						zulässt (Beispiel: Ein Zugriff auf <code>SellingAccom.BookingClass</code> wäre sinnlos
						und wird in <code>Source</code> nicht erlaubt. Es wäre zwar syntaktisch möglich eine
						solche Struktur mittels <code>CombiComponent</code> zu definieren, aber eine solche
						Struktur kann nicht mehr referenziert werden).</para>

					<para xml:id="det_2180" xml:lang="de">Hier beispielhaft die Definition eines einfachen aus zwei Einzelfügen
						zusammengesetzten <code>ReturnFlight</code> (zum <code>DayAllocationIndex</code>
						Attribut siehe <xref linkend="OtdsProcessProductAllocationTime"/>):</para>

					<programlisting><![CDATA[<DefineComponent Role="ReturnFlight">
  <Components>
    <CombiComponent Role="Outbound" DayAllocationIndex="-1">
      <OnewayFlight/>
    </CombiComponent>
    <CombiComponet Role="Inbound" DayAllocationIndex="1">
      <OnewayFlight/>
    </CombiComponent>
  </Components>
  <Filter>
    <And>
      <MatchEqual>
        <Element Source="Outbound">DepartureAirport</Element>
        <Element Source="Inbound">ArrivalAirport</Element>
      </MatchEqual>
      <MatchEqual>
        <Element Source="Outbound">ArrivalAirport</Element>
        <Element Source="Inbound">DepartureAirport</Element>
      </MatchEqual>
    </And>
  </Filter>
</DefineComponent>]]></programlisting>

					<para xml:id="det_2181" xml:lang="de">Die Substitution für diese Spezifikation folgt denselben Regeln:
							<code>OnewayFlight</code> wird durch <code>/Otds/Flights/OnewayFlights</code>
						substituiert, in diesem Falle zweimal (!). Wird nun in einer Produktspezifikation
						(oder auch einer anderen zusammengesetzten Komponente) ein zusammengesetzter Flug
						mittels <code>&lt;DefinedComponent Role="ReturnFlight"/&gt;</code> referenziert, so
						werden an dieser Stelle zunächst die vollständige Definition aus
							<code>DefineComponent</code> und in dieser Definition die referenzierten
						Komponentenbäume (also <code>OnewayFlights</code>) substituiert.</para>

					<para xml:id="det_2182" xml:lang="de">Da zu einer <code>Role</code> mehrere <code>DefineComponent</code> Spezifikationen
						existieren können, ist es möglich, dass mehrere Varianten für eine so definierte
						Komponente existieren (Beispiel: Ein zusammengesetzter Einfach-Flug aus zwei oder drei
						Einzelflügen). Die Substitution wird dann separat für jede Variante durchgeführt. Es
						entstehen also mehrere expandierte Produktdatenbäume. Jeder dieser Bäume wird separat
						verarbeitet. Alle Ergebnisse werden zuletzt zusammengefasst.</para>
				</section>
				<section xml:id="OtdsProcessDataModelSubstitutionResult">
					<title><phrase xml:id="det_2183" xml:lang="de">Ergebnis der Substitution</phrase></title>

					<para xml:id="det_2184" xml:lang="de">Das Endergebnis der Substitution ist <emphasis>ein</emphasis> expandierter Datenbaum
						für jede <emphasis>expandierte</emphasis> Produktregel (eine expandierte Produktregel
						ist eine Regel nach Auflösung aller <code>DefinedComponent</code> Referenzen). Ein
						einfaches <code>FlightAccommodation</code> Produkt erzeugt zum Beispiel folgenden
						Datenbaum (das folgende Beispiel ist <emphasis>kein</emphasis> OTDS Dokument, sondern
						verdeutlicht nur das substituierte Datenmodell):</para>

					<programlisting><![CDATA[<Product ProductType="FlightAccommodation">
  <Brands>
    <Brand> ... </Brand>
    <Brand> ... </Brand>
    ...
  </Brands>
  <Accommodations>
    <Accommodation> ... </Accommodation>
    <Accommodation> ... </Accommodation>
    ...
  </Accommodations>
  <ReturnFlights>
    <ReturnFlight> ... </ReturnFlight>
    <ReturnFlight> ... </ReturnFlight>
    ...
  </ReturnFlights>
  <Filter>
    <MatchEqual>
      <Element Source="Accommodation">CatchmentAirport</Element>
      <Element Source="ReturnFlight.Outbound">ArrivalAirpot</Element>
    </MatchEqual>
  </Filter>
</Product>]]></programlisting>

					<para xml:id="det_2185" xml:lang="de">Ein komplexeres Beispiel ergibt sich, wenn auch definierte Komponenten im Spiel
						sind. So führt die Produktspezifikation</para>

					<programlisting><![CDATA[<Product ProductType="FlightAccommodation">
  <Components>
    <Accommodation/>
    <DefinedComponent Role="ReturnFlight"/>
  </Components>
  <Filter>
    <MatchEqual>
      <Element Source="Accommodation">CatchmentAirport</Element>
      <Element Source="ReturnFlight.Outbound">ArrivalAirpot</Element>
    </MatchEqual>
  </Filter>
</Product>]]></programlisting>

					<para xml:id="det_2186" xml:lang="de">unter Anwendung der im vorherigen Kapitel angegebenen Definition für die
							<code>DefinedComponent</code> mit Rolle <code>ReturnFlight</code> zu folgendem
						Produktdatenbaum:</para>

					<programlisting><![CDATA[<Product ProductType="FlightAccommodation">
  <Brands>
    <Brand> ... </Brand>
    <Brand> ... </Brand>
    ...
  </Brands>
  <Accommodations>
    <Accommodation> ... </Accommodation>
    <Accommodation> ... </Accommodation>
    ...
  </Accommodations>
  <CombiComponent Role="ReturnFlight">
    <CombiComponent Role="Outbound" DayAllocationIndex="-1">
      <OnewayFlights>
        <OnewayFlight> ... <OnewayFlight>
        <OnewayFlight> ... <OnewayFlight>
        ...
      </OnewayFlights>
    </CombiComponent>
    <CombiComponent Role="Inbound" DayAllocationIndex="1">
      <OnewayFlights>
        <OnewayFlight> ... <OnewayFlight>
        <OnewayFlight> ... <OnewayFlight>
        ...
      </OnewayFlights>
    </CombiComponent>
    <Filter>
      <And>
        <MatchEqual>
          <Element Source="Outbound">DepartureAirport</Element>
          <Element Source="Inbound">ArrivalAirport</Element>
        </MatchEqual>
        <MatchEqual>
          <Element Source="Outbound">ArrivalAirport</Element>
          <Element Source="Inbound">DepartureAirport</Element>
        </MatchEqual>
      </And>
    </Filter>
  </CombiComponent>
  <Filter>
    <MatchEqual>
      <Element Source="Accommodation">CatchmentAirport</Element>
      <Element Source="ReturnFlight.Outbound">ArrivalAirpot</Element>
    </MatchEqual>
  </Filter>
</Product>]]></programlisting>

				</section>
				<section xml:id="OtdsProcessDataModelSubstitutionAddons">
					<title><phrase xml:id="det_2187" xml:lang="de">Verarbeitung von After-Sale Angeboten: <code>ProductComponent</code></phrase></title>

					<para xml:id="det_2188" xml:lang="de">OTDS bietet mittels der speziellen Komponentenangabe <code>ProductComponent</code>
						in den Produktregeln (also in <code>Product/Components</code>) eine flexible
						Möglichkeit, nachgeordnete Produkte zu definieren. Unter 'nachgeordnet' wird
						verstanden, dass diese Produkte abhängig von einem zuvor gebuchten Angebot sind. Der
						Endnutzer wählt also zunächst das Hauptangebot aus. In einem zweiten Schritt können
						dann nachgeordnete Angebote passend zum Hauptangebot gebucht werden. Dieses Konzept
						bildet z.B. optionale Addons im After-Sale Markt ab.</para>

					<para xml:id="det_2189" xml:lang="de">After-Sale Produkte werden wie normale Produkte definiert, enthalten jedoch eine
							<code>ProductComponent</code>. Diese spezielle Komponente referenziert das
						Hauptprodukt mittels <code>ProductType</code>. Das After-Sale Produkt definiert ein
						zweistufig kalkuliertes Angebot: Zunächst wird das Hauptprodukt
							<emphasis>vollständig</emphasis> ausgewertet. Im zweiten Schritt referenziert das
						After-Sale Produkt dieses Angebot und definiert die Zusatzleistung. Die Abhängigkeit
						zwischen After-Sale Produkt und Hauptprodukt ist also einseitig: Das After-Sale
						Produkt wird zwar vom Hauptprodukt beeinflusst, hat aber keine Auswirkung auf das
						Hauptprodukt. Im theoretischen Verarbeitungsmodell bedeutet dies, dass
							<code>ProductComponent</code> durch die <emphasis>vollständig
							verarbeitete</emphasis> Menge der von dem referenzierten Hauptprodukt erzeugen
						Angebote ersetzt wird.</para>

					<para xml:id="det_2190" xml:lang="de">After-Sale Produkte sind sowohl von der Belegung (also den Personen) als auch
						zeitlich (Reisedauer) an das Hauptprodukt gebunden. OTDS bietet aber die Möglichkeit,
						das After-Sale Produkt innerhalb dieses Rahmens frei zu platzieren. In OTDS-1.0 wird
						diese Möglichkeit zunächst nur für die zeitliche Platzierung angeboten: Der oder die
						Termine eines oder mehrerer After-Sale Produkte kann mit diesen Möglichkeiten frei
						innerhalb der Hauptreise verschoben werden. Die Platzierung kann sowohl im Rahmen der
						Angebotsspezifikation fest vorgegeben als auch als zusätzlich abzufragender
						Reiseparameter vom Nutzer vorgenommen werden.</para>

					<para xml:id="det_2191" xml:lang="de">Ein Vertriebssystem ordnet diese After-Sale Produkte anhand des referenzierten
							<code>ProductType</code> in der <code>ProductComponent</code> den entsprechenden
						Angeboten zu. Die konkret verfügbaren Angebote werden dann wiederum abhängig vom
						Hauptangebot erzeugt, da sich die Filterbedingungen auch auf das Hauptangebot beziehen
						dürfen.</para>
				</section>
			</section>
			<section xml:id="OtdsProcessDataModelAllocation">
				<title><phrase xml:id="det_2192" xml:lang="de">Zeit- und Personenzuweisung: Allokation</phrase></title>

				<para xml:id="det_2193" xml:lang="de">Eine wichtige Rolle für das OTDS Verarbeitungsmodell spielt der Vorgang der
						<emphasis>Allokation</emphasis>. Dieser Vorgang beschreibt die Zuordnung der Elemente
					der begrenzten Reiseparametermengen zu Komponenteninstanzen (oder
					Unterkomponenteninstanzen). Unter Reiseparametermengen werden die Tage und Personen der
					Reise verstanden. Diese müssen so auf die einzelnen Komponenten- und
					Unterkomponenteninstanzen verteilt werden, dass jede Person zu jedem Zeitpunkt der Reise
					abgedeckt ist: Jede Person braucht einen Flug, alle benötigen eine Übernachtung
					usw.</para>

				<para xml:id="det_2194" xml:lang="de">Wie schon oben angeklungen wird zwischen der Personen- und der Zeitallokation
					unterschieden:</para>

				<itemizedlist>
					<listitem>
						<para xml:id="det_2195" xml:lang="de">Unter <emphasis>Personenallokation</emphasis> wird die Zuteilung von Personen zu
							Komponenteninstanzen verstanden.</para>
					</listitem>
					<listitem>
						<para xml:id="det_2196" xml:lang="de">Unter <emphasis>Zeitallokation</emphasis> wird die Zuteilung von Tagen zu
							Komponenteninstanzen verstanden.</para>
					</listitem>
				</itemizedlist>

				<para xml:id="det_2197" xml:lang="de">Dieses Modell erlaubt prinzipiell beliebig komplexe Zuordnungsszenarion mit mehreren
					Zimmern, Hotels, Flügen oder Transfers. In OTDS-1.0 ist diese Komplexität auf folgende
					einfache Allokationsverfahren eingeschränkt:</para>

				<itemizedlist>
					<listitem>
						<para xml:id="det_2198" xml:lang="de">Die <emphasis>Personenallokation</emphasis> erfolgt immer als vollständige
							Allokation <emphasis>aller</emphasis> Reiseteilnehmer. Es werden in OTDS-1.0 keine
							gesplitteten Belegungen unterstützt.</para>
					</listitem>
					<listitem>
						<para xml:id="det_2199" xml:lang="de">Die <emphasis>Zeitallokation</emphasis> erfolgt in OTDS-1.0 nur sequentiell.
							Zwar können verschiedene Komponenten zeitlich überlagert werden, diese Zuweisungen
							erfolgen dann aber komplett unabhängig voneinander. Die Verteilung von Tagen
							abhängig von Personen wird nicht erlaubt.</para>
					</listitem>
				</itemizedlist>

				<para xml:id="det_2200" xml:lang="de">Hier Beispiele für die Allokation: Bei einer 7-tägigen Reise von 3 Personen ohne
					Übernachtflüge werden dem Hinflug der erste Tag, dem Rückflug der letzte Tag und dem Hotel
					alle Tage (eigentlich Übernachtungen) außer dem letzen Tag zugeteilt. Die Personen werden
					grundsätzlich vollständig allen drei Teilkomponenteninstanzen zugeordnet.</para>

				<para xml:id="det_2201" xml:lang="de">Die Allokation erfolgt auf verschiedenen Ebenen der Komponentenhierarchie. So wird die
					Personenallokation immer durch die (Unter-)Komponenteninstanz mit <code>Occupancy</code>
					Element vorgenommen, die Zeitallokation kann über die
						<code>NeighbourComponentCorrection</code> gesteuert werden und erfolgt dementsprechend
					durch die Unterkomponenteninstanzen mit diesem Element. Als Ergebnis der Allokation werden
					den Komponenteninstanzen Tage und Personen zugewiesen, auf welche sich die weiteren
					Verarbeitungsschritte beziehen.</para>

				<para xml:id="det_2202" xml:lang="de">Eine zusätzliche Erweiterung ermöglicht die Abbildung von Zusatzleistungen (sowohl
					optionale Zusatzleistungen im After-Sale Markt als auch obligatorische Zusatzleistungen,
					welche Teil des Hauptproduktes sind). Auch den Zusatzleistungen werden durch den
					Allokationsprozess Personen und Tage zugeordnet. Diese Zuweisung erfolgt üblicherweise
					parallel zur eigentlichen Hauptallokation, d.h. dieselben Tage können sowohl dem
					eigentlichen Hauptprodukt (also dem Hotelaufenthalt) als auch der Zusatzleistung (z.B.
					einer Stadtführung) zugeordnet werden.</para>

				<para xml:id="det_2203" xml:lang="de">Prinzipiell ist es notwendig für jede solche Zusatzleistung flexibel sowohl die
					relevanten Personen als auch die relevanten Tage zu bestimmen. In OTDS-1.0 werden auch
					Zusatzleistungen immer allen Personen der Reise gemeinsam zugeordnet. Die zeitliche
					Zuordnung jedoch lässt sich sowohl in der Produktregel als auch durch zusätzliche externe
					Parameter (externe Allokationsoffsets) flexibel steuern:</para>

				<itemizedlist>
					<listitem>
						<para xml:id="det_2204" xml:lang="de">In einer Produktregel kann eine solche Zusatzleistung relativ zum Hauptprodukt
							platziert werden. Beispiel: Die Stadtführung wird fest auf den 2.
							Hotelaufenthaltstag plaziert.</para>
					</listitem>
					<listitem>
						<para xml:id="det_2205" xml:lang="de">Durch eine entsprechende Definition im Rahmen der Produktregel kann alternativ
							auch die freie Platzierung der Zusatzleistung durch das Vertriebssystem (also
							letztendlich den buchenden Kunden) ermöglicht werden. Beispiel: Der Kunde kann bei
							der Buchung selbst entscheiden, auf welchen Tag der Reise er die Stadtführung
							legen möchte.</para>
					</listitem>
				</itemizedlist>

				<para xml:id="det_2206" xml:lang="de">Die Mächtigkeit der Bedingungsauswertung bleibt in beiden Möglichkeiten erhalten. Es
					können also weiterhin einzelne Tage oder Kombinationen verboten werden. Auch können Preise
					von der Platzierung der Zusatzleistung abhängen.</para>

				<para xml:id="det_2207" xml:lang="de">Die detaillierte Spezifikation der Allokationsverarbeitung ist unter <xref linkend="OtdsProcessProductAllocation"/> festgelegt.</para>
			</section>
			<section xml:id="OtdsProcessDataModelComponent">
				<title><phrase xml:id="det_2208" xml:lang="de">Komponente, Instanz, Produkt und Angebot</phrase></title>

				<para xml:id="det_2209" xml:lang="de">Diese Begriffe sind in OTDS von zentraler Bedeutung. Das Verständnis dieser Konzepte ist
					die Voraussetzung für das Verständnis des Verarbeitungsmodells. Dieses Kapitel definiert
					diese Begriffe und beschreibt sämtliche Eigenschaften.</para>

				<section xml:id="OtdsProcessDataModelComponentDefinition">
					<title><phrase xml:id="det_2210" xml:lang="de">Definitionen</phrase></title>

					<variablelist>
						<varlistentry>
							<term xml:id="det_2211" xml:lang="de"><emphasis>Komponente</emphasis></term>
							<listitem>
								<para xml:id="det_2212" xml:lang="de">Eine Komponente beschreibt die Eigenschaften einer Menge von
									gleichartigen Bestandteilen eines Angebotes. Ein Angebot wird durch die
									Auswahl von Elementen (Instanzen) aus diesen Bestandteilsmengen der für
									das Angebot relevanten Komponenten zusammengestellt.</para>
								<para xml:id="det_2213" xml:lang="de">Primär ist eine Komponente ein bestimmter Typ einer buchbaren Leistung,
									der Typ eines Teiles einer buchbaren Leistung oder auch der Typ und die
									Struktur einer Zusammensetzung aus mehreren buchbaren Leistungen.</para>
								<para xml:id="det_2214" xml:lang="de"><emphasis>Beispiele:</emphasis>
									<code>Accommodation</code> (Instanzen dieser Komponente sind die
										<code>Accommodation</code> Elemente) oder <code>Unit</code> (hier sind
									die Instanzen alle <code>Unit</code> Elemente gruppiert nach der
										<code>SellingAccom</code> Komponenteninstanz, in der sie
									liegen).</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2215" xml:lang="de"><emphasis>Instanz</emphasis></term>
							<listitem>
								<para xml:id="det_2216" xml:lang="de">Eine Instanz ist <emphasis>ein</emphasis> Element der durch eine
									Komponente beschriebene Menge von Angebotsbestandteilen.</para>
								<para xml:id="det_2217" xml:lang="de"><emphasis>Beispiel:</emphasis> Ein einzelnes <code>Accommodation</code>
									oder <code>Unit</code> Element.</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2218" xml:lang="de"><emphasis>Produkt</emphasis></term>
							<listitem>
								<para xml:id="det_2219" xml:lang="de">Ein Produkt beschreibt, welche Komponenten in einer Menge von Angeboten
									enthalten sein müssen.</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2220" xml:lang="de"><emphasis>Angebot</emphasis></term>
							<listitem>
								<para xml:id="det_2221" xml:lang="de">Ein Angebot ist eine konkrete Auswahl von Instanzen aus den im Produkt
									spezifizierten Komponenten.</para>
							</listitem>
						</varlistentry>
					</variablelist>

					<para xml:id="det_2222" xml:lang="de">Komponenten und Instanzen sind als Baum in Form von
							<emphasis>Unterkomponenten</emphasis> und <emphasis>Überkomponenten</emphasis>
						organisiert, dem erweiterten Produktdatenbaum (siehe <xref linkend="OtdsProcessDataModelSubstitutionResult"/>).</para>

				</section>
				<section xml:id="OtdsProcessDataModelComponentStaticProperties">
					<title><phrase xml:id="det_2223" xml:lang="de">Statische Komponenteneigenschaften</phrase></title>

					<para xml:id="det_2224" xml:lang="de">Komponenten werden weiter unterteilt in:</para>

					<variablelist>
						<varlistentry>
							<term xml:id="det_2225" xml:lang="de"><emphasis>echte Komponente</emphasis> (Code: real - <code>R</code>)</term>
							<term xml:id="det_2226" xml:lang="de"><emphasis>Pseudokomponente</emphasis> (Code: pseudo - <code>P</code>)</term>
							<listitem>
								<para xml:id="det_2227" xml:lang="de">Eine <emphasis>echte Komponente</emphasis> beschreibt eine buchbare
									Leistung oder Eigenschaft dieser buchbaren Leistung. Die Instanzen dieser
									Komponenten entsprechen den Elementen der OTDS Lieferung.</para>
								<para xml:id="det_2228" xml:lang="de">Eine <emphasis>Pseudokomponente</emphasis> ist das Gegenteil einer
									echten Komponente. Pseudokomponenten werden durch die Produktspezifikation
									angelegt.</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2229" xml:lang="de"><emphasis>Hauptkomponente</emphasis> (Code: main - <code>M</code>)</term>
							<term xml:id="det_2230" xml:lang="de"><emphasis>Nebenkomponente</emphasis> (Code: ancillary -
								<code>A</code>)</term>
							<listitem>
								<para xml:id="det_2231" xml:lang="de">Beide Begriffe beziehen sich immer auf echten Komponenten. Eine
										<emphasis>Hauptkomponente</emphasis> entspricht einem der möglichen
									Hauptbestandteile eines Angebotes: <code>Accommodation</code>,
										<code>OnewayFlight</code>, <code>ReturnFlight</code> oder
										<code>Addon</code></para>
								<para xml:id="det_2232" xml:lang="de">Eine <emphasis>Nebenkomponente</emphasis> ist genau das Gegenteil: Eine
									echte Komponente, welche keine Hauptkomponente ist.</para>
							</listitem>
						</varlistentry>
					</variablelist>

					<para xml:id="det_2233" xml:lang="de">Desweiteren kann die Baumstruktur der Komponenten in zwei Bereiche unterteilt
						werden:</para>

					<variablelist>
						<varlistentry>
							<term xml:id="det_2234" xml:lang="de"><emphasis>statische Komponentenstruktur</emphasis></term>
							<listitem>
								<para xml:id="det_2235" xml:lang="de">Die <emphasis>statische</emphasis> Komponentenstruktur beschreibt die
									feste Struktur innerhalb der echten Komponenten. Diese Struktur ist durch
									das OTDS Format vorgegeben. Diese Struktur ist Teil der statischen
									Komponenteneigenschaften.</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2236" xml:lang="de"><emphasis>dynamische Komponentenstruktur</emphasis></term>
							<listitem>
								<para xml:id="det_2237" xml:lang="de">Die <emphasis>dynamische</emphasis> Komponentenstruktur beschreibt die
									durch die Produktspezifikation und definierte Komponenten konfigurierbare
									Struktur des Komponentenbaumes. Diese Struktur ist Teil der im
									Folgekapitel beschriebenen dynamischen Komponenteneigenschaften.</para>
							</listitem>
						</varlistentry>
					</variablelist>

					<para xml:id="det_2238" xml:lang="de">Ein weiterer Satz von Komponenteneigenschaften beschäftigt sich mit der Allokation,
						also der Zuteilung von Terminen und Personen zu Komponenten (Siehe <xref linkend="OtdsProcessProductAllocation"/>):</para>

					<variablelist>
						<varlistentry>
							<term xml:id="det_2239" xml:lang="de"><emphasis>zeitallozierende Komponente</emphasis> (Code: time -
									<code>T</code>)</term>
							<listitem>
								<para xml:id="det_2240" xml:lang="de">Eine zeitallozierende Komponente ist primär an der Zeitallokation
									beteiligt. Instanzen dieser Komponente enthalten Eigenschaften, welche die
									zeitliche Einordnung der Komponente beeinflussen (Offsets).</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2241" xml:lang="de"><emphasis>zeitlich flexible Komponente</emphasis> (Code: fixed -
									<code>F</code>)</term>
							<listitem>
								<para xml:id="det_2242" xml:lang="de">Eine zeitallozierende Komponente ist flexibel, wenn sie von ihrer Art
									her beliebige Zeiträume abdecken kann (z.B. ein Hotel). Eine nicht
									flexible Komponente hingegen besitzt immer eine feste Dauer (z.B. ein
									Flug).</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2243" xml:lang="de"><emphasis>personenallozierende Komponente</emphasis> (Code: occupancy -
									<code>O</code>)</term>
							<listitem>
								<para xml:id="det_2244" xml:lang="de">Eine personenalloziernde Komponente ist primär an der Personenallokation
									beteiligt. Eine solche Komponente enthält eine <code>Occupancy</code> zur
									Steuerung der Allokation. In OTDS-1.0 ist die Personenallokation als
									formales Konzept schon eingeführt, jedoch nur sehr einfach umgesetzt. Die
									Flexibilität der Personenallokation wird sich in späteren OTDS Versionen
									sicherlich deutlich erweitern.</para>
							</listitem>
						</varlistentry>
					</variablelist>

					<para xml:id="det_2245" xml:lang="de">Die folgende Tabelle fasst die statischen Eigenschaften der Komponenten
						zusammen:</para>

					<table xml:id="OtdsProcessStaticComponent">
						<title><phrase xml:id="det_2246" xml:lang="de">Komponenteneigenschaften</phrase></title>
						<tgroup cols="7">
							<colspec align="left"/>
							<colspec align="center"/>
							<colspec align="center"/>
							<colspec align="center"/>
							<colspec align="center"/>
							<colspec align="center"/>
							<colspec align="center"/>
							<colspec align="center"/>
							<thead>
								<row>
									<entry/>
									<entry>echt (<code>R</code>)</entry>
									<entry>pseudo (<code>P</code>)</entry>
									<entry>haupt (<code>M</code>) </entry>
									<entry>neben (<code>A</code>)</entry>
									<entry>zeit (<code>T</code>)</entry>
									<entry>flex (<code>F</code>)</entry>
									<entry>person (<code>O</code>)</entry>
								</row>
							</thead>
							<tbody>
								<row>
									<entry><code>GlobalValue</code></entry>
									<entry>X</entry>
									<entry>-</entry>
									<entry>-</entry>
									<entry>-</entry>
									<entry>-</entry>
									<entry>-</entry>
									<entry>-</entry>
								</row>

								<row>
									<entry><code>Product</code></entry>
									<entry>-</entry>
									<entry>X</entry>
									<entry>-</entry>
									<entry>-</entry>
									<entry>-</entry>
									<entry>-</entry>
									<entry>-</entry>
								</row>

								<row>
									<entry><code>&indent;Brand</code></entry>
									<entry>X</entry>
									<entry>-</entry>
									<entry>X</entry>
									<entry>-</entry>
									<entry>-</entry>
									<entry>-</entry>
									<entry>-</entry>
								</row>

								<row>
									<entry><code>&indent;Accommodation</code></entry>
									<entry>X</entry>
									<entry>-</entry>
									<entry>X</entry>
									<entry>-</entry>
									<entry>-</entry>
									<entry>-</entry>
									<entry>-</entry>
								</row>

								<row>
									<entry><code>&indent;&indent;SellingAccom</code></entry>
									<entry>X</entry>
									<entry>-</entry>
									<entry>-</entry>
									<entry>X</entry>
									<entry>X</entry>
									<entry>X</entry>
									<entry>-</entry>
								</row>

								<row>
									<entry><code>&indent;&indent;&indent;Unit</code></entry>
									<entry>X</entry>
									<entry>-</entry>
									<entry>-</entry>
									<entry>X</entry>
									<entry>-</entry>
									<entry>-</entry>
									<entry>-</entry>
								</row>

								<row>
									<entry><code>&indent;&indent;&indent;&indent;SellingUnit</code></entry>
									<entry>X</entry>
									<entry>-</entry>
									<entry>-</entry>
									<entry>X</entry>
									<entry>-</entry>
									<entry>-</entry>
									<entry>X</entry>
								</row>

								<row>
									<entry><code>&indent;&indent;&indent;Board</code></entry>
									<entry>X</entry>
									<entry>-</entry>
									<entry>-</entry>
									<entry>X</entry>
									<entry>-</entry>
									<entry>-</entry>
									<entry>-</entry>
								</row>

								<row>
									<entry><code>&indent;OnewayFlight</code></entry>
									<entry>X</entry>
									<entry>-</entry>
									<entry>X</entry>
									<entry/>
									<entry>X</entry>
									<entry>-</entry>
									<entry>-</entry>
								</row>

								<row>
									<entry><code>&indent;&indent;BookingClass</code></entry>
									<entry>X</entry>
									<entry>-</entry>
									<entry>-</entry>
									<entry>X</entry>
									<entry>-</entry>
									<entry>-</entry>
									<entry>X</entry>
								</row>

								<row>
									<entry><code>&indent;ReturnFlight</code>
									</entry>
									<entry>X</entry>
									<entry>-</entry>
									<entry>X</entry>
									<entry>-</entry>
									<entry>-</entry>
									<entry>-</entry>
									<entry>-</entry>
								</row>

								<row>
									<entry><code>&indent;&indent;BookingClass</code></entry>
									<entry>X</entry>
									<entry>-</entry>
									<entry>-</entry>
									<entry>X</entry>
									<entry>-</entry>
									<entry>-</entry>
									<entry>X</entry>
								</row>

								<row>
									<entry><code>&indent;&indent;Outbound</code></entry>
									<entry>X</entry>
									<entry>-</entry>
									<entry>-</entry>
									<entry>X</entry>
									<entry>X</entry>
									<entry>-</entry>
									<entry>-</entry>
								</row>

								<row>
									<entry><code>&indent;&indent;Inbound</code></entry>
									<entry>X</entry>
									<entry>-</entry>
									<entry>-</entry>
									<entry>X</entry>
									<entry>X</entry>
									<entry>-</entry>
									<entry>-</entry>
								</row>

								<row>
									<entry><code>&indent;Addon</code></entry>
									<entry>X</entry>
									<entry>-</entry>
									<entry>X</entry>
									<entry>-</entry>
									<entry>X</entry>
									<entry>?</entry>
									<entry>-</entry>
								</row>

								<row>
									<entry><code>&indent;&indent;Service</code></entry>
									<entry>X</entry>
									<entry>-</entry>
									<entry>-</entry>
									<entry>X</entry>
									<entry>-</entry>
									<entry>-</entry>
									<entry>X</entry>
								</row>

								<row>
									<entry><code>&indent;&indent;ServiceFeature</code></entry>
									<entry>X</entry>
									<entry>-</entry>
									<entry>-</entry>
									<entry>X</entry>
									<entry>-</entry>
									<entry>-</entry>
									<entry>-</entry>
								</row>

								<row>
									<entry><code>CombiComponent</code></entry>
									<entry>-</entry>
									<entry>X</entry>
									<entry>-</entry>
									<entry>-</entry>
									<entry>-</entry>
									<entry>-</entry>
									<entry>-</entry>
								</row>

								<row>
									<entry><code>ProductComponent</code></entry>
									<entry>-</entry>
									<entry>X</entry>
									<entry>-</entry>
									<entry>-</entry>
									<entry>-</entry>
									<entry>-</entry>
									<entry>-</entry>
								</row>
							</tbody>
						</tgroup>
						<caption>
							<remark xml:id="det_2247" xml:lang="de"> Die Spalten referenzieren die oben definierten Codes:
									<replaceable>R</replaceable>: real - echte Komponente,
									<replaceable>P</replaceable>: pseudo - Pseudokomponente,
									<replaceable>M</replaceable>: main - Hauptkomponente,
									<replaceable>A</replaceable>: ancillary - Nebenkomponente,
									<replaceable>T</replaceable>: time - zeitallozierende Komponente,
									<replaceable>F</replaceable>: flexible - zeitlich flexible Komponente,
									<replaceable>O</replaceable>: occupancy - personenallozierende Komponente
							</remark>
						</caption>
					</table>

					<para xml:id="det_2248" xml:lang="de">Einige besondere Anmerkungen:</para>

					<variablelist>
						<varlistentry>
							<term xml:id="det_2249" xml:lang="de"><code>GlobalValue</code></term>
							<listitem>
								<para xml:id="det_2250" xml:lang="de">Diese Komponente spielt eine Sonderrolle: Instanzen dieser Komponente
									werden vor der eigentlichen Produkterzeugung durch Konfiguration fest
									ausgewählt. Das heisst, sie haben in allen Angeboten stets denselben Wert.
									Sie dienen der Angabe von globalen Eigenschaften wie
										<code>SalesChannel</code> oder <code>SubContractor</code>. Siehe <xref linkend="OtdsProcessRequestContextGlobalValue"/></para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2251" xml:lang="de"><code>Addon</code></term>
							<listitem>
								<para xml:id="det_2252" xml:lang="de">Ein <code>Addon</code> kann sowohl flexibel sein als auch nicht. Diese
									Eigenschaft hängt davon ab, ob das <code>Addon</code> eine
										<code>FixedDuration</code> besitzt: Falls ja, ist das
										<code>Addon</code> zeitlich nicht flexibel, ansonsten ist es
									flexibel.</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2253" xml:lang="de"><code>CombiComponent</code></term>
							<listitem>
								<para xml:id="det_2254" xml:lang="de">Eine <code>CombiComponent</code> ist nicht Teil der statischen
									Komponentenhierarchie. Die Hierarchie einer <code>CombiComponent</code>
									hängt von der Struktur der Produktspezifikation ab.</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2255" xml:lang="de"><code>ProductComponent</code></term>
							<listitem>
								<para xml:id="det_2256" xml:lang="de">Eine <code>ProductComponent</code> referenziert ein vollständiges
									Produkt. Diese Angabe wird an einigen Stellen gesondert gehandhabt und
									dient der Definition von optionalen Zusatzleistungen.</para>
							</listitem>
						</varlistentry>
					</variablelist>

					<para xml:id="det_2257" xml:lang="de">An vielen Stellen wird auf die strikte Unterscheidung zwischen
							<emphasis>Komponente</emphasis> (also dem abstrakten Typ) und
							<emphasis>Instanz</emphasis> (der konkreten Realisation dieses Typs) verzichtet.
						An diesen Stellen wird <emphasis>Komponente</emphasis> als Synonym für
							<emphasis>Instanz</emphasis> verwendet.</para>

				</section>
				<section xml:id="OtdsProcessDataModelComponentDynamicProperties">
					<title><phrase xml:id="det_2258" xml:lang="de">Dynamische Komponenteneigenschaften</phrase></title>

					<para xml:id="det_2259" xml:lang="de">Zusätzlich zu den statischen Eigenschaften werden im Verarbeitungsmodell im Rahmen
						der Verarbeitung einer Produktspezifikation den Komponenten dynamische Eigenschaften
						zugeordnet.</para>

					<variablelist>
						<varlistentry>
							<term xml:id="det_2260" xml:lang="de"><emphasis>Name</emphasis></term>
							<listitem>
								<para xml:id="det_2261" xml:lang="de">Der in der Produktspezifikation angegebene optionale Wert des
										<code>Name</code> Attributs.</para>
							</listitem>
						</varlistentry>

						<varlistentry>
							<term xml:id="det_2262" xml:lang="de"><emphasis>DayAllocationIndex</emphasis></term>
							<listitem>
								<para xml:id="det_2263" xml:lang="de">Dies ist falls angegeben der Wert des <code>DayAllocationIndex</code>
									Attributs aus der Produktspezifikation. Ist kein Wert angegeben, die
									Komponente aber eine echte, zeitallozierende Komponente, so erhält sie
									einen typspezifischen Standardindex: <code>-1</code> für
										<code>Outbound</code>, <code>1</code> für <code>Inbound</code> und
									sonst <code>0</code>.</para>

								<para xml:id="det_2264" xml:lang="de">Dieser Wert gibt die zeitliche Ordnung der zeitallozierenden Komponenten
									innerhalb eines <code>DayAllocationLevel</code> an. Siehe <xref linkend="OtdsProcessProductAllocationTime"/></para>
							</listitem>
						</varlistentry>

						<varlistentry>
							<term xml:id="det_2265" xml:lang="de"><emphasis>DayAllocationLevel</emphasis> (nur zeitallozierende
								Komponenten)</term>
							<listitem>
								<para xml:id="det_2266" xml:lang="de">Besitzt eine zeitallozierende Komponente in der Produktspezifikation
									keinen Wert für das <code>DayAllocationLevel</code> Attribut, so wird ein
									Wert in der Überkomponente und weiter der Über-Überkomponente bis zur
									obersten Ebene (der <code>Product</code> Komponente) gesucht. Wird kein
									Wert gefunden, ist der <code>DayAllocationLevel</code> 0.</para>

								<para xml:id="det_2267" xml:lang="de">Dieser Wert teilt die zeitliche Allokation auf unterschiedliche mehr
									oder weniger unabhängige Ebenen auf. Siehe <xref linkend="OtdsProcessProductAllocationTime"/></para>
							</listitem>
						</varlistentry>

						<varlistentry>
							<term xml:id="det_2268" xml:lang="de"><emphasis>Unterkomponenten</emphasis></term>
							<listitem>
								<para xml:id="det_2269" xml:lang="de">Eine Menge von <code>Unterkomponenten</code>. Jede dieser
									Unterkomponenten besitzt wieder die hier spezifizierten Eigenschaften.
									Dieser Wert ergibt sich aus der <emphasis>dynamischen</emphasis> in der
									Produktspezifikation angegebenen Struktur und nicht aus der festen,
									statischen Struktur.</para>
							</listitem>
						</varlistentry>

						<varlistentry>
							<term xml:id="det_2270" xml:lang="de"><emphasis>Filterbedingung</emphasis> (nur
								<code>CombiComponent</code>)</term>
							<listitem>
								<para xml:id="det_2271" xml:lang="de">Bei der Auflösung aller <code>DefinedComponent</code> Angaben werden
									diese durch <code>CombiComponent</code> ersetzt. Eine
										<code>DefinedComponent</code> kann eine eigene Bedingung enthalten.
									Diese Bedingung wird hier abgelegt.</para>
							</listitem>
						</varlistentry>

						<varlistentry>
							<term xml:id="det_2272" xml:lang="de"><emphasis>Role</emphasis></term>
							<listitem>
								<para xml:id="det_2273" xml:lang="de">Ist die Komponente eine <code>CombiComponent</code>, so ist dies der
									Wert des <code>Role</code> Attributs, ansonsten der Typ der Komponente
									(z.B. <code>Accommodation</code>).</para>
							</listitem>
						</varlistentry>
					</variablelist>

				</section>
				<section xml:id="OtdsProcessDataModelInstanceProperties">
					<title><phrase xml:id="det_2274" xml:lang="de">Instanzeigenschaften</phrase></title>

					<para xml:id="det_2275" xml:lang="de">Auch einzelne Instanzen erhalten im Rahmen der Produktverarbeitung zusätzliche
						Eigenschaften:</para>

					<variablelist>
						<varlistentry>
							<term xml:id="det_2276" xml:lang="de"><emphasis>XML Element</emphasis></term>
							<listitem>
								<para xml:id="det_2277" xml:lang="de">Jede Instanz einer echten Komponente entspricht genau einem XML Element
									der OTDS Lieferung.</para>
							</listitem>
						</varlistentry>

						<varlistentry>
							<term xml:id="det_2278" xml:lang="de"><emphasis>Unterkomponenteninstanzen</emphasis></term>
							<listitem>
								<para xml:id="det_2279" xml:lang="de">Besitzt eine Komponente eine oder mehrere Unterkomponenten, so erhalten
									ihre Instanzen entsprechend je eine Unterkomponenteninstanz je
									Unterkomponente.</para>
							</listitem>
						</varlistentry>
					</variablelist>
				</section>
				<section xml:id="OtdsProcessDataModelInstanceValues">
					<title><phrase xml:id="det_2280" xml:lang="de">Instanzwerte</phrase></title>

					<para xml:id="det_2281" xml:lang="de">Im Rahmen der OTDS Verarbeitung werden an verschiedenen Stellen den Komponenten
						zusätzliche berechnete Werte zugewiesen. Diese Werte werden an verschiedenen Stellen
						verwendet (z.B. bei der Auswertung von Bedingungen oder bei der Verarbeitung der
							<code>Booking</code> Elemente).</para>

					<para xml:id="det_2282" xml:lang="de">Jede Komponenten- oder Unterkomponenteninstanz besitzt ihre eigenen Werte. Das
						Verarbeitungsmodell legt genau fest, an welcher Stelle welche Werte welchen
						Komponenteninstanzen zuzuordnen sind. Diese Zuweisungen werden in den folgenden
						Kapiteln genau definiert. In OTDS-1.0 besitzen nur echte Komponenten
						Instanzwerte.</para>

					<variablelist>
						<varlistentry>
							<term xml:id="det_2283" xml:lang="de"><emphasis><code>CheckIn</code> (ein Tag)</emphasis></term>
							<term xml:id="det_2284" xml:lang="de"><emphasis><code>CheckOut</code> (ein Tag)</emphasis></term>
							<term xml:id="det_2285" xml:lang="de"><emphasis><code>Stay</code> (Menge von Tagen)</emphasis></term>
							<term xml:id="det_2286" xml:lang="de"><emphasis><code>MinDayAllocationTuple</code> (Tupel von
								Zahlen)</emphasis></term>
							<term xml:id="det_2287" xml:lang="de"><emphasis><code>MaxDayAllocationTuple</code> (Tupel von
								Zahlen)</emphasis></term>
							<listitem>
								<para xml:id="det_2288" xml:lang="de">Diese Werte enthalten die Ergebnisse der Zeitallokation. Diese Werte
									werden primär den zeitallozierenden Komponenteninstanzen zugewiesen und
									dann sekundär auf deren Unter- und Überinstanzen übertragen (Migration).
									Siehe <xref linkend="OtdsProcessProductAllocationTime"/>.</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2289" xml:lang="de"><emphasis><code>Birthdate</code> (pro Person)</emphasis></term>
							<term xml:id="det_2290" xml:lang="de"><emphasis><code>Gender</code> (pro Person)</emphasis></term>
							<listitem>
								<para xml:id="det_2291" xml:lang="de">Hier wird das Ergebnis der Personenallokation abgelegt. Auch dieser Wert
									wird zunächst den personenallozierenden Komponenteninstanzen zugewiesen
									und per Migration auf deren Unter- und Überkomponenteninstanzen
									übertragen. Da die Personenallokation in OTDS-1.0 noch sehr eingeschränkt
									ist, wird im Endeffekt allen Komponenten die vollständige Belegung
									zugeordnet. Siehe <xref linkend="OtdsProcessProductAllocationPerson"/>.</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2292" xml:lang="de"><emphasis><code>DayState</code> (pro Tag)</emphasis></term>
							<term xml:id="det_2293" xml:lang="de"><emphasis><code>Availability</code> (ein Wert)</emphasis></term>
							<listitem>
								<para xml:id="det_2294" xml:lang="de">Diese Werte enthalten das Ergebnis der Verfügbarkeitsprüfung der
									Instanz. Siehe <xref linkend="OtdsProcessAvailability"/>.</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2295" xml:lang="de"><emphasis><code>PriceItems</code> (Menge von Referenzen auf
										<code>PriceItem</code> Elemente)</emphasis></term>
							<listitem>
								<para xml:id="det_2296" xml:lang="de">Hier wird die Liste der aktiven <code>PriceItem</code> Elemente der
									Komponenteninstanz nach Abschluss der Preisberechnung abgelegt. Siehe
										<xref linkend="OtdsProcessPriceCalculation"/>.</para>
							</listitem>
						</varlistentry>
					</variablelist>
				</section>
			</section>
			<section xml:id="OtdsProcessRequestContext">
				<title><phrase xml:id="det_2297" xml:lang="de">Der Anfragekontext</phrase></title>

				<para xml:id="det_2298" xml:lang="de">Die generelle Anforderung an OTDS ist es, bezogen auf eine Anfrage aus einer
					OTDS-Datenlieferung und gegebenen Rahmenparametern alle passenden Reiseangebote inkl.
					Berechnung des Preises und Überprüfung der Verfügbarkeit zu erstellen. Alle für die
					Auswertung einer Anfrage notwendigen Parameter werden unter dem Begriff
						<emphasis>Anfragekontext</emphasis> zusammengefasst.</para>

				<para xml:id="det_2299" xml:lang="de">OTDS unterscheidet dabei zwischen primären und sekundären Rahmenparametern und globalen
					Vorgabewerten.</para>

				<itemizedlist>
					<listitem>
						<para xml:id="det_2300" xml:lang="de"><emphasis>primäre Rahmenparameter</emphasis> beschreiben Reiseeigenschaften,
							welche direkt für die Produktzusammenstellung und die Preisberechnung relevant
							sind. Dies sind Angaben zu Terminen und den Reiseteilnehmern.</para>
					</listitem>
					<listitem>
						<para xml:id="det_2301" xml:lang="de"><emphasis>sekundäre Reiseparameter</emphasis> sind weitere Parameter, welche zur
							Eingrenzung der Reise eingesetzt werden: Hotelname, Zimmertyp, Art der Verpflegung
							oder auch Hoteleigenschaften.</para>
					</listitem>
					<listitem>
						<para xml:id="det_2302" xml:lang="de"><emphasis>globale Vorgabewerte</emphasis> sind vom Vertriebssystem festzulegende
							Werte: SalesChannel oder SubContractor.</para>
					</listitem>
				</itemizedlist>

				<para xml:id="det_2303" xml:lang="de">Das hier vorgestellte OTDS Verarbeitungsmodell fußt ausschließlich auf den primären
					Reiseparametern und den globalen Vorgabewerten. Abfragen gegen sekundäre Parameter werden
					(formal) in einem nachgeordneten Schritt durchgeführt und sind nicht Bestandteil des hier
					vorgestellten Verarbeitungsmodells. Alle diese sekundären Eigenschaften finden sich in den
						<code>Properties</code> der Angebote wieder.</para>

				<section xml:id="OtdsProcessRequestContextParameters">
					<title><phrase xml:id="det_2304" xml:lang="de">Primäre Rahmenparameter</phrase></title>

					<para xml:id="det_2305" xml:lang="de">Primäre Rahmenparameter beschreiben in OTDS die primären Reiseeigenschaften. Sie
						enthalten alle für die Erzeugung der Angebote notwendigen reisebezogenen externen
						Werte. Das Verarbeitungsmodell erzeugt als Endergebnis alle zu einem Satz von primären
						Rahmenparametern passenden Angebote. Die primären Rahmenparameter sind:</para>

					<variablelist>
						<varlistentry>
							<term xml:id="det_2306" xml:lang="de"><emphasis><code>CheckIn</code></emphasis></term>
							<listitem>
								<para xml:id="det_2307" xml:lang="de">Das <code>CheckIn</code> Datum des Anfragekontextes ist der Termin des
									ersten Tages der Gesamtreise.</para>
								<para xml:id="det_2308" xml:lang="de">Das hier vorgestellte formale Verarbeitungsmodell betrachtet immer
									Reisen zu einem einzelnen fest vorgegebenen Reisedatum. Um eine Zeitspanne
									abzudecken, wird diese Verarbeitung über alle Tage dieser Zeitspanne
									iteriert (d.h. die Verarbeitung wird für jeden Tag dieser Zeitspanne
									einzeln durchgeführt).</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2309" xml:lang="de"><emphasis><code>Duration</code></emphasis></term>
							<listitem>
								<para xml:id="det_2310" xml:lang="de">Die <code>Duration</code> ist definiert durch die Anzahl der Tage
									zwischen <code>CheckIn</code> und <code>CheckOut</code>. Das
										<emphasis>CheckOut</emphasis>-Datum des Anfragekontext ist der letzte
									Termin der Gesamtreise. Es gilt:</para>
								<para xml:id="det_2311" xml:lang="de"><replaceable>Duration</replaceable> =
											<replaceable>CheckOut</replaceable> -
									<replaceable>CheckIn</replaceable> + 1 in Tagen.</para>
								<para xml:id="det_2312" xml:lang="de">Das hier vorgestellte formale Verarbeitungsmodell betrachtet immer
									Reisen mit einer vorgegebenen Dauer. Um ein Intervall von Dauern
									abzudecken, wird diese Verarbeitung über alle Dauern dieses Intervalls
									iteriert (d.h. die Verarbeitung wird für jede Dauer einzeln
									durchgeführt).</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2313" xml:lang="de"><emphasis>Belegung (einschließlich Geburtsdatum und optional Geschlecht der
									Reiseteilnehmer: <code>Birthdate</code> und
									<code>Gender</code>)</emphasis></term>
							<listitem>
								<para xml:id="det_2314" xml:lang="de">Die Belegung ist definiert durch die Angabe aller Mitreisenden mit deren
									Altersangaben. Die Auswertung der Belegung erfolgt in OTDS immer dem Alter
									nach absteigend. Das bedeutet, die erste Person ist die älteste, die
									zweite die zweitälteste und die letzte Person die jüngste. Die
									Altersangabe erfolgt durch Angabe des Geburtsdatums.</para>
								<para xml:id="det_2315" xml:lang="de">Ist nur das Alter der Person in Jahren bekannt, so kann die Anfrage
									zunächt mit einem aus dem aktuellen Datum sowie dem Alter berechneten
									vorläufigen Geburtsdatum durchgeführt werden. Spätestens zur Auswertung
									der <code>Booking</code> Elemente ist allerdings eine korrekte Angabe des
									Geburtsdatums notwendig.</para>
								<para xml:id="det_2316" xml:lang="de">Das hier vorgestellte Verarbeitungsmodell betrachtet immer Reisen für
									eine fest vorgegebene Belegung. Um verschiedene Belegungen abzudecken,
									wird diese Verarbeitung über die relevanten Belegungen iteriert (d.h. die
									Verarbeitung wird für jede mögliche Belegung einzeln durchgeführt).</para>
								<para xml:id="det_2317" xml:lang="de">Optional kann zu jeder Person auch das Geschlecht angegeben werden. Da
									diese Information nicht generell verfügbar ist, erlaubt OTDS die Angabe
										<code>Undefined</code> zusätzlich zu <code>Male</code> oder
										<code>Female</code>.</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2318" xml:lang="de"><emphasis><code>BookingDate</code></emphasis></term>
							<listitem>
								<para xml:id="det_2319" xml:lang="de">Das <code>BookingDate</code> definiert den Zeitpunkt der Reiseanfrage.
									Dieser Wert ist relevant, da Preise vom Buchungsdatum abhängig sein
									können, insbesondere von der Zeitspanne zwischen Buchungsdatum und Beginn
									der Reise für Frühbucherrabatte. Dieser Wert kann vom Datenlieferanten
									auch für weitere Einschränkungen verwendet werden (z.B. eine Leistung,
									welche erst ab einem bestimmten Zeitpunkt buchbar ist, aber schon zuvor im
									System hinterlegt wurde also auch geliefert wird).</para>
							</listitem>
						</varlistentry>
					</variablelist>

					<bridgehead xml:id="det_2320" xml:lang="de">Abgeleitete Parameter</bridgehead>

					<para xml:id="det_2321" xml:lang="de">Aus den primären Rahmenparametern berechnen sich einige abgeleitete Werte:</para>

					<variablelist>
						<varlistentry>
							<term xml:id="det_2322" xml:lang="de"><emphasis><code>TravelAge</code> (pro Person)</emphasis></term>
							<listitem>
								<para xml:id="det_2323" xml:lang="de">Das <code>TravelAge</code> stellt die Altersangabe in vollendeten Jahren
									zum Zeitpunkt des Reiseantritts dar. Es wird abgeleitet aus dem Geburtstag
									der reisenden Person und aus dem Reisedatum.</para>
									<para xml:id="det_2324" xml:lang="de"><replaceable>TravelAge</replaceable> =
											<replaceable>CheckIn</replaceable> -
											<replaceable>Birthdate</replaceable> in vollendeten
										Jahren</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2325" xml:lang="de"><emphasis><code>BookingAge</code> (pro Person)</emphasis></term>
							<listitem>
								<para xml:id="det_2326" xml:lang="de">Das <code>BookingAge</code> stellt die Altersangabe in vollendeten
									Jahren zum Zeitpunkt der Buchung dar. Es wird abgeleitet aus dem
									Geburtstag der reisenden Person und aus dem Buchungsdatum.</para>
									<para xml:id="det_2327" xml:lang="de"><replaceable>BookingAge</replaceable> =
											<replaceable>BookingDate</replaceable> -
											<replaceable>Birthdate</replaceable> in vollendeten
								Jahren</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2328" xml:lang="de"><emphasis><code>BookingOffset</code></emphasis></term>
							<listitem>
								<para xml:id="det_2329" xml:lang="de">Der <code>BookingOffset</code> wird direkt aus dem
										<code>BookingDate</code> und dem Termin des ersten Reisetages
										<code>CheckIn</code> abgeleitet.</para>
										<para xml:id="det_2330" xml:lang="de"><replaceable>BookingOffset</replaceable> =
											<replaceable>CheckIn</replaceable> -
								<replaceable>BookingDate</replaceable> in Tagen.</para>
							</listitem>
						</varlistentry>
					</variablelist>
				</section>
				<section xml:id="OtdsProcessRequestContextGlobalValue">
					<title><phrase xml:id="det_2331" xml:lang="de">Die globalen Vorgabewerte (<code>GlobalValues</code>)</phrase></title>

					<para xml:id="det_2332" xml:lang="de">Manche Parameter, welche die Produkterstellung und Preisberechnung beeinflussen,
						müssen von außen vorgegeben werden, da diese nur dem Vertriebssystem bekannt sind.
						Solche Parameter werden in OTDS über <code>GlobalValues</code> angegeben.</para>

					<para xml:id="det_2333" xml:lang="de">Das Vertriebssystem referenziert zu diesem Zweck einen oder mehrere
							<code>GlobalValue</code> Elemente mittels ihrer <code>ParameterSet</code> Angaben.
						Die ausgewählten <code>GlobalValue</code> werden dann in der OTDS Verarbeitung
						berücksichtigt (das heisst die dort definierten Tags).</para>

					<para xml:id="det_2334" xml:lang="de">Hier ein Schaubild der Struktur der <code>GlobalValues</code>:</para>

					<figure>
						<title><phrase xml:id="det_2335" xml:lang="de">GlobalValues</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/globalvalues.png" format="PNG" contentwidth="80%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_2336" xml:lang="de">GlobalValues</para>
							</textobject>
						</mediaobject>
					</figure>

					<variablelist>
						<varlistentry>
							<term xml:id="det_2337" xml:lang="de"><emphasis>SalesChannel-Zuordnung</emphasis></term>
							<listitem>
								<para xml:id="det_2338" xml:lang="de">In manchen Fällen sind Preise und Verfügbarkeiten vom SalesChannel
									abhängig. Die Zuordnung einer Anfrage an OTDS zu einem SalesChannel kann
									nur durch das Vertriebssystem vorgenommen werden. OTDS ist aktuell auf die
									beiden SalesChannel OnlineReisevertrieb ("OTA") und Reisebüros ("TA")
									beschränkt. Die Anzahl der SalesChannel kann in späteren Versionen von
									OTDS ohne viel Aufwand erweitert werden.</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2339" xml:lang="de"><emphasis>Agenturnummern der anfragenden Agentur zur Identifikation des
									SubContractors</emphasis></term>
							<listitem>
								<para xml:id="det_2340" xml:lang="de">In manchen Fällen verhandeln die Veranstalter mit ihren Kunden spezielle
									Preise und ggf. auch spezielle Verfügbarkeiten. Im Flugbereich nennt man
									dies "NegoFares" und "NegoSpaces". Im Hotelbereich wird es häufig
									"Specials" genannt. In OTDS haben wir die Kundengruppe, die solche
									verhandelten Preise oder Verfügbarkeiten bekommt, "SubContractor" genannt.
									Die Identifikation des SubContractors kann nur allgemein durch die
									Übermittlung der anfragenden Agenturnummern des Kunden erfolgen. Dabei
									sollten die Agenturnummern aller Brands und der bekannten CRS-Systeme
									übermittelt werden. Stimmt einer der in der Anfrage angegebenen Brand,
									Agenturnummern, CRS-System Kombination mit dem entsprechenden Zweig in
									OTDS überein, so werden die entsprechenden <code>GlobalValue</code>
									Elemente in die Verarbeitung übernommen.</para>
							</listitem>
						</varlistentry>
					</variablelist>

					<!-- <para>@TODO: Beispiele und Beschreibung des
                    <code>ParameterSet</code></para> -->
				</section>
				<section xml:id="OtdsProcessRequestContextSupplement">
					<title><phrase xml:id="det_2341" xml:lang="de">Ergänzende Angaben</phrase></title>

					<para xml:id="det_2342" xml:lang="de">Einige ergänzenden Angaben sind noch notwendig, um in die OTDS Verarbeitung
						einsteigen zu können.</para>

					<variablelist>
						<varlistentry>
							<term xml:id="det_2343" xml:lang="de"><emphasis><code>ProductType</code></emphasis></term>
							<listitem>
								<para xml:id="det_2344" xml:lang="de">Angabe des <code>ProductType</code> für welchen Angebote erzeugt werden
									sollen. Dieser Wert wählt die zu verarbeitenden <code>Product</code>
									Elemente aus.</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2345" xml:lang="de"><emphasis>externe Allokationsoffsets</emphasis></term>
							<listitem>
								<para xml:id="det_2346" xml:lang="de">Insbesondere bei der Verarbeitung von Addons ist es möglich eine
									Komponente zeitlich frei innerhalb der Reise platzieren zu können
									(Beispiel: Ein Addon für einen geführten Ausflug. Der Nutzer darf
									auswählen, an welchem Reisetag er diesen Ausflug buchen möchte). Diese
									Möglichkeit wird durch die externen Allokationsoffsets abgebildet.</para>
								<para xml:id="det_2347" xml:lang="de">Dieser Parameter muss für jeden <code>DayAllocationLevel</code> mit
										<code>Shift="Auto"</code> in <code>Product/DayAllocationStart</code>
									oder <code>Product/DayAllocationEnd</code> angegeben werden. Siehe <xref linkend="OtdsProcessDataModelAllocation"/>.</para>
							</listitem>
						</varlistentry>
					</variablelist>
				</section>
			</section>
		</section>
		<section xml:id="OtdsProcessGeneric">
			<title><phrase xml:id="det_2348" xml:lang="de">Generische Untermodelle der OTDS Verarbeitung</phrase></title>

			<section xml:id="OtdsProcessAttributes">
				<title><phrase xml:id="det_2349" xml:lang="de">Auswertung generischer Attribute</phrase></title>

				<para xml:id="det_2350" xml:lang="de">Bestimmte Attribute tauchen in OTDS an vielen Stellen auf. Diese Attribute haben immer
					dieselbe Bedeutung. Dieses Kapitel beschreibt diese wiederkehrenden Attribute.</para>

				<section xml:id="OtdsProcessSource">
					<title><phrase xml:id="det_2351" xml:lang="de">Adressierung von Komponenten: Das <code>Source</code> Attribut</phrase></title>

					<para xml:id="det_2352" xml:lang="de">Das <code>Source</code> Attribut dient der Auswahl oder Referenz auf typischerweise
						eine Komponenteninstanz, im Allgemeinen können aber auch mehrere Komponenteninstanzen
						referenziert werden. Jede <code>Source</code> Angabe wird nach den hier angegebenen
						Regeln ausgewertet und ergibt eine Komponenteninstanz (oder im allgemeineren Fall eine
						Menge von Komponenteninstanzen). Die weitere Verarbeitung dieses Ergebnisses wird
						durch die dieses Attribut enthaltende Elemente festgelegt.</para>

					<variablelist>
						<varlistentry>
							<term xml:id="det_2353" xml:lang="de"><emphasis>Elemente mit einem <code>Source</code> Attribut</emphasis></term>
							<listitem>
								<para xml:id="det_2354" xml:lang="de"><simplelist type="inline">
										<member><code>Condition/Date</code></member>
										<member><code>Condition/BookingDate</code></member>
										<member><code>Condition/BookingDateOffset</code></member>
										<member><code>Condition/Duration</code></member>
										<member><code>Condition/Weekdays</code></member>
										<member><code>Condition/PersonGroup</code></member>
										<member><code>Condition/ConditionalTags</code></member>
										<member><code>Condition/Keys</code></member>
										<member><code>Condition/Tags</code></member>
										<member><code>Condition/Airports</code></member>
										<member><code>Condition/PersonImpact/PersonAge</code></member>
										<member><code>Condition/PersonImpact/PersonIndex</code></member>
										<member><code>Condition/PersonImpact/PersonIndex/PersonFilter/PersonAge</code></member>
										<member><code>Condition/PersonImpact/PersonIndex/PersonFilter/ConditionalTags</code></member>
										<member><code>Condition/PersonImpact/PersonGenders</code></member>
										<member><code>Condition/DayImpact/Date</code></member>
										<member><code>Condition/DayImpact/DayIndex</code></member>
										<member><code>Condition/DayImpact/Weekdays</code></member>
										<member><code>Condition/DayImpact/DayPriceIndex</code></member>
										<member><code>Condition/Impact/ConditionalTags</code></member>
										<member><code>Condition/MatchEqual/Tag</code></member>
										<member><code>Condition/MatchEqual/Element</code></member>
										<member><code>Booking/BookingGroup</code></member>
										<member><code>Booking/BookingGroup/BookingReplace</code></member>
										<member><code>Booking/BookingGroup/BookingParameter/Date</code></member>
										<member><code>Booking/BookingGroup/BookingParameter/Duration</code></member>
										<member><code>Product/DayAllocationStart</code></member>
										<member><code>Product/DayAllocationEnd</code></member>
										<member><code>PriceItem/Absolute/DayBase</code></member>
									</simplelist></para>
							</listitem>
						</varlistentry>
					</variablelist>

					<para xml:id="det_2355" xml:lang="de">Explizite <code>Source</code> Angaben dienen meistens der Referenz auf eine
						explizite Unter- oder Überkomponeteninstanz der aktuellen Instanz (Beispiel: Zugriff
						auf die <code>Board</code> Instanz aus der <code>Accommodation</code>). Diese
						Referenzen sind im Allgemeinen eindeutig, das Ergebnis ist eine einzelne
						Komponenteninstanz. Im allgemeinen Fall jedoch ist es möglich, dass eine solche
						Referenz <emphasis>nicht</emphasis> eindeutig ist. Diese wird insbesondere im Rahmen
						der zusammengesetzten Flüge in OTDS-1.0 extensiv eingesetzt (Beispiel: die Referenz
							<code>global:ReturnFlight.Outbound</code> referenziert in diesem Fall
						möglicherweise eine Reihe von mehreren <code>Outbound</code> Flügen, welche erst
						zusammengesetzt den Gesamtflug ergeben). Das Verarbeitungsmodell spezifiziert an jeder
						Stelle exakt, wie mit dieser Uneindeutigkeit zu verfahren ist. Der Leitgedanke dabei
						ist immer, die Verarbeitung so zu definieren, dass der Eindruck einer aus mehreren
						einzelnen Instanzen zusammengesetzten Komponenteninstanz entsteht (eben z.B. ein
						zusammengesetzter Flug).</para>

					<para xml:id="det_2356" xml:lang="de">Die <code>Source</code> Angabe unterscheidet sich deutlich von der im Weiteren
						beschriebenen <code>Component</code> Angabe: Sie referenziert immer eine (oder
						mehrere) Instanzen auf einer beliebigen Ebene <emphasis>ohne</emphasis> deren Unter-
						oder Überkomponenten. <code>Component</code> hingegen referenziert immer Top-Level
						Instanzen <emphasis>und deren Unterkomponenteninstanzen</emphasis>.</para>

					<section xml:id="OtdsProcessSourceSyntax">
						<title><phrase xml:id="det_2357" xml:lang="de">Syntax</phrase></title>

						<bridgehead xml:id="det_2358" xml:lang="de">Informeller Syntax</bridgehead>

						<para xml:id="det_2359" xml:lang="de">Eine <code>Source</code> Angabe hat grundsätzlich den Aufbau:</para>

						<para xml:id="det_2360" xml:lang="de">
							<synopsis>[ <literal>local:</literal> | <literal>global:</literal> ] <replaceable>step</replaceable> [ <literal>.</literal><replaceable>step</replaceable> ] ...</synopsis>
							oder <synopsis><literal>ThisComponent</literal></synopsis>
						</para>

						<para xml:id="det_2361" xml:lang="de">Das heißt, eine optionale <replaceable>scope</replaceable>
								(<literal>local:</literal> oder <literal>global:</literal>) gefolgt von einem
							oder mehreren durch "<literal>.</literal>" getrennten
								<replaceable>steps</replaceable>. Alternativ ist der feste Wert
								<literal>ThisComponent</literal> erlaubt.</para>

						<para xml:id="det_2362" xml:lang="de">Ein <replaceable>step</replaceable> kann folgende Werte haben:</para>

						<itemizedlist>
							<listitem>
								<para xml:id="det_2363" xml:lang="de">Referenz auf eine benannte Komponenteninstanz mit vorangestelltem
										"<literal>#</literal>". Solche Referenzen müssen stets am
										<emphasis>Anfang</emphasis> des <literal>Source</literal> Wertes
									angegeben werden.</para>
							</listitem>
							<listitem>
								<para xml:id="det_2364" xml:lang="de">Referenz auf einen Komponententyp. Dabei sind nur Angaben erlaubt,
									welche der vorgegebenen Komponentenhierarchie folgen (siehe
									Beispiele).</para>
							</listitem>
						</itemizedlist>

						<para xml:id="det_2365" xml:lang="de">Zum Verständnis einer <code>Source</code> Angabe ist es wichtig, die statische
							von der dynamischen Analyse zu unterscheiden.</para>

						<itemizedlist>
							<listitem>
								<para xml:id="det_2366" xml:lang="de">Die <emphasis>statische</emphasis> Analyse interpretiert die Referenz
									ohne zusätzliche Informationen außer der von den angegebenen Schritten
									referenzierten Rollen (Die Rolle entspricht dem sichtbaren Typ einer
									Komponente. Siehe <xref linkend="OtdsProcessDataModelComponentDynamicProperties"/> und <xref linkend="OtdsProcessDataModelCombiComponents"/></para>
							</listitem>
							<listitem>
								<para xml:id="det_2367" xml:lang="de">Die <emphasis>dynamische</emphasis> Analyse hingegen wertet eine
										<code>Source</code> Angabe im Kontext eines einzelnen Angebotes
									aus.</para>
							</listitem>
						</itemizedlist>

						<para xml:id="det_2368" xml:lang="de">Diese Unterscheidung ist von grundlegender Bedeutung, da die statische Analyse
							vollständig anhand der fest vorgegebenen statischen Komponentenhierarchie erfolgt,
							während die dynamische Analyse die Verwendung vom <code>CombiComponent</code>
							berücksichtigt. Die statische Analyse bestimmt die Gültigkeit einer
								<code>Source</code> Angabe, während die dynamische Analyse die referenzierten
							Komponenteninstanzen ergibt.</para>

						<para xml:id="det_2369" xml:lang="de">Im Rahmen der statischen Analyse wird überprüft, dass die Angabe immer einem
							vollständigen und lückenlosen <emphasis>Teilpfad</emphasis> entlang der statischen
							Komponentenhierarchie entspricht. Die statische Komponentenhierarchie ist gegeben
							durch</para>

						<simplelist>
							<member><literal>GlobalValue</literal></member>
							<member><literal>Product</literal></member>
							<member><literal>Product.Brand</literal></member>
							<member><literal>Product.Accommodation</literal></member>
							<member><literal>Product.Accommodation.SellingAccom</literal></member>
							<member><literal>Product.Accommodation.SellingAccom.Board</literal></member>
							<member><literal>Product.Accommodation.SellingAccom.Unit</literal></member>
							<member><literal>Product.Accommodation.SellingAccom.Unit.SellingUnit</literal></member>
							<member><literal>Product.OnewayFlight</literal></member>
							<member><literal>Product.OnewayFlight.BookingClass</literal></member>
							<member><literal>Product.ReturnFlight</literal></member>
							<member><literal>Product.ReturnFlight.BookingClass</literal></member>
							<member><literal>Product.ReturnFlight.Inbound</literal></member>
							<member><literal>Product.ReturnFlight.Outbound</literal></member>
							<member><literal>Product.Addon</literal></member>
							<member><literal>Product.Addon.Service</literal></member>
							<member><literal>Product.Addon.ServiceFeature</literal></member>
						</simplelist>

						<para xml:id="det_2370" xml:lang="de">Hierbei ist zu beachten, dass die Angabe auch im Rahmen der statischen Analyse
							nicht mit einer Hauptkomponente beginnen muss. Es wird lediglich sichergestellt,
							das zwischen einzelnen Schritten keine Lücken existieren und die Folge in sich
							sinnvoll ist: Nicht sinnvoll wäre z.B. <code>SellingAccom.BookingClass</code>, da
								<code>SellingAccom</code> keine <code>BookingClass</code> Unterkomponente
							enthält, unvollständig wäre die Angabe <code>SellingAccom.SellingUnit</code>, da
								<code>SellingUnit</code> keine <emphasis>direkte</emphasis> Unterkomponente
							von <code>SellingAccom</code> ist (es wird noch einmal hervorgehoben, dass diese
							strenge Einschränkung <emphasis>nur</emphasis> für die
								<emphasis>statische</emphasis> Analyse gilt).</para>

						<para xml:id="det_2371" xml:lang="de">Namensreferenzen werden gesondert verarbeitet: Alle Namensreferenzen müssen
							einander direkt folgen und jede Namensreferenz muss eine direkte Unterkomponente
							der durch den vorherigen Namen referenzierten Komponente referenzieren. Die
							gesamte Folge von Namensreferenzen wird für die Belange der statischen Analyse
							durch die Rolle oder den Typ des letzten Namens ersetzt. Da alle Komponentennamen
							in einer OTDS-1.0 Lieferung eindeutig sein müssen, kann jedem Namen eine
							eindeutige Rolle (oder Typ) zugeordnet werden (Beispiel: In der
								<code>Source</code> Angabe
								<code>#ReturnFlightCombiOneWay.#ZubringerCombiOneWayZHV.BookingClass</code>
							wird <code>#ReturnFlightCombiOneWay.#ZubringerCombiOneWayZHV</code> durch die
							Rolle von <code>#ZubringerCombiOneWayZHV</code>, in diesem Fall wahrscheinlich
								<code>OnewayFlight</code> ersetzt).</para>

						<para xml:id="det_2372" xml:lang="de">Ein anderer Sonderfall ist <code>ThisComponent</code>. Dieser Wert entspricht
							immer genau derjenigen Komponenteninstanz, in welcher das ausgewertete
								<code>Source</code> Attribut notiert wurde. Es wird dabei
								<emphasis>nur</emphasis> diese Instanz und keine weiteren Instanzen desselben
							Typs berücksichtigt.</para>

						<para xml:id="det_2373" xml:lang="de">Die <emphasis>Scope</emphasis> erlaubt es festzulegen, ob eine Referenz nur
							innerhalb der aktuellen Komponenteninstanz und ihrer Über- und Unterinstanzen
							aufgelöst werden soll oder nicht. Übliche Referenzen beziehen sich immer auf
							Unter- oder Überkomponeten der aktuellen Komponenteninstanz. Die Angabe von
								<code>global</code> ermöglicht es aber, Querbeziehungen zwischen ansonsten
							unabhängigen Komponeteninstanzen zu definieren (also z.B. Querbedingungen zwischen
								<code>Accommodation</code> und <code>Flight</code>).</para>

						<para xml:id="det_2374" xml:lang="de">Die eigentliche Auswertung der <emphasis>Scope</emphasis> Angabe erfolgt als
							letzter Schritt der <code>Source</code> Auswertung. Bis zu diesem letzten Schritt
							erfolgt die Auswertung global. In diesem letzten Schritt erfolgt nun eine weitere
							Einschränkung der Ergebnismenge:</para>

						<itemizedlist>
							<listitem>
								<para xml:id="det_2375" xml:lang="de">Bei einer Angabe von <code>global</code> wird das Ergebnis nicht
									verändert</para>
							</listitem>
							<listitem>
								<para xml:id="det_2376" xml:lang="de">Bei einer Angabe von <code>local</code> wird das Ergebnis auf die
									rekursiven Unter- und / oder Überkomponenten der aktuellen Komponente
									(also die Komponente, in welcher die <code>Source</code> Angabe notiert
									ist) eingeschränkt.</para>
							</listitem>
						</itemizedlist>

						<bridgehead xml:id="det_2377" xml:lang="de">Beispiele</bridgehead>

						<para xml:id="det_2378" xml:lang="de">Bei der <emphasis>statischen</emphasis> Analyse gültige <code>Source</code>
							Angaben sind zum Beispiel:</para>

						<variablelist>
							<varlistentry>
								<term xml:id="det_2379" xml:lang="de"><literal>Product.Accommodation.SellingAccom</literal></term>
								<listitem>
									<para xml:id="det_2380" xml:lang="de">Referenziert alle <literal>SellingAccom</literal>
										Komponenteninstanzen des aktuellen Angebots</para>
								</listitem>
							</varlistentry>
							<varlistentry>
								<term xml:id="det_2381" xml:lang="de"><literal>SellingAccom</literal></term>
								<listitem>
									<para xml:id="det_2382" xml:lang="de">Dieselbe Angabe wie oben in Kurzform.</para>
								</listitem>
							</varlistentry>
							<varlistentry>
								<term xml:id="det_2383" xml:lang="de"><literal>#AddonButlerService</literal></term>
								<listitem>
									<para xml:id="det_2384" xml:lang="de">Referenziert (alle) Komponenteninstanzen mit dem
											<emphasis>Namen</emphasis>
										<literal>AddonButlerService</literal></para>
								</listitem>
							</varlistentry>
						</variablelist>

						<para xml:id="det_2385" xml:lang="de">Bei der statischen Analyse <emphasis>ungültige</emphasis>
							<code>Source</code> Angaben sind zum Beispiel:</para>

						<variablelist>
							<varlistentry>
								<term xml:id="det_2386" xml:lang="de"><literal>Product.SellingAccom</literal></term>
								<listitem>
									<para xml:id="det_2387" xml:lang="de">Ungültig, da <code>SellingAccom</code> statisch nicht als
										Unterkomponente von <code>Product</code> definiert ist. Korrekt wäre
										z.B. <code>Product.Accommodation.SellingAccom</code></para>
								</listitem>
							</varlistentry>
							<varlistentry>
								<term xml:id="det_2388" xml:lang="de"><literal>ReturnFlight.OnewayFlight.BookingClass</literal></term>
								<listitem>
									<para xml:id="det_2389" xml:lang="de">Ungültig, da <code>OnewayFlight</code> keine Unterkomponente von
											<code>ReturnFlight</code> ist. Auch wenn in einem konkreten
										Angebot eine <code>CombiComponent</code> mit <code>Role</code> gleich
											<code>ReturnFlight</code> eine Unterkomponente vom Typ
											<code>OnewayFlight</code> haben kann (ein aus
											<code>OnewayFlight</code> zusammengesetzter
											<code>ReturnFlight</code>), ist diese Referenz nichtsdestotrotz
										nicht erlaubt. Korrekt ist
										<code>ReturnFlight.BookingClass</code>.</para>
								</listitem>
							</varlistentry>
							<varlistentry>
								<term xml:id="det_2390" xml:lang="de"><literal>ReturnFlight.Outbound.#Hauptflug</literal></term>
								<listitem>
									<para xml:id="det_2391" xml:lang="de">Ungültig, da alle Namensangaben am Beginn einer <code>Source</code>
										Angabe stehen müssen. Korrekt ist z.B.
											<code>#ReturnFlightCombiOneWay.#OneWayCombiZHV.#OneWayCombiZHVHauptflug</code>
										(vorausgesetzt, die Komponentennamen sind entsprechend
										definiert).</para>
								</listitem>
							</varlistentry>
						</variablelist>

						<para xml:id="det_2392" xml:lang="de"><code>Source</code> Angaben, deren statische Gültigkeit von der
							Komponentendefinition abhängt</para>

						<variablelist>
							<varlistentry>
								<term xml:id="det_2393" xml:lang="de"><literal>#Out.#Hauptflug</literal></term>
								<listitem>
									<para xml:id="det_2394" xml:lang="de">Gültig, wenn <literal>Out</literal> eine direkte Unterkomponente mit
										Namen <literal>Hauptflug</literal> hat.</para>
								</listitem>
							</varlistentry>
							<varlistentry>
								<term xml:id="det_2395" xml:lang="de"><literal>#Out.#Hauptflug.BookingClass</literal></term>
								<listitem>
									<para xml:id="det_2396" xml:lang="de">Gültig, wenn <literal>Out</literal> eine direkte Unterkomponente mit
										Namen <literal>Hauptflug</literal> hat und wenn die Rolle oder der Typ
										von <literal>Hauptflug</literal> eine direkte Unterkomponente vom Typ
											<literal>BookingClass</literal> hat. Die statische Gültigkeit
										hängt <emphasis>nicht</emphasis> davon ab, dass
											<code>BookingClass</code> eine direkte Unterkomponente von
											<code>Hauptflug</code> sein muss (<code>Hauptflug</code> kann z.B.
										eine <code>CombiComponent</code> mit der Rolle
											<code>ReturnFlight</code> sein und als Unterkomponenten weitere
											<code>CombiComponent</code> vom Typ <code>OnewayFlight</code>
										enthalten).</para>
								</listitem>
							</varlistentry>
						</variablelist>

						<bridgehead xml:id="det_2397" xml:lang="de">EBNF Spezifikation</bridgehead>

						<para xml:id="det_2398" xml:lang="de">Eine <code>Source</code> Angabe folgt folgender EBNF Syntax:</para>

						<variablelist>
							<varlistentry>
								<term xml:id="det_2399" xml:lang="de"><replaceable>source</replaceable> =</term>
								<listitem>
									<para xml:id="det_2400" xml:lang="de">( <replaceable>scope</replaceable> "<literal>:</literal>" ) ?
											<replaceable>steps</replaceable> |
											"<literal>ThisComponent</literal>"</para>
								</listitem>
							</varlistentry>
							<varlistentry>
								<term xml:id="det_2401" xml:lang="de"><replaceable>scope</replaceable> =</term>
								<listitem>
									<para xml:id="det_2402" xml:lang="de">"<literal>local</literal>" | "<literal>global</literal>"</para>
								</listitem>
							</varlistentry>
							<varlistentry>
								<term xml:id="det_2403" xml:lang="de"><replaceable>steps</replaceable> =</term>
								<listitem>
									<para xml:id="det_2404" xml:lang="de"><replaceable>requiredNameSteps</replaceable> |
											<replaceable>optionalNameSteps</replaceable>
										<replaceable>componentSteps</replaceable></para>
								</listitem>
							</varlistentry>
							<varlistentry>
								<term xml:id="det_2405" xml:lang="de"><replaceable>requiredNameSteps</replaceable> =</term>
								<listitem>
									<para xml:id="det_2406" xml:lang="de"><replaceable>nameStep</replaceable> ( "<literal>.</literal>"
											<replaceable>nameStep</replaceable> ) *</para>
								</listitem>
							</varlistentry>
							<varlistentry>
								<term xml:id="det_2407" xml:lang="de"><replaceable>optionalNameSteps</replaceable> =</term>
								<listitem>
									<para xml:id="det_2408" xml:lang="de">( <replaceable>nameStep</replaceable> "<literal>.</literal>" )
										*</para>
								</listitem>
							</varlistentry>
							<varlistentry>
								<term xml:id="det_2409" xml:lang="de"><replaceable>nameStep</replaceable> =</term>
								<listitem>
									<para xml:id="det_2410" xml:lang="de">"<literal>#</literal>" <replaceable>name</replaceable></para>
								</listitem>
							</varlistentry>
							<varlistentry>
								<term xml:id="det_2411" xml:lang="de"><replaceable>name</replaceable> =</term>
								<listitem>
									<para xml:id="det_2412" xml:lang="de">&lt;Folge von Zeichen aus der Menge
											"<literal>A</literal>"-"<literal>Z</literal>",
											"<literal>a</literal>"-"<literal>z</literal>",
											"<literal>0</literal>"-"<literal>9</literal>",
											"<literal>-</literal>" und "<literal>_</literal>". Keine Umlaute.
										Mindestens ein Zeichen&gt;</para>
								</listitem>
							</varlistentry>
							<varlistentry>
								<term xml:id="det_2413" xml:lang="de"><replaceable>componentSteps</replaceable> =</term>
								<listitem>
									<para xml:id="det_2414" xml:lang="de">&lt;Liste gültiger Werte, siehe im Folgenden&gt;</para>
								</listitem>
							</varlistentry>
						</variablelist>

						<para xml:id="det_2415" xml:lang="de"><replaceable>componentSteps</replaceable> ist zunächst einer der vollständigen
							Komponentenpfade (siehe <xref linkend="OtdsProcessSourceSyntax"/>). Zusätzlich
							sind alle vollständigen Unterpfade erlaubt. Die Liste aller gültigen Werte ist
							somit</para>

						<itemizedlist>
							<listitem>
								<simplelist type="inline">
									<member><literal>GlobalValue</literal></member>
								</simplelist>
							</listitem>
							<listitem>
								<simplelist type="inline">
									<member><literal>Product</literal></member>
								</simplelist>
							</listitem>
							<listitem>
								<simplelist type="inline">
									<member><literal>Product.Brand</literal></member>
									<member><literal>Brand</literal></member>
								</simplelist>
							</listitem>
							<listitem>
								<simplelist type="inline">
									<member><literal>Product.Accommodation</literal></member>
									<member><literal>Accommodation</literal></member>
								</simplelist>
							</listitem>
							<listitem>
								<simplelist type="inline">
									<member><literal>Product.Accommodation.SellingAccom</literal></member>
									<member><literal>Accommodation.SellingAccom</literal></member>
									<member><literal>SellingAccom</literal></member>
								</simplelist>
							</listitem>
							<listitem>
								<simplelist type="inline">
									<member><literal>Product.Accommodation.SellingAccom.Board</literal></member>
									<member><literal>Accommodation.SellingAccom.Board</literal></member>
									<member><literal>SellingAccom.Board</literal></member>
									<member><literal>Board</literal></member>
								</simplelist>
							</listitem>
							<listitem>
								<simplelist type="inline">
									<member><literal>Product.Accommodation.SellingAccom.Unit</literal></member>
									<member><literal>Accommodation.SellingAccom.Unit</literal></member>
									<member><literal>SellingAccom.Unit</literal></member>
									<member><literal>Unit</literal></member>
								</simplelist>
							</listitem>
							<listitem>
								<simplelist type="inline">
									<member><literal>Product.Accommodation.SellingAccom.Unit.SellingUnit</literal></member>
									<member><literal>Accommodation.SellingAccom.Unit.SellingUnit</literal></member>
									<member><literal>SellingAccom.Unit.SellingUnit</literal></member>
									<member><literal>Unit.SellingUnit</literal></member>
									<member><literal>SellingUnit</literal></member>
								</simplelist>
							</listitem>
							<listitem>
								<simplelist type="inline">
									<member><literal>Product.OnewayFlight</literal></member>
									<member><literal>OnewayFlight</literal></member>
								</simplelist>
							</listitem>
							<listitem>
								<simplelist type="inline">
									<member><literal>Product.OnewayFlight.BookingClass</literal></member>
									<member><literal>OnewayFlight.BookingClass</literal></member>
									<member><literal>BookingClass</literal></member>
								</simplelist>
							</listitem>
							<listitem>
								<simplelist type="inline">
									<member><literal>Product.ReturnFlight</literal></member>
									<member><literal>ReturnFlight</literal></member>
								</simplelist>
							</listitem>
							<listitem>
								<simplelist type="inline">
									<member><literal>Product.ReturnFlight.BookingClass</literal></member>
									<member><literal>ReturnFlight.BookingClass</literal></member>
								</simplelist>
							</listitem>
							<listitem>
								<simplelist type="inline">
									<member><literal>Product.ReturnFlight.Inbound</literal></member>
									<member><literal>ReturnFlight.Inbound</literal></member>
									<member><literal>Inbound</literal></member>
								</simplelist>
							</listitem>
							<listitem>
								<simplelist type="inline">
									<member><literal>Product.ReturnFlight.Outbound</literal></member>
									<member><literal>ReturnFlight.Outbound</literal></member>
									<member><literal>Outbound</literal></member>
								</simplelist>
							</listitem>
							<listitem>
								<simplelist type="inline">
									<member><literal>Product.Addon</literal></member>
									<member><literal>Addon</literal></member>
								</simplelist>
							</listitem>
							<listitem>
								<simplelist type="inline">
									<member><literal>Product.Addon.Service</literal></member>
									<member><literal>Addon.Service</literal></member>
									<member><literal>Service</literal></member>
								</simplelist>
							</listitem>
							<listitem>
								<simplelist type="inline">
									<member><literal>Product.Addon.ServiceFeature</literal></member>
									<member><literal>Addon.ServiceFeature</literal></member>
									<member><literal>ServiceFeature</literal></member>
								</simplelist>
							</listitem>
						</itemizedlist>

						<para xml:id="det_2416" xml:lang="de">Weitere Einschränkungen der Namensreferenzen können nicht syntaktisch überprüft
							werden.</para>
					</section>
					<section xml:id="OtdsProcessSourceProcess">
						<title><phrase xml:id="det_2417" xml:lang="de">Auswertung (dynamische Analyse)</phrase></title>

						<para xml:id="det_2418" xml:lang="de">Das Ergebnis der dynamischen Auswertung einer <code>Source</code> Angabe ist
							eine Menge von Komponenten- (und Unterkomponenten-) Instanzen. Während die
							syntaktischen Einschränkungen eine <code>Source</code> Angabe auf die vorgegebene
							statische Komponentenhierarchie einschränken, ist die Auswertung deutlich
							flexibler.</para>

						<para xml:id="det_2419" xml:lang="de">Die dynamische Auflösung einer <code>Source</code> Angabe wird im Gegensatz zur
							statischen Analyse mittels eines <emphasis>rekursiven lookups</emphasis> anstelle
							eines einfachen Unterkomponentenlookups definiert wobei zusätzlich am Ende der
							Auswertung alle Pseudokomponenten übersprungen werden. Dies bedeutet, dass
							ausgehend vom Gesamtangebot <emphasis>jeder Schritt</emphasis> nicht nur als
							direkte Unterkomponente sondern, falls keine entsprechende direkte Unterkomponente
							existiert, auch als Unter-Unter-Komponente usw. gesucht wird.</para>

						<para xml:id="det_2420" xml:lang="de">Diese Flexibilität erlaubt es zusammengesetzten Komponenten
								(<code>CombiComponent</code>) sich wie eine echte Komponente darzustellen.
							Dabei erzeugt die <code>CombiComponent</code> keine wirkliche neue
							zusammengesetzte einzelne Komponente, sondern wird so in die Komponentenhierarchie
							eingefügt, dass die Auswertung der <code>Source</code> Angaben gegen diese
							zusammengesetzte Komponente den Effekt einer einzelnen synthetisierten Komponente
							ergibt.</para>

						<para xml:id="det_2421" xml:lang="de">An dieser stelle ist sicher ein Beispiel angebracht. Die folgende Notation zeigt
							ein Beispiel für den expandierten Datenbaum eines zusammengesetzten Fluges (siehe
							auch <xref linkend="OtdsProcessDataModelSubstitutionResult"/></para>

						<programlisting><![CDATA[<CombiComponent Role="ReturnFlight">
  <CombiComponent Role="Outbound" DayAllocationIndex="-1">
    <OnewayFlights>
      <OnewayFlight> ... <OnewayFlight>
      <OnewayFlight> ... <OnewayFlight>
      ...
    </OnewayFlights>
  </CombiComponent>
  <CombiComponent Role="Inbound" DayAllocationIndex="1">
    <OnewayFlights>
      <OnewayFlight> ... <OnewayFlight>
      <OnewayFlight> ... <OnewayFlight>
      ...
    </OnewayFlights>
  </CombiComponent>
</CombiComponent>]]></programlisting>

						<para xml:id="det_2422" xml:lang="de">Diese Struktur besitzt die Komponentenhierarchie <code>Product</code> -
								<code>ReturnFlight</code> - <code>Outbound</code> - <code>OnewayFlight</code>
							- <code>BookingClass</code> (um das Beispiel nicht unnötig zu expandieren, wurde
							dort die äußere <code>Product</code>-Hülle sowie die Unterstruktur des
								<code>OnewayFlight</code> übersprungen). Diese Struktur ist also vollständig
							anders als sie das statische OTDS Komponentenmodell vorsieht. Nun ist die
								<code>Source</code> Angabe auf Werte beschränkt, welche die
								<emphasis>statiche</emphasis> Struktur von OTDS wiederspiegeln, die
								<emphasis>dynamische Auswertung</emphasis> hingegen ist
								<emphasis>nicht</emphasis> eingeschränkt. Die rekursive Auswertung eines jeden
							Schrittes erlaubt es nun, <code>Source</code>-Angaben eines normalen
								<code>ReturnFlight</code> gegen diese Struktur auszuwerten. Die für einen
							normalen <code>ReturnFlight</code> gültigen <code>Source</code> Angaben werden nun
							durch den rekursiven Lookup im Rahmen dieses Beispieles wie folgt
							ausgewertet:</para>

						<variablelist>
							<varlistentry>
								<term xml:id="det_2423" xml:lang="de"><code>Product.ReturnFlight.Outbound</code></term>
								<listitem>
									<para xml:id="det_2424" xml:lang="de">Wird aufgelöst zu allen <code>OnewayFlight</code>
										Unterkomponenteninstanzen der <code>Outbound</code>
										<code>CombiComponent</code> Instanz. Die Auswertung ergibt zunächst
										eine Pseudokomponente (die <code>Outbound</code>
										<code>CombiComponent</code>), welche dann bis zu den echten
										Komponenten (<code>OnewayFlight</code>) überprungen wird.</para>
								</listitem>
							</varlistentry>
							<varlistentry>
								<term xml:id="det_2425" xml:lang="de"><code>Product.ReturnFlight.Inbound</code></term>
								<listitem>
									<para xml:id="det_2426" xml:lang="de">Wird aufgelöst zu allen <code>OnewayFlight</code>
										Unterkomponenteninstanzen der <code>Inbound</code>
										<code>CombiComponent</code> Instanz. Die Auswertung ergibt zunächst
										eine Pseudokomponente (die <code>Inbound</code>
										<code>CombiComponent</code>), welche dann bis zu den echten
										Komponenten (<code>OnewayFlight</code>) überprungen wird.</para>
								</listitem>
							</varlistentry>
							<varlistentry>
								<term xml:id="det_2427" xml:lang="de"><code>Product.ReturnFlight.BookingClass</code></term>
								<listitem>
									<para xml:id="det_2428" xml:lang="de">Wird aufgelöst zu allen <code>BookingClass</code>
										Unterkomponenteninstanzen sämtlicher <code>OnewayFlight</code>
										Unterkomponenteninstanzen der <code>ReturnFlight</code>
										<code>CombiComponent</code>. Bei der Auswertung werden die
										zwischengeschobenen <code>Inbound</code> und <code>Outbound</code>
										Pseudokomponenten sowie die <code>OnewayFlight</code> Komponenten
										durch den rekursiven Lookup übersprungen.</para>
								</listitem>
							</varlistentry>
						</variablelist>

						<para xml:id="det_2429" xml:lang="de">Dieses Verfahren erlaubt es also, auf zusammengesetzte Komponenten mit denselben
								<code>Source</code> Angaben zuzugreifen wie auf einzelne echte Komponenten.
							Der Unterschied liegt im Ergebnis: Während bei einer einzelnen echten Komponente
							das Ergebnis im Allgemeinen eine einzelne Komponenteninstanz ist, ist das Ergebnis
							in diesem erweiterten Fall üblicherweise eine Menge von Komponenteninstanzen. Die
							weitere Verarbeitung dieser Menge ist im Verarbeitungsmodell an jeder Stelle
							jeweils so definiert, eine möglichst sinnvolle Interpretation als zusammengesetzte
							Komponente zu liefern.</para>

						<para xml:id="det_2430" xml:lang="de">Der Prozess der <code>Source</code>-Auswertung lässt sich am einfachsten durch
							mehrere Operationen beschreiben:</para>

						<variablelist>
							<varlistentry>
								<term xml:id="det_2431" xml:lang="de"><code>Sourceauswertung</code></term>
								<listitem>
									<para xml:id="det_2432" xml:lang="de">Beschreibt die vollständige Auswertung einer
										<code>Source</code>-Angabe</para>
								</listitem>
							</varlistentry>
							<varlistentry>
								<term xml:id="det_2433" xml:lang="de"><code>Scopeauswertung</code></term>
								<listitem>
									<para xml:id="det_2434" xml:lang="de">Wertet die Scope-Angabe aus.</para>
								</listitem>
							</varlistentry>
							<varlistentry>
								<term xml:id="det_2435" xml:lang="de"><code>Schrittauswertung</code></term>
								<listitem>
									<para xml:id="det_2436" xml:lang="de">Wertet die Folge von Schritten aus einer <code>Source</code> Angabe
										aus.</para>
								</listitem>
							</varlistentry>
							<varlistentry>
								<term xml:id="det_2437" xml:lang="de"><code>Komponentenlookup</code></term>
								<listitem>
									<para xml:id="det_2438" xml:lang="de">Beschreibt die rekursive Unterkomponentensuche.</para>
								</listitem>
							</varlistentry>
						</variablelist>

						<task>
							<title><phrase xml:id="det_2439" xml:lang="de"><code>Sourceauswerung</code> ( <replaceable>Sourceangabe</replaceable>,
									<replaceable>Umgebungskomponente</replaceable> )</phrase></title>

							<tasksummary>
								<para xml:id="det_2440" xml:lang="de">Diese Operation wertet <replaceable>Sourceangabe</replaceable>
									vollständig aus. Es wird:</para>

								<itemizedlist>
									<listitem>
										<para xml:id="det_2441" xml:lang="de">Die Schrittfolge ausgewertet</para>
									</listitem>
									<listitem>
										<para xml:id="det_2442" xml:lang="de">Die Scope angewendet</para>
									</listitem>
									<listitem>
										<para xml:id="det_2443" xml:lang="de">Der Sonderfall <code>ThisComponent</code> behandelt.</para>
									</listitem>
								</itemizedlist>

								<para xml:id="det_2444" xml:lang="de"><replaceable>Umgebungskomponente</replaceable> ist die
									Komponenteninstanz, in welcher die <code>Source</code> Angabe notiert
									wurde.</para>
							</tasksummary>

							<procedure>
								<step>
									<para xml:id="det_2445" xml:lang="de">Falls <replaceable>Sourceangabe</replaceable> ==
											<code>ThisComponent</code></para>
									<procedure>
										<step>
											<para xml:id="det_2446" xml:lang="de">Liefere { <replaceable>Umgebungskomponente</replaceable> }
												als Ergebnis zurück.</para>
										</step>
									</procedure>
								</step>
								<step>
									<para xml:id="det_2447" xml:lang="de">Sonst</para>
									<procedure>
										<step>
											<para xml:id="det_2448" xml:lang="de"><replaceable>Komponentenmenge</replaceable> :=
													<code>Schrittauswertung</code> ( Schritte der
													<replaceable>Sourceangabe</replaceable> )</para>
										</step>
										<step>
											<para xml:id="det_2449" xml:lang="de">Liefere <code>Scopeauswertung</code> ( Scope der
													<replaceable>Sourceangabe</replaceable>,
													<replaceable>Umgebungskomponente</replaceable>,
													<replaceable>Komponentenmenge</replaceable> ) als Ergebnis
												zurück.</para>
										</step>
									</procedure>
								</step>
							</procedure>
						</task>
						<task>
							<title><phrase xml:id="det_2450" xml:lang="de"><code>Scopeauswertung</code> ( <replaceable>Scope</replaceable>,
									<replaceable>Umgebungskomponente</replaceable>,
									<replaceable>Komponentenmenge</replaceable> )</phrase></title>

							<tasksummary>
								<para xml:id="det_2451" xml:lang="de">Diese Operation übernimmt die durch die <code>Schrittauswertung</code>
									erzeugte <replaceable>Komponentenmenge</replaceable> und wendet auf diese
									Menge die <replaceable>Scope</replaceable> an.
										<replaceable>Umgebungskomponente</replaceable> ist die
									Komponenteninstanz, in welcher die <code>Source</code> Angabe notiert
									wurde.</para>

								<para xml:id="det_2452" xml:lang="de">Ist die <replaceable>Scope</replaceable>
									<code>global</code>, so wird die
										<replaceable>Komponentenmenge</replaceable> nicht verändert. Ist
										<replaceable>Scope</replaceable> jedoch <code>local</code>, so werden
									nur diejenigen Elemente aus <replaceable>Komponentenmenge</replaceable>
									erhalten, welche entweder Vorfahren-Komponenten (also Überkomponente,
									Über-Über-Komponente usw.) oder Nachfahren-Komponenten (also
									Unterkomponente, Unter-Unter-Komponente usw.) der
										<replaceable>Umgebungskomponente</replaceable> oder aber die
										<replaceable>Umgebungskomponente</replaceable> selbst sind.</para>
							</tasksummary>

							<procedure>
								<step>
									<para xml:id="det_2453" xml:lang="de">Wenn <replaceable>Scope</replaceable> == <code>global</code></para>
									<procedure>
										<step>
											<para xml:id="det_2454" xml:lang="de">Liefere <replaceable>Komponentenmenge</replaceable> als
												Ergebnis zurück.</para>
										</step>
									</procedure>
								</step>
								<step>
									<para xml:id="det_2455" xml:lang="de">Sonst</para>
									<procedure>
										<step>
											<para xml:id="det_2456" xml:lang="de"><replaceable>Ergebnismenge</replaceable> := leere
												Menge</para>
										</step>
										<step>
											<para xml:id="det_2457" xml:lang="de">Iteriere <replaceable>Element</replaceable> über die
												Elemente der Komponentenmenge</para>
											<procedure>
												<step>
													<para xml:id="det_2458" xml:lang="de">Falls <replaceable>Element</replaceable> eine
													beliebige rekursive Unterkomponente oder eine beliebige
													rekursive Überkomponente von
													<replaceable>Umgebungskomponente</replaceable> oder die
													<replaceable>Umgebungskomponente</replaceable> selbst
													ist</para>
													<procedure>
													<step>
													<para xml:id="det_2459" xml:lang="de">Füge <replaceable>Element</replaceable> in
													<replaceable>Ergebnismenge</replaceable> ein</para>
													</step>
													</procedure>
												</step>
											</procedure>
										</step>
										<step>
											<para xml:id="det_2460" xml:lang="de">Liefere <replaceable>Ergebnismenge</replaceable> als
												Ergebnis zurück</para>
										</step>
									</procedure>
								</step>
							</procedure>
						</task>
						<task>
							<title><phrase xml:id="det_2461" xml:lang="de"><literal>Schrittauswertung</literal> ( <replaceable>Schritte</replaceable>
								)</phrase></title>
							<tasksummary>
								<para xml:id="det_2462" xml:lang="de">Diese Operation wertet die eigentlichen
										<replaceable>Schritte</replaceable> aus. Es wird ein Schritt nach dem
									anderen angewendet. Jedes Zwischenergebnis ist eine Menge von Elementen
									und dient als Ausgangspunkt für den nächsten Schritt. Begonnen wird diese
									Operation mit einer Menge, welche die folgenden Elemente enthält:</para>

								<itemizedlist>
									<listitem>
										<para xml:id="det_2463" xml:lang="de">Ein vollständiges Angebot (also die Instanz eines
											Produktes)</para>
									</listitem>
									<listitem>
										<para xml:id="det_2464" xml:lang="de">Alle relevanten <code>GlobalValue</code> Angaben</para>
									</listitem>
								</itemizedlist>

								<para xml:id="det_2465" xml:lang="de">Jeder dieser Schritte ist ein <code>Komponentenlookup</code>. Die
									Bedingung hängt von der Art des Schrittes ab.</para>

								<itemizedlist>
									<listitem>
										<para xml:id="det_2466" xml:lang="de">Ist der Schritt ein <emphasis>Namens-Schritt</emphasis> (Er
											beginnt mit einem "<literal>#</literal>" Zeichen), so werden
											Komponenteninstanzen mit dem angegebenen Namen gesucht.</para>
									</listitem>
									<listitem>
										<para xml:id="det_2467" xml:lang="de">Ansonsten ist der Schritt ein
												<emphasis>Komponententyp-Schritt</emphasis> und es werden
											Komponenteninstanzen mit dem angegebenen Typ oder der angegebenen
											Rolle gesucht.</para>
									</listitem>
								</itemizedlist>

								<para xml:id="det_2468" xml:lang="de">Sind alle Schritte ausgewertet, enthält die Ergebnismenge möglicherweise
									auch <code>CombiComponent</code> Elemente. Diese werden nun (mittels
									derselben <code>Komponentenlookup</code> Operation) durch ihre
										Nicht-<code>CombiComponent</code>-Kinder ersetzt. Das Endergebnis ist
									somit immer eine Menge echter Komponenteninstanzen (enthält also keine
										<code>CombiComponent</code> Elemente).</para>

								<para xml:id="det_2469" xml:lang="de">In diesem Algorithmus wird der einfachheit halbe auch jeder
									Namensschritt mittels des rekursiven <code>Komponentenlookup</code>
									durchgeführt. Dies ist eigentlich überflüssig, da Namensreferenzen kein
									Überspringen erlauben. Diese Einschränkung wurde aber schon bei der
									statischen Analyse überprüft, es kann also davon ausgegangen werden, das
									alle Namensangaben <emphasis>bis auf die erste</emphasis> immer als
									direktes Kindelement aufgelöst werden werden.</para>

								<para xml:id="det_2470" xml:lang="de">Formal ergibt dies folgenden Algorithmus:</para>
							</tasksummary>

							<procedure>
								<step>
									<para xml:id="det_2471" xml:lang="de"><replaceable>Ergebnismenge</replaceable> := { Angebot, GlobalValues
										}</para>
								</step>

								<step>
									<para xml:id="det_2472" xml:lang="de">Iteriere <replaceable>Schritt</replaceable> über die Schritte in
											<replaceable>Schritte</replaceable></para>
									<procedure>
										<step>
											<para xml:id="det_2473" xml:lang="de">Falls <replaceable>Schritt</replaceable> ein Namensschritt
												ist</para>
											<procedure>
												<step>
													<para xml:id="det_2474" xml:lang="de"><replaceable>Bedingung</replaceable> :=
													"Komponenteninstanz hat den Namen
													<replaceable>Schritt</replaceable>"</para>
												</step>
											</procedure>
										</step>

										<step>
											<para xml:id="det_2475" xml:lang="de">Sonst</para>
											<procedure>
												<step>
													<para xml:id="det_2476" xml:lang="de"><replaceable>Bedingung</replaceable> :=
													"Komponenteninstanz hat den Typ oder die Rolle
													<replaceable>Schritt</replaceable>"</para>
												</step>
											</procedure>
										</step>

										<step>
											<para xml:id="det_2477" xml:lang="de"><replaceable>Ergebnismenge</replaceable> :=
													<code>Komponentenlookup</code> (
													<replaceable>Ergebnismenge</replaceable> ,
													<replaceable>Bedingung</replaceable> )</para>
										</step>
									</procedure>
								</step>

								<step>
									<para xml:id="det_2478" xml:lang="de"><replaceable>Ergebnismenge</replaceable> :=
											<code>Komponentenlookup</code> (
											<replaceable>Ergebnismenge</replaceable>, "Komponente ist keine
											<code>CombiComponent</code>" )</para>
								</step>

								<step>
									<para xml:id="det_2479" xml:lang="de">Liefere <replaceable>Ergebnismenge</replaceable> als Ergebnis
										zurück.</para>
								</step>
							</procedure>
						</task>
						<task>
							<title><phrase xml:id="det_2480" xml:lang="de"><literal>Komponentenlookup</literal>
									(<replaceable>Komponentenmenge</replaceable>,
									<replaceable>Bedingung</replaceable>)</phrase></title>

							<tasksummary>
								<para xml:id="det_2481" xml:lang="de">Diese Operation beschreibt die rekursive Anwendung der
										<replaceable>Bedingung</replaceable> auf eine
										<replaceable>Komponentenmenge</replaceable> mit dem Ergebnis, eine
									neue Menge von Komponenten zu erhalten.</para>

								<para xml:id="det_2482" xml:lang="de">Diese Operation wendet die <replaceable>Bedingung</replaceable> auf
									jedes Element der <replaceable>Komponentenmenge</replaceable> an. Ist
										<replaceable>Bedingung</replaceable> erfüllt, wird das Element in die
									Ergebnismenge übernommen. Ist die Bedingung <emphasis>nicht</emphasis>
									erfüllt, wird diese Operation rekursiv mit den Unterkomponenten des
									betrachteten Elementes fortgesetzt. Das bedeutet, die Operation
										<emphasis>rekursiver Komponentenlookup</emphasis> wird rekursiv mit
									den Argumenten <replaceable>Komponentenmenge</replaceable> =
									Unterkomponenten des betrachteten Elements und
										<replaceable>Bedingung</replaceable> =
										<replaceable>Bedingung</replaceable> aufgerufen. Das Ergebnis wird in
									die Ergebnismenge eingefügt. Formal ergibt sich folgender
									Algorithmus:</para>
							</tasksummary>

							<procedure>
								<step>
									<para xml:id="det_2483" xml:lang="de"><replaceable>Ergebnismenge</replaceable> := leere Menge</para>
								</step>

								<step>
									<para xml:id="det_2484" xml:lang="de">Iteriere <replaceable>Element</replaceable> über die Elemente der
											<replaceable>Komponentenmenge</replaceable></para>
									<procedure>
										<step>
											<para xml:id="det_2485" xml:lang="de">Falls <replaceable>Bedingung</replaceable> (
													<replaceable>Element</replaceable> ) ==
												<code>Wahr</code></para>
											<procedure>
												<step>
													<para xml:id="det_2486" xml:lang="de"><replaceable>neueElemente</replaceable> := {
													<replaceable>Element</replaceable> }</para>
												</step>
											</procedure>
										</step>

										<step>
											<para xml:id="det_2487" xml:lang="de">Sonst</para>
											<procedure>
												<step>
													<para xml:id="det_2488" xml:lang="de"><replaceable>neueElemente</replaceable> :=
													<code>Komponentenlookup</code> (
													<code>Unterkomponenten</code> (
													<replaceable>Element</replaceable> ),
													<replaceable>Bedingung</replaceable> )</para>
												</step>
											</procedure>
										</step>

										<step>
											<para xml:id="det_2489" xml:lang="de">Füge <replaceable>neueElemente</replaceable> in
													<replaceable>Ergebnismenge</replaceable> ein</para>
										</step>
									</procedure>
								</step>

								<step>
									<para xml:id="det_2490" xml:lang="de">Liefere <replaceable>Ergebnismenge</replaceable> als Ergebnis
										zurück</para>
								</step>
							</procedure>
						</task>
					</section>
				</section>
				<section xml:id="OtdsProcessAttributeComponent">
					<title><phrase xml:id="det_2491" xml:lang="de">Adressierung von Hauptkomponenten: Das <code>Component</code> Attribut</phrase></title>

					<para xml:id="det_2492" xml:lang="de">Das <code>Component</code> Attribut ist eng mit dem <code>Source</code> Attribut
						verwandt. Während letzteres beliebige Komponenten oder Unterkomponenten referenziert,
						dient <code>Component</code> der Referenz auf eine Hauptkomponente.</para>

					<variablelist>
						<varlistentry>
							<term xml:id="det_2493" xml:lang="de"><emphasis>gültige Werte</emphasis></term>
							<listitem>
								<para xml:id="det_2494" xml:lang="de"><simplelist type="inline">
										<member><code>Accommodation</code></member>
										<member><code>OnewayFlight</code></member>
										<member><code>ReturnFlight</code></member>
										<member><code>Addon</code></member>
										<member><code>ThisComponent</code></member>
									</simplelist></para>
							</listitem>
						</varlistentry>

						<varlistentry>
							<term xml:id="det_2495" xml:lang="de"><emphasis>Elemente mit einem <code>Component</code>
								Attribut</emphasis></term>
							<listitem>
								<para xml:id="det_2496" xml:lang="de"><simplelist type="inline">
										<member><code>PriceItem/Absolute/AppliedBy</code></member>
										<member><code>PriceItem/Percent/ApplyTo</code></member>
										<member><code>PriceItem/Percent/ApplyToAll</code></member>
										<member><code>PriceItem/Percent/NotApplyTo</code></member>
										<member><code>PriceItem/Combinatorics/CombinableWhen/CombinationCode</code></member>
										<member><code>PriceItem/Combinatorics/CombinableWhen/CombinationIndexMax</code></member>
										<member><code>PriceItem/Combinatorics/CombinableWhen/CombinationIndexMin</code></member>
										<member><code>PriceItem/Combinatorics/ExcludePriceItemClasses/ExcludePriceItemClass</code></member>
										<member><code>Condition/DayImpact/DayPriceIndex/ConsideredPriceItemClasses</code></member>
										<member><code>Condition/DayImpact/DayPriceIndex/NotConsideredPriceItemClasses</code></member>
										<member><code>NeighbourComponentCorrection/CheckInDateOffset</code></member>
										<member><code>NeighbourComponentCorrection/CheckOutDateOffset</code></member>
									</simplelist></para>
							</listitem>
						</varlistentry>
					</variablelist>

					<para xml:id="det_2497" xml:lang="de"><code>Component</code> folgt einer deutlich einfacheren Syntax: Anstelle der
						komplexen Angabe von Schritten erlaubt <code>Component</code> nur die Angabe eines
						Hauptkomponentennamens oder <code>ThisComponent</code>. Die Angabe
							<code>ThisComponent</code> referenziert die übergeordnete Hauptkomponenteninstanz
						der Komponente, in welcher die <code>Component</code> Angabe notiert wurde.</para>

					<para xml:id="det_2498" xml:lang="de">Eine <code>Component</code> referenziert anders als <code>Source</code> nicht nur
						die referenzierte Hauptkomponente, sondern auch alle ihre direkten und indirekten
						Unterkomponenten.</para>
				</section>
				<section xml:id="OtdsProcessAttributeDayAllocation">
					<title><phrase xml:id="det_2499" xml:lang="de">Zeitliche Auswahl aus einer Komponentenmenge: Das <code>DayAllocation</code>
						Attribut</phrase></title>

					<para xml:id="det_2500" xml:lang="de">Je nach Verwendungskontext ist ein <code>Source</code> Attribut von einem
							<code>DayAllocation</code> Attribut begleitet. Dieses dient der weiteren
						Einschränkung der Ergebnismenge.</para>

					<variablelist>
						<varlistentry>
							<term xml:id="det_2501" xml:lang="de"><emphasis>gültige Werte</emphasis></term>
							<listitem>
								<para xml:id="det_2502" xml:lang="de"><simplelist type="inline">
										<member><code>First</code></member>
										<member><code>Last</code></member>
										<member><code>All</code></member>
									</simplelist></para>
							</listitem>
						</varlistentry>

						<varlistentry>
							<term xml:id="det_2503" xml:lang="de"><emphasis>Elemente mit einem <code>DayAllocation</code>
								Attibut</emphasis></term>
							<listitem>
								<para xml:id="det_2504" xml:lang="de"><simplelist type="inline">
										<member><code>Condition/ConditionalTags</code></member>
										<member><code>Condition/Tags</code></member>
										<member><code>Condition/Keys</code></member>
										<member><code>Condition/PersonGroup</code></member>
										<member><code>Condition/Impact/ConditionalTags</code></member>
										<member><code>Condition/PersonImpact/PersonFilter/ConditionalTags</code></member>
										<member><code>Condition/PersonImpact/PersonFilter/PersonAge</code></member>
										<member><code>Condition/PersonImpact/PersonAge</code></member>
										<member><code>Condition/PersonImpact/PersonGenders</code></member>
										<member><code>Condition/PersonImpact/PersonIndex</code></member>
										<member><code>Condition/MatchEqual/Element</code></member>
										<member><code>Condition/MatchEqual/Tag</code></member>
									</simplelist> und die entsprechenden <code>Filter</code> Elemente.</para>
							</listitem>
						</varlistentry>
					</variablelist>

					<para xml:id="det_2505" xml:lang="de">Die Auswertung von <code>DayAllocation</code> folgt folgenden Regeln:</para>

					<variablelist>
						<varlistentry>
							<term xml:id="det_2506" xml:lang="de"><emphasis><code>DayAllocation</code> = <code>First</code></emphasis></term>
							<listitem>
								<para xml:id="det_2507" xml:lang="de">Es werden nur die Elemente in das Endergebnis übernommen, deren
										<code>MinDayAllocationTuple</code> gleich dem kleinsten
										<code>MinDayAllocationTuple</code> aller Ergebniskomponenteninstanzen
									ist</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2508" xml:lang="de"><emphasis><code>DayAllocation</code> = <code>Last</code></emphasis></term>
							<listitem>
								<para xml:id="det_2509" xml:lang="de">Es werden nur die Elemente in das Endergebnis übernommen, deren
										<code>MaxDayAllocationTuple</code> gleich dem größten
										<code>MaxDayAllocationTuple</code> aller Ergebniskomponenteninstanzen
									ist</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2510" xml:lang="de"><emphasis><code>DayAllocation</code> = <code>All</code></emphasis></term>
							<listitem>
								<para xml:id="det_2511" xml:lang="de">Es werden alle Elemente übernommen</para>
							</listitem>
						</varlistentry>
					</variablelist>
				</section>
				<section xml:id="OtdsProcessDayType">
					<title><phrase xml:id="det_2512" xml:lang="de">Auswertung von Tagesreferenzen: Das <code>DayType</code> Attribut</phrase></title>

					<para xml:id="det_2513" xml:lang="de">Das <code>DayType</code> Attribut referenziert (zusammen mit dem <code>Source</code>
						Attribut, von dem es immer begleitet wird) einen oder mehrere Tage.</para>

					<variablelist>
						<varlistentry>
							<term xml:id="det_2514" xml:lang="de"><emphasis>gültige Werte</emphasis></term>
							<listitem>
								<para xml:id="det_2515" xml:lang="de"><simplelist type="inline">
										<member><code>CheckIn</code></member>
										<member><code>CheckOut</code></member>
										<member><code>Stay</code></member>
									</simplelist></para>
							</listitem>
						</varlistentry>

						<varlistentry>
							<term xml:id="det_2516" xml:lang="de"><emphasis>Elemente mit einem <code>DayType</code> Attibut</emphasis></term>
							<listitem>
								<para xml:id="det_2517" xml:lang="de"><simplelist type="inline">
										<member><code>BookingParameter/Date</code></member>
										<member><code>Condition/Date</code></member>
										<member><code>Condition/Weekdays</code></member>
										<member><code>Condition/DayImpact/Date</code></member>
										<member><code>Condition/DayImpact/Weekdays</code></member>
										<member><code>Filter/Date</code></member>
										<member><code>Filter/Weekdays</code></member>
									</simplelist></para>
							</listitem>
						</varlistentry>
					</variablelist>

					<para xml:id="det_2518" xml:lang="de">Die Auswertung des <code>DayType</code> Attributs baut auf der <code>Source</code>
						Auswertung auf. Die Definition ist zunächst für eine einzelne Komponente definiert
						(d.h. für den Fall, dass <code>Source</code> eindeutig eine Komponenteninstanz
						referenziert). In diesem Fall referenziert <code>DayType</code> direkt den/die
						entsprechenden Tag/Tage der Komponenteninstanz (also den <code>CheckIn</code> oder
							<code>CheckOut</code> Tag oder die Menge der <code>Stay</code> Tage der
						Komponenteninstanz). Diese Definition wird nun erweitet um auch nicht-eindeutige
							<code>Source</code> Angaben als zusammengesetzte Komponenten abzubilden:</para>

					<procedure>
						<step>
							<para xml:id="det_2519" xml:lang="de">Bestimme die durch <code>Source</code> referenzierten Komponenten (siehe
									<xref linkend="OtdsProcessSource"/>).</para>
						</step>
						<step>
							<para xml:id="det_2520" xml:lang="de">Bestimme die referenzierten Tage</para>
							<procedure>
								<step>
									<para xml:id="det_2521" xml:lang="de">Falls <code>DayType</code> == <code>CheckIn</code>: Kleinster (im
										Reiseverlauf also zeitlich frühester) <code>CheckIn</code> Tag einer
										der Komponenten.</para>
								</step>
								<step>
									<para xml:id="det_2522" xml:lang="de">Falls <code>DayType</code> == <code>CheckOut</code>: Größter (im
										Reiserverlauf also zeitlich spätester) <code>CheckOut</code> Tag einer
										der Komponenten</para>
								</step>
								<step>
									<para xml:id="det_2523" xml:lang="de">Falls <code>DayType</code> == <code>Stay</code>: Zusammenfassung
										aller <code>Stay</code> Tage der Komponenten</para>
								</step>
							</procedure>
						</step>
					</procedure>

					<para xml:id="det_2524" xml:lang="de">Ist die <code>Source</code> Angabe eindeutig, entspricht diese Definition der oben
						angegebenen. Referenziert <code>Source</code> mehrere Komponenteninstanzen im Sinne
						einer zusammengesetzte Komponenteninstanz (siehe <xref linkend="OtdsProcessSourceProcess"/>), so setzt diese Definition die einzelnen
						Kompnenteninstanzen sinnvoll zu einer kombinierten Komponente zusammen.</para>

					<para xml:id="det_2525" xml:lang="de">Das Ergebnis ist formal immer eine Menge von Tagen. Im Falle <code>DayType</code> ==
							<code>CheckIn</code> oder <code>CheckOut</code> hat diese Menge jedoch nur ein
						Element. Die exakte Interpretation dieser Menge ist nun abhängig vom Kontext.</para>

					<itemizedlist>
						<listitem>
							<para xml:id="det_2526" xml:lang="de">In einem <emphasis>nicht tagesspezifischen Bedingungs-Kontext</emphasis>
									(<simplelist type="inline">
									<member><code>Condition/Date</code></member>
									<member><code>Condition/Weekdays</code></member>
									<member><code>Filter/Date</code></member>
									<member><code>Filter/Weekdays</code></member>
								</simplelist>) wird überprüft, ob einer der Tage die angegebene Bedingung
								erfüllt.</para>
						</listitem>

						<listitem>
							<para xml:id="det_2527" xml:lang="de">In einem <emphasis>tagesspezifischen Bedingungs-Kontext</emphasis>
									(<simplelist type="inline">
									<member><code>Condition/DayImpact/Date</code></member>
									<member><code>Condition/DayImpact/Weekdays</code></member>
								</simplelist>) wird überprüft, ob der aktuelle Tag in der Menge enthalten ist.
								Zusätzlich wird die eigentliche Bedingung überprüft.</para>
						</listitem>

						<listitem>
							<para xml:id="det_2528" xml:lang="de">In einem <emphasis>nicht tagesspezifischen Werte-Kontext</emphasis>
									(<code>BookingParameter</code> ohne Angabe von <code>Day</code> im
									<code>EvaluationBase</code> Attribut der umgebenden
									<code>BookingGroup</code>) wird aus der Menge ein beliebiger Tag als
								Ergebniswert ausgewählt. Von daher ist in diesem Fall die Angabe
									<code>Stay</code> nicht sinnvoll.</para>
						</listitem>

						<listitem>
							<para xml:id="det_2529" xml:lang="de">In einem <emphasis>tagesspezifischen Werte-Kontext</emphasis>
									(<code>BookingParameter</code> unter Angabe von <code>Day</code> im
									<code>EvaluationBase</code> Attribut der umgebenden
									<code>BookingGroup</code>) wird der aktuelle Tag als Ergebnis geliefert,
								wenn dieser in der Menge enthalten ist, ansonsten wird kein Ergebnis geliefert
								(dieser Fall wird bei der Verarbeitung gesondert berücksichtigt).</para>
						</listitem>
					</itemizedlist>

				</section>
				<section xml:id="OtdsProcessIntervalType">
					<title><phrase xml:id="det_2530" xml:lang="de">Auswertung von Tagesintervallen: Das <code>IntervalType</code> Attribut</phrase></title>

					<para xml:id="det_2531" xml:lang="de">Das <code>IntervalType</code> Attribut definiert zusammen mit dem
							<code>Source</code> Attribut (von dem es immer begleitet ist) ein Tagesintervall
						(genauer: eine Menge von Tagen, welche nicht immer ein Intervall bilden
						müssen).</para>

					<variablelist>
						<varlistentry>
							<term xml:id="det_2532" xml:lang="de"><emphasis>gültige Werte</emphasis></term>
							<listitem>
								<para xml:id="det_2533" xml:lang="de"><simplelist type="inline">
										<member><code>CheckInOut</code></member>
										<member><code>Stay</code></member>
									</simplelist></para>
							</listitem>
						</varlistentry>

						<varlistentry>
							<term xml:id="det_2534" xml:lang="de"><emphasis>Elemente mit einem <code>IntervalType</code>
								Attibut</emphasis></term>
							<listitem>
								<para xml:id="det_2535" xml:lang="de"><simplelist type="inline">
										<member><code>Condition/DayImpact/DayIndex</code></member>
										<member><code>Condition/DayImpact/DayPriceIndex</code></member>
										<member><code>PriceItem/Absolute/DayBase</code></member>
									</simplelist></para>
							</listitem>
						</varlistentry>
					</variablelist>

					<para xml:id="det_2536" xml:lang="de">Die Auswertung erfolgt ähnlich <code>DayType</code>. Das Ergebnis ist eine Menge von
						Tagen:</para>

					<procedure>
						<step>
							<para xml:id="det_2537" xml:lang="de">Bestimme die durch <code>Source</code> referenzierten Komponenten (siehe
									<xref linkend="OtdsProcessSource"/>).</para>
						</step>
						<step>
							<para xml:id="det_2538" xml:lang="de">Bestimme die referenzierten Tage:</para>
							<procedure>
								<step>
									<para xml:id="det_2539" xml:lang="de">Falls <code>IntervalType</code> == <code>CheckInOut</code>: Alle
										Tage vom kleinsten <code>CheckIn</code> Tag der Komponenten bis zum
										größten <code>CheckOut</code> Tag der Komponenten.</para>
								</step>
								<step>
									<para xml:id="det_2540" xml:lang="de">Falls <code>IntervalType</code> == <code>Stay</code>: Vereinigung
										aller <code>Stay</code> Tage der Komponenten.</para>
								</step>
							</procedure>
						</step>
					</procedure>

					<para xml:id="det_2541" xml:lang="de">Im strengen Sinne ist das Ergebnis <emphasis>kein</emphasis> Intervall: Falls
							<code>IntervalType</code> == <code>Stay</code>, kann das Ergebnis eine nicht
						zusammenhängende Menge von Tagen sein (Beispiel: Ein <code>ReturnFlight</code> hat
						üblicherweise einen <code>Stay</code> Tag am Anfang des Zeitraumes und einen am
						Ende).</para>

					<para xml:id="det_2542" xml:lang="de">Die Dauer bzw. Anzahl der Tage des Intervalls entspricht immer der
							<emphasis>Anzahl</emphasis> der Tage in dieser Menge. Je nach Wert von
							<code>IntervalType</code> entspricht dies:</para>

					<itemizedlist>
						<listitem>
							<para xml:id="det_2543" xml:lang="de">der Anzahl der Tage zwischen kleinstem <code>CheckIn</code> und größtem
									<code>CheckOut</code> einschließlich, wenn <code>IntervalType</code> ==
									<code>CheckInOut</code>.</para>
						</listitem>
						<listitem>
							<para xml:id="det_2544" xml:lang="de">der Anzahl der <code>Stay</code> Tage, wenn <code>IntervalType</code> ==
									<code>Stay</code>.</para>
						</listitem>
					</itemizedlist>
				</section>
			</section>
			<section xml:id="OtdsProcessConditions">
				<title><phrase xml:id="det_2545" xml:lang="de">Auswertung von Bedingungen</phrase></title>

				<para xml:id="det_2546" xml:lang="de">Dieses Kapitel beschreibt die Auswertungen von Bedingungen (<code>Condition</code> und
						<code>Filter</code>) in OTDS.</para>

				<section xml:id="OtdsProcessConditionsContext">
					<title><phrase xml:id="det_2547" xml:lang="de">Auswertungskontext</phrase></title>

					<para xml:id="det_2548" xml:lang="de">Bedingungen werden immer in einem Kontext ausgewertet. Es sind zwei
						Bedingungskontexte zu unterscheiden:</para>

					<itemizedlist>
						<listitem>
							<para xml:id="det_2549" xml:lang="de">Der <emphasis>knotenspezifische Bedingungs-Kontext</emphasis> beschreibt die
								Auswertung einer Bedingung zu einem bestimmten Tag und einer bestimmten
								Person. Untertypen dieses Kontext sind der
									<emphasis>tagesspezifische</emphasis> und <emphasis>personenspezifische
									Bedingungs-Kontext</emphasis>.</para>
						</listitem>
						<listitem>
							<para xml:id="det_2550" xml:lang="de">Der <emphasis>nicht knotenspezische Bedingungs-Kontext</emphasis> hingegen
								beschreibt die Auswertung einer Bedingung unabhängig von einem Reisetag oder
								einer Person.</para>
						</listitem>
					</itemizedlist>

					<para xml:id="det_2551" xml:lang="de">Jeder Bedingungsausdruck wird immer gegen ein einzelnes konkretes Angebot
						ausgewertet, also gegen eine vollständige Menge von Komponenteninstanzen. Die
						einzelnen Bedingungsterme referenzieren mittels <code>Source</code>,
							<code>DayAllocation</code> und <code>EvaluationMode</code> einzelne Instanzen aus
						diesem Angebot und werden immer im Kontext <emphasis>einer</emphasis> Kontext-Instanz
						ausgewertet (siehe den folgenden Abschnitt).</para>

					<para xml:id="det_2552" xml:lang="de">Der Auswertungskontext zur Definition der einzelnen atomaren Bedingungsterme enthält
						also folgende Informationen:</para>

					<itemizedlist>
						<listitem>
							<para xml:id="det_2553" xml:lang="de">Eine <emphasis>Kontext-Instanz</emphasis>. Dies ist eine der durch
									<code>Source</code> referenzierten Instanzen (siehe nachfolgender
								Abschnitt). Dieser Wert wird für manche Bedingungen durch einen oder mehrere
								andere Werte ersetzt (Siehe <xref linkend="OtdsProcessConditionsSource"/>).</para>
						</listitem>
						<listitem>
							<para xml:id="det_2554" xml:lang="de">In einem <emphasis>tagesspezifischen Bedingungskontext</emphasis> den zu
								betrachtenden Tag</para>
						</listitem>
						<listitem>
							<para xml:id="det_2555" xml:lang="de">In einem <emphasis>personenspezifischen Bedingungskontext</emphasis> die zu
								betrachtende Person (also deren Alter, Geschlecht und Positionierung in der
								Belegung).</para>
						</listitem>
					</itemizedlist>
				</section>
				<section xml:id="OtdsProcessConditionsImpact">
					<title><phrase xml:id="det_2556" xml:lang="de"><code>Impact</code> und Nicht-<code>Impact</code> Bedingungen</phrase></title>

					<para xml:id="det_2557" xml:lang="de">Je nach Kontext der Bedingungsauswertung enthält dieser Kontext einen aktuellen
							<emphasis>Tag</emphasis> und/oder eine aktuelle <emphasis>Person</emphasis>
						unabhängig vom konkreten Inhalt des Ausdruckes.</para>

					<para xml:id="det_2558" xml:lang="de">Bedingungsterme, welche Bezug auf den aktuellen Tag oder die aktuelle Person nehmen,
						werden <code>Impact</code>-Bedingungen genannt. Andersherum bedeutet dies auch, das
							Nicht-<code>Impact</code> Bedingungen grundsätzlich <emphasis>keinen</emphasis>
						Bezug zu einem aktuell auszuwertenden Tag oder Person haben und an allen Tagen und
						Personen dasselbe Ergebnis liefern.</para>

					<para xml:id="det_2559" xml:lang="de"><code>Impact</code> Bedingungen sind durch ein zusätzliches sie umgebendes Element
							<code>PersonImpact</code>, <code>DayImpact</code> oder <code>Impact</code>
						gekennzeichnet:</para>

					<variablelist>
						<varlistentry>
							<term xml:id="det_2560" xml:lang="de"><code>DayImpact</code></term>
							<listitem>
								<para xml:id="det_2561" xml:lang="de">Enthält Bedingungen, welche vom aktuellen <emphasis>Tag</emphasis>, aber
									nicht der aktuellen Person abhängig ausgewertet werden.</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2562" xml:lang="de"><code>PersonImpact</code></term>
							<listitem>
								<para xml:id="det_2563" xml:lang="de">Enthält Bedingungen, welche von der aktuellen
										<emphasis>Person</emphasis>, aber nicht dem aktuellen Tag abhängig
									ausgewertet werden.</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2564" xml:lang="de"><emphasis>Impact</emphasis></term>
							<listitem>
								<para xml:id="det_2565" xml:lang="de">Enthält Bedingungen, welche abhängig vom aktuellen
										<emphasis>Tag</emphasis> und der aktuellen <emphasis>Person</emphasis>
									ausgewertet werden.</para>
							</listitem>
						</varlistentry>
					</variablelist>

					<para xml:id="det_2566" xml:lang="de">Existiert eine Bedingung sowohl als <code>Impact</code> als auch als
							Nicht-<code>Impact</code> Bedingung, so wird die Nicht-<code>Impact</code>
						Bedingung immer für alle Knoten (also alle Tage oder Personen je nach Art der
						Bedingung) ausgewertet und überprüft, ob die Bedingung in einem Knoten erfüllt ist.
						Die Details sind in der Beschreibung der jeweiligen Bedingung aufgeführt. Diese
						Bedingungen sind <simplelist type="inline">
							<member><code>ConditionalTags</code></member>
							<member><code>Date</code></member>
							<member><code>Weekdays</code></member>
						</simplelist>.</para>
				</section>
				<section xml:id="OtdsProcessConditionsSource">
					<title><phrase xml:id="det_2567" xml:lang="de"><code>Source</code>, <code>DayAllocation</code> und
						<code>EvaluationMode</code></phrase></title>

					<para xml:id="det_2568" xml:lang="de">Alle Bedingungen testen Werte gegen Einschränkungen. Die Attribute
							<code>Source</code>, <code>DayAllocation</code>, und <code>EvaluationMode</code>
						bestimmen die Quelle und Zusammenführung dieser Werte.</para>

					<para xml:id="det_2569" xml:lang="de">Nicht alle Bedingungen enthalten alle diese Attribute. Sie sind nur erlaubt, wenn
						sie auch für die spezielle Bedingung sinnvoll sind. Einzelne Bedingungen ersetzen
						Funktionalität dieser Attribute auch durch spezielle einzelne Definitionen (z.B. hat
							<code>Airports</code> kein <code>DayAllocation</code> und kein
							<code>EvaluationMode</code> Attribut. Die Funktionalität dieser Attribute ist mit
						in die Auswertung von <code>AirportType</code> eingeflossen). Ist eines der hier
						beschriebenen Attribute nicht erlaubt, so werden die restlichen Attribute weiterhin
						wie hier beschrieben ausgewertet.</para>

					<variablelist>
						<varlistentry>
							<term xml:id="det_2570" xml:lang="de"><code>Source</code></term>
							<listitem>
								<para xml:id="det_2571" xml:lang="de">Referenziert eine Menge von Komponenteninstanzen, aus denen die
									Vergleichswerte gelesen werden sollen. Je nach Bedingung werden die Werte
									entweder in konkreten Eigenschaften der Komponenteninstanz oder aber unter
									deren <link linkend="OtdsProcessDataModelInstanceValues">Instanzwerten</link> gefunden (siehe <xref linkend="OtdsProcessSource"/>).</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2572" xml:lang="de"><code>DayAllocation</code></term>
							<listitem>
								<para xml:id="det_2573" xml:lang="de">Da eine <code>Source</code> Angabe nicht eindeutig sein muss, kann durch
									die Angabe von <code>Source</code> alleine nicht <emphasis>ein</emphasis>
									Wert referenziert werden. <code>DayAllocation</code> erlaubt es, die durch
										<code>Source</code> referenzierte Komponenteninstanzmenge anhand der
									Tagesallokation weiter einzuschränken. Ist <code>DayAllocation</code> ==
										<code>First</code>, so wird nur die zeitlich erste Komponente (also
									diejenige mit dem kleinsten <code>MinDayAllocationTuple</code>
									Instanzwert), ist <code>DayAllocation</code> == <code>Last</code> nur die
									zeitlich letzte Komponente (also diejenige mit dem größten
										<code>MaxDayAllocationTuple</code> Instanzwert) verwendet. Diese
									Einschränkung ermöglicht es z.B. in zusammengesetzten Flügen auf den
									ersten oder letzen Flug Bezug zu nehmen.</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2574" xml:lang="de"><code>EvaluationMode</code></term>
							<listitem>
								<para xml:id="det_2575" xml:lang="de">Ist die <code>Source</code> Referenz nicht eindeutig, so wird die
									eigentliche Bedingung gegen jede referenzierte Komponenteninstanz
									ausgeführt. Es ergibt sich also eine Menge von Ergebnissen.
										<code>EvaluationMode</code> gibt nun an, wie diese Einzelergebnisse
									zusammenzufassen sind: <code>All</code> bedeutet, das Gesamtergebnis ist
									nur <code>True</code> wenn <emphasis>alle</emphasis> Teilergebnisse
										<code>True</code> sind, wogegen <code>Any</code> bedeutet, dass nur
									mindestens <emphasis>ein</emphasis> Teilergebnis <code>True</code> sein
									muss um <code>True</code> als Gesamtergebnis zu erhalten.</para>
							</listitem>
						</varlistentry>
					</variablelist>

					<para xml:id="det_2576" xml:lang="de">Es gibt Bedingungen, in welchen die Auswertung von <code>Source</code>,
							<code>DayAllocation</code> und <code>EvaluationMode</code> durch eine alternative
						Auswertung ersetzt wird. Diese Fälle sind:</para>

					<variablelist>
						<varlistentry>
							<term xml:id="det_2577" xml:lang="de"><code>Date</code></term>
							<term xml:id="det_2578" xml:lang="de"><code>Weekdays</code></term>
							<listitem>
								<para xml:id="det_2579" xml:lang="de">Die Auswertung der <code>Source</code> und Bestimmung eines (oder
									mehrerer) Kontext-Instanzen wird erstetzt durch die Auswertung von
										<code>Source</code> und <code>DayType</code> und ergibt anstelle der
									Kontext-Instanzen eine Menge von Kontext-Tagen. Siehe <xref linkend="OtdsProcessDayType"/>.</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2580" xml:lang="de"><code>Airports</code></term>
							<listitem>
								<para xml:id="det_2581" xml:lang="de">Das <code>DayAllocation</code> Attribut wird durch
										<code>AirportType</code> ersetzt. Es gilt: <code>Departure</code>
									entspricht <code>First</code>, <code>Arrival</code> entspricht
										<code>Last</code> und <code>Catchment</code> entspricht
										<code>All</code>. <code>EvaluationMode</code> wird auf
										<code>Any</code> gesetzt.</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2582" xml:lang="de"><code>BookingDateOffset</code></term>
							<listitem>
								<para xml:id="det_2583" xml:lang="de">Die Auswertung der <code>Source</code> und Bestimmung eines (oder
									mehrerer) Kontext-Instanzen wird ersetzt durch eine vereinfachte
									Auswertung der <code>Source</code>: Es wird zunächst <code>Source</code>
									wie üblich in eine Menge von Komponenteninstanzen aufgelöst. Aus dieser
									Liste wird dann der kleinste <code>CheckIn</code> Tag aller Instanzen als
									Kontext-Tag ausgewählt. Dieser Tag ersetzt im Kontext die
									Kontext-Instanz.</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2584" xml:lang="de"><code>Duration</code></term>
							<listitem>
								<para xml:id="det_2585" xml:lang="de">Die Auswertung der <code>Source</code> und Bestimmung eines (oder
									mehrerer) Kontext-Instanzen wird ersetzt durch die Auswertung der
										<code>Source</code> und eines impliziten <code>IntervalType</code>.
									Siehe <xref linkend="OtdsProcessIntervalType"/>. Das Kontext-Item wird
									durch die sich ergebende Menge von Kontext-Tagen ersetzt.</para>
							</listitem>
						</varlistentry>
					</variablelist>
				</section>
				<section xml:id="OtdsProcessConditionsOperators">
					<title><phrase xml:id="det_2586" xml:lang="de">Auswertung der Operatoren: <code>And</code>, <code>Or</code>, <code>Not</code>,
							<code>Imply</code></phrase></title>

					<para xml:id="det_2587" xml:lang="de">Die atomaren Einzelbedingungen werden mittels dieser Operatoren zu komplexeren
						Gesamtausdrücken zusammengesetzt. Die Auswertung folgt den offensichtlichen
						Regeln.</para>

					<para xml:id="det_2588" xml:lang="de">Die Operation <code>A IMPLY B</code> (Also
							<code>&lt;Imply&gt;&lt;If&gt;A&lt;/If&gt;&lt;Then&gt;B&lt;/Then&gt;&lt;/Imply&gt;</code>) entspricht
							<code>(NOT A) OR B</code>.</para>
				</section>
				<section xml:id="OtdsProcessConditionsThreeway">
					<title><phrase xml:id="det_2589" xml:lang="de">Ausführungszeitpunkt und die dreiwertige Auswertungslogik</phrase></title>

					<para xml:id="det_2590" xml:lang="de">Im Rahmen der Preisberechnung existiert das Konzept des Ausführungszeitpunktes. Ein
						und dieselbe Bedingung kann zu verschiedenen Zeitpunkten ausgewertet werden. Einzelne
						Teile der Bedingung können nun angeben, zu welchem Zeitpunkt sie aktiv werden
							(<code>ImpactExecutionOder</code>). Die Basis für die Umsetzung dieser
						Funktionalität ist eine dreiwertige Logik mit den Werten <code>True</code>,
							<code>False</code> und <code>Undefined</code>. Für die Operatoren gelten im Rahmen
						dieser dreiwertigen Logik folgende Regeln:</para>

					<itemizedlist>
						<listitem>
							<para xml:id="det_2591" xml:lang="de"><code>Undefined AND False == False</code>, <code>False AND Undefined ==
									False</code></para>
						</listitem>
						<listitem>
							<para xml:id="det_2592" xml:lang="de"><code>Undefined OR True == True</code>, <code>True OR Undefined ==
									True</code></para>
						</listitem>
						<listitem>
							<para xml:id="det_2593" xml:lang="de"><code>Imply</code> ist entsprechend durch <code>(NOT A) OR B</code>
								definiert.</para>
						</listitem>
						<listitem>
							<para xml:id="det_2594" xml:lang="de">Alle anderen Ausdrücke in denen <code>Undefined</code> vorkommt, sind
									<code>Undefined</code>.</para>
						</listitem>
					</itemizedlist>

					<para xml:id="det_2595" xml:lang="de">Eine einzelne Teilbedingung wird möglicherweise <code>Undefined</code> , wenn sie
						vor ihrem Aktivierungszeitpunkt ausgewertet wird. Siehe <xref linkend="OtdsProcessPriceCalculationConditions"/>.</para>
				</section>

				<section xml:id="OtdsProcessConditionsKeys">
					<title><phrase xml:id="det_2596" xml:lang="de"><code>Keys</code> Bedingung</phrase></title>

					<para xml:id="det_2597" xml:lang="de">Diese Bedingung überprüft den Wert des <code>Key</code> Attributs der
						Kontext-Instanz. Die Bedingung enthält eine Liste von gültigen Key-Werten. Ist der
						Wert des <code>Key</code> Attributs der Kontext-Instanz in dieser Liste enthalten, ist
						das Ergebnis <code>True</code>, sonst <code>False</code>.</para>
				</section>
				<section xml:id="OtdsProcessConditionsTags">
					<title><phrase xml:id="det_2598" xml:lang="de"><code>Tags</code> Bedingung</phrase></title>

					<para xml:id="det_2599" xml:lang="de">Diese Bedingung überprüft die Tags der Kontext-Instanz. Die Bedingung enthält eine
						Liste von Vergleichswerten. Der Test wird gegen jeden dieser Vergleichswerte
						ausgeführt und ist erfolgreich, sobald er für einen Wert erfolgreich ist. Weitere
						Attribute extrahieren die korrekten Bestandteile aus der Kontext-Instanz:</para>

					<variablelist>
						<varlistentry>
							<term xml:id="det_2600" xml:lang="de"><code>Class</code></term>
							<listitem>
								<para xml:id="det_2601" xml:lang="de">Die Bedingung überprüft immer die Tags einer bestimmten
										<code>Class</code>. Es werden nur die Tags mit der hier angegebenen
										<code>Class</code> aus der Kontext-Instanz berücksichtigt.</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2602" xml:lang="de"><code>Offset</code> (optional)</term>
							<listitem>
								<para xml:id="det_2603" xml:lang="de">Ist dieser Wert angegeben, werden von den referenzierten Tag Werten der
									Kontext-Instanz nur die Zeichen ab dieser Position berücksichtigt.
									Standardwert ist 0 (alle Zeichen ab dem ersten berücksichtigen).</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2604" xml:lang="de"><code>Length</code> (optional)</term>
							<listitem>
								<para xml:id="det_2605" xml:lang="de">Ist dieser Wert angegeben, werden die Tag Werte der Kontext-Instanz
									(nach der Auswertung von <code>Offset</code>) an dieser Stelle
									abgeschnitten.</para>
							</listitem>
						</varlistentry>
					</variablelist>

					<para xml:id="det_2606" xml:lang="de">Nach Anwendung von <code>Class</code>, <code>Offset</code> und <code>Length</code>
						wurde aus der Kontext-Instanz eine Liste von Werten extrahiert. Sollten nach der
						Anwendung von <code>Offset</code> oder <code>Length</code> einzelne Werte in dieser
						Liste leer sein, werden diese aus der Liste entfernt. Stimmt
							<emphasis>einer</emphasis> der Werte aus dieser Liste mit
							<emphasis>einem</emphasis> der in der Bedingung angegebenen Vergleichswerte
						überein, ist die Bedingung <code>True</code>, sonst <code>False</code>.</para>
				</section>
				<section xml:id="OtdsProcessConditionsConditionalTags">
					<title><phrase xml:id="det_2607" xml:lang="de"><code>ConditionalTags</code> Bedingung</phrase></title>

					<para xml:id="det_2608" xml:lang="de">Diese Bedingung entspricht der <code>Tags</code> Bedingung, überprüft aber die
							<code>ConditonalTag</code> Angaben der Kontext-Instanz.</para>

					<para xml:id="det_2609" xml:lang="de">Im ersten Schritt werden die Bedingungen aller <code>ConditionalTag</code> Angaben
						der Kontext-Instanz ausgewertet. Nur die <code>Tags</code> Kinder <code>True</code>
						ergibt, werden im Weiteren betrachtet.</para>

					<para xml:id="det_2610" xml:lang="de">Die so erzeugte Liste von Tags wird nun wie eine <xref linkend="OtdsProcessConditionsTags"/> ausgewertet.</para>

					<para xml:id="det_2611" xml:lang="de">Eine spezielle Regel dient der Vermeidung von zirkulären Bezügen unter
							<code>ConditionalTag</code> Definitionen: Wird im Rahmen der Auswertung der
							<code>Condition</code> eines <code>ConditionalTag</code> eine weitere
							<code>ConditionalTags</code> Bedingung ausgewertet, so werden bei dieser
						rekursiven Auswertung nur solche <code>ConditionalTag</code> Definitionen
						berücksichtigt, welche in <emphasis>document-order</emphasis>
						<emphasis>vor</emphasis> der aktuell ausgewerteten Bedingung (also auch dem
						entsprechenden <code>ConditionalTag</code>) notiert sind.</para>

					<para xml:id="det_2612" xml:lang="de">Die <code>ConditionalTags</code> Bedingung kann sowohl in <code>Impact</code> als
						auch direkt notiert werden.</para>

					<itemizedlist>
						<listitem>
							<para xml:id="det_2613" xml:lang="de">Wird <code>ConditionalTags</code> als <code>Impact</code> notiert, so wird
								die Bedingung normal im Kontext des zu betrachtenden Tages und der zu
								betrachtenden Person ausgewertet.</para>
						</listitem>
						<listitem>
							<para xml:id="det_2614" xml:lang="de">Wird <code>ConditionalTags</code> außderalb von <code>Impact</code> notiert,
								so wird überprüft, ob die Bedingung an <emphasis>irgendeinem</emphasis> Knoten
								erfüllt ist. Es werden also sämtliche Tage der Reise (also alle
									<code>CheckIn</code>, <code>CheckOut</code> und <code>Stay</code> Tage)
								der Reise sowie alle Personen überprüft. Ist die Bedingung an irgendeiner
								Stelle erfüllt, ist sie erfüllt.</para>
						</listitem>
					</itemizedlist>
				</section>
				<section xml:id="OtdsProcessConditionsAirports">
					<title><phrase xml:id="det_2615" xml:lang="de"><code>Airports</code> Bedingung</phrase></title>

					<para xml:id="det_2616" xml:lang="de">Diese Bedingung überprüft die <code>Airport</code> Angaben der
						Kontext-Instanz.</para>

					<para xml:id="det_2617" xml:lang="de">Das <code>AirportType</code> Attribut erfüllt hierbei zwei Funktionen:</para>

					<itemizedlist>
						<listitem>
							<para xml:id="det_2618" xml:lang="de">Es definiert auf welche Art von Flughafen sich die Bedingung bezieht</para>
						</listitem>
						<listitem>
							<para xml:id="det_2619" xml:lang="de">Es legt die genaue Auswertung einer nicht eindeutigen <code>Source</code>
								Referenz fest.</para>
						</listitem>
					</itemizedlist>

					<para xml:id="det_2620" xml:lang="de">Die standardmäßige Einschränkung von <code>Source</code> mittels
							<code>DayAllocation</code> und <code>EvaluationMode</code> wird in
							<code>Airport</code> durch die <code>AirportType</code> Angabe ersetzt. Jeder
						mögliche Wert von <code>AirportType</code> entspricht einem <code>DayAllocation</code>
						Wert:</para>

					<variablelist>
						<varlistentry>
							<term xml:id="det_2621" xml:lang="de"><code>Departure</code></term>
							<listitem>
								<para xml:id="det_2622" xml:lang="de">Entspricht <code>DayAllocation</code> == <code>First</code></para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2623" xml:lang="de"><code>Arrival</code></term>
							<listitem>
								<para xml:id="det_2624" xml:lang="de">Entspricht <code>DayAllocation</code> == <code>Last</code></para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2625" xml:lang="de"><code>Catchment</code></term>
							<listitem>
								<para xml:id="det_2626" xml:lang="de">Entspricht <code>DayAllocation</code> == <code>All</code></para>
							</listitem>
						</varlistentry>
					</variablelist>

					<para xml:id="det_2627" xml:lang="de">Der <code>EvaluationMode</code> ist in jedem Falle auf <code>Any</code> zu
						setzen.</para>

					<para xml:id="det_2628" xml:lang="de">Bei der eigentlichen Auswertung der <code>Airport</code> Bedingung referenziert
							<code>AirportType</code> dann die Art des Flughafens:</para>

					<variablelist>
						<varlistentry>
							<term xml:id="det_2629" xml:lang="de"><emphasis>Departure</emphasis></term>
							<listitem>
								<para xml:id="det_2630" xml:lang="de">Referenziert je nach Kontext-Instanz das <code>DepartureAirport</code>
									Element in <simplelist>
										<member><code>/Otds/Flights/OnewayFlights/OnewayFlight</code></member>
										<member><code>/Otds/Flights/ReturnFlights/ReturnFlight/Outbound</code></member>
										<member><code>/Otds/Flights/ReturnFlights/ReturnFlight/Inbound</code></member>
									</simplelist></para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2631" xml:lang="de"><emphasis>Arrival</emphasis></term>
							<listitem>
								<para xml:id="det_2632" xml:lang="de">Referenziert je nach Kontext-Instanz das <code>ArrivalAirport</code>
									Elemente in <simplelist>
										<member><code>/Otds/Flights/OnewayFlights/OnewayFlight</code></member>
										<member><code>/Otds/Flights/ReturnFlights/ReturnFlight/Outbound</code></member>
										<member><code>/Otds/Flights/ReturnFlights/ReturnFlight/Inbound</code></member>
									</simplelist></para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2633" xml:lang="de"><code>Catchment</code></term>
							<listitem>
								<para xml:id="det_2634" xml:lang="de">Referenziert je nach Kontext-Instanz das <code>CatchmentAirport</code>
									Element in <simplelist>
										<member><code>/Otds/Accommodations/Accommodation</code></member>
										<member><code>/Otds/Addons/Addon</code></member>
									</simplelist></para>
							</listitem>
						</varlistentry>
					</variablelist>

					<para xml:id="det_2635" xml:lang="de">Stimmt der Typ der Kontext-Instanz nicht mit einem der hier aufgelisteten Typen
						überein, ist die Bedingung <code>False</code>. Ansonsten ist die Bedingung erfüllt,
						wenn das referenzierte Element mindestens einen der in der Bedingung angegebenen
						Flughafencodes enthält.</para>
				</section>
				<section xml:id="OtdsProcessConditionsBookingDate">
					<title><phrase xml:id="det_2636" xml:lang="de"><code>BookingDate</code> Bedingung</phrase></title>

					<para xml:id="det_2637" xml:lang="de">Die Bedingung <code>BookingDate</code> überprüft das Buchungsdatum (bzw. das Datum
						zum Zeitpunkt der Preisanfrage) des Angebotes. Das Datum kann durch <code>Min</code>
						auf ein frühestes Datum und durch <code>Max</code> auf ein spätestes Datum
						eingeschränkt werden. Weiterhin ist es möglich durch <code>Dates</code> eine Liste
						einzelner Datumsangaben zu notieren, von denen eines mit dem Buchungsdatum
						übereinstimmen muss. Ist mehr als eine der Einschränkungen <code>Min</code>,
							<code>Max</code> und <code>Dates</code> angegeben, müssen alle Einschränkungen
						gleichzeitig erfüllt sein, damit die Bedingung erfüllt ist. Bei gleichzeitiger Angabe
						von <code>Min</code> und <code>Max</code> kann beispielsweise eine gültige
						Terminspanne definiert werden, in der eine Buchung möglich ist.</para>

					<para xml:id="det_2638" xml:lang="de">Für das Attibut <code>Source</code> muss immer der Wert <code>Product</code>
						angegeben werden. Die Logik wird möglicherweise in einer zukünftigen Version von OTDS
						auf Komponenteninstanzen ausgedehnt.</para>
				</section>
				<section xml:id="OtdsProcessConditionsBookingDateOffset">
					<title><phrase xml:id="det_2639" xml:lang="de"><code>BookingDateOffset</code> Bedingung</phrase></title>

					<para xml:id="det_2640" xml:lang="de">Die Bedingung <code>BookingDateOffset</code> prüft die Anzahl der Tage, die zwischen
						dem Buchungsdatum (bzw. das Datum zum Zeitpunkt der Preisanfrage) und dem frühesten
							<code>CheckIn</code> der durch das Attribut <code>Source</code> referenzierten
						Komponenteninstanzen liegen. Die Anzahl der Tage kann durch <code>Min</code> nach
						unten und durch <code>Max</code> nach oben beschränkt werden. Sind sowohl
							<code>Min</code> als auch <code>Max</code> angegeben, müssen beide Einschränkungen
						gleichzeitig erfüllt sein, damit die Bedingung erfüllt ist.</para>

					<para xml:id="det_2641" xml:lang="de">Durch das Attribut <code>Source</code> werden möglicherweise mehrere
						Komponenteninstanz referenziert. Die Bedingung ist dann erfüllt, wenn die Bedingung
						für den frühesten <code>CheckIn</code> aller referenzierten Komponenteninstanzen
						erfüllt ist. Ist <code>Source=Product</code>, so wird das Datum des Reiseantritts des
						Angebots zur Errechnung der Tagesdifferenz herangezogen, was beispielsweise bei einem
						Frühbucherrabatt der typische Fall ist.</para>
				</section>
				<section xml:id="OtdsProcessConditionsDate">
					<title><phrase xml:id="det_2642" xml:lang="de"><code>Date</code> Bedingung</phrase></title>

					<para xml:id="det_2643" xml:lang="de">Diese Bedingung überprüft ein Datum gegen ein Mindest- oder Maximaldatum oder gegen
						eine Datumsliste.</para>

					<para xml:id="det_2644" xml:lang="de">Die standardmäßige Auswertung von <code>Source</code>, <code>DayAllocation</code>
						und <code>EvaluationMode</code> wird in <code>Date</code> durch die Auswertung von
							<code>Source</code> und <code>DayType</code> ersetzt (siehe <xref linkend="OtdsProcessDayType"/>). Anstelle einer Kontext-Instanz ist das Ergebnis
						somit eine Menge von Kontext-Tagen.</para>

					<para xml:id="det_2645" xml:lang="de">Die <code>Date</code> Bedingung überprüft immer mehrere Einschränkungen:</para>

					<itemizedlist>
						<listitem>
							<para xml:id="det_2646" xml:lang="de">Zunächst wird überprüft, ob der aktuelle Tag in den Kontext-Tagen enthalten
								ist.</para>
						</listitem>
						<listitem>
							<para xml:id="det_2647" xml:lang="de">Im zweiten Schritt wird überprüft, ob der aktuelle Tag die angegebenen
								Einschränkungen erfüllt.</para>
						</listitem>
					</itemizedlist>

					<para xml:id="det_2648" xml:lang="de">Die Einschränkungen werden wie folgt überprüft:</para>

					<variablelist>
						<varlistentry>
							<term xml:id="det_2649" xml:lang="de"><code>Min</code></term>
							<listitem>
								<para xml:id="det_2650" xml:lang="de">Erfüllt, wenn der aktuelle Tag &gt;= dem angegebenen <code>Min</code>-Datum
									ist.</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2651" xml:lang="de"><code>Max</code></term>
							<listitem>
								<para xml:id="det_2652" xml:lang="de">Erfüllt, wenn der aktuelle Tag &lt;= dem angegebenen
									<code>Max</code>-Datum ist.</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2653" xml:lang="de"><code>Dates</code></term>
							<listitem>
								<para xml:id="det_2654" xml:lang="de">Erfüllt, wenn der aktuelle Tag in der Liste der angegebenen Tage
									enthalten ist.</para>
							</listitem>
						</varlistentry>
					</variablelist>

					<para xml:id="det_2655" xml:lang="de">Die <code>Date</code> Bedingung existiert sowohl als <code>Impact</code> als auch
						als Nicht-<code>Impact</code> Bedingung. Wird sie als Nicht-<code>Impact</code>
						Bedingung ausgewertet, so wird sie für jeden Tag der Kontext-Tage als aktuellen Tag
						ausgewertet und ist erfüllt, wenn sie für mindestens einen dieser Tage erfüllt
						ist.</para>
				</section>
				<section xml:id="OtdsProcessConditionsDayIndex">
					<title><phrase xml:id="det_2656" xml:lang="de"><code>DayIndex</code> und <code>DayPriceIndex</code> Bedingungen</phrase></title>

					<para xml:id="det_2657" xml:lang="de">Die <code>DayIndex</code> und <code>DayPriceIndex</code> Bedingungen schränken im
						Rahmen einer <code>DayImpact</code> Bedingung die Verarbeitung auf einzelne Tage ein.
						Beide Bedingungen werden im Prinzip identisch verarbeitet und unterscheiden sich
						ausschließlich in der Reihenfolge, in welcher die Tage verarbeitet werden werden. Im Unterschied zu <code>DayIndex</code>
						hat die <code>DayPriceIndex</code>-Bedingung aber kein Attribut <code>Repeat</code> zur
						Definition von gleichmäßigen Index-Intervallen.
					</para>

					<itemizedlist>
						<listitem>
							<para xml:id="det_2658" xml:lang="de"><code>DayIndex</code> verarbeitet die Tage in zeitlicher Reihenfolge. Der
								zeitlich erste Tag erhält den Index 1 usw.</para>
						</listitem>
						<listitem>
							<para xml:id="det_2659" xml:lang="de"><code>DayPriceIndex</code> sortiert die Tage nach dem berechneten
								Tagespreis. Auf die Details der Bestimmung der Tagespreise und die Integration
								in die Preisberechnung wird in <xref linkend="OtdsProcessPriceCalculationDayPriceIndexCondition"/>
								eingegangen.</para>
						</listitem>
					</itemizedlist>

					<para xml:id="det_2660" xml:lang="de">Diese Bedingungen dienen der Einschränkung auf eine <emphasis>Auswahl</emphasis> der
						einer referenzierten Komponente zugeordneten Tage. Es wirken also zwei
						Einschränkungen: Zunächst die Einschränkung auf die dieser Komponente zugeordneten und
						durch <code>Source</code> und <code>IntervalType</code> referenzierten Tage und des
						Weiteren auf eine Untermenge dieser Tage, welche durch <code>From</code>,
							<code>Until</code>, <code>Indices</code> und <code>Repeat</code> festgelegt
						wird.</para>

					<task>
						<title><phrase xml:id="det_2661" xml:lang="de"><code>DayIndex</code> / <code>DayPriceIndex</code></phrase></title>
						<tasksummary>
							<para xml:id="det_2662" xml:lang="de">Gegeben sind folgende Parameter:</para>

							<variablelist>
								<varlistentry>
									<term xml:id="det_2663" xml:lang="de"><replaceable>Source</replaceable></term>
									<listitem>
										<para xml:id="det_2664" xml:lang="de">Quelle der Tagesliste. Standardwert ist
												<code>ThisComponent</code>.</para>
									</listitem>
								</varlistentry>
								<varlistentry>
									<term xml:id="det_2665" xml:lang="de"><replaceable>IntervalType</replaceable></term>
									<listitem>
										<para xml:id="det_2666" xml:lang="de">Art des Tagesintervalls (Siehe <xref linkend="OtdsProcessIntervalType"/>). Standardwert ist
												<code>Stay</code>.</para>
									</listitem>
								</varlistentry>
								<varlistentry>
									<term xml:id="det_2667" xml:lang="de"><replaceable>Until</replaceable> (optional)</term>
									<listitem>
										<para xml:id="det_2668" xml:lang="de">Berücksichtige Tage vom Anfang der sortierten Tagesliste bis zu
											dieser Position.</para>
									</listitem>
								</varlistentry>
								<varlistentry>
									<term xml:id="det_2669" xml:lang="de"><replaceable>From</replaceable> (optional)</term>
									<listitem>
										<para xml:id="det_2670" xml:lang="de">Berücksichtige Tage ab dieser Position bis zum Ende der
											sortierten Tagesliste.</para>
									</listitem>
								</varlistentry>
								<varlistentry>
									<term xml:id="det_2671" xml:lang="de"><replaceable>Indices</replaceable> (optional, nur
											<code>DayIndex</code>)</term>
									<listitem>
										<para xml:id="det_2672" xml:lang="de">Berücksichtige die Tage mit den angegebenen Positionen.</para>
									</listitem>
								</varlistentry>
								<varlistentry>
									<term xml:id="det_2673" xml:lang="de"><replaceable>Repeat</replaceable> (optional)</term>
									<listitem>
										<para xml:id="det_2674" xml:lang="de">Einschränkung der Auswertung auf ein sich wiederholendes
											Intervall.</para>
									</listitem>
								</varlistentry>
								<varlistentry>
									<term xml:id="det_2675" xml:lang="de"><replaceable>ConsideredPriceItemClasses</replaceable> /
											<replaceable>NotConsideredPriceItemClasses</replaceable> (nur
											<code>DayPriceIndex)</code></term>
									<listitem>
										<para xml:id="det_2676" xml:lang="de">Angabe der für die Tagespreissortierung relevanten
											Preiskomponenten.</para>
									</listitem>
								</varlistentry>
							</variablelist>

							<para xml:id="det_2677" xml:lang="de">Die Auswertung erfolgt in folgenden Schritten:</para>

							<itemizedlist>
								<listitem>
									<para xml:id="det_2678" xml:lang="de">Bestimme die durch <code>Source</code> und <code>IntervalType</code>
										referenzierte Tagesmenge.</para>
								</listitem>
								<listitem>
									<para xml:id="det_2679" xml:lang="de">Für die <code>DayPriceIndex</code> Bedingung wird diese Liste
										aufsteigend nach dem Tagespreis und bei gleichem Tagespreis zusätzlich
										nach aufsteigendem Datum sortiert.</para>
								</listitem>
								<listitem>
									<para xml:id="det_2680" xml:lang="de">Bestimme die Positionsnummer des aktuellen Tages in dieser
										Liste.</para>
								</listitem>
								<listitem>
									<para xml:id="det_2681" xml:lang="de">Überprüfe, ob diese Positionsnummer durch
											<replaceable>Repeat</replaceable>,
											<replaceable>Until</replaceable>, <replaceable>From</replaceable>
										und <replaceable>Indices</replaceable> abgedeckt ist.</para>
								</listitem>
							</itemizedlist>

							<para xml:id="det_2682" xml:lang="de">Alle Positionsnummern in <replaceable>From</replaceable>,
									<replaceable>Until</replaceable> und <replaceable>Indices</replaceable>
								dürfen negativ sein: Positive Werte werden vom Beginn, negative vom Ende des
								gültigen Wertebereiches aus ausgewertet.</para>

							<para xml:id="det_2683" xml:lang="de">Normalerweise erstreckt sich der gültige Wertebereich aller Angaben von +/-1
								bis +/- Anzahl der Tage in der durch <code>Source</code> /
									<code>IntervalType</code> referenzierten Tagesmenge. Ist eine
									<replaceable>Repeat</replaceable> Angabe vorhanden, wird dieser Bereich
								auf +/- 1 bis +/- <replaceable>Repeat</replaceable> eingeschränkt, wobei sich
								Positionen außerhalb dieses Bereiches wiederholen. Bei positivem
									<replaceable>Repeat</replaceable> Wert ist die erste Wiederholung
								vollständig, bei negativem <replaceable>Repeat</replaceable> ist die letzte
								Wiederholung vollständig (Beispiel: Besitzt die Menge 10 Tage und
									<replaceable>Repeat</replaceable> ist 7, so erhalten diese Tage die
								Positionen 1, 2, ..., 7, 1, 2, 3. Ist <replaceable>Repeat</replaceable> jedoch
								-7 so sind die Positionsnummern 5, 6, 7, 1, 2, ..., 7).</para>
						</tasksummary>

						<procedure>
							<step>
								<para xml:id="det_2684" xml:lang="de">Ist die Bedingung <code>DayPriceIndex</code> und der aktuelle
									Ausführungszeitung nicht <code>Last</code>, ist das Ergebnis
										<code>Undefined</code> unabhängig vom Wert in
										<code>ImpactExecutionOrder</code> (siehe <xref linkend="OtdsProcessPriceCalculationDayPriceIndexCondition"/>).</para>
							</step>
							<step>
								<para xml:id="det_2685" xml:lang="de">Sei <replaceable>D</replaceable> der aktuelle Tag in dessen Kontext die
									Bedingung ausgewertet wird.</para>
							</step>
							<step>
								<para xml:id="det_2686" xml:lang="de">Bestimme die Menge <replaceable>M</replaceable> der durch
										<replaceable>Source</replaceable> und
										<replaceable>IntervalType</replaceable> referenzierten Tage (siehe
										<xref linkend="OtdsProcessIntervalType"/>).</para>
							</step>
							<step>
								<para xml:id="det_2687" xml:lang="de">Sortiere die Menge je nach Bedingung: Nach Datum im Falle einer
										<code>DayIndex</code> Bedingung, absteigend nach Tagespreis und
									aufsteigend nach Datum im Falle einer <code>DayPriceIndex</code>
									Bedingung.</para>
							</step>
							<step>
								<para xml:id="det_2688" xml:lang="de">Bestimme den Index <replaceable>t</replaceable> des Auswertungstages
										<replaceable>D</replaceable> in der Menge
									<replaceable>M</replaceable>. Ist der Auswertungstag nicht in
										<replaceable>M</replaceable> enthalten, ist die Bedingung insgesamt
									falsch.</para>
							</step>
							<step>
								<para xml:id="det_2689" xml:lang="de">Sei <replaceable>s</replaceable> die Anzahl der Tage in
										<replaceable>M</replaceable>.</para>
							</step>
							<step>
								<para xml:id="det_2690" xml:lang="de">Ist <replaceable>Repeat</replaceable> gesetzt und &gt; 0:</para>
								<procedure>
									<step>
										<para xml:id="det_2691" xml:lang="de">Setze <replaceable>t</replaceable> := ( (
												<replaceable>t</replaceable> - 1 ) <code>Mod</code>
											<code>Abs</code>( <replaceable>Repeat</replaceable> ) ) + 1</para>
									</step>
								</procedure>
							</step>
							<step>
								<para xml:id="det_2692" xml:lang="de">Ist <replaceable>Repeat</replaceable> gesetzt und &lt; 0:</para>
								<procedure>
									<step>
										<para xml:id="det_2693" xml:lang="de">Setze <replaceable>t</replaceable> := ( (
												<replaceable>t</replaceable> - 1 + <code>Abs</code>(
												<replaceable>Repeat</replaceable> ) - (
												<replaceable>s</replaceable>
											<code>Mod</code>
											<code>Abs</code>( <replaceable>Repeat</replaceable> ) ) )
												<code>Mod</code>
											<code>Abs</code>( <replaceable>Repeat</replaceable> ) ) + 1</para>
									</step>
								</procedure>
							</step>
							<step>
								<para xml:id="det_2694" xml:lang="de">Ist <replaceable>Repeat</replaceable> gesetzt:</para>
								<procedure>
									<step>
										<para xml:id="det_2695" xml:lang="de">Setze <replaceable>s</replaceable> := <code>Abs</code>(
												<replaceable>Repeat</replaceable> )</para>
									</step>
								</procedure>
							</step>
							<step>
								<para xml:id="det_2696" xml:lang="de">Ist <replaceable>From</replaceable> gesetzt und &lt; 0:</para>
								<procedure>
									<step>
										<para xml:id="det_2697" xml:lang="de">Setze <replaceable>From</replaceable> :=
												<replaceable>s</replaceable> + <replaceable>From</replaceable>
											+ 1</para>
									</step>
								</procedure>
							</step>
							<step>
								<para xml:id="det_2698" xml:lang="de">Ist <replaceable>Until</replaceable> gesetzt und &lt; 0:</para>
								<procedure>
									<step>
										<para xml:id="det_2699" xml:lang="de">Setze <replaceable>Until</replaceable> :=
												<replaceable>s</replaceable> +
												<replaceable>Until</replaceable> + 1</para>
									</step>
								</procedure>
							</step>
							<step>
								<para xml:id="det_2700" xml:lang="de">Iteriere <replaceable>i</replaceable> über alle Werte in
										<replaceable>Indices</replaceable> (falls
										<replaceable>Indices</replaceable> angegeben ist):</para>
								<procedure>
									<step>
										<para xml:id="det_2701" xml:lang="de">Ist <replaceable>i</replaceable> &lt; 0:</para>
										<procedure>
											<step>
												<para xml:id="det_2702" xml:lang="de">Ersetze <replaceable>i</replaceable> :=
													<replaceable>s</replaceable> +
													<replaceable>i</replaceable> + 1</para>
											</step>
										</procedure>
									</step>
								</procedure>
							</step>
							<step>
								<para xml:id="det_2703" xml:lang="de">Ist <replaceable>From</replaceable> gesetzt und
										<replaceable>t</replaceable> &lt; <replaceable>From</replaceable>, ist
									die Bedingung falsch.</para>
							</step>
							<step>
								<para xml:id="det_2704" xml:lang="de">Ist <replaceable>Until</replaceable> gesetzt und
										<replaceable>t</replaceable> &gt; <replaceable>Until</replaceable>, ist
									die Bedingung falsch.</para>
							</step>
							<step>
								<para xml:id="det_2705" xml:lang="de">Ist <replaceable>Indices</replaceable> gesetzt und
										<replaceable>t</replaceable> nicht in der Menge der Indices, ist die
									Bedingung falsch.</para>
							</step>
							<step>
								<para xml:id="det_2706" xml:lang="de">Sonst ist die Bedingung wahr.</para>
							</step>
						</procedure>
					</task>
				</section>
				<section xml:id="OtdsProcessConditionsWeekdays">
					<title><phrase xml:id="det_2707" xml:lang="de"><code>Weekdays</code> Bedingung</phrase></title>

					<para xml:id="det_2708" xml:lang="de">Diese Bedingung überprüft, Tage gegen eine Liste von Wochentagen.</para>

					<para xml:id="det_2709" xml:lang="de">Die standardmäßige Auswertung von <code>Source</code>, <code>DayAllocation</code>
						und <code>EvaluationMode</code> wird in <code>Weekdays</code> durch die Auswertung von
							<code>Source</code> und <code>DayType</code> ersetzt (siehe <xref linkend="OtdsProcessDayType"/>). Anstelle einer Kontext-Instanz ist das Ergebnis
						somit eine Menge von Kontext-Tagen.</para>

					<para xml:id="det_2710" xml:lang="de">Die <code>Weekdays</code> Bedingung überprüft immer mehrere Einschränkungen:</para>

					<itemizedlist>
						<listitem>
							<para xml:id="det_2711" xml:lang="de">Zunächst wird überprüft, ob der aktuelle Tag in den Kontext-Tagen enthalten
								ist.</para>
						</listitem>
						<listitem>
							<para xml:id="det_2712" xml:lang="de">Im zweiten Schritt wird überprüft, ob der Wochentag des aktuellen Tags die
								in der Liste der angegebenen Wochentage enthalten ist.</para>
						</listitem>
					</itemizedlist>

					<para xml:id="det_2713" xml:lang="de">Die <code>Weekdays</code> Bedingung existiert sowohl als <code>Impact</code> als
						auch als Nicht-<code>Impact</code> Bedingung. Wird sie als Nicht-<code>Impact</code>
						Bedingung ausgewertet, so wird sie für jeden Tag der Kontext-Tage als aktueller Tag
						ausgewertet und ist erfüllt, wenn sie für mindestens einen dieser Tage erfüllt
						ist.</para>
				</section>
				<section xml:id="OtdsProcessConditionsDuration">
					<title><phrase xml:id="det_2714" xml:lang="de"><code>Duration</code> Bedingung</phrase></title>

					<para xml:id="det_2715" xml:lang="de">Diese Bedingung überprüft die Dauer einer Komponente.</para>

					<para xml:id="det_2716" xml:lang="de">Die standardmäßige Auswertung von <code>Source</code>, <code>DayAllocation</code>
						und <code>EvaluationMode</code> wird in <code>Duration</code> durch die Auswertung von
							<code>Source</code> und einem impliziten <code>IntervalType</code> von
							<code>Stay</code> ersetzt (Siehe <xref linkend="OtdsProcessIntervalType"/>).</para>

					<para xml:id="det_2717" xml:lang="de">Diese Bedingung überprüft die Anzahl der Tage in der Menge der Kontext-Tage. Es wird
						zunächst diese Anzahl <replaceable>N</replaceable> berechnet. Diese Zahl wird dann
						gegen die angegebenen Bedingungen überprüft:</para>

					<variablelist>
						<varlistentry>
							<term xml:id="det_2718" xml:lang="de"><code>Min</code></term>
							<listitem>
								<para xml:id="det_2719" xml:lang="de">Überprüft <replaceable>N</replaceable> &gt;= <code>Min</code>-Wert.</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2720" xml:lang="de"><code>Max</code></term>
							<listitem>
								<para xml:id="det_2721" xml:lang="de">Überprüft <replaceable>N</replaceable> &lt;=
									<code>Max</code>-Wert.</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2722" xml:lang="de"><code>Durations</code></term>
							<listitem>
								<para xml:id="det_2723" xml:lang="de">Überprüft, das <replaceable>N</replaceable> in der liste der angegebenen
									Werte enthalten ist.</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2724" xml:lang="de"><code>MultiplesOf</code></term>
							<listitem>
								<para xml:id="det_2725" xml:lang="de">Überprüft die Teilbarkeit von <replaceable>N</replaceable> durch den
									angegebenen <code>MuliplesOf</code>-Wert, also
										<replaceable>N</replaceable>
									<code>Mod</code>
									<code>MultiplesOf</code>-Wert == 0.</para>
							</listitem>
						</varlistentry>
					</variablelist>
				</section>
				<section xml:id="OtdsProcessConditionsPersonAge">
					<title><phrase xml:id="det_2726" xml:lang="de"><code>PersonAge</code> Bedingung</phrase></title>
					<para xml:id="det_2727" xml:lang="de">Eine <code>PersonAge</code> Bedingung überprüft im Rahmen einer
							<code>PersonImpact</code> Bedingung in einem personenspezifische
						Bedingungs-Kontext die einer Komponenteninstanz zugeordneten Personen (in OTDS-1.0
						also alle Reisepersonen) auf deren Alter. Der Test wird gegen die aktuelle Person
						ausgeführt.</para>
					<para xml:id="det_2728" xml:lang="de">Das Alter der reisenden Personen kann absolut in Jahren oder durch ein Geburtsdatum
						eingeschränkt werden:</para>
					<itemizedlist>
						<listitem>
							<para xml:id="det_2729" xml:lang="de"><code>Min</code>: minimales Alter des Reiseteilnehmers</para>
						</listitem>
						<listitem>
							<para xml:id="det_2730" xml:lang="de"><code>Max</code>: maximales Alter des Reiseteilnehmers</para>
						</listitem>
						<listitem>
							<para xml:id="det_2731" xml:lang="de"><code>MinDateOfBirth</code>: frühestes Geburtsdatum des
								Reiseteilnehmers</para>
						</listitem>
						<listitem>
							<para xml:id="det_2732" xml:lang="de"><code>MaxDateOfBirth</code>: spätestes Geburtsdatum des
								Reiseteilnehmers</para>
						</listitem>
					</itemizedlist>
					<para xml:id="det_2733" xml:lang="de">Für eine Person müssen dabei alle angegebenen Einschränkungen gleichzeitig erfüllt
						sein. Ausschlaggebendes Datum für den Test ist das Alter der Person bei
						Reiseantritt.</para>
				</section>
				<section xml:id="OtdsProcessConditionsPersonGenders">
					<title><phrase xml:id="det_2734" xml:lang="de"><code>PersonGenders</code> Bedingung</phrase></title>
					<para xml:id="det_2735" xml:lang="de">Eine <code>PersonGenders</code> Bedingung überprüft im Rahmen einer
							<code>PersonImpact</code> Bedingung in einem personenspezifische
						Bedingungs-Kontext die einer Komponenteninstanz zugeordneten Personen (in OTDS-1.0
						also alle Reisepersonen) auf deren Geschlecht. Der Test wird gegen die aktuelle Person
						ausgeführt.</para>
					<para xml:id="det_2736" xml:lang="de">Es sind folgende Werte für das Geschlecht möglich:</para>
					<itemizedlist>
						<listitem>
							<para xml:id="det_2737" xml:lang="de"><code>Male</code>: Die Person ist männlich.</para>
						</listitem>
						<listitem>
							<para xml:id="det_2738" xml:lang="de"><code>Female</code>: Die Person ist weiblich.</para>
						</listitem>
						<listitem>
							<para xml:id="det_2739" xml:lang="de"><code>Undefined</code>: Das Geschlecht der Person ist nicht durch die
								Rahmenparameter definiert</para>
						</listitem>
					</itemizedlist>
					<para xml:id="det_2740" xml:lang="de">Es ist erlaubt, mehrere Werte anzugeben. Jeder der angegebenen Werte wird für jede
						Person überprüft. Je einer dieser Werte muss für die Person matchen, damit die
						Bedingung erfüllt ist. Beispielsweise führt die Angabe "Male Undefined" dazu, dass die
						Bedingung für weibliche Reisepersonen nicht erfüllt ist.</para>
				</section>
				<section xml:id="OtdsProcessConditionsPersonGroup">
					<title><phrase xml:id="det_2741" xml:lang="de"><code>PersonGroup</code> Bedingung</phrase></title>

					<para xml:id="det_2742" xml:lang="de">Eine <code>PersonGroup</code> Bedingung überprüft die einer Komponenteninstanz
						zugeordneten Personen (in OTDS-1.0 also alle Reisepersonen) auf eine bestimmte
						Belegungsvariante (z.B. mindestens ein Kind und ein Erwachsener).</para>

					<para xml:id="det_2743" xml:lang="de">Im Gegensatz zur Occupancy überprüft die <code>PersonGroup</code> Bedingung nur die
						explizit in der Bedingung angegebenen Altersbereiche, andere Personen werden
						ignoriert. Ansonsten wird diese Bedingung vollständig äquivalent zu einer
							<code>Occupancy</code> Angabe (ohne die Möglichkeit von <code>Exclude</code>,
						welche sich genauso durch die entsprechenden logischen Bedingungsoperatoren ausdrücken
						lässt) ausgewertet.</para>

					<para xml:id="det_2744" xml:lang="de">Die Auswertung erfolgt somit durch Rückgriff auf die Definition der
						Occupancy:</para>

					<itemizedlist>
						<listitem>
							<para xml:id="det_2745" xml:lang="de">Erzeuge eine reduzierte Liste aller Personen, die </para>
								<itemizedlist>
									<listitem>
										<para xml:id="det_2746" xml:lang="de">falls es ein Person-Element ohne Altersbedingung gibt :
												<emphasis role="bold">alle Personen enthält</emphasis></para>
									</listitem>
									<listitem>
										<para xml:id="det_2747" xml:lang="de">andernfalls: <emphasis role="bold">alle Personen, deren Alter
												die Altersbedingung (MinAge und/oder MaxAge) wenigstens eines
												Person-Elementes erfüllt.</emphasis></para>
									</listitem>
								</itemizedlist>
						</listitem>
						<listitem>
							<para xml:id="det_2748" xml:lang="de">Interpretiere den Inhalt von <code>PersonGroup</code> als Inhalt einer
									<code>Occupancy</code> und prüfe diese <code>Occupancy</code> gegen die
									<emphasis>reduzierte</emphasis> Personenliste. Siehe <xref linkend="OtdsProcessProductAllocationPerson"/>.</para>
						</listitem>
					</itemizedlist>
				</section>
				<section xml:id="OtdsProcessConditionsPersonIndex">
					<title><phrase xml:id="det_2749" xml:lang="de"><code>PersonIndex</code> Bedingung</phrase></title>

					<para xml:id="det_2750" xml:lang="de">Diese Bedingung überprüft die Position der aktuellen Person in einer nach Alter
						absteigend sortierten Liste von Personen. Die relevante Personenliste basiert auf der
						Reisebelegung, welche durch eine zusätzliche Filterbedingung eingeschränkt werden
						kann.</para>

					<para xml:id="det_2751" xml:lang="de">Die Auswertung dieser Bedingung erfolgt in folgenden Schritten:</para>

					<itemizedlist>
						<listitem>
							<para xml:id="det_2752" xml:lang="de">Erstellung der Liste der relevanten Personen.</para>
						</listitem>
						<listitem>
							<para xml:id="det_2753" xml:lang="de">Bestimmung des Index der aktuellen Person in dieser Liste.</para>
						</listitem>
						<listitem>
							<para xml:id="det_2754" xml:lang="de">Überprüfung des so bestimmten Index gegen die in der Bedingung angegebenen
								Einschränkungen.</para>
						</listitem>
					</itemizedlist>

					<para xml:id="det_2755" xml:lang="de">Die Liste der relevanten Personen ergibt sich aus dem <code>PersonFilter</code> Kind
						der Bedingung.</para>

					<itemizedlist>
						<listitem>
							<para xml:id="det_2756" xml:lang="de">Existiert kein <code>PersonFilter</code> Element, enthält die Liste die
								Indizes alle Personen (also die Zahlen 1 bis Anzahl der Reisepersonen).</para>
						</listitem>
						<listitem>
							<para xml:id="det_2757" xml:lang="de">Enthält der <code>PersonFilter</code> ein <code>PersonAge</code> Element, so
								verbleiben nur Personen, deren Alter bzw. Geburtsdatum die angegebenen
								Bedingungen erfüllt.</para>
						</listitem>
						<listitem>
							<para xml:id="det_2758" xml:lang="de">Enthält der <code>PersonFilter</code> ein <code>ConditionalTags</code>
								Element, so verbleiben nur Personen in der Liste, welche an einem
									<emphasis>beliebigen</emphasis> Reisetag eines der angegebenen
									<code>ConditionalTags</code> enthalten.</para>
						</listitem>
					</itemizedlist>

					<para xml:id="det_2759" xml:lang="de">Nun wird der Index der aktuellen Person in dieser Liste bestimmt. Enthält die Liste
						die aktuelle Person nicht, ist die Bedingung falsch.</para>

					<para xml:id="det_2760" xml:lang="de">Der so bestimmte Index wird gegen <code>Until</code>, <code>From</code> und
							<code>Indices</code> überprüft.</para>

					<variablelist>
						<varlistentry>
							<term xml:id="det_2761" xml:lang="de"><code>Until</code></term>
							<listitem>
								<para xml:id="det_2762" xml:lang="de">Ist erfüllt, wenn der gefundene Index &lt;= dem positiven Wert von
										<code>Util</code> ist. Ist <code>Until</code> negativ, wird es durch
									Anzahl der Personen in der Liste + Wert von <code>Until</code> + 1
									ersetzt.</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2763" xml:lang="de"><code>From</code></term>
							<listitem>
								<para xml:id="det_2764" xml:lang="de">Ist erfüllt, wenn der gefundene Index &gt;= dem positiven Wert von
										<code>From</code> ist. Ist <code>From</code> negativ, wird es durch
									Anzahl der Personen in der Liste + Wert von <code>From</code> + 1
									ersetzt.</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2765" xml:lang="de"><code>Indices</code></term>
							<listitem>
								<para xml:id="det_2766" xml:lang="de">Ist erfüllt, wenn der gefundene Index in der Liste der Indizes enthalten
									ist. Negative Listenelemente werden durch Anzahl der Personen in der
									Personenliste + alter Index + 1 ersetzt.</para>
							</listitem>
						</varlistentry>
					</variablelist>

					<para xml:id="det_2767" xml:lang="de">Ist einer der Werte (positiv oder negativ) größer als die Anzahl der Personen in der
						gefilterten Personenliste, ist die Bedingung falsch.</para>
				</section>
				<section xml:id="OtdsProcessConditionsMatchEqual">
					<title><phrase xml:id="det_2768" xml:lang="de"><code>MatchEqual</code> Bedingung</phrase></title>

					<para xml:id="det_2769" xml:lang="de">Die <code>MatchEqual</code> Bedingung nimmt in OTDS eine Sonderrolle ein. Statt
						einen Wert gegen eine oder mehrere Bedingungen zu überprüfen, vergleicht
							<code>MatchEqual</code> mehrere Werte untereinander auf Gleichheit. Hierbei können
						sowohl Tags als auch andere Werte (in OTDS-1.0 nur Flughäfen) untereinander verglichen
						werden.</para>

					<bridgehead xml:id="det_2770" xml:lang="de">Vergleich von Tags</bridgehead>

					<para xml:id="det_2771" xml:lang="de">In diesem Fall enthält <code>MatchEqual</code> eine Reihe von <code>Tag</code>
						Elementen. Jedes Element referenziert einen oder mehrere Tags. Die Bedingung ist
						erfüllt, wenn mindestens ein Wert exisitiert, welcher in allen diesen Wert-Mengen
						enthalten ist.</para>

					<para xml:id="det_2772" xml:lang="de">Die Auswertung erfolgt folgendermaßen:</para>

					<itemizedlist>
						<listitem>
							<para xml:id="det_2773" xml:lang="de">Es wird für jedes <code>Tag</code> Element die Menge der referenzierten
								Werte bestimmt. Es ergibt sich also eine Liste von Wert-Mengen, eine
								Wert-Menge je <code>Tag</code> Element.</para>
						</listitem>
						<listitem>
							<para xml:id="det_2774" xml:lang="de">Es wird die Schnittmenge aller dieser Wert-Mengen gebildet. Ist diese
								Schnittmenge nicht leer, ist die <code>MatchEqual</code> Bedingung
								erfüllt.</para>
						</listitem>
					</itemizedlist>

					<para xml:id="det_2775" xml:lang="de">Die Bestimmung der Wertmenge zu einem <code>Tag</code> Element erfolgt wie in der
							<code>Tags</code> Bedingung:</para>

					<itemizedlist>
						<listitem>
							<para xml:id="det_2776" xml:lang="de">Aus <code>Source</code> und <code>DayAllocation</code> wird die Menge der
								referenzierten Komponenteninstanzen erzeugt (Siehe <xref linkend="OtdsProcessConditionsSource"/>).</para>
						</listitem>
						<listitem>
							<para xml:id="det_2777" xml:lang="de">Zu jeder Komponenteninstanzen werden nun die Tags mit der angegebenen
									<code>Class</code> übernommen.</para>
						</listitem>
						<listitem>
							<para xml:id="det_2778" xml:lang="de">Falls angegeben werden <code>Offset</code> und <code>Length</code>
								angewendet und aus allen referenzierten Tag-Werten die entsprechenden
								Substrings extrahiert. Leere Zeichenketten werden aus der Ergebnismenge
								entfernt.</para>
						</listitem>
						<listitem>
							<para xml:id="det_2779" xml:lang="de">Ist <code>EvaluationMode</code> == <code>All</code>, so wird aus den
								einzelnen Wertemengen der verschiedenen Komponenteninstanzen die Schnittmenge
								gebildet. Ist <code>EvaluationMode</code> == <code>Any</code>, so wird
								entsprechend die Vereinigungsmenge gebildet. Diese neue Menge ist die
								Wertemenge zu diesem <code>Tag</code> Element.</para>
						</listitem>
					</itemizedlist>

					<para xml:id="det_2780" xml:lang="de">Jetzt kann die Schnittmenge dieser Wertemengen gebildet werden. Ist diese
						Schnittmenge leer, ist die <code>MatchEqual</code> Bedingung <code>False</code>, sonst
							<code>True</code>.</para>

					<bridgehead xml:id="det_2781" xml:lang="de">Vergleich von anderen Werten (Flughäfen)</bridgehead>

					<para xml:id="det_2782" xml:lang="de">Alternativ kann ein <code>MatchEqual</code> Element zwei oder mehr
							<code>Element</code> Elemente enthalten. Auch hier wird zunächst zu jedem
							<code>Element</code> eine Wertmenge erzeugt. Wieder gilt: Ist die Schnittmenge
						aller dieser Wertmengen nicht leer, ist die <code>MatchEqual</code> Bedingung
						erfüllt.</para>

					<para xml:id="det_2783" xml:lang="de">Die Bestimmung der Wertmengen zu den <code>Element</code> Elementen erfolgt
						folgendermaßen:</para>

					<itemizedlist>
						<listitem>
							<para xml:id="det_2784" xml:lang="de">Bestimme zunächst aus <code>Source</code> und <code>DayAllocation</code> die
								Menge der referenzierten Komponenteninstanzen (Siehe <xref linkend="OtdsProcessConditionsSource"/>). Ist kein Wert für
									<code>DayAllocation</code> angegeben, wird eine Sonderregel zur Bestimmung
								der Vorgabewerte abhängig vom Inhalt des <code>Element</code> Elementes
								verwendet:</para>
							<variablelist>
								<varlistentry>
									<term xml:id="det_2785" xml:lang="de"><code>DepartureAirport</code></term>
									<listitem>
										<para xml:id="det_2786" xml:lang="de">Setze <code>DayAllocation</code> == <code>First</code></para>
									</listitem>
								</varlistentry>
								<varlistentry>
									<term xml:id="det_2787" xml:lang="de"><code>ArrivalAirport</code></term>
									<listitem>
										<para xml:id="det_2788" xml:lang="de">Setze <code>DayAllocation</code> == <code>Last</code></para>
									</listitem>
								</varlistentry>
								<varlistentry>
									<term xml:id="det_2789" xml:lang="de"><code>CatchmentAirport</code></term>
									<listitem>
										<para xml:id="det_2790" xml:lang="de">Setze <code>DayAllocation</code> == <code>All</code></para>
									</listitem>
								</varlistentry>
							</variablelist>
						</listitem>
						<listitem>
							<para xml:id="det_2791" xml:lang="de">Bestimme nun zu jeder Komponenteninstanz die Menge der referenzierten Werte.
								Dies ist jeweils der Inhalt des Kindes der Komponenteninstanz mit dem Namen,
								welcher im Body des <code>Element</code> Elementes angegeben ist.</para>
						</listitem>
						<listitem>
							<para xml:id="det_2792" xml:lang="de">Ist <code>EvaluationMode</code> == <code>All</code>, so wird aus den
								einzelnen Wertemengen der verschiedenen Komponenteninstanzen die Schnittmenge
								gebildet. Ist <code>EvaluationMode</code> == <code>Any</code>, so wird
								entsprechend die Vereinigungsmenge gebildet. Diese neue Menge ist die
								Wertemenge zu diesem <code>Element</code> Element.</para>
						</listitem>
					</itemizedlist>

					<para xml:id="det_2793" xml:lang="de">Jetzt kann die Schnittmenge dieser Wertemengen gebildet werden. Ist diese
						Schnittmenge leer, ist die <code>MatchEqual</code> Bedingung <code>False</code>, sonst
							<code>True</code>.</para>
				</section>
				<section xml:id="OtdsProcessConditionsProductPrice">
					<title><phrase xml:id="det_2794" xml:lang="de"><code>ProductPrice</code> Bedingung
							(V1.9)</phrase></title>
					
					<para xml:id="det_2795" xml:lang="de">Die <code>ProductPrice</code> Bedingung ist die einzige Bedingung welche sich ausschließlich 
						auf Werte einer anderen Produktdefinition bezieht. Der Bezug zur Produktkomponente findet über 
						den	Preis statt. </para>
					<para xml:id="det_2796" xml:lang="de">Die Überprüfung der Preises findet gegen die angegebenen Bedingungen statt:</para>
					<itemizedlist>
						<listitem>
							<para xml:id="det_2797" xml:lang="de"><code>Min</code>: Dieses Element definiert den kleinsten Preis, also die Untergrenze einer Preisspanne.</para>
						</listitem>
						<listitem>
							<para xml:id="det_2798" xml:lang="de"><code>Max</code>: Dieses Element definiert den höchsten Preis, also die Obergrenze einer Preisspanne.</para>
						</listitem>
						<listitem>
							<para xml:id="det_2799" xml:lang="de"><code>Prices</code>: In diesem Element kann eine Liste
								von Preisen oder ein Preis angegeben werden. Wenn der betrachtete
								Preis mit einem der Preise aus der Liste übereinstimmt, ist die
								Bedingung erfüllt. Die Preise in der Liste sind durch "Leerzeichen"
								getrennt.</para>
						</listitem>
						<listitem>
							<para xml:id="det_2800" xml:lang="de"><code>ConsiderationBase</code>: Definiert, ob für die
								Ermittlung des Preises der Gesamtpreis (<code>Total</code>) oder der
								Preis der gerade betrachteten Person (<code>Person</code>)
								herangezogen werden soll.</para>
						</listitem>
					</itemizedlist>
					
				</section>
			</section>
		</section>
		<section xml:id="OtdsProcessMain">
			<title><phrase xml:id="det_2801" xml:lang="de">Vollständiger Ablauf der OTDS Verarbeitung</phrase></title>

			<section xml:id="OtdsProcessDataDelivery">
				<title><phrase xml:id="det_2802" xml:lang="de">Verarbeitung der OTDS-Datenlieferungen</phrase></title>

				<section xml:id="OtdsProcessDataDeliveryFileFormat">
					<title><phrase xml:id="det_2803" xml:lang="de">Dateiformat der Lieferung</phrase></title>

					<para xml:id="det_2804" xml:lang="de">Eine OTDS Lieferung muss folgende Eigenschaften erfüllen</para>

					<itemizedlist>
						<listitem>
							<para xml:id="det_2805" xml:lang="de">Lieferungen erfolgen <emphasis>grundsätzlich</emphasis> als
									<code>.zip</code>-Datei.</para>
						</listitem>

						<listitem>
							<para xml:id="det_2806" xml:lang="de">Diese Datei darf <emphasis>ausschließlich</emphasis> ein oder mehrere
									<code>.xml</code> Dateien enthalten. Die Dateiendung der Dateien
									<emphasis>muss</emphasis>
								<code>.xml</code> sein.</para>
						</listitem>

						<listitem>
							<para xml:id="det_2807" xml:lang="de">Es dürfen <emphasis>keine</emphasis> Unterverzeichnisse verwendet
								werden.</para>
						</listitem>

						<listitem>
							<para xml:id="det_2808" xml:lang="de">Alle Dateinamen (außer <code>delivery.xml</code>)
									<emphasis>müssen</emphasis> mit einer 3-stelligen Ziffernfolge beginnen.
								Ist die Zahl zu klein, wird diese mit vorangestellten 0-en auf 3 Stellen
								gebracht.</para>
						</listitem>

						<listitem>
							<para xml:id="det_2809" xml:lang="de">Die Ziffernfolgen <emphasis>müssen</emphasis> eindeutig sein.</para>
						</listitem>

						<listitem>
							<para xml:id="det_2810" xml:lang="de">Dateinamen können nach den 3 Ziffern optional weitere Zeichen enthalten.
								Diese Zeichen dürfen <emphasis>ausschließlich</emphasis> aus der Menge
									<code>a-z</code>, <code>A-Z</code>, <code>0-9</code>, <code>-</code> und
									<code>_</code> stammen.</para>
						</listitem>

						<listitem>
							<para xml:id="det_2811" xml:lang="de">Die <code>.zip</code>-Datei muss eine Datei <code>delivery.xml</code>
								enthalten. Diese Datei enthält zusätzliche Informationen zu dieser
								Lieferung.</para>
						</listitem>
					</itemizedlist>

					<para xml:id="det_2812" xml:lang="de">Alle XML Dateien <emphasis>müssen</emphasis> über eine korrekte Angabe des
						Zeichensatzes in der ersten Zeile der Datei verfügen:</para>

					<programlisting><![CDATA[<?xml version="1.0" encoding="UTF-8"?>]]></programlisting>

					<para xml:id="det_2813" xml:lang="de">Als Zeichensatz für alle XML Dateien sollte der <emphasis>UTF-8</emphasis>
						Zeichensatz verwendet werden. Wenn von dieser Empfehlung abgewichen wird, so ist der
						abweichende Zeichensatz korrekt in der obigen XML Deklaration in allen Dateien
						anzugeben.</para>
				</section>
				<section xml:id="OtdsProcessDataDeliveryDeliveryXML">
					<title><phrase xml:id="det_2814" xml:lang="de">Format der <code>delivery.xml</code> Datei</phrase></title>

					<para xml:id="det_2815" xml:lang="de">Die Metainformationen der Lieferung werden in der Form einer einfachen XML Datei
						geliefert. In OTDS-1.0 enthält diese Datei ausschließlich Zeitstempel zur korrekten
						Verkettung der Lieferungen. In späteren OTDS Versionen wird dieses Format um
						Funktionen zur flexiblen dezentralen Lieferungen ergänzt.</para>

					<programlisting>&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;delivery xmlns="http://otds-group.org/delivery"&gt;
  &lt;timestamp&gt;<emphasis>Timestamp</emphasis>&lt;/timestamp&gt;
  &lt;base&gt;<emphasis>Base-Timestamp</emphasis>&lt;/base&gt;
&lt;/delivery&gt;</programlisting>

					<para xml:id="det_2816" xml:lang="de">Diese Datei enthält zwei UTC-Zeitstempel, beide als <code>xs:dateTime</code> im
						ISO-Format also z.B. <code>2012-02-08T13:21:50.4598Z</code>:</para>

					<variablelist>
						<varlistentry>
							<term xml:id="det_2817" xml:lang="de"><emphasis>Timestamp</emphasis></term>
							<listitem>
								<para xml:id="det_2818" xml:lang="de">Zeitstempel der Lieferung.</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2819" xml:lang="de"><emphasis>Base-Timestamp</emphasis></term>
							<listitem>
								<para xml:id="det_2820" xml:lang="de">Zeitstempel der vorherigen Lieferung.</para>
							</listitem>
						</varlistentry>
					</variablelist>

					<para xml:id="det_2821" xml:lang="de">Durch die Angabe des <emphasis>Base-Timestamp</emphasis> wird sichergestellt, dass
						sich mehrere inkrementelle Lieferungen nicht unkontrolliert zeitlich überschneiden
						können. Eine solche Überschneidung kann zu nicht automatische diagnostizierbaren und
						nur schwierig festzustellenden Fehlern führen. Die Angabe eines
							<emphasis>Base-Timestamp</emphasis> garantiert ein Mindestmaß an Koordination auf
						der Seite des Datenlieferanten.</para>

					<para xml:id="det_2822" xml:lang="de">Die Anforderung einen <emphasis>Base-Timestamp</emphasis> zu liefern erzwingt eine
						zentrale Koordination beim Datenlieferanten. Diese Koordination ist auch für die
						inhaltliche Integrität der inkrementellen Lieferungen notwendig. Eine einfache
						Möglichkeit bietet z.B. eine Ausgangsstelle für Datenlieferungen, welche alle
						Lieferungen entgegennimmt und um die <code>delivery.xml</code> Datei erweitert. Diese
						Stelle ist auch für die inhaltliche Koordination verantwortlich.</para>

					<para xml:id="det_2823" xml:lang="de">Das <emphasis>Base-Timestamp</emphasis> darf ausgelassen werden, wenn es sich bei
						dieser Lieferung um eine komplette Neulieferung handelt.</para>
				</section>
				<section xml:id="OtdsProcessDataDeliveryProcessing">
					<title><phrase xml:id="det_2824" xml:lang="de">Lieferungsverarbeitung</phrase></title>

					<para xml:id="det_2825" xml:lang="de">Jede OTDS Lieferung wird als Update-Lieferung verarbeitet:</para>

					<itemizedlist>
						<listitem>
							<para xml:id="det_2826" xml:lang="de">Die Version der OTDS Daten vor Verarbeitung einer Lieferung heißt
									<emphasis>Originalversion</emphasis></para>
						</listitem>

						<listitem>
							<para xml:id="det_2827" xml:lang="de">Die Version der OTDS Daten nach der Verarbeitung einer Lieferung heißt
									<emphasis>aktualisierte Version</emphasis></para>
						</listitem>
					</itemizedlist>

					<para xml:id="det_2828" xml:lang="de">Existiert für einen Veranstalter noch keine Originalversion (der Veranstalter hat
						noch nie Daten geliefert) oder ist das <emphasis>Base-Timestamp</emphasis> leer, so
						wird für diesen Veranstalter eine leere Originalversion angelegt, welche nur aus einem
						leeren <code>Otds</code> Element besteht. <emphasis>Eine solche leere Version ist
							eigentlich nicht gültig und ist nur zur Initialisierung erlaubt</emphasis>. Diese
						Lieferung muss eine vollständige Neulieferung sein. Nur in diesem Fall wird die
						aktualisierte Version die Validierung erfolgreich durchlaufen können.</para>

					<para xml:id="det_2829" xml:lang="de">Die einzelnen Dateien der Lieferung werden in der durch die initiale Ziffernfolge
						vorgegebenen Reihenfolge verarbeitet.</para>

					<para xml:id="det_2830" xml:lang="de">Die Verarbeitung der OTDS Daten erfolgt in mehreren Schritten:</para>

					<itemizedlist>
						<listitem>
							<para xml:id="det_2831" xml:lang="de">Stimmt der <emphasis>Base-Timestamp</emphasis> der Teil- bzw.
								Update-Lieferung nicht mit dem Zeitstempel der Originalversion überein, wird
								die Lieferung abgelehnt. Besitzt die Originalversion keinen Zeitstempel
								(vollständige Lieferung), wird diese Überprüfung übersprungen.</para>
						</listitem>

						<listitem>
							<para xml:id="det_2832" xml:lang="de">Die Lieferung wird einer Validierung der einzelnen Teil- bzw.
								Update-Lieferungen gegen eine weniger restriktive XSD unterworfen. Jede der
								gelieferten XML Dateien wird einzeln gegen eine weniger restriktive XSD
								validiert.</para>
						</listitem>

						<listitem>
							<para xml:id="det_2833" xml:lang="de">Integration der Teil- bzw. Update-Lieferung in die Originalversion. Siehe
									<xref linkend="OtdsProcessDataDeliveryUpdate"/></para>
						</listitem>

						<listitem>
							<para xml:id="det_2834" xml:lang="de">Validierung der aktualisierten Version gegen die vollständige XSD.</para>
						</listitem>

						<listitem>
							<para xml:id="det_2835" xml:lang="de">Ist die Validierung erfolgreich, wird die Originalversion durch die
								aktualisierte Version ersetzt. Der Zeitstempel der neuen Originalversion
								entspricht dem <emphasis>Timestamp</emphasis> der Lieferung. Weitere
								Lieferungen erfolgen somit auf der Basis dieser Version.</para>
						</listitem>
					</itemizedlist>

					<para xml:id="det_2836" xml:lang="de">Die weniger restriktive XSD wird automatisch aus der vollständigen XSD erzeugt und
						unterscheidet sich vornehmlich dadurch, dass (fast) alle Elemente optional
						sind.</para>

					<para xml:id="det_2837" xml:lang="de">In späteren OTDS Versionen werden möglicherweise weitere Validierungsschritte
						vorgenommen (z.B. Validierung mittels Schematron).</para>
				</section>
				<section xml:id="OtdsProcessDataDeliveryUpdate">
					<title><phrase xml:id="det_2838" xml:lang="de">Das Update-Konzept</phrase></title>

					<para xml:id="det_2839" xml:lang="de">Das Update-Konzept beschreibt die Verarbeitung einer einzelnen inkrementellen
						XML-Datei. Es beschreibt die Erzeugung der aktualisierten Version aus Originalversion
						und der inkrementeller XML-Datei.</para>

					<para xml:id="det_2840" xml:lang="de">Das Update-Konzept basiert auf der Unterscheidung der folgenden Hierarchie von
						Elementtypen:</para>

					<variablelist>
						<varlistentry>
							<term xml:id="det_2841" xml:lang="de"><emphasis>UpdateNode</emphasis></term>
							<listitem>
								<para xml:id="det_2842" xml:lang="de">Eindeutig addressierbares und durch das Update-Konzept inkrementell
									austauschbares Element. Die <emphasis>UpdateNode</emphasis> Elemente
									können nach zwei weiteren Eigenschaften gruppiert werden. Es wird
									unterscheiden zwischen:</para>
								<variablelist>
									<varlistentry>
										<term xml:id="det_2843" xml:lang="de"><emphasis>CompositeUpdateNode</emphasis></term>
										<listitem>
											<para xml:id="det_2844" xml:lang="de">Ein <emphasis>UpdateNode</emphasis>, dessen Kinder sämtlich
													<emphasis>UpdateNode</emphasis> sind. Ein
													<emphasis>CompositeUpdateNode</emphasis> besitzt ein
													<code>UpdateMode</code> Attribut mit den Werten
													<code>New</code>, <code>Merge</code> und
													<code>Delete</code>.</para>
										</listitem>
									</varlistentry>
									<varlistentry>
										<term xml:id="det_2845" xml:lang="de"><emphasis>SimpleUpdateNode</emphasis></term>
										<listitem>
											<para xml:id="det_2846" xml:lang="de">Ein <emphasis>UpdateNode</emphasis>, dessen Kinder sämtlich
													<emphasis>NonUpdateNode</emphasis> sind. Ein
													<emphasis>SimpleUpdateNode</emphasis> besitzt ein
													<code>UpdateMode</code> Attribut mit den Werten
													<code>New</code> oder <code>Delete</code>.</para>
										</listitem>
									</varlistentry>
								</variablelist>
								<para xml:id="det_2847" xml:lang="de">Zusätzlich wird jede <emphasis>UpdateNode</emphasis> eingeteilt
									in:</para>
								<variablelist>
									<varlistentry>
										<term xml:id="det_2848" xml:lang="de"><emphasis>MultipleUpdateNode</emphasis></term>
										<listitem>
											<para xml:id="det_2849" xml:lang="de">Ein <emphasis>UpdateNode</emphasis>, welches mehrfach im
												Elternelement erlaubt ist (<code>maxOccurs</code> &gt; 1). Ein
													<emphasis>MultipleUpdateNode</emphasis> besitzt ein
													<code>Key</code> Attribut.</para>
										</listitem>
									</varlistentry>
									<varlistentry>
										<term xml:id="det_2850" xml:lang="de"><emphasis>SingleUpdateNode</emphasis></term>
										<listitem>
											<para xml:id="det_2851" xml:lang="de">Ein <emphasis>UpdateNode</emphasis>, welches maximal einmal
												im Elternelement erlaubt ist (<code>maxOccurs</code> ==
												1).</para>
										</listitem>
									</varlistentry>
								</variablelist>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2852" xml:lang="de"><emphasis>NonUpdateNode</emphasis></term>
							<listitem>
								<para xml:id="det_2853" xml:lang="de">Alle Elemente, welche nicht <emphasis>UpdateNode</emphasis> sind.</para>
							</listitem>
						</varlistentry>
					</variablelist>

					<para xml:id="det_2854" xml:lang="de">Bei der Verarbeitung einer inkrementellen lieferung werden immer vollständige
							<emphasis>UpdateNode</emphasis> Elemente ausgetauscht. Daher ist auch ein
							<code>Merge</code> von <emphasis>SimpleUpdateNode</emphasis> Elementen nicht
						möglich: Diese Elemente haben ja keine <emphasis>UpdateNode</emphasis> Kinder und
						können somit nur vollständig ausgetauscht werden. Die Kinder einer
							<emphasis>CompositeUpdateNode</emphasis> hingegen sind sämtlich
							<emphasis>UpdateNode</emphasis>. Diese Knoten könenn somit nicht nur komplett
						ersetzt oder gelöscht sondern auch Elementweise zusammengeführt werden.</para>

					<para xml:id="det_2855" xml:lang="de">Jedes Element kann somit einem der folgenden Typen zugeordnet werden: <simplelist type="inline">
							<member><emphasis>MultipleCompositeUpdateNode</emphasis></member>
							<member><emphasis>SingleCompositeUpdateNode</emphasis></member>
							<member><emphasis>MultipleSimpleUpdateNode</emphasis></member>
							<member><emphasis>SinlgeSimpleUpdateNode</emphasis></member>
							<member><emphasis>NonUpdateNode</emphasis></member>
						</simplelist></para>

					<para xml:id="det_2856" xml:lang="de">Folgende Tabelle listet die Eigenschaften aller <emphasis>UpdateNode</emphasis>
						Elemente in OTDS auf:</para>

					<table xml:id="OtdsProcessDataDeliveryUpdateProperties">
						<title><phrase xml:id="det_2857" xml:lang="de">UpdateNode Eigenschaften</phrase></title>
						<tgroup cols="3">
							<colspec align="left"/>
							<colspec align="center"/>
							<colspec align="center"/>
							<tbody>
								<row>
									<entry><code>Otds</code></entry>
									<entry>Composite</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;Products</code></entry>
									<entry>Composite</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;GlobalValues</code></entry>
									<entry>Composite</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;GlobalValue</code></entry>
									<entry>Composite</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;Tags</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;ParameterSet</code></entry>
									<entry>Simple</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;Product</code></entry>
									<entry>Composite</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;Tags</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;Booking</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;Components</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;Filter</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;DayAllocationStart</code></entry>
									<entry>Simple</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;DayAllocationEnd</code></entry>
									<entry>Simple</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;Brands</code></entry>
									<entry>Composite</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;Brand</code></entry>
									<entry>Composite</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;Tags</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;Booking</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;Accommodations</code></entry>
									<entry>Composite</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;Accommodation</code></entry>
									<entry>Composite</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;Tags</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;Properties</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;SellingAccom</code></entry>
									<entry>Composite</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;Tags</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;Booking</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;Properties</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;Filter</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;Board</code></entry>
									<entry>Composite</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;Tags</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;Booking</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;Properties</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;Filter</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;PriceItems</code></entry>
									<entry>Simple</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;Unit</code></entry>
									<entry>Composite</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;Tags</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;Properties</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;SellingUnit</code></entry>
									<entry>Composite</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;&indent;Tags</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;&indent;Booking</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;&indent;Properties</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;&indent;Filter</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;&indent;Occupancy</code></entry>
									<entry>Simple</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;&indent;PriceItems</code></entry>
									<entry>Simple</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;&indent;Availabilities</code></entry>
									<entry>Composite</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;&indent;&indent;Availability</code></entry>
									<entry>Composite</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;&indent;&indent;&indent;DefaultDayState</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;&indent;&indent;&indent;DayState</code></entry>
									<entry>Simple</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;&indent;&indent;Condition</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;PriceItems</code></entry>
									<entry>Simple</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;NeighbourComponentCorrection</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;CatchmentAirport</code></entry>
									<entry>Simple</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;Availabilities</code></entry>
									<entry>Composite</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;Availability</code></entry>
									<entry>Composite</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;DefaultDayState</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;DayState</code></entry>
									<entry>Simple</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;Condition</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;PriceItems</code></entry>
									<entry>Simple</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;Flights</code></entry>
									<entry>Composite</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;OnewayFlights</code></entry>
									<entry>Composite</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;OnewayFlight</code></entry>
									<entry>Composite</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;Tags</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;Booking</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;Filter</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;Properties</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;DepartureAirport</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;ArrivalAirport</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;CheckOutDateOffset</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;PriceItems</code></entry>
									<entry>Simple</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;NeighbourComponentCorrection</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;BookingClass</code></entry>
									<entry>Composite</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;Tags</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;Booking</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;Properties</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;Occupancy</code></entry>
									<entry>Simple</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;Availabilities</code></entry>
									<entry>Composite</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;&indent;Availability</code></entry>
									<entry>Composite</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;&indent;&indent;DefaultDayState</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;&indent;&indent;DayState</code></entry>
									<entry>Simple</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;&indent;Condition</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;PriceItems</code></entry>
									<entry>Simple</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;PriceItems</code></entry>
									<entry>Simple</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;ReturnFlights</code></entry>
									<entry>Composite</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;ReturnFlight</code></entry>
									<entry>Composite</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;Tags</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;Booking</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;Filter</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;Outbound</code></entry>
									<entry>Composite</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;Properties</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;DepartureAirport</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;ArrivalAirport</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;CheckOutDateOffset</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;PriceItems</code></entry>
									<entry>Simple</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;NeighbourComponentCorrection</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;Inbound</code></entry>
									<entry>Composite</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;Properties</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;DepartureAirport</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;ArrivalAirport</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;CheckOutDateOffset</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;PriceItems</code></entry>
									<entry>Simple</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;NeighbourComponentCorrection</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;BookingClass</code></entry>
									<entry>Composite</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;Tags</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;Booking</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;Properties</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;Occupancy</code></entry>
									<entry>Simple</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;Availabilities</code></entry>
									<entry>Composite</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;&indent;Availability</code></entry>
									<entry>Composite</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;&indent;&indent;DefaultDayState</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;&indent;&indent;DayState</code></entry>
									<entry>Simple</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;&indent;Condition</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;PriceItems</code></entry>
									<entry>Simple</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;PriceItems</code></entry>
									<entry>Simple</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;PriceItems</code></entry>
									<entry>Simple</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;Addons</code></entry>
									<entry>Composite</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;Addon</code></entry>
									<entry>Composite</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;Tags</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;Booking</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;CheckOutDateOffset</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;Properties</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;ServiceFeature</code></entry>
									<entry>Composite</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;Tags</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;Booking</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;Properties</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;Filter</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;PriceItems</code></entry>
									<entry>Simple</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;Service</code></entry>
									<entry>Composite</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;Tags</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;Booking</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;Properties</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;Occupancy</code></entry>
									<entry>Simple</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;Filter</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;PriceItems</code></entry>
									<entry>Simple</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;Availabilities</code></entry>
									<entry>Composite</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;Availability</code></entry>
									<entry>Composite</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;&indent;DefaultDayState</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;&indent;DayState</code></entry>
									<entry>Simple</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;&indent;&indent;Condition</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;Filter</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;PriceItems</code></entry>
									<entry>Simple</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;CatchmentAirport</code></entry>
									<entry>Simple</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;NeighbourComponentCorrection</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;DefinedComponents</code></entry>
									<entry>Composite</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;DefineComponent</code></entry>
									<entry>Composite</entry>
									<entry>Multiple</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;Booking</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;Components</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
								<row>
									<entry><code>&indent;&indent;&indent;Filter</code></entry>
									<entry>Simple</entry>
									<entry>Single</entry>
								</row>
							</tbody>
						</tgroup>
					</table>

					<para xml:id="det_2858" xml:lang="de">Die Verarbeitung einer inkrementellen Lieferung erfolgt rekursiv beginnend mit den
						Wurzelelementen der Originalversion und der inkrementellen Lieferung. Die Verarbeitung
						wird durch das <code>UpdateMode</code> Attribut gesteuert:</para>

					<variablelist>
						<varlistentry>
							<term xml:id="det_2859" xml:lang="de"><code>New</code></term>
							<listitem>
								<para xml:id="det_2860" xml:lang="de">Der gelieferte Knoten ersetzt den Knoten der Originalversion.</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2861" xml:lang="de"><code>Merge</code> (nur <emphasis>CompositeUpdateNode)</emphasis></term>
							<listitem>
								<para xml:id="det_2862" xml:lang="de">Die Verarbeitung wird rekursiv mit den Kindelementen fortgesetzt.</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_2863" xml:lang="de"><code>Delete</code></term>
							<listitem>
								<para xml:id="det_2864" xml:lang="de">Der Knoten der Originalversion wird ersatzlos gelöscht.</para>
							</listitem>
						</varlistentry>
					</variablelist>

					<para xml:id="det_2865" xml:lang="de">Die Verarbeitung von <code>Merge</code> basiert auf einem rekursiven Algorithmus:
						Ist der <code>UpdateMode</code> eines Knotens in der inkrementellen Lieferung
							<code>Merge</code>, so werden die Kinder dieses Knotens einzeln verarbeitet. Zu
						jedem Kind wird der entsprechende Knoten aus der Originalversion gesucht (ist der
						Knoten <emphasis>Multiple</emphasis> ist dies der Knoten mit dem selben
							<code>Key</code> ansonsten ist es der Knoten mit dem selben Elementnamen). Die
						Verarbeitung wird dann rekursiv mit diesen beiden Knoten fortgesetzt.</para>

					<task>
						<title><phrase xml:id="det_2866" xml:lang="de"><code>AktualisiereKnoten</code> ( <replaceable>Original</replaceable>,
								<replaceable>Update</replaceable> )</phrase></title>

						<tasksummary>
							<para xml:id="det_2867" xml:lang="de">Argumente:</para>

							<variablelist>
								<varlistentry>
									<term xml:id="det_2868" xml:lang="de"><replaceable>Original</replaceable></term>
									<listitem>
										<para xml:id="det_2869" xml:lang="de">Element der Originalversion.</para>
									</listitem>
								</varlistentry>
								<varlistentry>
									<term xml:id="det_2870" xml:lang="de"><replaceable>Update</replaceable></term>
									<listitem>
										<para xml:id="det_2871" xml:lang="de">Entsprechendes Element der inkrementellen Lieferung.</para>
									</listitem>
								</varlistentry>
							</variablelist>

							<para xml:id="det_2872" xml:lang="de">Diese Operation verändert <replaceable>Original</replaceable> und integriert
									<replaceable>Update</replaceable> in das Originaldokument.</para>

							<para xml:id="det_2873" xml:lang="de">Diese Spezifkation verarbeitet ein <code>Merge</code> ohne entsprechendes
								Originalelement wie <code>New</code>. Dieser Fall sollte eine Warnung an den
								Datenlieferanten erzeugen.</para>
						</tasksummary>

						<procedure>
							<step>
								<para xml:id="det_2874" xml:lang="de">Falls <replaceable>Original</replaceable> der spezielle Wert
										<emphasis>leer</emphasis> ist:</para>
								<procedure>
									<step>
										<para xml:id="det_2875" xml:lang="de">Falls <replaceable>Update</replaceable><code>.UpdateMode</code>
											nicht == <code>Delete</code>: Füge
												<replaceable>Update</replaceable> als neues Kindelement im
											Elternelement von <replaceable>Original</replaceable> ein. Das
											Element wird in <emphasis>document-order</emphasis> so weit hinten
											wie durch die XSD erlaubt in <replaceable>Original</replaceable>
											eingefügt.</para>
									</step>
								</procedure>
							</step>
							<step>
								<para xml:id="det_2876" xml:lang="de">Sonst:</para>
								<procedure>
									<step>
										<para xml:id="det_2877" xml:lang="de">Falls <replaceable>Update</replaceable><code>.UpdateMode</code>
											== <code>New</code>: Ersetzte <replaceable>Original</replaceable>
											in seinem Elternelement durch
											<replaceable>Update</replaceable>.</para>
									</step>
									<step>
										<para xml:id="det_2878" xml:lang="de">Falls <replaceable>Update</replaceable><code>.UpdateMode</code>
											== <code>Delete</code>: Lösche <replaceable>Original</replaceable>
											aus seinem Elternelement.</para>
									</step>
									<step>
										<para xml:id="det_2879" xml:lang="de">Falls <replaceable>Update</replaceable><code>.UpdateMode</code>
											== <code>Merge</code> (nur möglich wenn
												<replaceable>Update</replaceable> ein
												<emphasis>CompositeUpdateNode</emphasis> ist):</para>
										<procedure>
											<step>
												<para xml:id="det_2880" xml:lang="de">Iteriere <replaceable>U</replaceable> über die
													Kindelemente von <replaceable>Update</replaceable>:</para>
												<procedure>
													<step>
													<para xml:id="det_2881" xml:lang="de">Falls <replaceable>U</replaceable> ein
													<emphasis>SinlgeUpdateNode</emphasis> ist, setze
													<replaceable>O</replaceable> := Kindelement von
													<replaceable>Original</replaceable> mit demselben
													Elementnamen wie <replaceable>U</replaceable>.</para>
													</step>
													<step>
													<para xml:id="det_2882" xml:lang="de">Falls <replaceable>U</replaceable> ein
													<emphasis>MultipleUpdateNode</emphasis> ist, setze
													<replaceable>O</replaceable> := Kindelement von
													<replaceable>Original</replaceable> mit demselben
													<code>Key</code> wie
													<replaceable>U</replaceable>.</para>
													</step>
													<step>
													<para xml:id="det_2883" xml:lang="de">Falls kein entsprechendes Element gefunden werden
													konnte, Setze <replaceable>O</replaceable> auf den
													speziellen Wert <emphasis>leer</emphasis> mit
													Elternelement
													<replaceable>Original</replaceable>.</para>
													</step>
													<step>
													<para xml:id="det_2884" xml:lang="de">Rufe <code>AktualisiereKnoten</code> (
													<replaceable>O</replaceable>,
													<replaceable>U</replaceable> ) auf.</para>
													</step>
												</procedure>
											</step>
										</procedure>
									</step>
								</procedure>
							</step>
						</procedure>
					</task>
				</section>
			</section>
			<section xml:id="OtdsProcessProduct">
				<title><phrase xml:id="det_2885" xml:lang="de">Verarbeitung der Product-Rules</phrase></title>

				<para xml:id="det_2886" xml:lang="de">Für die Zusammenstellung von Produkten und Flügen wird ein umfangreiches Regelwerk zur
					Verfügung gestellt, welches aus den gelieferten Einzelkomponenten unter Beachtung aller
					Bedingungen und Regeln verkaufsfertige Produkte und zusammengestellte Flüge erzeugt. Dafür
					werden erlaubte Werte für Rahmenparameter (z.B. Reisezeitraum, Dauer oder Buchungsdatum)
					vorgegeben, die den Rahmen für die erzeugten Produkte bilden. Diese Konstruktion
					ermöglicht jegliche Kombination von Komponenten. Dabei besteht die Möglichkeit, interne
					Regeln von Veranstaltersystemen in OTDS abzubilden. Auf der anderen Seite können implizite
					Regeln durch Erhöhung der Abstraktion oder durch Lieferung von vorberechneten Daten
					verborgen werden.</para>

				<figure>
					<title><phrase xml:id="det_2887" xml:lang="de">Products - Übersicht </phrase></title>
					<mediaobject>
						<imageobject>
							<imagedata fileref="figures/products-overview.png" format="PNG" contentwidth="80%"/>
						</imageobject>
						<textobject>
							<para xml:id="det_2888" xml:lang="de">Products - Übersicht</para>
						</textobject>
						<caption>
							<para xml:id="det_2889" xml:lang="de"> </para>
						</caption>
					</mediaobject>
				</figure>

				<section xml:id="OtdsProcessProductOverview">
					<title><phrase xml:id="det_2890" xml:lang="de">Überblick</phrase></title>

					<para xml:id="det_2891" xml:lang="de">Die Verarbeitung der Regeln, die Produkte beschreiben, folgt einem konsequenten,
						konzeptionellen Modell:</para>

					<orderedlist>
						<listitem>
							<para xml:id="det_2892" xml:lang="de">In OTDS werden Produkte aus gelieferten Einzelkomponenten zusammengeführt.
								Zusätzliche Regeln beschreiben, wie diese Komponenten kombiniert werden
								sollen. Am Beispiel eines Pauschalangebotes legen diese Regeln fest, dass ein
								solches Pauschalangebot einen Returnflug sowie eine Unterkunft und
								möglicherweise ein zusätzliches Addon enthält.</para>
							<para xml:id="det_2893" xml:lang="de">Zu einer Produktart können verschiedene solche Regeln (<code>Product</code>)
								angegeben werden. Jede <code>Product</code> Spezifikation beschreibt eine
								mögliche Struktur des Angebotes. Weitere Strukturvarianten ergeben sich durch
								die Verwendung von <code>CombiComponent</code> /
								<code>DefinedComponent</code>. Siehe hierzu auch <xref linkend="OtdsProcessDataModelSubstitutions"/></para>
						</listitem>

						<listitem>
							<para xml:id="det_2894" xml:lang="de">Der zentrale Vorgang der Produktverarbeitung ist die Bildung aller möglichen
								Kombinationen der Komponenteninstanzen. Im obigen Beispiel einer Pauschalreise
								bedeutet diese ganz praktisch, dass jedes Hotel mit jedem Flug kombiniert
								wird. Allgemeiner wird jede mögliche Ausprägung (Komponenteninstanz) einer im
								Produkt enthaltenen Komponente mit allen Ausprägungen (Komponenteninstanzen)
								der anderen enthaltenen Komponenten kombiniert.</para>
							<para xml:id="det_2895" xml:lang="de">Dieser Vorgang findet nicht nur auf der obersten Ebene, sondern auch auf der
								Ebene der Unterkomponenten statt. Wieder am Beispiel eines Hotels wird dort
								jede Verpflegung (<code>Board</code>) mit jedem Zimmer (<code>Unit</code>)
								kombiniert. Ergebnis dieser Ausmultiplikation der Komponenteninstanzmengen ist
								eine (große) Menge von Angebotskandidaten in Form der
									<emphasis>uneingeschränkten</emphasis> Kombinatorik der Einzelkomponenten.
								Einschränkungen zwischen den Komponenten werden in diesem Schritt noch nicht
								berücksichtigt, diese Ergebnismenge enthält noch eine große Zahl
								widerprüchlicher Angebote (z.B. ist der Zielflughafen und der Hotelstandort an
								dieser Stelle noch vollständig willkürlich kombiniert).</para>
						</listitem>

						<listitem>
							<para xml:id="det_2896" xml:lang="de">Jedem Angebotskandidaten und auch jeder einzelnen Komponenteninstanz dieses
								Kandidaten werden nun anhand der Angaben des Anfragekontext und mittels der in
								den OTDS Daten festgelegten Regeln Zeiten und Personen zugeordnet
									(<emphasis>Allokation</emphasis>). An dieser Stelle ist die genaue
								zeitlicher Reihenfolge der einzelnen Reisekomponenten festgelegt.</para>
						</listitem>

						<listitem>
							<para xml:id="det_2897" xml:lang="de">In OTDS können an vielen Stellen Filterbedingungen (<code>Filter</code>)
								angegeben werden. Diese Filterbedingungen werden jetzt ausgewertet. Nur
								Angebotskandidaten, welche diese Filterbedindungen erfüllen, werden
								übernommen. Auch strukturelle Einschränkungen an die Sinnhaftigkeit eines
								Angebotes sind in diesen Filterbedingungen explizit formuliert und werden hier
								ausgewertet, beispielsweise die Einschränkung, dass der Zielflughafen des
								Hinfluges sich in der Nähe des Hotels befinden muss
									(<code>CatchmentAirport</code>). Dieser Schritt entfernt somit auch alle
								unsinnigen Angebote. Ergebnis ist die Menge aller durch den Veranstalter
								definierten gültigen Angebote, welche zum gegebenen Anfragekontext
								passen.</para>
						</listitem>
					</orderedlist>

					<para xml:id="det_2898" xml:lang="de">Zur Vervollständigung einer kompletten Angebotsproduktion fehlen noch die Schritte
						der <link linkend="OtdsProcessAvailability">Auswertung der gelieferten Vakanzen</link>
						und die <link linkend="OtdsProcessPriceCalculation">Auswertung der gelieferten
							Preisregeln</link>. </para>

					<para xml:id="det_2899" xml:lang="de">
						<emphasis>Das hier beschriebene Modell beschreibt nicht eine Implementierung des
							Regelsystems, sondern es ist nur eine formale und präzise Methode zur Auswertung,
							um ein Verständnis der Logik zu schaffen. Eine Implementierung, welche stur diesem
							Modell folgt, würde den zu erwartenden Datenmengen nicht Herr werden können. Die
							Methode der Implementierung unterliegt der Entscheidung der Anbieter von
							Vertriebssystemen.</emphasis></para>
				</section>
				<section xml:id="OtdsProcessProductSteps">
					<title><phrase xml:id="det_2900" xml:lang="de">Schritte der Produktverarbeitung</phrase></title>

					<para xml:id="det_2901" xml:lang="de">Die Verarbeitung des Regelmodells erfolgt in mehreren Schritten:</para>

					<itemizedlist>
						<listitem>
							<para xml:id="det_2902" xml:lang="de">Erzeugung der expandierten Produktregeln</para>
						</listitem>
						<listitem>
							<para xml:id="det_2903" xml:lang="de">Erzeugung der Angebotsinstanzen</para>
						</listitem>
						<listitem>
							<para xml:id="det_2904" xml:lang="de">Allokation</para>
						</listitem>
						<listitem>
							<para xml:id="det_2905" xml:lang="de">Auswertung der Filterbedingungen</para>
						</listitem>
					</itemizedlist>

					<para xml:id="det_2906" xml:lang="de">Diese Schritte werden für jedes <code>Product</code> Element durchgeführt. Die
						Instanzmengen aller <code>Product</code> Elemente mit demselben
							<code>ProductType</code> werden dann zusammengefasst.</para>
				</section>
				<section xml:id="OtdsProcessProductExpandRules">
					<title><phrase xml:id="det_2907" xml:lang="de">Erzeugung der expandierten Produktregeln</phrase></title>

					<para xml:id="det_2908" xml:lang="de">In diesem Schritt werden alle <code>DefinedComponent</code> Referenzen mittels der
						entsprechenden <code>DefineComponent</code> Definitionen aufgelöst und durch
						entsprechende <code>CombiComponent</code> Angaben ersetzt. Aus jeder Produktregel wird
						so eine Menge von expandierten Regelsätzen erzeugt. Dieser Expansionsprozess ist
						rekursiv.</para>

					<itemizedlist>
						<listitem>
							<para xml:id="det_2909" xml:lang="de">Referenziert eine <code>DefinedComponent</code> mittels <code>UseRole</code>
								mehrere <code>DefineComponent</code> (das passiert wenn es mehrere
									<code>DefineComponent</code> Elemente mit derselben <code>Role</code>
								gibt), so wird jede dieser Möglichkeiten als eigenständige Produktregel
								verstanden.</para>
						</listitem>

						<listitem>
							<para xml:id="det_2910" xml:lang="de">Ein <code>DefinedComponent</code> darf keine <code>Role</code> haben, die
									<code>Role</code> wird ja durch die referenzierte
									<code>DefineComponent</code> festgelegt.</para>
						</listitem>

						<listitem>
							<para xml:id="det_2911" xml:lang="de">Ansonsten darf ein <code>DefinedComponent</code> alle üblichen
								Komponentenattribute besitzen: <code>Name</code>,
									<code>DayAllocationIndex</code>, <code>DayAllocationLevel</code>.</para>
						</listitem>

						<listitem>
							<para xml:id="det_2912" xml:lang="de">Hat eine <code>DefinedComponent</code> keinen
									<code>DayAllocationIndex</code> oder <code>DayAllocationLevel</code>
								werden diese Werte von <code>DefineComponent</code> übernommen. Sind auch dort
								keine Werte angegeben, bleiben die Werte leer.</para>
						</listitem>
					</itemizedlist>

					<para xml:id="det_2913" xml:lang="de">Der Vorgang ist an sich relativ einfach: Einer durch ihre <code>Role</code>
						identifizierten definierten Komponente kann eine Menge von
							<code>DefineComponent</code> Elementen zugeordnet werden. Jedes dieser
							<code>DefineComponent</code> Elemente enthält einerseits eine
						Komponentenbeschreibung, andererseits einen Filterausdruck. Der Expansionsprozess
						ersetzt nun das <code>DefinedComponent</code> Element durch eine
							<code>CombiComponent</code>, deren Inhalt durch die Komponentenbeschreibung eines
						der referenzierten <code>DefineComponent</code> Elemente angegeben ist. Die
						Filterbedingung wird als zusätzliche Eigenschaft der Regel vermerkt, damit sie beim
						späteren Auswerten der Filterbedingungen korrekt mit angewendet wird.</para>

					<task xml:id="OtdsProcessProductExpandRulesFormal">
						<title><phrase xml:id="det_2914" xml:lang="de"><code>ExpandiereKomponente</code> ( <replaceable>K</replaceable> )</phrase></title>

						<tasksummary>
							<para xml:id="det_2915" xml:lang="de">Gegeben sei</para>
							<itemizedlist>
								<listitem>
									<para xml:id="det_2916" xml:lang="de">Eine Komponente <emphasis>K</emphasis> mit ihren dynamischen und
										statischen Eigenschaften</para>
								</listitem>
							</itemizedlist>
						</tasksummary>

						<procedure>
							<step>
								<para xml:id="det_2917" xml:lang="de">Wenn <replaceable>K</replaceable> eine echte Komponente oder eine
										<code>ProductComponent</code> ist wird die Komponente wie sie ist
									zurückgegeben.</para>
							</step>

							<step>
								<para xml:id="det_2918" xml:lang="de">Wenn <replaceable>K</replaceable> eine <code>CombiComponent</code> oder
									das toplevel <code>Product</code> ist, so wird die Expansion rekursiv in
									den Unterkomponenten von <replaceable>K</replaceable> fortgesetzt:</para>
								<procedure>
									<step>
										<para xml:id="det_2919" xml:lang="de">Zunächst wird ExpandiereKomponente rekursiv für alle
											Unterkomponenten <replaceable>u</replaceable> von
												<replaceable>K</replaceable> aufgerufen. Für jede
											Unterkomponente <replaceable>u</replaceable> ist das Ergebnis eine
											Menge von Expansionen <replaceable>Eu</replaceable></para>
									</step>

									<step>
										<para xml:id="det_2920" xml:lang="de">Das Ergebnis der Expansion erzeugt sich aus dem Kreuzprodukt
												<replaceable>X</replaceable> der Mengen
												<replaceable>Eu</replaceable>. Jedes Element des
											Kreuzproduktes ist ein Tupel mit genauso vielen Elementen wie
												<replaceable>K</replaceable> Unterkomponenten hat. Dieses
											Tupel enthält genau eine expandierte Komponente für jede
											Unterkomponete <replaceable>u</replaceable>.</para>
									</step>

									<step>
										<para xml:id="det_2921" xml:lang="de">Iteriere <replaceable>x</replaceable> über das Kreuzprodukt
												<replaceable>X</replaceable>. Erzeuge für jedes
												<replaceable>x</replaceable> eine Kopie
												<replaceable>R</replaceable> von <replaceable>K</replaceable>
											und ersetzte die Unterkomponenten von <replaceable>R</replaceable>
											durch <replaceable>x</replaceable>. Endergebnis ist die Menge
											dieser Kopien.</para>
									</step>
								</procedure>
							</step>

							<step>
								<para xml:id="det_2922" xml:lang="de">Ansonsten ist <replaceable>K</replaceable> eine
										<code>DefinedComponent</code>:</para>
								<procedure>
									<step>
										<para xml:id="det_2923" xml:lang="de">Sei <replaceable>D</replaceable> die Menge der durch
												<code>UseRole</code> referenzierte
												<code>DefineComponent</code> Elemente (also alle
												<code>DefineComponent</code> Elemente mit der angegebenen
												<code>Role</code>, welche in
												<emphasis>document-order</emphasis> nach
												<replaceable>K</replaceable> stehen (diese Einschränkung dient
											der Vermeidung von rekursiven Definitionen).</para>
									</step>

									<step>
										<para xml:id="det_2924" xml:lang="de">Die folgende Schleife erzeugt eine Menge von neuen Komponenten
												<replaceable>N</replaceable>.</para>
									</step>

									<step>
										<para xml:id="det_2925" xml:lang="de">Iteriere <replaceable>d</replaceable> über
												<replaceable>D</replaceable> (also über die einzelnen
												<code>DefineComponent</code> Elemente)</para>
										<procedure>
											<step>
												<para xml:id="det_2926" xml:lang="de">Erzeuge eine neue <code>CombiComponent</code>
													<replaceable>M</replaceable> mit folgenden
													Eigenschaften:</para>
												<procedure>
													<step>
													<para xml:id="det_2927" xml:lang="de"><code>Role</code> ist die <code>Role</code> von
													<replaceable>d</replaceable></para>
													</step>

													<step>
													<para xml:id="det_2928" xml:lang="de"><code>Name</code> und
													<code>DayAllocationLevel</code> werden (separat) von
													<replaceable>K</replaceable> übernommen (oder bleiben
													leer)</para>
													</step>

													<step>
													<para xml:id="det_2929" xml:lang="de"><code>DayAllocationIndex</code> wird zuerst von
													<replaceable>K</replaceable>, danach von
													<replaceable>d</replaceable> übernommen oder bleibt
													leer</para>
													</step>

													<step>
													<para xml:id="det_2930" xml:lang="de">Unterkomponenten von <replaceable>M</replaceable>
													sind die in <replaceable>d</replaceable> angegebenen
													Komponenten</para>
													</step>

													<step>
													<para xml:id="det_2931" xml:lang="de">Die Filter-Eigenschaft von
													<replaceable>M</replaceable> ist die in
													<replaceable>d</replaceable> angegebene
													Filterbedingung</para>
													</step>
												</procedure>
											</step>

											<step>
												<para xml:id="det_2932" xml:lang="de"><replaceable>M</replaceable> ist nun die durch einen
													einzelnen Regelblock in <replaceable>D</replaceable>
													beschriebene Expansion der Komponente
													<replaceable>K</replaceable></para>
											</step>

											<step>
												<para xml:id="det_2933" xml:lang="de">Rufe rekursiv ExpandiereKomponente(
													<replaceable>M</replaceable> ) auf. Ergebnis ist eine
													Menge von Expansionen von <replaceable>M</replaceable>.
													Diese Menge wird in die Menge <replaceable>N</replaceable>
													eingefügt.</para>
											</step>
										</procedure>
									</step>

									<step>
										<para xml:id="det_2934" xml:lang="de">Endergebnis ist die Menge <replaceable>N</replaceable></para>
									</step>
								</procedure>
							</step>
						</procedure>
					</task>
				</section>
				<section xml:id="OtdsProcessProductCandidates">
					<title><phrase xml:id="det_2935" xml:lang="de">Erzeugung der Angebotsinstanzen (Kandidaten)</phrase></title>

					<para xml:id="det_2936" xml:lang="de">Die Angebotskandidaten sind die vollständigen durch ein <code>Product</code> Element
						in einer Produkregel beschriebenen Produktinstanzen. Diese Menge wird erzeugt durch
						Aufruf der Funktion <emphasis>Instanzen</emphasis> mit folgenden Parametern:</para>

					<itemizedlist>
						<listitem>
							<para xml:id="det_2937" xml:lang="de"><replaceable>H</replaceable> ist keine echte Komponente, sondern
									<code>Product</code></para>
						</listitem>
						<listitem>
							<para xml:id="det_2938" xml:lang="de"><replaceable>K</replaceable> ist die Menge der in der Produktregel
								angegebenen Komponenten. <emphasis>Diese Menge wird durch die
										<code>Brand</code> Komponente erweitert</emphasis>.</para>
						</listitem>
						<listitem>
							<para xml:id="det_2939" xml:lang="de"><replaceable>E</replaceable> ist das vollständige <code>Otds</code>
								Dokument</para>
						</listitem>
					</itemizedlist>

					<task xml:id="OtdsProcessProductCandidatesInstanzen">
						<title><phrase xml:id="det_2940" xml:lang="de"><code>Instanzen</code> ( <replaceable>H</replaceable>,
								<replaceable>K</replaceable>, <replaceable>E</replaceable> )</phrase></title>

						<tasksummary>
							<itemizedlist>
								<listitem>
									<para xml:id="det_2941" xml:lang="de">Gegeben seien</para>
									<itemizedlist>
										<listitem>
											<para xml:id="det_2942" xml:lang="de">Eine Komponente <emphasis>H</emphasis> mit ihren dynamischen
												und statischen Eigenschaften</para>
										</listitem>
										<listitem>
											<para xml:id="det_2943" xml:lang="de"><emphasis>K</emphasis>: Eine Menge von Komponenten (die
												Unterkomponenten von <emphasis>H</emphasis>)</para>
										</listitem>
										<listitem>
											<para xml:id="det_2944" xml:lang="de"><emphasis>E</emphasis>: Ein Element, welches zu der Instanz
												der Komponente <emphasis>H</emphasis> gehört</para>
										</listitem>
									</itemizedlist>
								</listitem>
							</itemizedlist>
						</tasksummary>

						<procedure>
							<step>
								<para xml:id="det_2945" xml:lang="de">Erzeuge zu jeder Komponente <replaceable>k</replaceable> in
										<replaceable>K</replaceable>, welche keine
										<code>ProductComponent</code> ist, eine Menge
										<replaceable>Ek</replaceable> :=
									Elemente(<replaceable>E</replaceable>, <replaceable>k</replaceable>) der
									zu dieser Komponente gehörenden Elemente aus
									<replaceable>E</replaceable></para>
							</step>

							<step>
								<para xml:id="det_2946" xml:lang="de">Erzeuge zu jedem Element in <replaceable>Ek</replaceable> eine Menge der
									zu diesem Element gehörenden Instanzen. Diese Menge wird durch rekursiven
									Aufruf dieser Prozedur erzeugt. Dabei wird <replaceable>H</replaceable>
									auf <replaceable>k</replaceable>, <replaceable>K</replaceable> auf
										Unterkomponenten(<replaceable>k</replaceable>), die Menge der
									Unterkomponenten von <replaceable>k</replaceable> und
										<replaceable>E</replaceable> auf das Element aus
										<replaceable>Ek</replaceable> gesetzt. Endergebnis dieses Vorgangs ist
									eine Menge <replaceable>Ik</replaceable> von Instanzen der Komponente
										<replaceable>k</replaceable></para>
							</step>

							<step>
								<para xml:id="det_2947" xml:lang="de">Enthält <replaceable>K</replaceable>
									<code>ProductComponent</code> Elemente, so wird
										<replaceable>Ik</replaceable> dieser <code>ProductComponent</code>
									Elemente durch den vollständigen Aufruf der Produkterzeugung für das
									referenzierte Produkt einschließlich Allokation und Ausführung der
									Filterbedingungen erzeugt. Da es sich bei Produkten mit einer
										<code>ProductComponent</code> um After-Sale Produkte handelt, ist die
									vollständige Erzeugung der entsprechenden Angebote oft überflüssig. In
									diesem Fall wird diese Komponente durch das relevante Angebot ersetzt
									(also das bereits festgelegte Angebot zu dem die Addons zu bestimmen
									sind).</para>
							</step>

							<step>
								<para xml:id="det_2948" xml:lang="de">Erzeuge das Kreuzprodukt <replaceable>P</replaceable> der Mengen
										<replaceable>Ik</replaceable> über alle <replaceable>k</replaceable>
									aus <replaceable>K</replaceable>. Jedes Element des Kreuzproduktes
										<replaceable>P</replaceable> enthält somit eine Instanz für jedes
										<replaceable>k</replaceable> aus <replaceable>K</replaceable></para>
							</step>

							<step>
								<para xml:id="det_2949" xml:lang="de">Erzeuge für jedes Element <replaceable>p</replaceable> des
									Kreuzproduktes <replaceable>P</replaceable> eine Instanz der Komponente
										<replaceable>H</replaceable> mit folgenden Eigenschaften:</para>
								<procedure>
									<step>
										<para xml:id="det_2950" xml:lang="de">Das <replaceable>XML Element</replaceable> der Instanz ist
												<replaceable>E</replaceable></para>
									</step>
									<step>
										<para xml:id="det_2951" xml:lang="de">Die <replaceable>Werte</replaceable> der Instanz sind
											leer</para>
									</step>
									<step>
										<para xml:id="det_2952" xml:lang="de">Die <replaceable>Unterkomponenteninstanzen</replaceable> sind
												<replaceable>p</replaceable></para>
									</step>
								</procedure>
							</step>

							<step>
								<para xml:id="det_2953" xml:lang="de">Ergebnis ist die so erzeugte Menge von Instanzen der Komponente
										<replaceable>H</replaceable></para>
							</step>
						</procedure>
					</task>

					<task xml:id="OtdsProcessProductCandidatesElemente">
						<title><phrase xml:id="det_2954" xml:lang="de"><code>Elemente</code> ( <replaceable>E</replaceable>,
								<replaceable>K</replaceable> )</phrase></title>

						<procedure>
							<step>
								<para xml:id="det_2955" xml:lang="de">Ist <replaceable>K</replaceable> die <code>Product</code>
									Komponente:</para>
								<procedure>
									<step>
										<para xml:id="det_2956" xml:lang="de">Die Menge der zu <replaceable>K</replaceable> gehörenden
											Elemente entspricht dem gesamten <code>Otds</code> Dokument</para>
									</step>
								</procedure>
							</step>

							<step>
								<para xml:id="det_2957" xml:lang="de">Ist <replaceable>K</replaceable> eine Hauptkomponente:</para>
								<procedure>
									<step>
										<para xml:id="det_2958" xml:lang="de">In diesem Fall ist <replaceable>E</replaceable> das gesamte
												<code>Otds</code> Dokument. Die Menge der Elemente zu
												<replaceable>K</replaceable> ergibt sich durch einen
											komponentenspezifischen XPath Ausdruck. Beispiel: Ist
												<replaceable>K</replaceable> die <code>Accommodation</code>
											Komponente, so sind die Elemente zu <replaceable>K</replaceable>
											alle <code>Accommodations/Accommodation</code> Elemente in
												<replaceable>E</replaceable> (also im <code>Otds</code>
											Dokument)</para>
									</step>
								</procedure>
							</step>

							<step>
								<para xml:id="det_2959" xml:lang="de">Ist <replaceable>K</replaceable> eine andere echte Komponente:</para>
								<procedure>
									<step>
										<para xml:id="det_2960" xml:lang="de">Die Menge der zu <replaceable>K</replaceable> gehörenden
											Elemente aus <replaceable>E</replaceable> entspricht den
											Kindelementen von <replaceable>E</replaceable> mit dem Namen der
											Komponente. Beispiel: Ist <replaceable>K</replaceable>
											<code>Unit</code>, so ist <replaceable>E</replaceable> ein
												<code>SellingAccom</code> Element. Elemente(E,K) ist dann die
											Menge der <code>Unit</code> Kinder von
												<replaceable>E</replaceable>.</para>
									</step>
								</procedure>
							</step>

							<step>
								<para xml:id="det_2961" xml:lang="de">Ansonsten ist <replaceable>K</replaceable> eine
										<code>CombiComponent</code></para>
								<procedure>
									<step>
										<para xml:id="det_2962" xml:lang="de">Die Menge der zur Komponente <replaceable>K</replaceable>
											gehörenden Elemente ist <replaceable>E</replaceable>.</para>
									</step>
								</procedure>
							</step>
						</procedure>
					</task>

					<task xml:id="OtdsProcessProductCandidatesUnterkomponenten">
						<title><phrase xml:id="det_2963" xml:lang="de"><code>Unterkomponenten</code> ( <replaceable>K</replaceable> )</phrase></title>

						<tasksummary>
							<para xml:id="det_2964" xml:lang="de">Die Unterkomponenten einer Komponente <replaceable>K</replaceable> werden
								abhängig von der Art der Komponenten bestimmt</para>
						</tasksummary>

						<procedure>
							<step>
								<para xml:id="det_2965" xml:lang="de">Ist <replaceable>K</replaceable> die <code>Product</code>
									Komponente:</para>
								<procedure>
									<step>
										<para xml:id="det_2966" xml:lang="de">Unterkomponenten von <replaceable>K</replaceable> sind die im
												<code>Product</code>-Element angegebenen Komponenten</para>
									</step>
								</procedure>
							</step>

							<step>
								<para xml:id="det_2967" xml:lang="de">Ist <replaceable>K</replaceable> eine echte Komponente:</para>
								<procedure>
									<step>
										<para xml:id="det_2968" xml:lang="de">Unterkomponenten von <replaceable>K</replaceable> sind durch die
											Unterkomponentenstruktur fest vorgegeben (siehe Komponentenbaum
											oben). Die Eigenschaften der Komponente ergeben sich aus der
											Regel. Beispiel: Ist <replaceable>K</replaceable> ==
												<code>SellingAccom</code>, so ist die Menge der
											Unterkomponenten <code>Board</code> und <code>Unit</code>.</para>
									</step>
								</procedure>
							</step>

							<step>
								<para xml:id="det_2969" xml:lang="de">Ansonsten ist <replaceable>K</replaceable> eine
										<code>CombiComponent</code>:</para>
								<procedure>
									<step>
										<para xml:id="det_2970" xml:lang="de">Die Menge der Unterkomponenten ergibt sich aus der Definition
											der Komponente.</para>
									</step>
								</procedure>
							</step>
						</procedure>
					</task>
				</section>
				<section xml:id="OtdsProcessProductAllocation">
					<title><phrase xml:id="det_2971" xml:lang="de">Allokation</phrase></title>

					<para xml:id="det_2972" xml:lang="de">Die Allokation beschreibt die Zuweisung von Zeiten und Personen zu
						Komponenteninstanzen (Siehe <xref linkend="OtdsProcessDataModelAllocation"/>.
						Allokation wird zurzeit nur auf der Zeitachse wirklich durchgeführt, und auch hier
						durch ein vereinfachtes Verfahren. Komplexere Allokationsmöglichkeiten werden in
						späteren OTDS Versionen definiert.</para>

					<para xml:id="det_2973" xml:lang="de">Die Allokation wird einzeln für jeden Kandidaten durchgeführt. Als Ergebnis der
						Allokation werden die Instanzen des Kandidaten um zusätzliche Werte erweitert. Die
						Allokation teilt sich auf in eine Zeitallokation und eine Personenallokation.</para>

					<para xml:id="det_2974" xml:lang="de">Die Personenallokation ist ausschließlich eine vollständige Allokation (das heisst,
						in OTDS 1.0 werden immer alle Personen allen Personen allozierenden Komponenten
						zugewiesen). Die Personenallokation erfolgt durch das <code>Occupancy</code> Element
						und schlägt fehl, wenn die <code>Occupancy</code> nicht angewendet werden kann.</para>

					<section xml:id="OtdsProcessProductAllocationTime">
						<title><phrase xml:id="det_2975" xml:lang="de">Zeitallokation</phrase></title>

						<para xml:id="det_2976" xml:lang="de">Die Zeitverarbeitung in OTDS erfolgt grundsätzlich in der jeweils relevanten
								<emphasis>Lokalzeit</emphasis> (Beispiel: Hotelzeiten werden in der Zeitzone
							des Hotels verarbeitet ebenso werden Flugabreise- und Ankunftszeiten in der
							jeweiligen Zeitzone das Abflugs oder Ankunftsflughaben angegeben). Die Allokation
							erfolgt in OTDS-1.0 nur tagesgenau, daher ist hier vor allem der Übertritt der
							Datumsgrenze relevant. Diese müssen in die
								<code>NeighbourComponentCorrection</code> mit eingearbeitet werden.</para>

						<para xml:id="det_2977" xml:lang="de">Da Anpassungen explizit angegeben werden müssen, wird daher in OTDS-1.0 davon
							ausgegangen, dass alle Datumsangaben direkt vergleichbar sind, es wird keine
							zeitzonenspezifische Verarbeitung vorgenommen. Die zeitgenaue Verarbeitung unter
							expliziter Berücksichtigung von Zeitzonen wird in späteren OTDS Versionen
							definiert.</para>

						<para xml:id="det_2978" xml:lang="de">Die Zeitallokation erfolgt in mehreren Schritten:</para>

						<itemizedlist>
							<listitem>
								<para xml:id="det_2979" xml:lang="de">Einsammeln aller relevanten zeitlich allozierenden Komponenten (also
									alle zeitlich allozierenden Komponenten, welche nicht in einer
										<code>ProductComponent</code> liegen)</para>
							</listitem>
							<listitem>
								<para xml:id="det_2980" xml:lang="de">Einteilung dieser Komponenten in Gruppen anhand des
										<code>DayAllocationLevel</code> Attributs. Diese Gruppen werden nach
									aufsteigendem Level verarbeitet.</para>
							</listitem>
							<listitem>
								<para xml:id="det_2981" xml:lang="de">Allokation der Komponenten innerhalb der Gruppen in Reihenfolge nach
									aufsteigenden <code>DayAllocationIndex</code>-Tupeln</para>
							</listitem>
						</itemizedlist>

						<para xml:id="det_2982" xml:lang="de">Wichtig bei der Allokation ist, dass aufeinanderfolgende Komponenten sich den
							ersten oder letzten Tag teilen (es sei denn, der Offset verschiebt die Grenze
							entsprechend). Beispiel: Mehrere Hinflüge werden alle mit <code>CheckIn</code> und
								<code>CheckOut</code> auf dem Anreisetag liegen, es sei denn, einer dieser
							Flüge ist ein Nachtflug. Der erste Hoteltag wird sich mit dem
								<code>CheckOut</code> des letzten Fluges überschneiden usw.</para>

						<bridgehead xml:id="det_2983" xml:lang="de"><code>DayAllocationLevel</code> und
							<code>DayAllocationIndex</code></bridgehead>

						<para xml:id="det_2984" xml:lang="de">Diese beiden Attribute steuern die Zeitallokation. Der
								<code>DayAllocationLevel</code> unterteilt die Allokation in eine Reihe von
							Ebenen. Jede Ebene wird separat alloziert, Komponenteninstanzen aus
							unterschiedlichen Ebenen dürfen sich zeitlich überschneiden. Dies ist vor allem
							für Zusatzleistungen relevant. Beispiel: Definition einer integrierten
							Zusatzleistung "Lunchpaket", welche parallel zum Hotelaufenthalt gebucht wird.
							Diese Zusatzleistung wird auf einem eigenen Level alloziert, um so die
							Überschneidung zu erlauben und die Zusatzleistung genau an den Hotelaufenthalt
							anzugleichen.</para>

						<para xml:id="det_2985" xml:lang="de">Der <code>DayAllocationIndex</code> definiert eine Sortierung der zu
							allozierenden Komponenten innerhalb eines Layers. Die Komponenten werden anhand
							dieses Wertes sortiert und in dieser Reihenfolge den Tagen zugeordnet. Die
							Komponenteninstanz mit dem kleinsten Index wird also an den Anfang der Reise
							alloziert. Das heißt innerhalb eines Layers allozierte Komponenten überschneiden
							sich (bis auf mögliche Überschneidungen an den Grenzen) nicht.</para>

						<para xml:id="det_2986" xml:lang="de">Um eine flexible Steuerung der Reihenfolge insbesondere zusammengesetzter
							Komponenten (Siehe <code>CombiComponent</code> und die Flugkombinatorik) zu
							ermöglichen, wird bei der Sortierung nicht nur der <code>DayAllocationIndex</code>
							der jeweiligen Komponenteninstanz, sondern auch der Index von möglichen Über- oder
							Überüberkomponenteninstanzen u.s.w. mit berücksichtigt.</para>

						<bridgehead xml:id="det_2987" xml:lang="de">Die Elemente <code>DayAllocationStart</code> /
								<code>DayAllocationEnd</code></bridgehead>

						<para xml:id="det_2988" xml:lang="de">Die Elemente <code>DayAllocationStart</code> / <code>DayAllocationEnd</code>
							beschreiben das Anfangs- bzw. Enddatum der Allokation. Es werden folgende
							Attribute ausgewertet:</para>

						<variablelist>
							<varlistentry>
								<term xml:id="det_2989" xml:lang="de"><emphasis><code>DayAllocationLevel</code></emphasis> [Standard:
									0]</term>
								<listitem>
									<para xml:id="det_2990" xml:lang="de">Gibt an, zu welchem Level das Element gehört.</para>
								</listitem>
							</varlistentry>

							<varlistentry>
								<term xml:id="det_2991" xml:lang="de"><emphasis><code>Source</code></emphasis> [Standard:
									<code>Product</code>]</term>
								<listitem>
									<para xml:id="det_2992" xml:lang="de">Gibt die Komponente an, relativ zu welcher das Datum bestimmt werden
										soll.</para>
								</listitem>
							</varlistentry>
							<varlistentry>
								<term xml:id="det_2993" xml:lang="de"><emphasis><code>DateReference</code></emphasis> [Standard:
										<code>CheckIn</code> in <code>DayAllocationStart</code>,
										<code>CheckOut</code> in <code>DayAllocationEnd</code>]</term>
								<listitem>
									<para xml:id="det_2994" xml:lang="de">Gibt an, relativ zu welchem Wert der Komponente das Datum bestimmt
										werden soll.</para>
								</listitem>
							</varlistentry>
							<varlistentry>
								<term xml:id="det_2995" xml:lang="de"><emphasis><code>Offset</code></emphasis> [Standard: 0]</term>
								<listitem>
									<para xml:id="det_2996" xml:lang="de">Gibt an, um wie viele Tage das Referenzdatum verschoben werden soll.
										Der Wert wird auf das Referenzdatum addiert.</para>
								</listitem>
							</varlistentry>
							<varlistentry>
								<term xml:id="det_2997" xml:lang="de"><emphasis><code>Shift</code></emphasis> [Standard:
									<code>Disabled</code>]</term>
								<listitem>
									<para xml:id="det_2998" xml:lang="de">Erlaubt es, dass der Tag innerhalb des definierten Intervalls
										verschoben werden darf.</para>
								</listitem>
							</varlistentry>
						</variablelist>

						<para xml:id="det_2999" xml:lang="de">Existiert ein Element für einen <code>DayAllocationLevel</code> nicht, so
							entspricht dies einem Element, welches ausschließlich diese Standardwerte
							enthält.</para>

						<para xml:id="det_3000" xml:lang="de">Sind ein oder beide <code>Shift</code> Werte in <code>DayAllocationStart</code>
							oder <code>DayAllocationEnd</code> des aktuellen <code>DayAllocationLevels</code>
							<code>External</code>, so bedeutet dies, dass ein oder zwei zusätzliche externe
							Offsets als Buchungsparameter angegeben werden müssen (diese Eigenschaft wird vom
							Buchungssystem zuvor überprüft. Dies betrifft üblicherweise Addons, welche frei
							innerhalb einer Reise plaziert werden dürfen). Es wird also davon ausgegangen,
							dass zu jedem <code>DayAlloacationStart</code> und <code>DayAllocationEnd</code>
							Element mit <code>Shift="External"</code> ein entsprechender Buchungsparameter
							übergeben wurde. Dieser <code>Shift</code> Wert wird wie ein weiterer
								<code>Offset</code> behandelt. Dabei gelten folgende Einschränkungen:</para>

						<itemizedlist>
							<listitem>
								<para xml:id="det_3001" xml:lang="de">Der <code>Shift</code> Buchungsparameter des
										<code>DayAllocationStart</code> Elementes darf nicht negativ, der
										<code>Shift</code> Buchungsparameter des <code>DayAllocationEnd</code>
									Elementes darf nicht positiv sein.</para>
							</listitem>
							<listitem>
								<para xml:id="det_3002" xml:lang="de">Durch die Anwendung der <code>Shift</code> Werte darf sich die zeiliche
									Reihenfolge des Anfangs- und Enddatums nicht ändern. Das heisst, dass
									zuvor berechnete Anfangs- und Enddatum bestimmt ein Intervall, innerhalb
									dessen das Datum mittels <code>Shift</code> verschoben werden darf.</para>
							</listitem>
						</itemizedlist>

						<task>
							<title><phrase xml:id="det_3003" xml:lang="de"><code>Zeitallokation</code> ( <replaceable>K</replaceable> )</phrase></title>

							<tasksummary>
								<para xml:id="det_3004" xml:lang="de">Gegeben sei</para>

								<itemizedlist>
									<listitem>
										<para xml:id="det_3005" xml:lang="de">Eine Angebotsinstanz <replaceable>K</replaceable></para>
									</listitem>
								</itemizedlist>

								<para xml:id="det_3006" xml:lang="de">Die eigentliche Allokation erfolgt dann grundsätzlich
									folgendermaßen:</para>
								<itemizedlist>
									<listitem>
										<para xml:id="det_3007" xml:lang="de">Bestimme zu jeder Komponenteninstanz den gültigen
												<code>CheckInOffset</code> und
											<code>CheckOutOffset</code></para>
									</listitem>
									<listitem>
										<para xml:id="det_3008" xml:lang="de">Addiere alle Offsets sowie die Dauern der Komponenteninstanzen
											mit fester Länge</para>
									</listitem>
									<listitem>
										<para xml:id="det_3009" xml:lang="de">Falls <code>Shift="Auto"</code> gesetzt ist, verschiebe die
											entsprechende Grenze so, das keine Tage übrig bleiben</para>
									</listitem>
									<listitem>
										<para xml:id="det_3010" xml:lang="de">Falls expandierbare Komponenteninstanzen existieren, teile die
											übrige Zeit auf diese Komponenteninstanzen auf</para>
									</listitem>
									<listitem>
										<para xml:id="det_3011" xml:lang="de">Schreibe das Ergebnis in die <code>CheckIn</code>,
												<code>CheckOut</code> und <code>DayAllocationTuple</code>
											Eigenschaften der jeweiligen Komponenteninstanzen</para>
									</listitem>
								</itemizedlist>
							</tasksummary>

							<procedure>
								<step>
									<para xml:id="det_3012" xml:lang="de">Erzeuge eine Liste <replaceable>Z</replaceable> sämtlicher
										zeitallozierender Instanzen aus <replaceable>A</replaceable>. Hierbei
										werden sowohl <replaceable>A</replaceable> als auch rekursiv alle
										Unterkomponenteninstanzen von <replaceable>A</replaceable> betrachtet
											<replaceable>ausschließlich</replaceable> eventueller
											<code>ProductComponent</code> Instanzen. Die Liste enthält also
										Instanzen verschiedenster Ebenen. Das Ergebnis enthält ausschließlich
										echte Komponenten.</para>
								</step>

								<step>
									<para xml:id="det_3013" xml:lang="de">Iteriere <replaceable>l</replaceable> über alle Werte von
											<code>DayAllocationLevel</code> in
										<replaceable>Z</replaceable></para>
									<procedure>
										<step>
											<para xml:id="det_3014" xml:lang="de">Bestimme aus der <code>DayAllocationStart</code> Eigenschaft
												(ein Kind des <code>Product</code> Elementes) mit
													<code>DayAllocationLevel</code> =
													<replaceable>l</replaceable> das Startdatum der Allokation
													<replaceable>S</replaceable>: <replaceable>S</replaceable>
												:= <code>berechne Allokationsgrenze</code> (
													<code>DayAllocationStart</code> Element aus
													<replaceable>K</replaceable> mit
													<code>DayAllocationLevel</code> ==
													<replaceable>l</replaceable> )</para>
										</step>

										<step>
											<para xml:id="det_3015" xml:lang="de">Bestimme aus der <code>DayAllocationEnd</code> Eigenschaft
												(wieder ein Kind des <code>Product</code> Elementes) mit
													<code>DayAllocationLevel</code> =
													<replaceable>l</replaceable> das Enddatum der Allokation:
													<replaceable>E</replaceable> := <code>berechne
													Allokationsgrenze</code> ( <code>DayAllocationEnd</code>
												Element aus <replaceable>K</replaceable> mit
													<code>DayAllocationLevel</code> ==
													<replaceable>l</replaceable> )</para>
										</step>

										<step>
											<para xml:id="det_3016" xml:lang="de">Erzeuge eine Liste <replaceable>L</replaceable> mit allen
												Elementen aus <replaceable>Z</replaceable> mit dem aktuellen
													<code>DayAllocationLevel</code>
												<replaceable>l</replaceable></para>
										</step>

										<step>
											<para xml:id="det_3017" xml:lang="de">Ordne Jedem Element <replaceable>i</replaceable> aus
													<replaceable>L</replaceable> einen möglicherweise
												zusammengesetzten Index <replaceable>Ii</replaceable> zu.
													<replaceable>Ii</replaceable> ist ein Tupel, welches den
												Wert der <code>DayAllocationIndex</code> Eigenschaft der zur
												Instanz <replaceable>i</replaceable> gehörenden Komponente
												sowie deren Überkomponenten enthält. Die Indizes werden dabei
												in der Reihenfolge 'Überkomponente zuerst' in das Tupel
												eingetragen.</para>
										</step>

										<step>
											<para xml:id="det_3018" xml:lang="de">Sortiere die Liste <replaceable>L</replaceable> nach
													<replaceable>Ii</replaceable>. Die Tupel werden dabei
												lexikalisch verglichen: Sind die ersten beiden Tupelelemente
												gleich, so werden die zweiten beiden Tupelelemente verglichen
												und so weiter.</para>
										</step>

										<step>
											<para xml:id="det_3019" xml:lang="de">Bestimme zu jeder Instanz <replaceable>i</replaceable> in
													<replaceable>L</replaceable> den
													<code>NeighbourComponentCorretion/CheckInDateOffset</code>
												<replaceable>CIOi</replaceable> und den
													<code>NeighbourComponentCorrection/CheckOutDateOffset</code>
												<replaceable>COOi</replaceable>. Die Angabe des Offsets
												erfolgt jeweils abhängig vom Typ der Nachbarinstanz (Attribut
													<code>ComponentType</code> von
													<code>CheckInDateOffset</code> und
													<code>CheckOutdateOffset</code>). Dieser Wert wird wie
												eine <code>Source</code> Referenz ausgewertet: Es wird zu
												jedem <code>CheckInDateOffset</code> bzw.
													<code>CheckOutDateOffset</code> Element die Menge der
												referenzierten Komponenteninstanzen bestimmt. Die erste Angabe
												in <replaceable>document-order</replaceable>, welche in dieser
												Menge die Nachbarkomponente enthält, bestimmt den Offset. Eine
												Offset-Angabe ohne <code>ComponentType</code> definiert den
												Vorgabewert, falls ansonsten keine passende Angabe gefunden
												wird (die Angabe 'in
												<replaceable>document-order</replaceable>' ist nur notwendig,
												da sich mehrere Angaben theoretisch überschneiden können, da
												ein Wert immer eine Menge erzeugt. In der Realität sollte
												dieser Fall nicht vorkommen.)</para>
										</step>

										<step>
											<para xml:id="det_3020" xml:lang="de">Berechne die Summe <replaceable>O</replaceable> aller
												Offsets <replaceable>CIO</replaceable> und
													<replaceable>COO</replaceable></para>
										</step>

										<step>
											<para xml:id="det_3021" xml:lang="de">Weise dem <code>Duration</code> Wert aller nicht-flexiblen
												Instanzen <replaceable>i</replaceable> aus
													<replaceable>L</replaceable> den Wert
													InstanzDauer(<replaceable>i</replaceable>) zu. Berechne
												die Summe <replaceable>D</replaceable> dieser Werte.</para>
										</step>

										<step>
											<para xml:id="det_3022" xml:lang="de">Berechne die Anzahl der noch verfügbaren Tage
													<replaceable>R</replaceable> =
													<replaceable>E</replaceable> -
													<replaceable>S</replaceable> -
													<replaceable>O</replaceable> -
													<replaceable>D</replaceable>.</para>
										</step>

										<step>
											<para xml:id="det_3023" xml:lang="de">Hat der <code>DayAllocationStart</code> des Levels den
													<code>Shift</code>-Wert <code>Auto</code>, so wird
													<replaceable>R</replaceable> auf
													<replaceable>S</replaceable> aufaddiert.</para>
										</step>

										<step>
											<para xml:id="det_3024" xml:lang="de">Hat der <code>DayAllocationEnd</code> des Levels den
													<code>Shift</code>-Wert <code>Auto</code>, so wird
													<replaceable>R</replaceable> von
													<replaceable>E</replaceable> subtrahiert.</para>
										</step>

										<step>
											<para xml:id="det_3025" xml:lang="de">Setze <replaceable>N</replaceable> auf die Anzahl der
												flexiblen Instanzen in <replaceable>L</replaceable> (Dieser
												Wert sollte 0 sein, falls zuvor eine
												<code>Auto</code>-Verschiebung durchgeführt wurde). Weise nun
												der ersten Instanz aus <replaceable>L</replaceable>, welche
												noch keinen <code>Duration</code> Wert hat, den
													<code>Duration</code> Wert Ceiling(
													<replaceable>R</replaceable> /
													<replaceable>N</replaceable>) zu und reduziere
													<replaceable>R</replaceable> entsprechend. Wiederhole
												diesen Vorgang bis alle Instanzen eine Dauer haben. Der
													<code>Duration</code> Wert darf null sein (z.B. ein
												Mietwagen, der am selben Tag abgegeben wird). Ist das Ergebnis
												negativ, ist die Allokation fehlgeschlagen (das bedeutet, es
												stehen weniger Tage zur Verfügung, als die
												nicht-expandierbaren Komponenten zusammen mit allen Offsets
												bereits belegen).</para>
										</step>

										<step>
											<para xml:id="det_3026" xml:lang="de">Ist <replaceable>R</replaceable> nicht 0 so ist die
												Allokation fehlgeschlagen (das bedeutet, dass es zwar
												nicht-allozierte Tage, aber keine expandierbaren
												Komponenteninstanzen gibt).</para>
										</step>

										<step>
											<para xml:id="det_3027" xml:lang="de">Berechne nun die <code>CheckIn</code> und
													<code>CheckOut</code> Werte einer jeden Instanz aus
													<replaceable>L</replaceable>:</para>
											<procedure>
												<step>
													<para xml:id="det_3028" xml:lang="de">Setze das aktuelle Datum
													<replaceable>T</replaceable> auf
													<replaceable>S</replaceable></para>
												</step>

												<step>
													<para xml:id="det_3029" xml:lang="de">Iteriere <replaceable>i</replaceable> über die Liste
													<replaceable>L</replaceable></para>
													<procedure>
													<step>
													<para xml:id="det_3030" xml:lang="de">Setze den <code>CheckIn</code> Wert von
													<replaceable>i</replaceable> auf
													<replaceable>T</replaceable> +
													<replaceable>CIOi</replaceable></para>
													</step>

													<step>
													<para xml:id="det_3031" xml:lang="de">Setze den <code>CheckOut</code> Wert von
													<replaceable>i</replaceable> auf Wert[
													<replaceable>i</replaceable>, <code>CheckIn</code> ] +
													Wert[ <replaceable>i</replaceable>,
													<code>Duration</code> ]</para>
													</step>

													<step>
													<para xml:id="det_3032" xml:lang="de">Setze die <code>MinDayAllocationTuple</code> und
													<code>MaxDayAllocationTuple</code> Werte von
													<replaceable>i</replaceable> auf
													<replaceable>Ii</replaceable></para>
													</step>

													<step>
													<para xml:id="det_3033" xml:lang="de">Ordne der Komponente die <code>Stay</code> Tage
													zu. In OTDS-1.0 sind <code>Stay</code> Tage:</para>
													<procedure>
													<step>
													<para xml:id="det_3034" xml:lang="de">Der <code>CheckIn</code> Tag</para>
													</step>
													<step>
													<para xml:id="det_3035" xml:lang="de">Alle folgenden Tage bis zum<code>CheckOut</code>
													Tag <replaceable>ausschließlich</replaceable></para>
													</step>
													</procedure>
													</step>

													<step>
													<para xml:id="det_3036" xml:lang="de">Setze das aktuelle Datum
													<replaceable>T</replaceable> auf Wert[
													<replaceable>i</replaceable>, <code>CheckOut </code>] +
													<replaceable>COOi</replaceable></para>
													</step>
													</procedure>
												</step>
											</procedure>
										</step>
									</procedure>
								</step>
								<step>
									<para xml:id="det_3037" xml:lang="de">Die so festgelegten Werte für <code>CheckIn</code> und
											<code>CheckOut</code> sowie die Menge der <code>Stay</code> Tage
										wird nun in die echten Unter- und Überkomponenten übertragen
										(Migration):</para>
									<procedure>
										<step>
											<para xml:id="det_3038" xml:lang="de">Die Überkomponenten der allozierenden Komponenten
												erhalten:</para>
											<procedure>
												<step>
													<para xml:id="det_3039" xml:lang="de">Das Maximum aller <code>CheckOut</code> Werte ihrer
													Unterkomponenten als <code>CheckOut</code> Wert</para>
												</step>

												<step>
													<para xml:id="det_3040" xml:lang="de">Das Minimum aller <code>CheckIn</code> Werte ihrer
													Unterkomponenten als <code>CheckIn</code> Wert</para>
												</step>

												<step>
													<para xml:id="det_3041" xml:lang="de">Das Maximum aller <code>MaxDayAllocationTuple</code>
													Werte als <code>MaxDayAllocationTuple</code></para>
												</step>

												<step>
													<para xml:id="det_3042" xml:lang="de">Das Minimum aller <code>MinDayAllocationTuple</code>
													Werte als <code>MinDayAllocationTuple</code></para>
												</step>

												<step>
													<para xml:id="det_3043" xml:lang="de">Die Vereinigung der <code>Stay</code> Mengen ihrer
													Unterkomponenten als <code>Stay</code> Menge</para>
												</step>
											</procedure>
										</step>
										<step>
											<para xml:id="det_3044" xml:lang="de">Die Unterkomponenten der allozierenden Komponenten erhalten
												dieselben <code>CheckIn</code>, <code>CheckOut</code> und
													<code>Stay</code> Werte wie ihre Überkomponente.</para>
										</step>
									</procedure>
								</step>
							</procedure>
						</task>

						<task xml:id="OtdsProcessProductAllocationTimeInstanzdauer">
							<title><phrase xml:id="det_3045" xml:lang="de"><code>Instanzdauer</code> ( <replaceable>I</replaceable> )</phrase></title>

							<tasksummary>
								<para xml:id="det_3046" xml:lang="de">Die Dauer einer Instanz hängt von der Komponente ab:</para>
							</tasksummary>
							<procedure>
								<step>
									<para xml:id="det_3047" xml:lang="de">Ist die Komponenteninstanz zeitlich flexibel, hat sie keine
										Instanzdauer.</para>
								</step>

								<step>
									<para xml:id="det_3048" xml:lang="de">Nicht flexible Instanzen bestimmen ihre Dauer durch die
											<code>CheckOutDateOffset</code> Eigenschaft.</para>
								</step>

								<step>
									<para xml:id="det_3049" xml:lang="de">Addons können sowohl flexibel als auch unflexibel sein: Ein Addon
										ist flexibel, wenn es keine <code>Addon/CheckOutDateOffset</code>
										Eigenschaft besitzt (diese ist zu unterscheiden von
											<code>NeighbourComponentCorrection/CheckOutDateOffset</code>). Ist
										diese Eigenschaft angegeben, ist das Addon nicht flexibel.</para>
								</step>
							</procedure>
						</task>

						<task>
							<title><phrase xml:id="det_3050" xml:lang="de"><code>berechne Allokationsgrenze</code> ( <replaceable>D</replaceable>
								)</phrase></title>
							<tasksummary>
								<para xml:id="det_3051" xml:lang="de">Das Datum wird wie folgt berechnet:</para>
							</tasksummary>
							<procedure>
								<step>
									<para xml:id="det_3052" xml:lang="de">Zunächst wird aus <code>Source</code> die Komponenteninstanzmenge
										bestimmt. Diese Menge wird eingeschränkt auf diejenigen Elemente,
										welche bereits einen <code>CheckIn</code> und <code>CheckOut</code>
										Wert besitzen. Dies sind:</para>
									<procedure>
										<step>
											<para xml:id="det_3053" xml:lang="de">Zeitallozierende Komponenteninstanzen (oder Komponenten,
												welche zeitallozierende Unterkomponenten besitzen) deren
													<code>DayAllocationLevel</code> kleiner ist als der
													<code>DayAllocationLevel</code> des
													<code>DayAllocationStart</code> /
													<code>DayAllocationEnd</code> Elements</para>
										</step>
										<step>
											<para xml:id="det_3054" xml:lang="de">Die <code>Product</code> Komponenteninstanz (deren
													<code>CheckIn</code> und <code>CheckOut</code> Wert
												initial auf die Reiseparameter gesetzt werden)</para>
										</step>
									</procedure>
								</step>
								<step>
									<para xml:id="det_3055" xml:lang="de">Ist die Ergebnismenge leer, ist die OTDS Lieferung
										fehlerhaft.</para>
								</step>
								<step>
									<para xml:id="det_3056" xml:lang="de">Je nach <code>DayReference</code> wird der kleinste
											<code>CheckIn</code> oder der größte <code>CheckOut</code> Wert
										der Komponenten extrahiert.</para>
								</step>
								<step>
									<para xml:id="det_3057" xml:lang="de">Auf diesen Wert wird nun der <code>Offset</code> angewendet.</para>
								</step>
								<step>
									<para xml:id="det_3058" xml:lang="de">Ist der <code>Shift</code> Parameter <code>External</code>, so wird
										der Wert des externen <code>Shift</code> Buchungsparameters an dieser
										Stelle angewendet.</para>
								</step>
							</procedure>
						</task>
					</section>
					<section xml:id="OtdsProcessProductAllocationPerson">
						<title><phrase xml:id="det_3059" xml:lang="de">Personenallokation(A)</phrase></title>

						<para xml:id="det_3060" xml:lang="de">Die Personenallokation erfolgt gegen die <code>Occupancy</code> Elemente. Das
							heißt, es werden alle Personen gegen die <code>Occupancy</code> Elemente gematcht
							und entsprechend zugeordnet.</para>

						<para xml:id="det_3061" xml:lang="de">Aktuell wird nur eine sehr einfache, vollständige Allokation durchgeführt: Jede
							personenallozierende Komponente muss immer alle Personen allozieren.
							Teilallokationen oder die Verteilung von Personen auf unterschiedliche Komponenten
							oder Unterkomponenten sind in OTDS-1.0 nicht definiert.</para>

						<para xml:id="det_3062" xml:lang="de">Wie die Zeitallokation wird auch die Personenallokation an die Unter- bzw.
							Überkomponenten übertragen:</para>

						<itemizedlist>
							<listitem>
								<para xml:id="det_3063" xml:lang="de">Eine Unterkomponente erhält per Migration dieselbe Personenallokation
									wie ihre personenallozierende Überkomponente.</para>
							</listitem>
							<listitem>
								<para xml:id="det_3064" xml:lang="de">Eine Überkomponente erhält die Vereinigung der Personenallokation ihrer
									Unterkomponenten.</para>
							</listitem>
						</itemizedlist>

						<para xml:id="det_3065" xml:lang="de">Da in OTDS-1.0 die Personenallokation jedoch immer eine vollständige Allokation
							durch eine Komponente ist, bedeuten diese Regeln in OTDS-1.0 nichts anderes, als
							dass allen Komponenten die vollständige Allokation (also alle Personen der
							Reiseanfrage) zugeordnet werden.</para>

						<para xml:id="det_3066" xml:lang="de">Die im Folgenden beschriebene <code>Occupancy</code> Auswertung wird für jedes
								<code>Occupancy</code> Element der personenallozierenden Komponente
							durchgeführt bis eine <code>Occupancy</code> gefunden wurde, welche die
							Anfragebelegung erfolgreich abbilden kann. Wird keine passende
								<code>Occupancy</code> gefunden, schlägt die Personenallokation fehl.</para>

						<bridgehead xml:id="OtdsProcessProductAllocationPersonOccupancy" xml:lang="de">Auswertung der
								<code>Occupancy</code></bridgehead>

						<para xml:id="det_3067" xml:lang="de">Eine <code>Occupancy</code> definiert eine mögliche Belegung als Folge von
							Personen mit bestimmten Alterseinschränkungen. Die einzelnen Reisepersonen werden
							der <code>Occupancy</code> nach absteigender Altersreihenfolge zugeordnet.</para>

						<para xml:id="det_3068" xml:lang="de">Eine zusätzliche Komplexität entsteht durch die Möglichkeit der Angabe von
								<code>MinCount</code> oder <code>MaxCount</code> sowie durch die Möglichkeit,
							dass sich Altersbereiche aufeinanderfolgender Personendefinitionen überschneiden
							dürfen.</para>

						<para xml:id="det_3069" xml:lang="de">Die Überprüfung der <code>Occupancy</code> lässt sich wie folgt
							zusammenfassen:</para>

						
						<bridgehead xml:id="det_3070" xml:lang="de">Definition</bridgehead>
						<para xml:id="det_3071" xml:lang="de">Eine angefragte Belegung erfüllt eine <code>Occupancy</code> Angabe genau
							dann, wenn eine Zuordnung der Anfragepersonen zu <code>Person</code> Elementen
							der <code>Occupancy</code> existiert, welche </para>
						<itemizedlist>
							<listitem>
								<para xml:id="det_3072" xml:lang="de">die Alters- und Anzahleinschränkungen dieser <code>Person</code>
									Elemente erfüllt.</para>
							</listitem>
							<listitem>
								<para xml:id="det_3073" xml:lang="de">keine der unter <code>Exclude</code> angegebenen
									Occupancy-Definitionen erfüllt.</para>
							</listitem>
						</itemizedlist>
						
						

						<para xml:id="det_3074" xml:lang="de">Diese Definition legt <emphasis>keine</emphasis> eindeutige Festlegung von
							Reisepersonen an <code>Person</code> Elemente fest, sie legt nur fest, dass
							mindestens eine solche Zuordnung existiert.</para>

						<para xml:id="det_3075" xml:lang="de">Die Überprüfung kann auf eine einzelne Operation
								<code>ÜberprüfeBelegungszuordnung</code>, die Überprüfung einer
							Belegungszuordnung gegen eine Menge von Personenspezifikationen
								(<code>Person</code> Angaben) zurückgeführt werden.</para>

						<task>
							<title><phrase xml:id="det_3076" xml:lang="de"><code>ÜberprüfeBelegungszuordnung</code> (
									<replaceable>Belegungszuordnung</replaceable>,
									<replaceable>Anfragepersonen</replaceable>,
									<replaceable>Personenspezifikationen</replaceable> )</phrase></title>
							<tasksummary>
								<variablelist>
									<varlistentry>
										<term xml:id="det_3077" xml:lang="de"><replaceable>Belegungszuordnung</replaceable></term>
										<listitem>
											<para xml:id="det_3078" xml:lang="de">Tupel mit derselben Anzahl von Elementen wie es
													<replaceable>Personenspezifikationen</replaceable> gibt.
												Die Summe aller Tupelelemente muss der Anzahl der
													<replaceable>Anfragepersonen</replaceable> entsprechen.
												Das <replaceable>i</replaceable>-te Tupelelement beschreibt
												die Anzahl der <replaceable>i</replaceable>-ten
													<replaceable>Personenspezifikation</replaceable>
												zugeordneten
												<replaceable>Anfragepersonen</replaceable>.</para>
										</listitem>
									</varlistentry>
									<varlistentry>
										<term xml:id="det_3079" xml:lang="de"><replaceable>Anfragepersonen</replaceable></term>
										<listitem>
											<para xml:id="det_3080" xml:lang="de">Liste von Personen der angefragten Belegung, eine Liste von
												Altersangaben absteigend nach Alter sortiert.</para>
										</listitem>
									</varlistentry>
									<varlistentry>
										<term xml:id="det_3081" xml:lang="de"><replaceable>Personenspezifikationen</replaceable></term>
										<listitem>
											<para xml:id="det_3082" xml:lang="de">Eine Liste von Personenspezifikationen (also
													<code>Person</code> Elementen).</para>
										</listitem>
									</varlistentry>
								</variablelist>

								<para xml:id="det_3083" xml:lang="de">Diese Operation überprüft, ob
										<replaceable>Belegungszuordnung</replaceable> eine gültige Zuordnung
									von <replaceable>Anfragepersonen</replaceable> an die
										<replaceable>Personenspezifikationen</replaceable> darstellt. Es
									werden also die Einschränkungen bzgl. Alter
										(<replaceable>MinAge</replaceable> und
										<replaceable>MaxAge</replaceable>) sowie Anzahl
										(<replaceable>Count</replaceable>, <replaceable>MinCount</replaceable>
									und <replaceable>MaxCount</replaceable>) überprüft.</para>
							</tasksummary>
							<procedure>
								<step>
									<para xml:id="det_3084" xml:lang="de">Setze <replaceable>p</replaceable> := 1.
											<replaceable>p</replaceable> ist der Index der aktuell zu
										verarbeitenden Anfrageperson.</para>
								</step>
								<step>
									<para xml:id="det_3085" xml:lang="de">Iteriere <replaceable>i</replaceable> über die Indizes der
											<replaceable>Personenspezifikationen</replaceable>, also von 1 bis
										Anzahl der Elemente in
											<replaceable>Personenspezifikationen</replaceable>:</para>
									<procedure>
										<step>
											<para xml:id="det_3086" xml:lang="de">Setze S := <replaceable>i</replaceable>-tes Element der
													<replaceable>Personenspezifikationen</replaceable>.</para>
										</step>
										<step>
											<para xml:id="det_3087" xml:lang="de">Überprüfe
													<replaceable>Belegungszuordnung<subscript>i</subscript></replaceable>
												gegen <replaceable>S.Count</replaceable>,
													<replaceable>S.MinCount</replaceable> und
													<replaceable>S.MaxCount</replaceable>. Ist
													<replaceable>Belegungszuordnung<subscript>i</subscript></replaceable>
												keine gültige Anzahl für die Spezifikation
													<replaceable>S</replaceable>, so liefere
													<code>Falsch</code> zurück.</para>
										</step>
										<step>
											<para xml:id="det_3088" xml:lang="de">Liegt das Alter einer der
													<replaceable>Anfragepersonen</replaceable> mit Index von
													<replaceable>p</replaceable> bis
													<replaceable>p</replaceable> +
													<replaceable>Belegungszuordnung<subscript>i</subscript></replaceable>
												- 1 außerhalb des Bereiches
													<replaceable>P.MinAge</replaceable> bis
													<replaceable>P.MaxAge</replaceable>, so liefere
													<code>Falsch</code> zurück.</para>
										</step>
										<step>
											<para xml:id="det_3089" xml:lang="de">Setze <replaceable>p</replaceable> :=
													<replaceable>p</replaceable> +
													<replaceable>Belegungszuordnung<subscript>i</subscript></replaceable>.</para>
										</step>
									</procedure>
								</step>
								<step>
									<para xml:id="det_3090" xml:lang="de">Wird dieser Punkt erreicht (die vorherige Schleife also nicht
										vorzeitig abgebrochen), so ist
											<replaceable>Belegungszuordnung</replaceable> gültig. Liefere
											<code>Wahr</code> zurück.</para>
								</step>
							</procedure>
						</task>

						<task>
							<title><phrase xml:id="det_3091" xml:lang="de"><code>ÜberprüfePersonenspezifikationen</code> (
									<replaceable>Anfragepersonen</replaceable>,
									<replaceable>Personenspezifikationen</replaceable> )</phrase></title>
							<tasksummary>
								<para xml:id="det_3092" xml:lang="de">Diese Operation überprüft, ob die
										<replaceable>Anfragepersonen</replaceable> durch die
										<replaceable>Personenspezifikationen</replaceable> abgedeckt werden
									können. Es werden alle möglichen Belegungszuordnungen überprüft bis eine
									Zuordnung gefunden wurde, welche alle Bedingungen der
										<replaceable>Personenspezifikationen</replaceable> erfüllt.</para>

								<para xml:id="det_3093" xml:lang="de">Eine realistische Implementierung wird hier natürlich nicht alle
									Möglichkeiten überprüfen, sondern wird iterativ mit der ersten Person
									beginnen. Die Auswertung eines jeden <code>Person</code> Elementes ergibt
									dann eine Liste möglicher Belegungen, welche im nächsten Schritt
									weiterverarbeitet werden. Dieses effizientere Verfahren ist jedoch zum
									hier angegebenen Algorithmus äquivalent.</para>
							</tasksummary>
							<procedure>
								<step>
									<para xml:id="det_3094" xml:lang="de">Setze <replaceable>N</replaceable> := Anzahl der
											<replaceable>Anfragepersonen</replaceable>.</para>
								</step>
								<step>
									<para xml:id="det_3095" xml:lang="de">Setze <replaceable>M</replaceable> := Anzahl der
											<replaceable>Personenspezifikationen</replaceable>.</para>
								</step>
								<step>
									<para xml:id="det_3096" xml:lang="de">Iteriere <replaceable>D</replaceable> über alle
											<replaceable>M</replaceable>-Tupel mit ganzzahligen positiven
										Elementen <replaceable>D<subscript>i</subscript></replaceable> mit
											<code>Summe</code><replaceable><subscript>i</subscript></replaceable>
										( <replaceable>D<subscript>i</subscript></replaceable> ) ==
											<replaceable>N</replaceable>. Jedes Tupel beschreibt eine
										Zuordnung von <replaceable>Anfragepersonen</replaceable> zu
											<replaceable>Personenspezifikationen</replaceable>. Das
										Tupelelement <replaceable>D<subscript>i</subscript></replaceable> gibt
										an, wie viele <replaceable>Anfragepersonen</replaceable> der
											<replaceable>i</replaceable>-ten
											<replaceable>Personenspezifikation</replaceable> zugeordnet
										werden:</para>
									<procedure>
										<step>
											<para xml:id="det_3097" xml:lang="de">Falls <code>ÜberprüfeBelegungszuordnung</code> (
													<replaceable>D</replaceable>,
													<replaceable>Anfragepersonen</replaceable>,
													<replaceable>Personenspezifikationen</replaceable> ) ==
													<code>Wahr</code>:</para>
											<procedure>
												<step>
													<para xml:id="det_3098" xml:lang="de">Liefere <code>Wahr</code> als Ergebnis
													zurück.</para>
												</step>
											</procedure>
										</step>
									</procedure>
								</step>
								<step>
									<para xml:id="det_3099" xml:lang="de">Liefere <code>Falsch</code> als Ergebnis zurück.</para>
								</step>
							</procedure>
						</task>

						<task>
							<title><phrase xml:id="det_3100" xml:lang="de"><code>ÜberprüfeBelegung</code> (
								<replaceable>Anfragepersonen</replaceable>,
									<replaceable>Occupancy</replaceable> )</phrase></title>
							<tasksummary>
								<para xml:id="det_3101" xml:lang="de">Diese Operation beschreibt die komplette Überprüfung einer
										<code>Occupancy</code>. Zunächst wird überprüft, ob die
										<replaceable>Anfragepersonen</replaceable> den Personenspezifikationen
									der <replaceable>Occupancy</replaceable> zugeordnet werden können. Danach
									werden alle <code>Exclude</code> Spezifikationen überprüft.</para>
							</tasksummary>
							<procedure>
								<step>
									<para xml:id="det_3102" xml:lang="de">Wenn <code>ÜberprüfePersonenspezifikationen</code> (
											<replaceable>Anfragepersonen</replaceable>, { <code>Person</code>
										Elemente der <replaceable>Occupancy</replaceable> } ) ==
											<code>Falsch</code></para>
									<procedure>
										<step>
											<para xml:id="det_3103" xml:lang="de">Liefere <code>Falsch</code> als Ergebnis zurück.</para>
										</step>
									</procedure>
								</step>
								<step>
									<para xml:id="det_3104" xml:lang="de">Iteriere <replaceable>E</replaceable> über alle
										<code>Exclude</code>-Elemente der
										<replaceable>Occupancy</replaceable>:</para>
									<procedure>
										<step>
											<para xml:id="det_3105" xml:lang="de">Falls <code>ÜberprüfePersonenspezifikationen</code> (
													<replaceable>Anfragepersonen</replaceable>, {
													<code>Person</code> Elemente von
													<replaceable>E</replaceable> } ) ==
												<code>Wahr</code>:</para>
											<procedure>
												<step>
													<para xml:id="det_3106" xml:lang="de">Liefere <code>Falsch</code> als Ergebnis
													zurück.</para>
												</step>
											</procedure>
										</step>
									</procedure>
								</step>
								<step>
									<para xml:id="det_3107" xml:lang="de">Liefere <code>Wahr</code> als Ergebnis zurück.</para>
								</step>
							</procedure>
						</task>
					</section>
				</section>
				<section xml:id="OtdsProcessProductFilter">
					<title><phrase xml:id="det_3108" xml:lang="de">Auswertung der Filterbedingungen</phrase></title>

					<para xml:id="det_3109" xml:lang="de">Die Auswertung der Filterbedingungen erfolgt in folgendem Kontext</para>

					<itemizedlist>
						<listitem>
							<para xml:id="det_3110" xml:lang="de">Angebotsinstanz</para>
						</listitem>
						<listitem>
							<para xml:id="det_3111" xml:lang="de">Basisparameter</para>
						</listitem>
						<listitem>
							<para xml:id="det_3112" xml:lang="de">Produkt</para>
						</listitem>
					</itemizedlist>

					<para xml:id="det_3113" xml:lang="de">In jeder Angebotsinstanz werden sämtliche <code>Filter</code> Elemente gesucht. Dies
						sind</para>

					<itemizedlist>
						<listitem>
							<para xml:id="det_3114" xml:lang="de">alle <code>Filter</code> Kinder der den Instanzen (und
								Unterkomponenteninstanzen) zugeordneten Elemente
									<emphasis>ausschließlich</emphasis> aller <code>ProductComponent</code>
								Komponenteninstanzen und ihrer Unterkomponenteninstanzen.</para>
						</listitem>
						<listitem>
							<para xml:id="det_3115" xml:lang="de">alle <code>Filter</code> Bedingungen, welche als Teil der
								Komponenten-Eigenschaften abgelegt wurden</para>
						</listitem>
					</itemizedlist>

					<para xml:id="det_3116" xml:lang="de">Alle diese Bedingungen werden ausgewertet. Ist eine dieser Bedingungen
							<code>False</code>, wird das Angebot verworfen.</para>

				</section>
			</section>
			<section xml:id="OtdsProcessAvailability">
				<title><phrase xml:id="det_3117" xml:lang="de">Verarbeitung der Availabilities</phrase></title>

				<para xml:id="det_3118" xml:lang="de">In diesem Schritt werden sämtliche <code>Availability</code> Elemente ausgewertet. Die
					Verarbeitung erfolgt in 3 großen Schritten: </para>
				<orderedlist>
					<listitem>
						<para xml:id="det_3119" xml:lang="de">Zunächst wird die Verfügbarkeit jeder Komponente/Unterkomponente
							analysiert.</para>
					</listitem>
					<listitem>
						<para xml:id="det_3120" xml:lang="de">Diese werden zu einer Verfügbarkeit der Kompoenten zusammengeführt </para>
					</listitem>
					<listitem>
						<para xml:id="det_3121" xml:lang="de">Die Komponentenverfügbarkeiten wiederum werden dann zu einer Gesamtverfügbarkeit
							zusammengeführt.</para>
					</listitem>
				</orderedlist>
				<para xml:id="det_3122" xml:lang="de"> </para>
				<para xml:id="det_3123" xml:lang="de"><code>Availabilities</code> Elemente finden sich in OTDS an folgenden Stellen: <simplelist>
						<member><code>/Otds/Accommodations/Accommodation/SellingAccom/Unit/SellingUnit/Availabilities</code></member>
						<member><code>/Otds/Accommodations/Accommodation/Availabilities</code></member>
						<member><code>/Otds/Flights/OnewayFlights/OnewayFlight/BookingClass/Availabilities</code></member>
						<member><code>/Otds/Flights/ReturnFlights/ReturnFlight/BookingClass/Availabilities</code></member>
						<member><code>/Otds/Addons/Addon/Service/Availabilities</code></member>
					</simplelist></para>
				<para xml:id="det_3124" xml:lang="de"> </para>

				<para xml:id="det_3125" xml:lang="de">Etwas detaillierter läuft die Verfügbarkeitsprüfung nach folgendem Muster ab:</para>

				<itemizedlist>
					<listitem>
						<para xml:id="det_3126" xml:lang="de">Es werden alle Komponenten mit <code>Availabilities</code> Elementen gesucht.
							Jede dieser Komponenten wird im Folgenden separat verarbeitet.</para>
					</listitem>
					<listitem>
						<para xml:id="det_3127" xml:lang="de">Es werden in allen <code>Availabilities</code> Elementen die
								<code>Condition</code> Elemente ausgewertet. Alle Elemente deren
								<code>Condition</code> nicht erfüllt ist, werden verworfen.</para>
					</listitem>
					<listitem>
						<para xml:id="det_3128" xml:lang="de">Nun werden alle <code>Stay</code>, <code>CheckIn</code> und
								<code>CheckOut</code> Tage der Komponente nacheinander analysiert. Für jeden
							Tag wird das <code>Availability</code> Element gesucht, welches den Tag in seinem
								<code>StartDate</code> bis <code>EndDate</code> Bereich enthält. Aus diesem
							Element wird dann der <code>DayState</code> des Tages extrahiert.</para>
					</listitem>
					<listitem>
						<para xml:id="det_3129" xml:lang="de">Alle gefundenen <code>DayState</code> Elemente werden zu einem gemeinsamen
							Komponentenstatus zusammengefasst. </para>
					</listitem>
					<listitem>
						<para xml:id="det_3130" xml:lang="de">Zuletzt wird der Komponenten-Verfügbarkeitsstatus in die Überkomponenten
							übertragen. Eine Komponente ist dabei nur verfügbar, wenn sie selbst und alle ihre
							Unterkomponenten verfügbar sind. Außerdem gilt falls zu einer Komponente keine
							Verfügbarkeitsinformationen vorliegen, so gilt diese als "Nicht verfügbar". Nach
							diesem Prozess findet sich der Verfügbarkeitsstatus des Angebots in der
								<code>Product</code> Komponente. (sieh dazu auch "Auflistung aller Komponenten
							und Unterkomponenten". <link linkend="GlossarSubComponent">Auflistung der
								OTDS-Unterkomponenten</link>)</para>
					</listitem>
				</itemizedlist>

				<para xml:id="det_3131" xml:lang="de">Dieser Algorithmus wird im Folgenden präziser gefasst. Die Gesamtverfügbarkeit des
					Angebotes wird durch den Aufruf <code>Verfügbarkeit</code> (
						<replaceable>Angebot</replaceable> ) bestimmt. Das Endergebnis der
					Verfügbarkeitsprüfung wird als <code>Availability</code> Wert des Gesamtangebotes (also
					der <code>Product</code> Komponenteninstanz) abgelegt.</para>

				<task>
					<title><phrase xml:id="det_3132" xml:lang="de"><code>Verfügbarkeit</code> ( <replaceable>Instanz</replaceable> )</phrase></title>

					<tasksummary>
						<para xml:id="det_3133" xml:lang="de">Analysiert die Verfügbarkeit einer Instanz und ihrer Unterinstanzen. Eine
							Instanz ist verfügbar, wenn sie selbst verfügbar ist und alle ihre Unterinstanzen
							verfügbar sind.</para>

						<para xml:id="det_3134" xml:lang="de">Diese Funktion liefert den Verfügbarkeitstatus von
								<replaceable>Instanz</replaceable> zurück und setzt den
								<code>Availability</code> Wert von <replaceable>Instanz</replaceable>
							entsprechend.</para>
					</tasksummary>

					<procedure>
						<step>
							<para xml:id="det_3135" xml:lang="de">Rufe <code>Komponentenverfügbarkeit</code> (
									<replaceable>Instanz</replaceable> ) auf</para>
						</step>
						<step>
							<para xml:id="det_3136" xml:lang="de">Setze <replaceable>C</replaceable> := <code>Availability</code> Wert von (
									<replaceable>Instanz</replaceable> )</para>
						</step>
						<step>
							<para xml:id="det_3137" xml:lang="de">Setze <replaceable>S</replaceable> := Menge der berechneten DayState Werte
								in ( <replaceable>Instanz</replaceable> )</para>
						</step>
						<step>
							<para xml:id="det_3138" xml:lang="de">Iteriere <replaceable>I</replaceable> über die Unterinstanzen von
									<replaceable>Instanz</replaceable></para>
							<procedure>
								<step>
									<para xml:id="det_3139" xml:lang="de">Rufe <code>Verfügbarkeit</code> ( <replaceable>I</replaceable> )
										auf</para>
								</step>
								<step>
									<para xml:id="det_3140" xml:lang="de">Setze <replaceable>V</replaceable> := <code>Availability</code> Wert
										von <replaceable>I</replaceable></para>
								</step>
								<step>
									<para xml:id="det_3141" xml:lang="de">Setze <replaceable>C</replaceable> :=
											<code>MinimaleVerfügbarkeit</code> ( <replaceable>C</replaceable>,
											<replaceable>V )</replaceable></para>
								</step>
								<step>
									<para xml:id="det_3142" xml:lang="de">Setze <replaceable>T</replaceable> := Menge der berechneter DayState
										Wert in Instanz</para>
								</step>
								<step>
									<para xml:id="det_3143" xml:lang="de">Setze S := Vereinigung von T und S</para>
								</step>
							</procedure>
						</step>
						<step>
							<para xml:id="det_3144" xml:lang="de">Falls Instanz eine Haupkomponenteninstanz ist und falls nicht zu jedem Stay,
								CheckIn und CheckOut Tag von <replaceable>Instanz</replaceable> ein Element in
									<replaceable>S</replaceable> existiert:</para>
							<procedure>
								<step>
									<para xml:id="det_3145" xml:lang="de"> Setze <replaceable>C</replaceable> := Closed</para>
								</step>
							</procedure>
						</step>

						<step>
							<para xml:id="det_3146" xml:lang="de">Setze den <code>Availability</code> Wert von
									<replaceable>Instanz</replaceable> auf <replaceable>C</replaceable></para>
						</step>
						<step>
							<para xml:id="det_3147" xml:lang="de">Setze die berechneten <code>DayState</code> Werte von
									<replaceable>Instanz</replaceable> auf <replaceable>S</replaceable></para>
						</step>
					</procedure>
				</task>
				<para xml:id="det_3148" xml:lang="de"> </para>
				<task>
					<title><phrase xml:id="det_3149" xml:lang="de"><code>Komponentenverfügbarkeit</code> ( <replaceable>Instanz</replaceable>
						)</phrase></title>

					<tasksummary>
						<para xml:id="det_3150" xml:lang="de">Analysiert die Verfügbarkeit einer Komponenteninstanz anhand der in der
							Komponenteninstanz enthaltenen <code>Availabilities</code> Elemente. Ergebnis ist
							der aggregierte Verfügbarkeitsstatus der Instanz.</para>

						<para xml:id="det_3151" xml:lang="de">Zusätzlich ergänzt diese Funktion die Instanzwerte von
								<replaceable>Instanz</replaceable> um einen <code>DayState</code> je
								<code>CheckIn</code>, <code>CheckOut</code> und <code>Stay</code> Tag.</para>

						<para xml:id="det_3152" xml:lang="de">Der Algorithmus arbeitet in folgenden Schritten:</para>

						<itemizedlist>
							<listitem>
								<para xml:id="det_3153" xml:lang="de">Erzeuge eine Liste der aktiven <code>Availabilities</code> Elemente in
										<replaceable>Instanz</replaceable>.</para>
							</listitem>
							<listitem>
								<para xml:id="det_3154" xml:lang="de">Suche für jeden Tag das relevante <code>DayState</code> Element</para>
							</listitem>
							<listitem>
								<para xml:id="det_3155" xml:lang="de">Ergänze fehlende Angaben in <code>DayState</code> durch die
									entsprechenden Angaben in <code>DefaultDayState</code>. Danach enthält
									jeder <code>DayState</code> einen Tagesstatus (also <code>Open</code>,
										<code>Request</code>, <code>Closed</code>, <code>StopSales</code> oder
										<code>Blacklisted</code>) einen CheckIn-Status (<code>CheckIn</code>
									oder <code>NoCheckIn</code>) und einen CheckOut-Status
										(<code>CheckOut</code> oder <code>NoCheckOut</code>).</para>
							</listitem>
							<listitem>
								<para xml:id="det_3156" xml:lang="de">Erzeuge den zusammengefassten Gesamtstatus</para>
							</listitem>
						</itemizedlist>
					</tasksummary>

					<procedure>
						<step>
							<para xml:id="det_3157" xml:lang="de">Setze <replaceable>A</replaceable> := leere Menge</para>
						</step>
						<step>
							<para xml:id="det_3158" xml:lang="de">Iteriere <replaceable>a</replaceable> über alle <code>Availabilities</code>
								Kinder (aber nicht Enkelkinder !) des der Instanz
									<replaceable>Instanz</replaceable> zugeordneten OTDS Elementes.</para>
							<procedure>
								<step>
									<para xml:id="det_3159" xml:lang="de">Füge <replaceable>a</replaceable> in die Menge
											<replaceable>A</replaceable> ein, wenn die <code>Condition</code>
										in <replaceable>a</replaceable> erfüllt ist.</para>
								</step>
							</procedure>
						</step>
						<step>
							<para xml:id="det_3160" xml:lang="de">Setze <replaceable>C</replaceable> := <code>Open</code></para>
						</step>
						<step>
							<para xml:id="det_3161" xml:lang="de">Iteriere <replaceable>t</replaceable> über alle Tage von
									<replaceable>Instanz</replaceable> (also <code>Stay</code>,
									<code>CheckIn</code> und <code>CheckOut</code> Tage)</para>
							<procedure>
								<step>
									<para xml:id="det_3162" xml:lang="de">Setze <replaceable>L</replaceable> := das
											<emphasis>letzte</emphasis>
										<code>Availability</code> Element in
											<emphasis>document-order</emphasis> aus allen <code>Availability
										</code>Kindern der <code>Availabilities</code>Elemente in
											<replaceable>A</replaceable> für welches gilt:
											<replaceable>Start</replaceable> &lt;=
											<replaceable>t</replaceable> und <replaceable>End</replaceable>
										&gt;= <replaceable>t</replaceable>.</para>
								</step>
								<step>
									<para xml:id="det_3163" xml:lang="de">Falls ein solches Element <replaceable>L</replaceable>
										existiert:</para>
									<procedure>
										<step>
											<para xml:id="det_3164" xml:lang="de">Setze <replaceable>S</replaceable> := Neues
													<code>DayState</code> Element. Inhalt ist eine Kopie des
												Inhaltes des <code>DefaultDayState</code> Kindes von
													<replaceable>L</replaceable></para>
										</step>
										<step>
											<para xml:id="det_3165" xml:lang="de">Setze <replaceable>D</replaceable> :=
													<replaceable>DayState</replaceable> Kind von
													<replaceable>A</replaceable> mit
													<replaceable>Offset</replaceable> ==
													<replaceable>t</replaceable> -
													<replaceable>Start</replaceable>. Es sollte nur ein
												solches Element geben. Existieren mehrere so ist das in
													<emphasis>document-order</emphasis> letzte Element zu
												nehmen.</para>
										</step>
										<step>
											<para xml:id="det_3166" xml:lang="de">Falls ein solches Element <replaceable>D</replaceable>
												existiert:</para>
											<procedure>
												<step>
													<para xml:id="det_3167" xml:lang="de">Falls <replaceable>D</replaceable>
													<emphasis>eines</emphasis> von <code>Open</code>,
													<code>Request</code>, <code>Closed</code>,
													<code>StopSales</code> oder <code>Blacklisted</code>
													enthält, lösche <emphasis>alle</emphasis> diese
													Elemente aus <replaceable>S</replaceable> und ersetze
													sie durch das eine in <replaceable>D</replaceable>
													gefundene Element</para>
												</step>
												<step>
													<para xml:id="det_3168" xml:lang="de">Falls <replaceable>D</replaceable>
													<emphasis>eines</emphasis> von <code>CheckIn</code>
													oder <code>NoCheckIn</code> enthält, lösche
													<emphasis>alle</emphasis> diese Elemente aus
													<replaceable>S</replaceable> und ersetze sie durch das
													eine in <replaceable>D</replaceable> gefundene
													Element</para>
												</step>
												<step>
													<para xml:id="det_3169" xml:lang="de">Falls <replaceable>D</replaceable>
													<emphasis>einse</emphasis> von <code>CheckOut</code>
													oder <code>NoCheckOut</code> enthält, lösche
													<emphasis>alle</emphasis> diese Elemente aus
													<replaceable>S</replaceable> und ersetze sie durch das
													eine in <replaceable>D</replaceable> gefundene
													Element</para>
												</step>
											</procedure>
										</step>
										<step>
											<para xml:id="det_3170" xml:lang="de">Speichere <replaceable>S</replaceable> in
													<replaceable>Instanz</replaceable> als
													<code>DayState</code> zu <replaceable>t</replaceable>
												ab.</para>
										</step>
										<step>
											<para xml:id="det_3171" xml:lang="de">Falls <replaceable>t</replaceable> ein <code>Stay</code> Tag
												ist:</para>
											<procedure>
												<step>
													<para xml:id="det_3172" xml:lang="de">Setze <replaceable>C</replaceable> :=
													<code>MinimaleVerfügbarkeit</code>(<replaceable>C</replaceable>,
													Tagesstatus von <replaceable>S</replaceable>).</para>
												</step>
											</procedure>
										</step>
										<step>
											<para xml:id="det_3173" xml:lang="de">Falls <replaceable>t</replaceable> ein <code>CheckIn</code>
												Tag ist:</para>
											<procedure>
												<step>
													<para xml:id="det_3174" xml:lang="de">Falls <replaceable>S</replaceable>
													<code>NoCheckIn</code> enthält, setze
													<replaceable>C</replaceable> :=
													<code>Closed</code></para>
												</step>
											</procedure>
										</step>
										<step>
											<para xml:id="det_3175" xml:lang="de">Falls <replaceable>t</replaceable> ein <code>CheckOut</code>
												Tag ist:</para>
											<procedure>
												<step>
													<para xml:id="det_3176" xml:lang="de">Falls <replaceable>S</replaceable>
													<code>NoCheckOut</code> enthält, setze
													<replaceable>C</replaceable> :=
													<code>Closed</code></para>
												</step>
											</procedure>
										</step>
									</procedure>
								</step>
							</procedure>
						</step>
						<step>
							<para xml:id="det_3177" xml:lang="de">Speichere <replaceable>C</replaceable> als Verfügbarkeitsstatus in
								Instanz.</para>
						</step>
					</procedure>
				</task>
				<para xml:id="det_3178" xml:lang="de"> </para>
				<task>
					<title><phrase xml:id="det_3179" xml:lang="de"><code>MinimaleVerfügbarkeit</code> ( <replaceable>Status</replaceable> ...
						)</phrase></title>

					<tasksummary>
						<para xml:id="det_3180" xml:lang="de">Diese Funktion fasst mehrere <replaceable>Status</replaceable> Angaben zu einem
							Gesamtstatus zusammen. Der Rückgabewert ist der letzte Wert aus der Liste
								<code>Open</code>, <code>Request</code>, <code>Closed</code>,
								<code>StopSales</code>, <code>Blacklisted</code> (in dieser Reihenfolge)
							welcher in der Liste der Statusinformationen vorkommt.</para>
					</tasksummary>

					<procedure>
						<step>
							<para xml:id="det_3181" xml:lang="de">Setze <replaceable>R</replaceable> := <code>Open</code></para>
						</step>
						<step>
							<para xml:id="det_3182" xml:lang="de">Iteriere <replaceable>s</replaceable> über die Funktionsargumente</para>
							<procedure>
								<step>
									<para xml:id="det_3183" xml:lang="de">Steht <replaceable>s</replaceable> nach <replaceable>R</replaceable>
										in der Liste <code>Open</code>, <code>Request</code>,
											<code>Closed</code>, <code>StopSales</code>,
											<code>Blacklisted</code> so setzte <replaceable>R</replaceable> :=
											<replaceable>s</replaceable></para>
								</step>
							</procedure>
						</step>
						<step>
							<para xml:id="det_3184" xml:lang="de">Liefere <replaceable>R</replaceable> als Ergebnis zurück.</para>
						</step>
					</procedure>
				</task>

			</section>
			<section xml:id="OtdsProcessPriceCalculation">
				<title><phrase xml:id="det_3185" xml:lang="de">Verarbeitung der Preisberechnung</phrase></title>
				<section xml:id="OtdsProcessPriceCalculationOverview">
					<title><phrase xml:id="det_3186" xml:lang="de">Überblick</phrase></title>
					<para xml:id="det_3187" xml:lang="de">An dieser Stelle wird zunächst ein Überblick über die Verarbeitungsschritte gegeben,
						die im Folgenden detaillierter beschrieben werden. Die Preisberechnung für ein Angebot
						folgt grob betrachtet folgendem Ablauf:</para>
					<itemizedlist>
						<listitem>
							<para xml:id="det_3188" xml:lang="de">Die PriceItems aller am Angebot beteiligten Komponenten werden eingesammelt,
								also beispielsweise für ein Pauschalprodukt die PriceItems des Hinflugs, der
								Unterkunft und des Rückflugs. Dies sind sowohl absolute als auch prozentuale
								PriceItem. Für jedes dieser PriceItems kann auf dessen Komponente, in der es
								definiert ist, in der späteren Auswertung zugegriffen werden.</para>
						</listitem>
						<listitem>
							<para xml:id="det_3189" xml:lang="de">Für die Preisberechnung wird eine Kostenmatrix erstellt, in der die Spalten
								und Zeilen die Tage und Personen repräsentieren. Ein Matrixelement der
								Kostenmatrix nennen wir im Folgenden einen Day/Person-Knoten. Ein
								Day/Person-Knoten repräsentiert die Kosten für einen Tag und eine
								Person.</para>
						</listitem>
						<listitem>
							<para xml:id="det_3190" xml:lang="de">In die Kostenmatrix werden Referenzen auf die PriceItems eingetragen. Dabei
								wird die Condition jedes PriceItems erstmalig ausgewertet, um die Gültigkeit
								eines PriceItems generell und auch die Gültigkeit je Day/Person-Knoten zu
								bestimmen. Dabei führt die Auswertung der verschiedenen Impact-Bedingungen
								dazu, dass PriceItems einzelnen Tagen oder Personen also den entsprechenden
								Day/Person-Knoten zugewiesen werden.</para>
						</listitem>
						<listitem>
							<para xml:id="det_3191" xml:lang="de">Absolute PriceItems werden den Werten in DayBase und PersonBase entsprechend
								im Wert anteilig den relevanten Day/Person-Knoten zugewiesen. Es sind nun alle
								gültigen PriceItems auf die Day/Person-Knoten verteilt.</para>
						</listitem>
						<listitem>
							<para xml:id="det_3192" xml:lang="de">Im nächsten Schritt wird die Kombinatorik innerhalb jedes Day/Person-Knotens
								durchgeführt: Es werden die Wechselwirkungen aller PriceItems ausgewertet.
								Wenn PriceItems nicht miteinander kombinierbar sind, werden unkombinierbare
								PriceItems entfernt. Für die Kombinatorik können für jedes PriceItem Codes
								(CombinationCode) und Indizes (CombinationIndex) vergeben werden. Durch Tests
								auf diese Codes und Indexintervalle wird überprüft, mit welchen anderen Codes
								und Indexintervallen das PriceItem verträglich bzw. nicht verträglich ist. Die
								Kombinatorik kann, wenn gewünscht, in mehreren Schichten (Layern) definiert
								werden (mehrere Combinatorics Elemente). Dies dient der Übersichtlichkeit und
								Strukturierung im Falle einer komplexen Kombinatorik. Für
								Datennachlieferungen, Resetpreise und BlockingLevel ist die Kombinatorik in
								mehreren Layern essentiell. Als Ergebnis der Kombinatorik verbleiben alle
								gültigen PriceItems, die untereinander kombinierbar sind.</para>
						</listitem>
						<listitem>
							<para xml:id="det_3193" xml:lang="de">Es ist möglich Bedingungen an den PriceItem zu stellen, die erst nach der
								Kombinatorik ausgewertet werden. Dadurch können PriceItems in der Kombinatorik
								wirken und anschließend entfernt werden.</para>
						</listitem>
						<listitem>
							<para xml:id="det_3194" xml:lang="de">Die prozentualen PriceItem müssen sich immer auf mindestens ein absolutes
								PriceItem beziehen. Die Auswertung der Beziehungen zwischen absoluten und
								prozentualen PriceItems erzeugt Kostenknoten in den Day/Person-Knoten. Ein
								Kostenknoten enthält dabei ein absolutes PriceItem und alle zugeordneten
								prozentualen PriceItems.</para>
						</listitem>
						<listitem>
							<para xml:id="det_3195" xml:lang="de">Bevor die endgültige Preisberechnung erfolgt, können sich Bedingungen noch
								auf die günstigsten oder teuersten Tagespreise und auch Tagespreisanteile
								beziehen (DayImpact/DayPriceIndex). Dies erfolgt typischerweise, um
								prozentuale Auf- oder Abschläge auf diese Tage anzuwenden oder eine
								Dauerreduktion abzubilden. </para>
						</listitem>
						<listitem>
							<para xml:id="det_3196" xml:lang="de">Im letzten Schritt werden die endgültigen Preise errechnet. Dies erfolgt,
								indem zunächst in jedem Day/Person-Knoten alle Kostenknoten berechnet und dann
								summiert werden. Anschließend können daraus die Personenpreise, Tagespreise
								sowie der Gesamtpreis durch Addition der Kosten der Day/Person-Knoten leicht
								ermittelt werden. Nach Auswertung dieses letzten Verarbeitungsschrittes ist
								die Preisberechnung vollständig abgeschlossen.</para>
						</listitem>
					</itemizedlist>
				</section>

				<section xml:id="OtdsProcessPriceCalculationAllokationMatrix">
					<title><phrase xml:id="det_3197" xml:lang="de">Kostenmatrizen der Hauptkomponenten</phrase></title>
					<para xml:id="det_3198" xml:lang="de">Ein Angebot setzt sich typischerweise aus mehreren Komponenten zusammen. Für jede
						Hauptkomponente wird eine eigene Kostenmatrix erzeugt. Zeilen repräsentieren die
						Personen der Reise, Spalten die Tage der Komponente. Der erste Tag der Komponente ist
						vom Termin her nicht notwendigerweise identisch mit dem ersten Tag des
						Angebotes.</para>
					<figure>
						<title><phrase xml:id="det_3199" xml:lang="de">Kostenmatrix einer Hauptkomponente</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/AllocationMatrixPriceCalculation.png" format="PNG" contentwidth="70%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3200" xml:lang="de">Kostenmatrix einer Hauptkomponente</para>
							</textobject>
							<caption>
								<para xml:id="det_3201" xml:lang="de"> </para>
							</caption>
						</mediaobject>
					</figure>
					<para xml:id="det_3202" xml:lang="de">Die Kostenmatrizen der Hauptkomponenten werden in der weiteren Verarbeitung genutzt,
						um Referenzen auf relevante PriceItems jeder Komponente aufzunehmen und zu
						verarbeiten. Relevant sind dabei absolute PriceItems, wenn sie sich über das Attribut
							<code>Source</code> von <code>DayBase</code> auf diese Komponente beziehen und
						relative PriceItems, wenn sie sich über das Attribut <code>Component</code> der
						Elemente <code>ApplyTo</code>, <code>ApplyToAll</code> oder <code>NotApplyTo</code>
						auf diese Komponente beziehen.</para>
					<para xml:id="det_3203" xml:lang="de">Der <code>DayType</code> wird für jeden Tag hinterlegt. Im Normalfall ist das für
						den ersten Tag <code>DayType=CheckIn</code>, für den letzten Tag
							<code>DayType=CheckOut</code> und für alle Tage außer dem letzten Tag
							<code>DayType=Stay</code> (siehe <link linkend="OtdsProcessProductAllocationTime">Zeitallokation</link>).</para>
					<para xml:id="det_3204" xml:lang="de">Hinweis: Es ist eine zwar eine eingängige aber auch vereinfachte Darstellung, eine
						Kostenmatrix pro Hauptkomponente zu verwenden. Stattdessen ist es tatsächlich besser,
						mit <emphasis role="italic">einer Kostenmatrix für alle Komponenten</emphasis> zu
						arbeiten, statt mit einzelnen Kostenmatrizen für jede Hauptkomponente. Der Grund
						hierfür liegt vorwiegend darin, dass bei der <code>Condition</code> der PriceItems
						durch das Attribut <code>Source</code> nicht immer einzelne Hauptkomponenten
						adressiert werden. Mit <code>Source=Product</code> kann beispielsweise das ganze
						Angebot adressiert werden. Weiterhin können durch <code>Source</code> nicht nur
						Hauptkomponenten, sondern auch Unterkomponenten adressiert werden. Die hier
						beschriebene Verteilung der PriceItems auf mehrere Kostenmatrizen deckt nicht alle
						Möglichkeiten der Adressierung ab, die <code>Source</code> bietet (siehe <link linkend="OtdsProcessSource">Attribut <code>Source</code></link>). Weiterhin ist
						die Auswertung des Attributes <code>DayType</code> schwierig bei der Verwendung
						mehrerer Kostenmatrizen (siehe <link linkend="OtdsProcessDayType">Attribut
								<code>DayType</code></link>).</para>
					<para xml:id="det_3205" xml:lang="de"/>
				</section>

				<section xml:id="OtdsProcessPriceCalculationConditions">
					<title><phrase xml:id="det_3206" xml:lang="de">Auswertung der <code>Condition</code> eines PriceItems</phrase></title>
					<para xml:id="det_3207" xml:lang="de">Jedes PriceItem kann eine Bedingung (Element <code>Condition</code>) enthalten,
						unter denen das PriceItem gültig ist. Eine Bedingung kann sich aus Teilbedingungen
						zusammensetzen, die über die booleschen Operatoren <code>And</code>, <code>Or</code>,
							<code>Not</code> und <code>Imply .. Then</code> miteinander verknüpft werden. </para>
					<para xml:id="det_3208" xml:lang="de">Grundsätzlich ist zwischen zwei verschiedenen Arten von Bedingungen zu
						unterscheiden:</para>
					<itemizedlist>
						<listitem>
							<para xml:id="det_3209" xml:lang="de">Bedingungen, die für die ganze PriceItem gültig sind. Ist die Bedingung
								erfüllt, ist das PriceItem für alle Tage und Personen der Komponente gültig.
								Ist die Bedingung hingegen nicht erfüllt, wird das PriceItem verworfen.</para>
						</listitem>
						<listitem>
							<para xml:id="det_3210" xml:lang="de">Bedingungen, die für einzelne Personen der Reise oder einzelne Tage der
								Komponente gültig sind. Diese Bedingungen werden Impact-Bedingungen genannt.
								Das PriceItem ist dann für die Personen und Tage wirksam, an denen die
								Bedingung erfüllt ist.</para>
						</listitem>
					</itemizedlist>
					<bridgehead xml:id="det_3211" xml:lang="de">Impact-Bedingungen</bridgehead>
					<para xml:id="det_3212" xml:lang="de">Es gibt drei Arten von Impact-Bedingungen:</para>
					<itemizedlist>
						<listitem>
							<para xml:id="det_3213" xml:lang="de"><code>DayImpact</code>-Bedingungen, die sich auf einzelne Tage der
								Komponente beziehen</para>
						</listitem>
						<listitem>
							<para xml:id="det_3214" xml:lang="de"><code>PersonImpact</code>-Bedingungen, die sich auf einzelne Personen der
								Reise beziehen</para>
						</listitem>
						<listitem>
							<para xml:id="det_3215" xml:lang="de"><code>Impact</code>-Bedingungen, die sich auf einzelne Tage der Komponente
								und/oder auf einzelne Personen der Reise beziehen</para>
						</listitem>
					</itemizedlist>
					<para xml:id="det_3216" xml:lang="de">Bei <code>Impact</code>-Bedingungen kann zusätzlich definiert werden, zu welchem
						Zeitpunkt diese innerhalb der Preisberechnung wirksam werden. Es gibt bezogen auf die
						Preiskombinatorik drei verschiedene Auswertungszeitpunkte, die im Attribut
							<code>ImpactExecutionOrder</code> angegeben werden:</para>
					<itemizedlist>
						<listitem>
							<para xml:id="det_3217" xml:lang="de"><code>BeforeCombinatorics</code>: Die Bedingung wird ausgewertet, bevor die
								Preiskombinatorik erfolgt. Dies ist der Standardwert.</para>
						</listitem>
						<listitem>
							<para xml:id="det_3218" xml:lang="de"><code>AfterCombinatorics</code>: Die Bedingung wird ausgewertet, nachdem die
								Preiskombinatorik erfolgt ist.</para>
						</listitem>
						<listitem>
							<para xml:id="det_3219" xml:lang="de"><code>Last</code>: Die Bedingung wird nach den AfterCombinatorics
								unmittelbar vor der endgültigen Preisberechnung ausgewertet.</para>
						</listitem>
					</itemizedlist>
					<para xml:id="det_3220" xml:lang="de"/>
					<para xml:id="det_3221" xml:lang="de">Falls eine Teilbedingung zu einem späteren Zeitpunkt ausgewertet werden soll, kommt
						bei der Auswertung der Gesamt-Condition immer die "dreiwertige Auswertung-Logik" zum
						Tragen (Siehe <xref linkend="OtdsProcessConditionsThreeway"/>).</para>
					<itemizedlist>
						<listitem>
							<para xml:id="det_3222" xml:lang="de">Zum Auswertungszeitpunkt <code>BeforeCombinatorics</code> werden alle
								Impact-Teilbedingungen mit
									<code>ImpactExecutionOrder=AfterCombinatorics</code> oder
									<code>ImpactExecutionOrder=Last</code> mit der dreiwertigen
								Auswertungs-Logik verarbeitet.</para>
						</listitem>
						<listitem>
							<para xml:id="det_3223" xml:lang="de">Zum Auswertungszeitpunkt <code>AfterCombinatorics</code> werden alle
								Impact-Teilbedingungen mit <code>ImpactExecutionOrder=Last</code> mit der
								dreiwertigen Auswertungs-Logik verarbeitet.</para>

						</listitem>
					</itemizedlist>
					<para xml:id="det_3224" xml:lang="de">Die Auswertung der <code>Condition</code> zu den verschiedenen Zeitpunkten bekommt
						im Folgenden jeweils einen eigenen kurzen Abschnitt.</para>
				</section>

				<section xml:id="OtdsProcessPriceCalculationConditionsBeforeCombinatorics">
					<title><phrase xml:id="det_3225" xml:lang="de">PriceItems der Kostenmatrix zuweisen</phrase></title>
					<para xml:id="det_3226" xml:lang="de">Als erster Verarbeitungsschritt der Preiskombinatorik werden die PriceItems aller
						Komponenten auf die Kostenmatrix verteilt. Dabei werden absolute PriceItems auf
						einzelne Day/Person-Knoten verteilt, so dass diese im Sinne einer einfachen
						Darstellung der weiteren Verarbeitung jeweils für nur eine Person und einen Tag
						gelten. Ist das absolute PriceItem für mehrere Tage oder Personen gültig, wird das
						PriceItem im Wert anteilig den Day/Person-Knoten zugewiesen.</para>
					<para xml:id="det_3227" xml:lang="de">Bei der Aufteilung und Zuweisung der PriceItems zu den Day/Person-Knoten wird für
						jedes PriceItems dessen Quellkomponente mit hinterlegt. Diese Information wird später
						benötigt, um die Beziehungen zwischen prozentualen und absoluten PriceItems
						herzustellen.</para>
					<para xml:id="det_3228" xml:lang="de">Für jedes PriceItem werden folgende Verarbeitungsschritte durchgeführt:</para>
					<itemizedlist>
						<listitem>
							<para xml:id="det_3229" xml:lang="de">Es wird bestimmt, auf welche Komponente und welche Tage sich das PriceItem
								bezieht. Standardmäßig ist dies die Komponente, in der das PriceItem definiert
								ist (und alle Stay Tage dieser Komponente). Es ist aber auch möglich, explizit
								eine andere Komponente anzugeben. Diese Angabe erfolgt bei absoluten
								PriceItems durch die Attribute <code>Source</code> und
									<code>IntervalType</code> des Elements <code>Absolute/DayBase</code>
								(Siehe <xref linkend="OtdsProcessIntervalType"/>). </para>
							<para xml:id="det_3230" xml:lang="de">Bei relativen PriceItems gibt es an dieser Stelle keine Einschränkung auf
								eine bestimmte Komponente oder bestimmte Tage.</para>
						</listitem>
						<listitem>
							<para xml:id="det_3231" xml:lang="de">Die Auswertung der <code>Condition</code> des PriceItems führt zu einer
								Aussage bzgl. der Gültigkeit des PriceItems. Falls die <code>Condition</code>
								auch Impact-Anteile enthält, so erhält man zusätzlich auch noch eine Aussage
								über die Gültikkeit bzgl. einzelner Day/Person-Knoten der Kostenmatrix. </para>
							<para xml:id="det_3232" xml:lang="de">Die einzelnen Impact-Anteile haben folgende Auswirkungen:</para>
							<itemizedlist>
								<listitem>
									<para xml:id="det_3233" xml:lang="de"><code>DayImpact</code>: Einzelne Tage sind relevant, also bestimmte
										Spalten in der Kostenmatrix.</para>
								</listitem>
								<listitem>
									<para xml:id="det_3234" xml:lang="de"><code>PersonImpact</code>: Einzelne Personen sind relevant, also
										bestimmte Zeilen in der Kostenmatrix.</para>
								</listitem>
								<listitem>
									<para xml:id="det_3235" xml:lang="de"><code>Impact / ConditionalTags</code>: Einzelne Day/Person-Knoten
										der Kostenmatrix sind relevant.</para>
								</listitem>
							</itemizedlist>
						</listitem>
						<listitem>
							<para xml:id="det_3236" xml:lang="de">Falls das PriceItem keine <code>Condition</code> hat, ist das PriceItem für
								alle zur Komponente passenden Day/Person-Knoten relevant.</para>
						</listitem>
						<listitem>
							<para xml:id="det_3237" xml:lang="de">Falls das PriceItem einen absoluten Preisbestandteil definiert: </para>
							<itemizedlist>
								<listitem>
									<para xml:id="det_3238" xml:lang="de">Ein PriceItem mit einem absoluten Preis wird anteilig einzelnen
										Tagen und Personen in der Kostenmatrix zugewiesen. Für diesen
										Zweck wird der absolute Preis wie folgt aufgeteilt: </para>
									<para xml:id="det_3239" xml:lang="de">Die Angabe <code>DayBase</code> bestimmt auf welche Tagesbasis
										(Tagespreis, Einmalpreis, 7-Tagespreis) sich der Preis bezieht.
										Das Attribut <code>IntervalType</code> bestimmt dabei, auf welche
										Tage sich der Preis bezieht (nur Stay-Tage oder alle Tage zwischen
										CheckIn und CheckOut). Als Ergebnis der Auswertung von DayBase
										wird der Preis wird durch <code>DayBase</code> geteilt, um einen
										Preisbruchteil pro Tag zu erhalten. Ist <code>DayBase=1</code>
										angegeben, ist also ein Tagespreis angegeben. Ist
											<code>DayBase=x</code> angegeben, wird der Preis auf alle
										durch <code>IntervalType</code> definierten Tage verteilt. Der
										Preis wird also durch die Anzahl X dieser Tage geteilt. X soll
										dabei ausdrücken dass jeweils durch die variable Länge der
										betrachteten Reise geteilt wird. Bei X findet also eine
										Gleichverteilung des Preises über die gesamte Dauer statt. </para>
									<para xml:id="det_3240" xml:lang="de">Die Angabe <code>PersonBase</code> bestimmt, auf wie viele
										Personen sich der Preis bezieht. Ist <code>PersonBase=1</code>
										angegeben, ist also ein Personenpreis angegeben. Ist
											<code>PersonBase=x</code> angegeben, ist ein Preis für alle
										Personen angegeben und der Preis wird durch alle Personen der
										Reise geteilt.</para>
									<para xml:id="det_3241" xml:lang="de">Durch Auswertung von <code>DayBase</code> und
											<code>PersonBase</code> ist der anteilige absolute Preis pro
										Kostenknoten definiert.</para>
								</listitem>
								<listitem>
									<para xml:id="det_3242" xml:lang="de">Jetzt werden die Preisanteile auf die relevanten
										Day/Person-Knoten der Kostenmatrix verteilt. Jeder relevante
										Day/Person-Knoten erhält den über <code>DayBase</code> und
											<code>PersonBase</code> berechneten Preisanteil des absolutes
										PriceItems. </para>
								</listitem>
							</itemizedlist>
						</listitem>
						<listitem>
							<para xml:id="det_3243" xml:lang="de">Falls das PriceItem einen relativen Preisbestandteil definiert:</para> 
							<itemizedlist>
								<listitem>
									<para xml:id="det_3244" xml:lang="de">Das PriceItem wird jedem durch die Auswertung von
											<code>Condition</code> relevanten Day/Person-Knoten aller
										Komponenten-Kostenmatrizen zugewiesen. </para>
									<para xml:id="det_3245" xml:lang="de">Ein relatives PriceItem muss sich immer auf ein absolutes
										PriceItem beziehen, um wirksam zu sein. Dieser Bezug wird in
										dieser Darstellung erst nach Auswertung der Kombinatorik
										hergestellt. Dies ist der Grund für die Verteilung des relativen
										PriceItems auf alle relevanten Day/Person-Knoten. </para>
								</listitem>
							</itemizedlist>
						</listitem>
					</itemizedlist>
					<bridgehead xml:id="det_3246" xml:lang="de">Beispiele</bridgehead>
					<para xml:id="det_3247" xml:lang="de">Um den obigen Abschnitt besser verständlich zu machen folgen einige typische
						Beispiele, welche die Verteilung von verschiedenen PriceItems auf eine
						Komponenten-Kostenmatrix einer am Angebot beteiligten Komponente verdeutlichen
						sollen.</para>
					<para xml:id="det_3248" xml:lang="de"/>


					<figure>
						<title><phrase xml:id="det_3249" xml:lang="de">Zuweisung eines PriceItems zur Komponenten-Kostenmatrix ohne
							Impact-Condition</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/AssignPriceItem2AllocationMatrix_1.png" format="PNG" contentwidth="70%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3250" xml:lang="de">Zuweisung eines PriceItems zur Komponenten-Kostenmatrix ohne
									Impact-Condition</para>
							</textobject>
						</mediaobject>
					</figure>
					<para xml:id="det_3251" xml:lang="de">Betrachten wir ein absolutes PriceItem PI1, das eine <code>Condition</code> ohne
						Impact-Anteile hat. Diese Bedingung ist erfüllt. </para>
					<para xml:id="det_3252" xml:lang="de">PI1 wird auf alle Day/Person-Knoten der Komponenten-Kostenmatrix verteilt, die den
							<code>DayType=Stay</code> haben. Dem letzten Tag mit <code>DayType=CheckOut</code>
						wird PI1 nicht zugewiesen, weil <code>IntervalType=Stay</code> die Standardvorgabe für
						den Typ des Tages ist.</para>
					<para xml:id="det_3253" xml:lang="de"/>

					<figure>
						<title><phrase xml:id="det_3254" xml:lang="de">Zuweisung eines PriceItems zur Komponenten-Kostenmatrix mit
							DayImpact-Condition</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/AssignPriceItem2AllocationMatrix_2.png" format="PNG" contentwidth="70%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3255" xml:lang="de">Zuweisung eines PriceItems zur Komponenten-Kostenmatrix mit
									DayImpact-Condition</para>
							</textobject>
						</mediaobject>
					</figure>
					<para xml:id="det_3256" xml:lang="de">Betrachten wir ein relatives PriceItem PI2, das eine <code>Condition</code> mit
						einem DayImpact-Anteil hat. Diese Bedingung ist erfüllt für den ersten Tag der
						Reise.</para>
					<para xml:id="det_3257" xml:lang="de">PI2 wird auf alle Day/Person-Knoten des ersten Tages der Reise verteilt, also der
						ersten Spalte der Komponenten-Kostenmatrix.</para>
					<para xml:id="det_3258" xml:lang="de"/>

					<figure>
						<title><phrase xml:id="det_3259" xml:lang="de">Zuweisung eines PriceItems zur Komponenten-Kostenmatrix mit
							PersonImpact-Condition</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/AssignPriceItem2AllocationMatrix_3.png" format="PNG" contentwidth="70%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3260" xml:lang="de">Zuweisung eines PriceItems zur Komponenten-Kostenmatrix mit
									PersonImpact-Condition</para>
							</textobject>
						</mediaobject>
					</figure>
					<para xml:id="det_3261" xml:lang="de">Betrachten wir ein absolutes PriceItem PI3, das eine <code>Condition</code> mit
						einem <code>PersonImpact</code>-Anteile hat. Diese Bedingung ist erfüllt für die
						jüngste Person. <code>IntervalType=Stay</code> ist explizit angegeben.</para>
					<para xml:id="det_3262" xml:lang="de">PI3 wird auf alle Day/Person-Knoten der jüngsten Person verteilt, also der letzten
						Zeile der Komponenten-Kostenmatrix. Dem letzten Tag wird PI3 nicht zugewiesen, weil
						der Typ des Tages nicht passt.</para>
					<para xml:id="det_3263" xml:lang="de"/>

					<figure>
						<title><phrase xml:id="det_3264" xml:lang="de">Zuweisung eines PriceItems zur Komponenten-Kostenmatrix mit Day- und
							PersonImpact-Condition</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/AssignPriceItem2AllocationMatrix_4.png" format="PNG" contentwidth="70%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3265" xml:lang="de">Zuweisung eines PriceItems zur Komponenten-Kostenmatrix mit Day- und
									PersonImpact-Condition</para>
							</textobject>
						</mediaobject>
					</figure>
					<para xml:id="det_3266" xml:lang="de">Betrachten wir ein relatives PriceItem PI4, das eine <code>Condition</code> mit
						einem DayImpact- und einem <code>PersonImpact</code>-Anteil hat. Diese Bedingung ist
						für den letzten Stay-Tag und die ältesten beiden Vollzahler erfüllt. </para>
					<para xml:id="det_3267" xml:lang="de">PI4 wird auf zwei Day/Person-Knoten in der Komponenten-Kostenmatrix verteilt.</para>
					<para xml:id="det_3268" xml:lang="de"/>

					<figure>
						<title><phrase xml:id="det_3269" xml:lang="de">Zuweisung eines PriceItems zur Komponenten-Kostenmatrix mit
							Impact/ConditionalTag-Condition</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/AssignPriceItem2AllocationMatrix_5.png" format="PNG" contentwidth="70%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3270" xml:lang="de">Zuweisung eines PriceItems zur Komponenten-Kostenmatrix mit
									Impact/ConditionalTag-Condition</para>
							</textobject>
						</mediaobject>
					</figure>
					<para xml:id="det_3271" xml:lang="de">Betrachten wir ein relatives PriceItem PI5, das eine <code>Condition</code> mit
						einem Impact/ConditionalTag-Anteil hat. Diese Bedingung ist für jeden
						Day/Person-Knoten erfüllt, der dieses ConditionalTag enthält.</para>
					<para xml:id="det_3272" xml:lang="de">PI5 wird auf drei Day/Person-Knoten in der Komponenten-Kostenmatrix verteilt.</para>
					<para xml:id="det_3273" xml:lang="de"/>

					<figure>
						<title><phrase xml:id="det_3274" xml:lang="de">Alle zugewiesenen und verteilten PriceItems im Überblick</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/AssignPriceItem2AllocationMatrix_Sum.png" format="PNG" contentwidth="70%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3275" xml:lang="de">Alle zugewiesenen und verteilten PriceItems im Überblick</para>
							</textobject>
						</mediaobject>
					</figure>
					<para xml:id="det_3276" xml:lang="de">Nach der Verteilung der PriceItems PI1, PI2, PI3, PI4 und PI5 sind die
						Day/Person-Knoten der Komponenten-Kostenmatrix so gefüllt, wie das Schaubild zeigt. In
						gleicher Weise werden PriceItems für die anderen Komponenten auf deren Kostenmatrizen
						verteilt. Die PriceItems eines Day/Person-Knotens haben durch die Verteilung keinen
						Bezug mehr zu einem anderen Tag oder einer anderen Person.</para>
					<para xml:id="det_3277" xml:lang="de"/>

					<figure>
						<title><phrase xml:id="det_3278" xml:lang="de">Aufteilung von absoluten PriceItems auf Komponenten-Kostenmatrix</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/AssignAbsolutePriceItem2AllocationMatrix.png" format="PNG" contentwidth="80%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3279" xml:lang="de">Aufteilung von absoluten PriceItems auf eine
									Komponenten-Kostenmatrix</para>
							</textobject>
						</mediaobject>
					</figure>
					<para xml:id="det_3280" xml:lang="de">Dieses Schaubild verdeutlicht die Aufteilung von absoluten PriceItems auf die
						Komponenten-Kostenmatrix bei unterschiedlichen Angaben für <code>DayBase</code> und
							<code>PersonBase</code>. Eine Aufteilung erfolgt immer auf alle referenzierten
						Tage, in diesem Beispiel alle Tage mit <code>DayType=Stay</code>, was derNormalfall
						und auch die Standardeinstellung für <code>IntervalType</code> ist.</para>
					<itemizedlist>
						<listitem>
							<para xml:id="det_3281" xml:lang="de">PI1: <code>DayBase=1</code> und <code>PersonBase=1</code>: Der absolute
								Preis von 100€ wird jeden Tag und für jede Person fällig.</para>
						</listitem>
						<listitem>
							<para xml:id="det_3282" xml:lang="de">PI2: <code>DayBase=x</code> und <code>PersonBase=1</code>: Der absolute
								Preis von 100€ wird für jede Person fällig. Jeden Tag sind das 20€ pro
								Person.</para>
						</listitem>
						<listitem>
							<para xml:id="det_3283" xml:lang="de">PI3: <code>DayBase=7</code> und <code>PersonBase=1</code>: Der absolute
								Preis von 100€ wird einmal wöchentlich für jede Person fällig. Bei 5 Tagen
								sind das pro Person also weniger als 100€, und zwar 5/7 * 100€ = 71.43€. Pro
								Tag und Person ergeben sich 14.28€.</para>
						</listitem>
						<listitem>
							<para xml:id="det_3284" xml:lang="de">PI4: <code>DayBase=x</code> und <code>PersonBase=x</code>: Der absolute
								Preis von 100€ wird einmal pro Reise für alle Personen fällig. Das ergibt pro
								Tag und Person einen Anteil von 100€ / 5 Tage / 3 Personen = 6.67€.</para>
						</listitem>
						<listitem>
							<para xml:id="det_3285" xml:lang="de">PI5: <code>DayBase=1</code> und <code>PersonBase=1</code> mit
								Impact-Bedingung für den ersten Tag. Der pro Tag und Person fällige Preis von
								100€ wird nur auf die relevanten Day/Person-Knoten verteilt.</para>
						</listitem>
						<listitem>
							<para xml:id="det_3286" xml:lang="de">PI6: <code>DayBase=x</code> und <code>PersonBase=x</code> mit
								Impact-Bedingung für die älteste Person. Die Impact-Bedingung hat Auswirkung
								auf die relevanten Day/Person-Knoten, nicht jedoch auf die Berechnung des
								Anteils, der pro Day/Person-Knoten fällig wird. Daher wird wie bei PI4 für die
								relevanten Day/Person-Knoten ein Preis von 6.67€ fällig.</para>
						</listitem>
					</itemizedlist>
					<para xml:id="det_3287" xml:lang="de"/>
				</section>

				<section xml:id="OtdsProcessPriceCalculationCostsMatrix">
					<title><phrase xml:id="det_3288" xml:lang="de">Bildung der Kostenmatrix</phrase></title>
					<para xml:id="det_3289" xml:lang="de">Die PriceItems aller relevanten PriceItems sind nun auf die Kostenmatrizen aller am
						Abgebot beteiligten Hauptkomponenten verteilt. Für die weitere Preiskombinatorik ist
						es im Sinne einer einfachen Darstellung sinnvoll, die einzelnen Matrizen zu einer
						gesamten Kostenmatrix zusammenzuführen. Dies erleichtert es, Kompatibilitäten zwischen
						PriceItems verschiedener Komponenten zu beschreiben bzw. auszuwerten.</para>
					<para xml:id="det_3290" xml:lang="de">Es wird eine Kostenmatrix erzeugt mit der gleichen Struktur wie die einzelnen
						Hauptkomponenten-Kostenmatrizen. Die Kostenmatrix besteht also ebenfalls aus
						Day/Person-Knoten, Zeilen repräsentieren die Personen der Reise und Spalten die Tage
						der Reise. Der Unterschied liegt in den Tagen: Die Kostenmatrix erhält für jeden Tag
						der gesamten Reise eine Spalte. Die erste Spalte repräsentiert den ersten Tag der
						Reise, gleichbedeutend mit dem ersten Tag der ersten Komponente. Die letzte Spalte
						repräsentiert den letzten Tag der Reise, gleichbedeutend mit dem letzten Tag der
						letzten Komponente.</para>
					<para xml:id="det_3291" xml:lang="de">Die PriceItems aller Hauptkomponenten-Kostenmatrizen werden in die
						Gesamt-Kostenmatrix übertragen. Die Zuweisung der Tage erfolgt dabei über Termine des
						Angebotes.</para>
					<bridgehead xml:id="det_3292" xml:lang="de">Beispiel</bridgehead>
					<figure>
						<title><phrase xml:id="det_3293" xml:lang="de">Bildung der Kostenmatrix</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/AllocationMatrices2CostsMatrix.png" format="PNG" contentwidth="70%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3294" xml:lang="de">Bildung der Kostenmatrix</para>
							</textobject>
							<caption>
								<para xml:id="det_3295" xml:lang="de"> </para>
							</caption>
						</mediaobject>
					</figure>
					<para xml:id="det_3296" xml:lang="de">Die Kostenmatrizen der Hauptkomponenten Hinflug, Unterbringung und Rückflug werden
						in eine gesamte Kostenmatrix überführt. Die Kostenmatrix für Accommodation beginnt
						dabei ab Tag 2 der gesamten Kostenmatrix, die Kostenmatrix für den Rückflug fällt auf
						den letzten Tag. </para>
					<para xml:id="det_3297" xml:lang="de">Hinweis: Die Kostenmatrix eines Übernachflugs hat keine PriceItems am zweiten Tag,
						das ist an dieser Stelle aber unerheblich.</para>
					<para xml:id="det_3298" xml:lang="de"/>
				</section>

				<section xml:id="OtdsProcessPriceCalculationCombinatorics">
					<title><phrase xml:id="det_3299" xml:lang="de">Auswertung der Combinatorics</phrase></title>
					<bridgehead xml:id="det_3300" xml:lang="de">Überblick und Motivation</bridgehead>
					<para xml:id="det_3301" xml:lang="de">Die Kombinatorik von PriceItems dient dazu, Abhängigkeiten zwischen PriceItems zu
						beschreiben und auszuwerten. Für diesen Zweck kann jedes PriceItem Codes oder Indizes
						erhalten sowie Bedingungen zur Kombinierbarkeit mit den Codes und Indizes anderer
						PriceItems. Diese Angaben werden in dem Element Combinatorics definiert. Dieses
						optionale Element kann mehrfach für jedes PriceItem definiert werden. Alle
						Combinatorics-Elemente werden bei der Kombinatorik der PriceItems systematisch
						ausgewertet. Ziel der Kombinatorik ist es, inkompatible PriceItems zu entfernen, so
						dass diese für die Bildung des Gesamtpreises entfallen. Die Vorgehensweise beim
						Überprüfen der gegenseitigen Abhängigkeiten der PriceItems wird in diesem Kapitel
						erläutert.</para>
					<bridgehead xml:id="det_3302" xml:lang="de">Voraussetzungen</bridgehead>
					<para xml:id="det_3303" xml:lang="de">Die relevanten PriceItems die in die Preiskombinatorik einfliessen, wurden bereits
						in den vorangehenden Schritten auf die Day/Person-Knoten der Kostenmatrix verteilt.
						Jetzt wird die Kombinatorik in jedem Day/Person-Knoten unabhängig von anderen
						Day/Person-Knoten ausgewertet, d.h. die Kombinatorik zweier Day/Person-Knoten
						beeinflusst sich gegenseitig nicht. Dieser Abschnitt beschränkt sich daher auf die
						Beschreibung der Kombinatorik eines Day/Person-Knotens. Die vollständige
						Preiskombinatorik führt die hier beschriebene Kombinatorik für jeden Day/Person-Knoten
						der Kostenmatrix durch.</para>
					<para xml:id="det_3304" xml:lang="de">Die Kombinatorik zweier PriceItems wird durch unterschiedliche Parameter und
						Aktionen definiert. In diesem Abschnitt werden die Bedeutung und Verwendung der drei
						Parameter</para>
					<itemizedlist>
						<listitem>
							<para xml:id="det_3305" xml:lang="de"><code>LayerLevel</code></para>
						</listitem>
						<listitem>
							<para xml:id="det_3306" xml:lang="de"><code>LayerName</code></para>
						</listitem>
						<listitem>
							<para xml:id="det_3307" xml:lang="de"><code>CombinationLevel</code></para>
						</listitem>
					</itemizedlist>
					<para xml:id="det_3308" xml:lang="de">erläutert.</para>
					<para xml:id="det_3309" xml:lang="de">Die anderen Parameter der Preiskombinatorik</para>
					<itemizedlist>
						<listitem>
							<para xml:id="det_3310" xml:lang="de"><code>CombinationCode</code></para>
						</listitem>
						<listitem>
							<para xml:id="det_3311" xml:lang="de"><code>CombinationIndex</code></para>
						</listitem>
						<listitem>
							<para xml:id="det_3312" xml:lang="de"><code>CombinableWhen</code> und untergeordnete Bedingungen</para>
						</listitem>
						<listitem>
							<para xml:id="det_3313" xml:lang="de"><code>ExcludePriceItemClasses</code></para>
						</listitem>
					</itemizedlist>
					<para xml:id="det_3314" xml:lang="de">steuern einen atomaren Test auf Kompatibilität zwischen zwei PriceItems. Die
						Bedeutung und Wirkung dieser vier Parameter wird im nächsten Kapitel erläutert. Im
						nachfolgenden Beispiel werden diese vier Parameter zusammengefasst als "Test" zwischen
						zwei PriceItems, bei dem sich die beiden am Test beteiligten PriceItems als
						kombinierbar oder unkombinierbar herausstellen.</para>
					<bridgehead xml:id="det_3315" xml:lang="de">Definition der Kombinatorik</bridgehead>
					<para xml:id="det_3316" xml:lang="de">Die Kombinatorik lässt sich anhand eines einfachen Modelles definieren:</para>
					<orderedlist>
						<listitem>
							<para xml:id="det_3317" xml:lang="de">Alle <code>PriceItem</code> Elemente nehmen an der Kombinatorik in jedem
								definierten Layer teil.</para>
						</listitem>
						<listitem>
							<para xml:id="det_3318" xml:lang="de">Definiert ein <code>PriceItem</code> in einem Layer keine Kombinatorik (es
								existiert kein <code>Combinatorics</code> Element für diesen Layer), so erhält
								dieses <code>PriceItem</code> in diesem Layer den Standardwert
									<emphasis>positive-infinity</emphasis> als
								<code>CombinationLevel</code>.</para>
						</listitem>
						<listitem>
							<para xml:id="det_3319" xml:lang="de">Ein <code>PriceItem</code> ist <emphasis>kombinatorisch aktiv</emphasis>
								wenn es in allen Layern <emphasis>kombinatorisch aktiv</emphasis> ist.</para>
						</listitem>
						<listitem>
							<para xml:id="det_3320" xml:lang="de">Ein <code>PriceItem</code>
								<emphasis>A</emphasis> ist <emphasis>in einem Layer kombinatorisch
									aktiv</emphasis> wenn</para>
							<itemizedlist>
								<listitem>
									<para xml:id="det_3321" xml:lang="de">es in allen <emphasis>kleineren</emphasis> Layern
											<emphasis>kombinatorisch aktiv</emphasis> ist</para>
								</listitem>
								<listitem>
									<para xml:id="det_3322" xml:lang="de">im selben Layer kein <code>PriceItem</code>
										<emphasis>B</emphasis> mit <emphasis>kleinerem</emphasis>
										<code>CombinatoionLevel</code>
										<emphasis>kombinatorisch aktiv</emphasis> ist mit welchem es nicht
											<emphasis>kombinierbar</emphasis> ist.</para>
								</listitem>
							</itemizedlist>
						</listitem>
						<listitem>
							<para xml:id="det_3323" xml:lang="de">Ein <code>PriceItem</code>
								<emphasis>A</emphasis> ist mit einem <code>PriceItem</code>
								<emphasis>B</emphasis>
								<emphasis>kombinierbar</emphasis>, wenn</para>
							<itemizedlist>
								<listitem>
									<para xml:id="det_3324" xml:lang="de"><emphasis>A</emphasis> die <code>CombinableWhen</code> Bedingung von
											<emphasis>B</emphasis> erfüllt.</para>
								</listitem>
								<listitem>
									<para xml:id="det_3325" xml:lang="de"><emphasis>B</emphasis> die <code>CombinableWhen</code> Bedingung von
											<emphasis>A</emphasis> erfüllt.</para>
								</listitem>
								<listitem>
									<para xml:id="det_3326" xml:lang="de"><emphasis>A</emphasis> nicht durch eine
											<code>ExcludePriceItemClasses</code> in <emphasis>B</emphasis>
										deaktiviert wird.</para>
								</listitem>
							</itemizedlist>
						</listitem>
					</orderedlist>

					<bridgehead xml:id="det_3327" xml:lang="de">Beispiel 1 zur Preiskombinatorik</bridgehead>
					<para xml:id="det_3328" xml:lang="de">In der weiteren Beschreibung werden Abkürzungen für häufig verwendete Begriffe
						verwendet:</para>
					<itemizedlist>
						<listitem>
							<para xml:id="det_3329" xml:lang="de">LL: LayerLevel</para>
						</listitem>
						<listitem>
							<para xml:id="det_3330" xml:lang="de">CL: CombinationLevel</para>
						</listitem>
						<listitem>
							<para xml:id="det_3331" xml:lang="de">PI(s): PriceItem(s)</para>
						</listitem>
						<listitem>
							<para xml:id="det_3332" xml:lang="de">LN: LayerName</para>
						</listitem>
						<listitem>
							<para xml:id="det_3333" xml:lang="de">CE(s): Combinatorics-Element(s)</para>
						</listitem>
					</itemizedlist>
					<para xml:id="det_3334" xml:lang="de">Die Begriffe <emphasis role="italic">kompatibel</emphasis> und <emphasis role="italic">kombinierbar</emphasis> werden im Folgenden synonym
						verwendet.</para>
					<para xml:id="det_3335" xml:lang="de">Das folgende Beispiel zeigt die Abarbeitung der Kombinatorik von sieben
						verschiedenen PIs in einem Day/Person-Knoten. Diese PIs liegen in dem
						Day/Person-Knoten ohne eine Beziehung zueinander vor. Die PIs haben je 1-3 CEs. Die
						CEs beschreiben alle für die Kombinatorik notwendigen Eigenschaften - alle anderen
						Eigenschaften dieser PIs, beispielsweise ob es sich um absolute Beträge oder
						prozentuale Aufschläge handelt, spielen in der Kombinatorik keine Rolle. </para>
					<para xml:id="det_3336" xml:lang="de">Aus den PriceItems wird zunächst eine Kombinatoriktabelle erzeugt, die in der
						weiteren Darstellung der Kombinatorik verwendet wird.</para>
					<figure>
						<title><phrase xml:id="det_3337" xml:lang="de">Kombinatorik-Tabelle eines Day/Person-Knotens</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/Price-Combinatoric-Step00a.png" format="PNG" contentwidth="90%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3338" xml:lang="de">Kombinatorik-Tabelle eines Day/Person-Knotens</para>
							</textobject>
							<caption>
								<para xml:id="det_3339" xml:lang="de"> </para>
							</caption>
						</mediaobject>
					</figure>
					<para xml:id="det_3340" xml:lang="de">Die CEs aller PIs werden zeilenweise in eine Kombinatoriktabelle übertragen und nach
						LL, LN und CL sortiert. LL und LN werden als Attribute in jedem CE definiert, CL als
						untergeordnetes Element von CE. Die Tabelle enthält in diesem Beispiel insgesamt 13
						Zeilen für die 13 CEs der beteiligten 7 PIs. Wie das Schaubild zeigt, sind insgesamt 5
						verschiedene Layer auf 3 LL abzuarbeiten.</para>
					<para xml:id="det_3341" xml:lang="de">Das Beispiel arbeitet die Kombinatorik iterativ ab. Dies führt zum gleichen Ergebnis
						wie die obige rekursive Definition der Kombinatorik. </para>
					<para xml:id="det_3342" xml:lang="de">Es gelten folgende Vorgaben für die Verarbeitungsschritte der Kombinatorik:</para>

					<itemizedlist>
						<listitem>
							<para xml:id="det_3343" xml:lang="de">Ein Layer beeinflusst nur Layer mit höherem LL. Layer mit gleichem LL (und
								unterschiedlichem LN) beeinflussen sich gegenseitig nicht.</para>
						</listitem>
						<listitem>
							<para xml:id="det_3344" xml:lang="de">Innerhalb eines Layers beeinflusst ein CE nur CEs mit höherem CL. CEs mit
								gleichem CL beeinflussen sich gegenseitig nicht.</para>
						</listitem>
						<listitem>
							<para xml:id="det_3345" xml:lang="de">Sind zwei CEs innerhalb eines Layers nicht miteinander kombinierbar, wird
								das CE mit dem größeren CL gelöscht. Die Löschung erfolgt beim nächsten
								Wechsel des CL, so dass das unkombinierbare CE noch an der Kombinatorik im
								gleichen Layer bei gleichem CL teilnimmt. Zusätzlich werden alle anderen CEs
								des PIs mit dem inkompatiblen CE in Layern mit höherem LL als inkompatibel
								markiert.</para>
						</listitem>
						<listitem>
							<para xml:id="det_3346" xml:lang="de">Beim Wechsel des LayerLevels werden als inkompatibel markierte CEs in Layern
								mit höherem LL entfernt.</para>
						</listitem>
						<listitem>
							<para xml:id="det_3347" xml:lang="de">Die Abarbeitung der CEs erfolgt von kleinem zu großem LL und von kleinem zu
								großem CL. Durch die Sortierung der CEs in der Kombinatoriktabelle erfolgt die
								Abarbeitung also von oben nach unten.</para>
						</listitem>
					</itemizedlist>
					<para xml:id="det_3348" xml:lang="de">Im ersten Beispiel sind folgende CEs nicht miteinander kombinierbar:</para>
					<itemizedlist>
						<listitem>
							<para xml:id="det_3349" xml:lang="de">CE1a und CE4a</para>
						</listitem>
						<listitem>
							<para xml:id="det_3350" xml:lang="de">CE1b und CE3b</para>
						</listitem>
						<listitem>
							<para xml:id="det_3351" xml:lang="de">CE3a und CE6b</para>
						</listitem>
						<listitem>
							<para xml:id="det_3352" xml:lang="de">CE5a und CE6a</para>
						</listitem>
					</itemizedlist>
					<para xml:id="det_3353" xml:lang="de">Das erste Beispiel beschränkt sich bei Angaben zur Kombnierbarkeit auf
							<code>CombinableWhen</code>. Das zweite Beispiel verwendet zusätzlich
							<code>ExcludePriceItemClasses</code>.</para>
					<para xml:id="det_3354" xml:lang="de">In den Schaubildern zu den einzelnen Verarbeitungsschritten haben die Farben
						folgende Bedeutung:</para>
					<itemizedlist>
						<listitem>
							<para xml:id="det_3355" xml:lang="de">dunkelgrün: Aktuell betrachtetes CE</para>
						</listitem>
						<listitem>
							<para xml:id="det_3356" xml:lang="de">hellgrün: CE, dessen Kombinierbarkeit mit aktuellem CE überprüft wird</para>
						</listitem>
						<listitem>
							<para xml:id="det_3357" xml:lang="de">gelb: Als unkombinierbar markiertes CE</para>
						</listitem>
						<listitem>
							<para xml:id="det_3358" xml:lang="de">rot: Aus der Kombinatorik gelöschtes CE</para>
						</listitem>
					</itemizedlist>
					<para xml:id="det_3359" xml:lang="de">Die Abarbeitung der Kombinatorik beginnt in der ersten Zeile der Kombinatoriktabelle
						mit dem ersten CE. Die einzelnen Schritte der Kombinatorik werden im Detail in den
						folgenden Schaubildern erläutert. </para>
					<bridgehead xml:id="det_3360" xml:lang="de">Beispiel 1, Schritt 1: CE1a auf Kombinierbarkeit testen </bridgehead>
					<figure>
						<title><phrase xml:id="det_3361" xml:lang="de">PriceItem Kombinatorik Schritt 1</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/Price-Combinatoric-Step01.png" format="PNG" contentdepth="70%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3362" xml:lang="de">PriceItem Kombinatorik Schritt 1</para>
							</textobject>
							<caption>
								<para xml:id="det_3363" xml:lang="de"> </para>
							</caption>
						</mediaobject>
					</figure>
					<para xml:id="det_3364" xml:lang="de">Das PriceItem PI1 (dunkelgrün) mit den Kombinatorikeigenschaften LL=1 und CL=1 soll
						auf Kombinierbarkeit mit anderen PIs getestet. Dafür werden alle anderen CEs mit
						gleichem LL und kleinerem CL bestimmt, wobei der LN gleich sein muss. Das resultiert
						aus den beiden Vorgaben, dass Layer mit unterschiedlichem Namen sich gegenseitig nicht
						beeinflussen und CEs mit gleichem LL und gleichem CL sich gegenseitig nicht
						beeinflussen. </para>
					<para xml:id="det_3365" xml:lang="de">Es gibt auf dem aktuellen Layer keine anderen CEs mit diesen Eigenschaften.</para>
					<bridgehead xml:id="det_3366" xml:lang="de">Beispiel 1, Schritt 2: CE2a auf Kombinierbarkeit testen </bridgehead>

					<figure>
						<title><phrase xml:id="det_3367" xml:lang="de">PriceItem Kombinatorik Schritt 2</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/Price-Combinatoric-Step02.png" format="PNG" contentdepth="50%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3368" xml:lang="de">PriceItem Kombinatorik Schritt 2</para>
							</textobject>
							<caption>
								<para xml:id="det_3369" xml:lang="de"> </para>
							</caption>
						</mediaobject>
					</figure>
					<para xml:id="det_3370" xml:lang="de">Wie bei Schritt 1 gibt es wieder keine CEs mit kleinerem CL im gleichen Layer. Es
						findet daher auch hier wiederum kein Test auf Kombinierbarkeit statt.</para>
					<bridgehead xml:id="det_3371" xml:lang="de">Beispiel 1, Schritt 3: Wechsel des CL</bridgehead>
					<figure>
						<title><phrase xml:id="det_3372" xml:lang="de">PriceItem Kombinatorik Schritt 3</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/Price-Combinatoric-Step03.png" format="PNG" contentdepth="50%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3373" xml:lang="de">PriceItem Kombinatorik Schritt 3</para>
							</textobject>
							<caption>
								<para xml:id="det_3374" xml:lang="de"> </para>
							</caption>
						</mediaobject>
					</figure>
					<para xml:id="det_3375" xml:lang="de">Alle CEs auf mit CL=1 sind abgearbeitet. Es findet ein Wechsel zum nächst höheren CL
						auf dem gleichen Layer statt. An dieser Stelle hat der Wechsel keine weiteren
						Auswirkungen, da bisher keine CEs als unkombinierbar markiert wurden.</para>
					<bridgehead xml:id="det_3376" xml:lang="de">Beispiel 1, Schritt 4: CE4a auf Kombinierbarkeit testen </bridgehead>
					<figure>
						<title><phrase xml:id="det_3377" xml:lang="de">PriceItem Kombinatorik Schritt 4</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/Price-Combinatoric-Step04.png" format="PNG" contentdepth="50%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3378" xml:lang="de">PriceItem Kombinatorik Schritt 4</para>
							</textobject>
							<caption>
								<para xml:id="det_3379" xml:lang="de"> </para>
							</caption>
						</mediaobject>
					</figure>
					<para xml:id="det_3380" xml:lang="de">Nun wird CE4a betrachtet. Die beiden CEs CE1a und CE2a befinden sich auf dem
						gleichen Layer (LL und LN sind gleich) und das CL ist kleiner. Diese beiden CEs werden
						auf Kombinierbarkeit mit CE4a getestet. CE4a und CE2a sind kombinierbar, CE4a und CE1a
						sind nicht kombinierbar. Der Test auf Kombinierbarkeit erfolgt immer beidseitig, d.h.
						es werden die Kombinierbarkeitsbedingungen beider CEs ausgewertet. Bei
						Nichtkombinierbarkeit zweier CEs wird das CE mit größerem CL aus der Kombinatorik
						entfernt. Dies erfolgt beim nächsten Wechsel des CL. CE4a wird zunächst als
						unkombinierbar markiert und nimmt noch weiter an der Kombinatorik teil.</para>
					<para xml:id="det_3381" xml:lang="de">Weiterhin werden alle anderen CEs des PriceItems mit dem unkombinierbaren CE
						ebenfalles als unkombinierbar markiert, sofern diese in Layern mit einem höherem
						LayerLevel liegen. Dies betrifft CE4b. Auch dieses CE nimmt weiter an der Kombinatorik
						teil, bis die Löschung beim nächsten Wechsel der LL erfolgt.</para>

					<bridgehead xml:id="det_3382" xml:lang="de">Beispiel 1, Schritt 5: CE6a auf Kombinierbarkeit testen</bridgehead>
					<figure>
						<title><phrase xml:id="det_3383" xml:lang="de">PriceItem Kombinatorik Schritt 5</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/Price-Combinatoric-Step05.png" format="PNG" contentdepth="50%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3384" xml:lang="de">PriceItem Kombinatorik Schritt 5</para>
							</textobject>
							<caption>
								<para xml:id="det_3385" xml:lang="de"> </para>
							</caption>
						</mediaobject>
					</figure>
					<para xml:id="det_3386" xml:lang="de">Es wird CE6a betrachtet und auf Kombinierbarkeit mit CE1a und CE2a überprüft, deren
						CL kleiner ist als das CL von CE6b. Beide Tests auf Kombinierbarkeit sind
						positiv.</para>

					<bridgehead xml:id="det_3387" xml:lang="de">Beispiel 1, Schritt 6: Wechsel des CL</bridgehead>
					<figure>
						<title><phrase xml:id="det_3388" xml:lang="de">PriceItem Kombinatorik Schritt 6</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/Price-Combinatoric-Step06.png" format="PNG" contentdepth="60%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3389" xml:lang="de">PriceItem Kombinatorik Schritt 6</para>
							</textobject>
							<caption>
								<para xml:id="det_3390" xml:lang="de"> </para>
							</caption>
						</mediaobject>
					</figure>
					<para xml:id="det_3391" xml:lang="de">Die beiden CEs CE4a und CE6b auf demselben Layer und gleichem CL sind abgearbeitet.
						Es findet ein Wechsel des CL statt. Bei einem Wechsel des CL werden als unkombinierbar
						markierte CEs auf demselben Layer gelöscht. CE4a nimmt nicht mehr weiter an der
						Kombinatorik teil.</para>

					<bridgehead xml:id="det_3392" xml:lang="de">Beispiel 1, Schritt 7: CE5a auf Kombinierbarkeit testen</bridgehead>
					<figure>
						<title><phrase xml:id="det_3393" xml:lang="de">PriceItem Kombinatorik Schritt 7</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/Price-Combinatoric-Step07.png" format="PNG" contentdepth="70%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3394" xml:lang="de">PriceItem Kombinatorik Schritt 7</para>
							</textobject>
							<caption>
								<para xml:id="det_3395" xml:lang="de"> </para>
							</caption>
						</mediaobject>
					</figure>
					<para xml:id="det_3396" xml:lang="de">Betrachtet wird CE5a. Die drei CEs CE1a, CE2a und CE6a sind relevant für den Test an
						die Kombinierbarkeit, da diese auf dem gleichen Layer liegen und ein kleiners CL
						haben. Dabei erweisen sich CE5a und CE6a als nicht kombinierbar. CE5a von PI5 wird als
						nicht kombinierbar markiert. CE5b und CE5c werden ebenfalls markiert, da es die
						anderen CEs von PI5 auf Layern mit höherem LayerLevel sind.</para>

					<bridgehead xml:id="det_3397" xml:lang="de">Beispiel 1, Schritt 8: Wechsel des CL</bridgehead>
					<figure>
						<title><phrase xml:id="det_3398" xml:lang="de">PriceItem Kombinatorik Schritt 8</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/Price-Combinatoric-Step08.png" format="PNG" contentdepth="60%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3399" xml:lang="de">PriceItem Kombinatorik Schritt 8</para>
							</textobject>
							<caption>
								<para xml:id="det_3400" xml:lang="de"> </para>
							</caption>
						</mediaobject>
					</figure>
					<para xml:id="det_3401" xml:lang="de">Das Ende des Layers mit den Eigenschaften LL=1 und LN=A ist erreicht. Es erfolgt
						hier automatisch auch ein Wechsel des CL. Das markierte CE5a wird gelöscht. Damit ist
						die Abarbeitung des ersten Layers abgeschlossen.</para>

					<bridgehead xml:id="det_3402" xml:lang="de">Beispiel 1, Schritt 9: CE3a auf Kombinierbarkeit testen</bridgehead>
					<figure>
						<title><phrase xml:id="det_3403" xml:lang="de">PriceItem Kombinatorik Schritt 9</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/Price-Combinatoric-Step09.png" format="PNG" contentdepth="50%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3404" xml:lang="de">PriceItem Kombinatorik Schritt 9</para>
							</textobject>
							<caption>
								<para xml:id="det_3405" xml:lang="de"> </para>
							</caption>
						</mediaobject>
					</figure>
					<para xml:id="det_3406" xml:lang="de">Betrachtet wird CE3a. Es gibt keine für einen Kombinierbarkeitstest relevanten
						CEs.</para>

					<bridgehead xml:id="det_3407" xml:lang="de">Beispiel 1, Schritt 10: Wechsel des CL</bridgehead>
					<figure>
						<title><phrase xml:id="det_3408" xml:lang="de">PriceItem Kombinatorik Schritt 10</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/Price-Combinatoric-Step10.png" format="PNG" contentdepth="50%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3409" xml:lang="de">PriceItem Kombinatorik Schritt 10</para>
							</textobject>
							<caption>
								<para xml:id="det_3410" xml:lang="de"> </para>
							</caption>
						</mediaobject>
					</figure>
					<para xml:id="det_3411" xml:lang="de">Es erfolgt wieder ein Wechsel des CL ohne Auswirkungen.</para>

					<bridgehead xml:id="det_3412" xml:lang="de">Beispiel 1, Schritt 11: CE6b auf Kombinierbarkeit testen</bridgehead>
					<figure>
						<title><phrase xml:id="det_3413" xml:lang="de">PriceItem Kombinatorik Schritt 11</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/Price-Combinatoric-Step11.png" format="PNG" contentdepth="50%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3414" xml:lang="de">PriceItem Kombinatorik Schritt 11</para>
							</textobject>
							<caption>
								<para xml:id="det_3415" xml:lang="de"> </para>
							</caption>
						</mediaobject>
					</figure>
					<para xml:id="det_3416" xml:lang="de">Betrachtet wird CE6b. Relevant für einen beidseitigen Kompatibilitätstest ist CE3a.
						CE3a und CE6b sind nicht kombinierbar. Daher wird CE6b als unkombinierbar
						markiert.</para>

					<bridgehead xml:id="det_3417" xml:lang="de">Beispiel 1, Schritt 12: Wechsel des CL</bridgehead>
					<figure>
						<title><phrase xml:id="det_3418" xml:lang="de">PriceItem Kombinatorik Schritt 12</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/Price-Combinatoric-Step12.png" format="PNG" contentdepth="50%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3419" xml:lang="de">PriceItem Kombinatorik Schritt 12</para>
							</textobject>
							<caption>
								<para xml:id="det_3420" xml:lang="de"> </para>
							</caption>
						</mediaobject>
					</figure>
					<para xml:id="det_3421" xml:lang="de">Der aktuelle Layer mit LL=1 und LN=B ist abgearbeitet. Es erfolgt damit auch ein
						Wechsel des CL. CE6b wird daher aus der Kombinatorik entfernt.</para>

					<bridgehead xml:id="det_3422" xml:lang="de">Beispiel 1, Schritt 13: Wechsel des LL</bridgehead>
					<figure>
						<title><phrase xml:id="det_3423" xml:lang="de">PriceItem Kombinatorik Schritt 13</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/Price-Combinatoric-Step13.png" format="PNG" contentdepth="50%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3424" xml:lang="de">PriceItem Kombinatorik Schritt 13</para>
							</textobject>
							<caption>
								<para xml:id="det_3425" xml:lang="de"> </para>
							</caption>
						</mediaobject>
					</figure>
					<para xml:id="det_3426" xml:lang="de">Es erfolgt ein Wechsel des LL von 1 nach 2. Bei einem LL-Wechsel werden alle als
						unkombinierbar markierten CEs in Layern mit höherem LayerLevel entfernt. Das betrifft
						CE5b, CE4b und CE5c. Diese CEs spielen in der weiteren Kombinatorik keine Rolle
						mehr.</para>

					<bridgehead xml:id="det_3427" xml:lang="de">Beispiel 1, Schritt 14: CE3b auf Kombinierbarkeit testen</bridgehead>
					<figure>
						<title><phrase xml:id="det_3428" xml:lang="de">PriceItem Kombinatorik Schritt 14</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/Price-Combinatoric-Step14.png" format="PNG" contentdepth="50%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3429" xml:lang="de">PriceItem Kombinatorik Schritt 14</para>
							</textobject>
							<caption>
								<para xml:id="det_3430" xml:lang="de"> </para>
							</caption>
						</mediaobject>
					</figure>
					<para xml:id="det_3431" xml:lang="de">Betrachtet wird CE3b. Es gibt keine relevanten CEs für einen Test auf
						Kombinierbarkeit.</para>

					<bridgehead xml:id="det_3432" xml:lang="de">Beispiel 1, Schritt 15: Wechsel des CL</bridgehead>
					<figure>
						<title><phrase xml:id="det_3433" xml:lang="de">PriceItem Kombinatorik Schritt 15</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/Price-Combinatoric-Step15.png" format="PNG" contentdepth="50%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3434" xml:lang="de">PriceItem Kombinatorik Schritt 15</para>
							</textobject>
							<caption>
								<para xml:id="det_3435" xml:lang="de"> </para>
							</caption>
						</mediaobject>
					</figure>
					<para xml:id="det_3436" xml:lang="de">Es erfolgt ein Wechsel des CL ohne Auswirkungen.</para>

					<bridgehead xml:id="det_3437" xml:lang="de">Beispiel 1, Schritt 16: CE1b auf Kombinierbarkeit testen</bridgehead>
					<figure>
						<title><phrase xml:id="det_3438" xml:lang="de">PriceItem Kombinatorik Schritt 16</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/Price-Combinatoric-Step16.png" format="PNG" contentdepth="50%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3439" xml:lang="de">PriceItem Kombinatorik Schritt 16</para>
							</textobject>
							<caption>
								<para xml:id="det_3440" xml:lang="de"> </para>
							</caption>
						</mediaobject>
					</figure>
					<para xml:id="det_3441" xml:lang="de">Betrachtet wird CE1b. CE1b wird auf Kombinierbarkeit mit CE3b geprüft. Da CE1b und
						CE3b nicht kombinierbar sind, wird CE1b markiert. Das andere CE von PI1 (CE1a) wird
						nicht markiert, weil es in einem Layer mit niedrigerem LL liegt. Dies resultiert aus
						der Vorgabe, dass Layer mit gleichem oder niedrigerem LayerLevel nicht beeinflusst
						werden.</para>

					<bridgehead xml:id="det_3442" xml:lang="de">Beispiel 1, Schritt 17: Wechsel von CL und LL</bridgehead>
					<figure>
						<title><phrase xml:id="det_3443" xml:lang="de">PriceItem Kombinatorik Schritt 17</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/Price-Combinatoric-Step17.png" format="PNG" contentdepth="50%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3444" xml:lang="de">PriceItem Kombinatorik Schritt 17</para>
							</textobject>
							<caption>
								<para xml:id="det_3445" xml:lang="de"> </para>
							</caption>
						</mediaobject>
					</figure>
					<para xml:id="det_3446" xml:lang="de">Es folgt ein Wechsel des CL, bei dem CE1b gelöscht wird.</para>
					<para xml:id="det_3447" xml:lang="de">Es erfolgen weitere Wechsel von CL und ein Wechsel des LL ohne Auswirkungen.</para>

					<bridgehead xml:id="det_3448" xml:lang="de">Beispiel 1, Schritt 18: CE7a auf Kombinierbarkeit testen</bridgehead>
					<figure>
						<title><phrase xml:id="det_3449" xml:lang="de">PriceItem Kombinatorik Schritt 18</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/Price-Combinatoric-Step18.png" format="PNG" contentdepth="50%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3450" xml:lang="de">PriceItem Kombinatorik Schritt 18</para>
							</textobject>
							<caption>
								<para xml:id="det_3451" xml:lang="de"> </para>
							</caption>
						</mediaobject>
					</figure>
					<para xml:id="det_3452" xml:lang="de">Es wird noch CE7a betrachtet ohne Tests auf Kombinierbarkeit auszuführen. Der letzte
						Wechsel des CL am Ende der Kombinatorik hat keine Auswirkungen.</para>

					<bridgehead xml:id="det_3453" xml:lang="de">Beispiel 1, Schritt 19: Ergebnis der Kombinatorik</bridgehead>
					<figure>
						<title><phrase xml:id="det_3454" xml:lang="de">PriceItem Kombinatorik Schritt 19</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/Price-Combinatoric-Step19.png" format="PNG" contentdepth="50%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3455" xml:lang="de">PriceItem Kombinatorik Schritt 19</para>
							</textobject>
							<caption>
								<para xml:id="det_3456" xml:lang="de"> </para>
							</caption>
						</mediaobject>
					</figure>
					<para xml:id="det_3457" xml:lang="de">Es sind alle CEs der Reihe nach abgearbeitet worden. Es werden nun die verbleibenden
						kombinierbaren PriceItems bestimmt. Dies sind alle PriceItems, deren CEs kombinierbar
						sind. Alle PriceItems entfallen als unkombinierbar, von deren CEs mindestens eines
						nicht kombinierbar ist und gelöscht wurde.</para>
					<para xml:id="det_3458" xml:lang="de">Es verbleiben also PI2, PI3 und PI7 als kombinierbar. Als unkombinierbar verworfen
						werden PI1, PI4, PI5 und PI6. </para>
					<para xml:id="det_3459" xml:lang="de">PI1 und PI6 haben zwar je ein kombinierbares CE, aber ebenfalls auch ein nicht
						kombinierbares CE und sind daher selbst unkombinierbar.</para>
					<para xml:id="det_3460" xml:lang="de"/>
					<bridgehead xml:id="det_3461" xml:lang="de">Beispiel 2 zur Preiskombinatorik</bridgehead>
					<para xml:id="det_3462" xml:lang="de">Das nachfolgende Beispiel zur Preiskombinatorik verwendet zur Beschreibung der
						Kombinierbarkeiten zwischen PriceItems zusätzlich zu <code>CombinableWhen</code> auch
							<code>ExcludePriceItemsClasses</code>. Dadurch wird die Verarbeitung etwas
						komplexer, da sich <code>ExcludePriceItemsClasses</code> im Gegensatz zu
							<code>CombinableWhen</code> auf Klassennamen von PriceItems bezieht und nicht auf
						CEs anderer PriceItems im gleichen Layer.</para>
					<para xml:id="det_3463" xml:lang="de">Aus den PIs wird zunächst wieder eine Kombinatoriktabelle erzeugt, wie dies bereits
						in Beispiel 1 erläutert wurde. Zusätzlich werden alle PIs, die über den Klassennamen
						im gleichen Layer durch ein CE referenziert werden und kein CE in diesem Layer haben
						in den Layer mit aufgenommen. Diese zusätzlichen Einträge erfolgen jeweils am Ende des
						Layers. Dies ermöglicht es, <code>ExcludePriceItemsClasses</code> nach dem
						beschriebenen gleichen Schema korrekt zu verarbeiten.</para>
					<figure>
						<title><phrase xml:id="det_3464" xml:lang="de">Kombinatorik-Tabelle eines Day/Person-Knotens</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/Price-Combinatoric-ExcludePriceItemClasses-Step00a.png" format="PNG" contentwidth="90%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3465" xml:lang="de">Kombinatorik-Tabelle eines Day/Person-Knotens</para>
							</textobject>
							<caption>
								<para xml:id="det_3466" xml:lang="de"> </para>
							</caption>
						</mediaobject>
					</figure>
					<para xml:id="det_3467" xml:lang="de">Im Schaubild sind die zwei schraffierten Zeilen zu beachten: Weder PI3 noch PI5
						haben in diesem Layer (LL=1, LN=A) ein CE. PI3 und PI5 werden jedoch von CE1a und CE4a
						durch <code>ExcludePriceItemClasses</code> referenziert und werden daher zur
						Verarbeitung von <code>ExcludePriceItemClasses</code> mit in diesem Layer
						aufgenommen.</para>
					<para xml:id="det_3468" xml:lang="de">PI2 und PI4 werden in diesem Layer ebenfalls von CE1a referenziert, aber diese
						beiden PIs haben je ein CE auf demselben Layer, so dass diese PIs nicht in den Layer
						aufgenommen werden müssen.</para>
					<para xml:id="det_3469" xml:lang="de">Im zweiten Beispiel sind folgende Kombinierbarkeiten zwischen CEs definiert:</para>
					<itemizedlist>
						<listitem>
							<para xml:id="det_3470" xml:lang="de">CE1a hat <code>ExcludePriceItemClasses</code>="PI2 PI4 PI5"</para>
						</listitem>
						<listitem>
							<para xml:id="det_3471" xml:lang="de">CE2a hat <code>CombinableWhen</code>: nicht kombinierbar mit CE4a </para>
						</listitem>
						<listitem>
							<para xml:id="det_3472" xml:lang="de">CE4a hat <code>ExcludePriceItemClasses</code>="PI3" </para>
						</listitem>
						<listitem>
							<para xml:id="det_3473" xml:lang="de">Alle anderen CEs sind miteinander kombinierbar.</para>
						</listitem>
					</itemizedlist>
					<para xml:id="det_3474" xml:lang="de">Es ist hilfreich, das erste Beispiel verstanden zu haben, da im zweiten Beispiel
						einige Verarbeitungsschritte verkürzt erläutert oder gar übersprungen werden, wie
						beispielsweise der Wechsel des CL ohne Auswirkungen auf CEs.</para>
					<bridgehead xml:id="det_3475" xml:lang="de">Beispiel 2, Schritt 1: Beginn der Kombinatorik</bridgehead>
					<figure>
						<title><phrase xml:id="det_3476" xml:lang="de">PriceItem Kombinatorik Schritt 1</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/Price-Combinatoric-ExcludePriceItemClasses-Step01.png" format="PNG" contentdepth="50%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3477" xml:lang="de">PriceItem Kombinatorik Schritt 1</para>
							</textobject>
							<caption>
								<para xml:id="det_3478" xml:lang="de"> </para>
							</caption>
						</mediaobject>
					</figure>
					<para xml:id="det_3479" xml:lang="de">Die Kombinatorik startet mit dem ersten CE auf dem ersten Layer. Es gibt keine
						anderen CEs auf dem gleichen Layer mit kleinerem CL. CE1a hat zwar
							<code>ExcludePriceItemClasses</code>, das andere PIs referenziert. Diese Bedingung
						an die Kombinierbarkeit wird aber hier nicht ausgewertet, da kein passendes CE zum
						Vergleich existiert.</para>

					<bridgehead xml:id="det_3480" xml:lang="de">Beispiel 2, Schritt 2: Kombinierbarkeitstest</bridgehead>
					<figure>
						<title><phrase xml:id="det_3481" xml:lang="de">PriceItem Kombinatorik Schritt 2</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/Price-Combinatoric-ExcludePriceItemClasses-Step02.png" format="PNG" contentdepth="50%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3482" xml:lang="de">PriceItem Kombinatorik Schritt 2</para>
							</textobject>
							<caption>
								<para xml:id="det_3483" xml:lang="de"> </para>
							</caption>
						</mediaobject>
					</figure>
					<para xml:id="det_3484" xml:lang="de">CE1a und CE2a werden auf Kombinierbarkeit getestet. Der Test erfolgt
						beidseitig:</para>
					<itemizedlist>
						<listitem>
							<para xml:id="det_3485" xml:lang="de">CE2a prüft CE1a (CombinableWhen): Auswertung ergibt Kombinierbarkeit mit
								CE1a.</para>
						</listitem>
						<listitem>
							<para xml:id="det_3486" xml:lang="de">CE1a prüft CE2a (ExcludePriceItemClasses): Auswertung ergibt
								Unkombinierbarkeit mit CE2a.</para>
						</listitem>
					</itemizedlist>
					<para xml:id="det_3487" xml:lang="de"><code>ExcludePriceItemClasses</code> von CE1a greift an dieser Stelle. CE2a wird
						daher als unkombinierbar markiert.</para>

					<bridgehead xml:id="det_3488" xml:lang="de">Beispiel 2, Schritt 3: Wechsel des CL</bridgehead>
					<figure>
						<title><phrase xml:id="det_3489" xml:lang="de">PriceItem Kombinatorik Schritt 3</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/Price-Combinatoric-ExcludePriceItemClasses-Step03.png" format="PNG" contentdepth="50%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3490" xml:lang="de">PriceItem Kombinatorik Schritt 3</para>
							</textobject>
							<caption>
								<para xml:id="det_3491" xml:lang="de"> </para>
							</caption>
						</mediaobject>
					</figure>
					<para xml:id="det_3492" xml:lang="de">Es folgt ein Wechsel des CL, bei dem das als inkompatibel markierte CE2a entfernt
						wird.</para>

					<bridgehead xml:id="det_3493" xml:lang="de">Beispiel 2, Schritt 4: Kombinierbarkeitstest</bridgehead>
					<figure>
						<title><phrase xml:id="det_3494" xml:lang="de">PriceItem Kombinatorik Schritt 4</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/Price-Combinatoric-ExcludePriceItemClasses-Step04.png" format="PNG" contentdepth="50%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3495" xml:lang="de">PriceItem Kombinatorik Schritt 4</para>
							</textobject>
							<caption>
								<para xml:id="det_3496" xml:lang="de"> </para>
							</caption>
						</mediaobject>
					</figure>
					<para xml:id="det_3497" xml:lang="de">CE1a und CE4a werden auf Kombinierbarkeit getestet. Der Test erfolgt
						beidseitig:</para>
					<itemizedlist>
						<listitem>
							<para xml:id="det_3498" xml:lang="de">CE4a prüft CE1a (<code>ExcludePriceItemClasses</code>): Auswertung ergibt
								Kombinierbarkeit mit CE1a.</para>
						</listitem>
						<listitem>
							<para xml:id="det_3499" xml:lang="de">CE1a prüft CE4a (<code>ExcludePriceItemClasses</code>): Auswertung ergibt
								Unkombinierbarkeit mit CE4a.</para>
						</listitem>
					</itemizedlist>
					<para xml:id="det_3500" xml:lang="de">CE4a wird als unkombinierbar markiert. Dies erfolgt im selben Layer und auch in
						Layern mit höherem LL.</para>

					<bridgehead xml:id="det_3501" xml:lang="de">Beispiel 2, Schritt 5: Wechsel des CL</bridgehead>
					<figure>
						<title><phrase xml:id="det_3502" xml:lang="de">PriceItem Kombinatorik Schritt 5</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/Price-Combinatoric-ExcludePriceItemClasses-Step05.png" format="PNG" contentdepth="50%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3503" xml:lang="de">PriceItem Kombinatorik Schritt 5</para>
							</textobject>
							<caption>
								<para xml:id="det_3504" xml:lang="de"> </para>
							</caption>
						</mediaobject>
					</figure>
					<para xml:id="det_3505" xml:lang="de">Der folgende Wechsel des CL entfernt CE4a aus der Kombinatorik.</para>

					<bridgehead xml:id="det_3506" xml:lang="de">Beispiel 2, Schritt 6: Kombinierbarkeitstest</bridgehead>
					<figure>
						<title><phrase xml:id="det_3507" xml:lang="de">PriceItem Kombinatorik Schritt 6</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/Price-Combinatoric-ExcludePriceItemClasses-Step06.png" format="PNG" contentdepth="50%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3508" xml:lang="de">PriceItem Kombinatorik Schritt 6</para>
							</textobject>
							<caption>
								<para xml:id="det_3509" xml:lang="de"> </para>
							</caption>
						</mediaobject>
					</figure>
					<para xml:id="det_3510" xml:lang="de">Die zwei PriceItems PI3 und PI5, die auf dem aktuellen Layer (LL=1, LN=A) von
							<code>ExcludePriceItemClasses</code> in CEs desselben Layers referenziert werden,
						werden nun in der gleichen Weise abgearbeitet wie auch die anderen CEs:</para>
					<para xml:id="det_3511" xml:lang="de">CE1a wird mit PI3 auf Kombinierbarkeit geprüft:</para>
					<itemizedlist>
						<listitem>
							<para xml:id="det_3512" xml:lang="de">CE1a prüft PI3 (<code>ExcludePriceItemClasses</code>): Auswertung ergibt
								Kombinierbarkeit mit PI3.</para>
						</listitem>
						<listitem>
							<para xml:id="det_3513" xml:lang="de">Von PI3 werden hier keine zusätzlichen Bedingungen an die Kombinierbarkeit
								gestellt.</para>
						</listitem>
					</itemizedlist>

					<bridgehead xml:id="det_3514" xml:lang="de">Beispiel 2, Schritt 7: Kombinierbarkeitstest</bridgehead>
					<figure>
						<title><phrase xml:id="det_3515" xml:lang="de">PriceItem Kombinatorik Schritt 7</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/Price-Combinatoric-ExcludePriceItemClasses-Step07.png" format="PNG" contentdepth="50%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3516" xml:lang="de">PriceItem Kombinatorik Schritt 7</para>
							</textobject>
							<caption>
								<para xml:id="det_3517" xml:lang="de"> </para>
							</caption>
						</mediaobject>
					</figure>
					<para xml:id="det_3518" xml:lang="de">CE1a wird mit PI5 auf Kombinierbarkeit geprüft:</para>
					<itemizedlist>
						<listitem>
							<para xml:id="det_3519" xml:lang="de">CE1a prüft PI5 (<code>ExcludePriceItemClasses</code>): Auswertung ergibt
								Unkombinierbarkeit mit PI5.</para>
						</listitem>
						<listitem>
							<para xml:id="det_3520" xml:lang="de">Von PI5 werden hier keine zusätzlichen Bedingungen an die Kombinierbarkeit
								gestellt.</para>
						</listitem>
					</itemizedlist>
					<para xml:id="det_3521" xml:lang="de">PI5 wird also aus der Kombinatorik entfernt. Dies erfolgt in der gleichen Weise, wie
						auch bei Unkombinierbarkeiten von CEs: Das unkombinierbare CE auf demselben Layer wird
						markiert. Da es eigentlich kein CE von PI5 auf diesem Layer gibt, wird das
						unkombinierbare CE hier als "Pseudo-CE" bezeichnet. </para>
					<para xml:id="det_3522" xml:lang="de">Es würden auch CEs des gleichen PIs auf Layern mit höheren LL markiert werden. In
						diesem Beispiel gibt es jedoch kein CE mit diesen Eigenschaften.</para>

					<bridgehead xml:id="det_3523" xml:lang="de">Beispiel 2, Schritt 8: Wechsel des CL</bridgehead>
					<figure>
						<title><phrase xml:id="det_3524" xml:lang="de">PriceItem Kombinatorik Schritt 8</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/Price-Combinatoric-ExcludePriceItemClasses-Step08.png" format="PNG" contentdepth="50%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3525" xml:lang="de">PriceItem Kombinatorik Schritt 8</para>
							</textobject>
							<caption>
								<para xml:id="det_3526" xml:lang="de"> </para>
							</caption>
						</mediaobject>
					</figure>
					<para xml:id="det_3527" xml:lang="de">Es folgt ein Wechsel des CL. Das markierte "Pseudo-CE" von PI5 wird aus der
						Kombinatorik entfernt. Das ist ein entscheidender Schritt, denn dadurch wird auch PI5
						am Ende der Kombinatorik als inkompatibel verworfen werden.</para>

					<bridgehead xml:id="det_3528" xml:lang="de">Beispiel 2, Schritt 9: Fortsetzung der Kombinatorik auf nächstem
						Layer</bridgehead>
					<figure>
						<title><phrase xml:id="det_3529" xml:lang="de">PriceItem Kombinatorik Schritt 9</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/Price-Combinatoric-ExcludePriceItemClasses-Step09.png" format="PNG" contentdepth="50%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3530" xml:lang="de">PriceItem Kombinatorik Schritt 9</para>
							</textobject>
							<caption>
								<para xml:id="det_3531" xml:lang="de"> </para>
							</caption>
						</mediaobject>
					</figure>
					<para xml:id="det_3532" xml:lang="de">Die Kombinatorik wird auf dem nächsten Layer (LL=1, LN=B) fortgesetzt.</para>

					<bridgehead xml:id="det_3533" xml:lang="de">Beispiel 2, Schritt 10: Kombinierbarkeitstest</bridgehead>
					<figure>
						<title><phrase xml:id="det_3534" xml:lang="de">PriceItem Kombinatorik Schritt 10</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/Price-Combinatoric-ExcludePriceItemClasses-Step10.png" format="PNG" contentdepth="50%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3535" xml:lang="de">PriceItem Kombinatorik Schritt 10</para>
							</textobject>
							<caption>
								<para xml:id="det_3536" xml:lang="de"> </para>
							</caption>
						</mediaobject>
					</figure>
					<para xml:id="det_3537" xml:lang="de">CE5a und CE6a werden auf Kombinierbarkeit überprüft.</para>
					<itemizedlist>
						<listitem>
							<para xml:id="det_3538" xml:lang="de">CE5a prüft CE6a (<code>CombinableWhen</code>): Auswertung ergibt
								Kombinierbarkeit mit CE6a.</para>
						</listitem>
						<listitem>
							<para xml:id="det_3539" xml:lang="de">CE6a prüft CE5a (<code>CombinableWhen</code>): Auswertung ergibt
								Unkombinierbarkeit mit CE5a.</para>
						</listitem>
					</itemizedlist>

					<bridgehead xml:id="det_3540" xml:lang="de">Beispiel 2, Schritt 11: Wechsel des CL und LL</bridgehead>
					<figure>
						<title><phrase xml:id="det_3541" xml:lang="de">PriceItem Kombinatorik Schritt 11</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/Price-Combinatoric-ExcludePriceItemClasses-Step11.png" format="PNG" contentdepth="50%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3542" xml:lang="de">PriceItem Kombinatorik Schritt 11</para>
							</textobject>
							<caption>
								<para xml:id="det_3543" xml:lang="de"> </para>
							</caption>
						</mediaobject>
					</figure>
					<para xml:id="det_3544" xml:lang="de">Beim anschließenden Wechsel des CL sind keine CEs auf dem aktuellen Layer (LL=1,
						LN=B) zu löschen.</para>
					<para xml:id="det_3545" xml:lang="de">Der Wechsel des LL hingegen löscht alle als unkombinierbar markierten CEs auf
						höheren Layern, hier also CE4b.</para>

					<bridgehead xml:id="det_3546" xml:lang="de">Beispiel 2, Schritt 12: Kombinierbarkeitstest</bridgehead>
					<figure>
						<title><phrase xml:id="det_3547" xml:lang="de">PriceItem Kombinatorik Schritt 12</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/Price-Combinatoric-ExcludePriceItemClasses-Step12.png" format="PNG" contentdepth="50%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3548" xml:lang="de">PriceItem Kombinatorik Schritt 12</para>
							</textobject>
							<caption>
								<para xml:id="det_3549" xml:lang="de"> </para>
							</caption>
						</mediaobject>
					</figure>
					<para xml:id="det_3550" xml:lang="de">Die Kombinatorik wird auf dem nächst höheren Layer mit LL=2 fortgesetzt. Für CE1b
						gibt es jedoch kein CE, das für einen Kompatibilitättest in Frage kommt. Die
						Kombinatorik endet hier.</para>

					<bridgehead xml:id="det_3551" xml:lang="de">Beispiel 2, Schritt 13: Ergebnis der Kombinatorik</bridgehead>
					<figure>
						<title><phrase xml:id="det_3552" xml:lang="de">PriceItem Kombinatorik Schritt 13</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/Price-Combinatoric-ExcludePriceItemClasses-Step13.png" format="PNG" contentdepth="50%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3553" xml:lang="de">PriceItem Kombinatorik Schritt 13</para>
							</textobject>
							<caption>
								<para xml:id="det_3554" xml:lang="de"> </para>
							</caption>
						</mediaobject>
					</figure>
					<para xml:id="det_3555" xml:lang="de">Als Ergebnis der Kombinatorik verbleiben also PI1, PI3 und PI6 als kombinierbar. </para>
					<para xml:id="det_3556" xml:lang="de">Als unkombinierbar verworfen werden PI2, PI4 und PI5. </para>
					<para xml:id="det_3557" xml:lang="de">Bemerkenswert ist PI5: Es wurde in der Kombinatorik "nur" das "Pseudo-CE" auf dem
						ersten Layer (LL=1, LN=A) gelöscht. Das führt dazu, dass PI5 insgesamt als
						unkombinierbar verworfen wird.</para>
					<para xml:id="det_3558" xml:lang="de"/>
				</section>

				<section xml:id="OtdsProcessPriceCalculationPriceItemCompatibilityCheck">
					<title><phrase xml:id="det_3559" xml:lang="de">Kombinierbarkeit zweier PriceItems</phrase></title>
					<para xml:id="det_3560" xml:lang="de">Im vorangegangenen Beispiel wurde von Test auf Kombinierbarkeit zwischen zwei
							<code>Combinatorics</code>-Elementen zweier PriceItems gesprochen. In diesem
						Kapitel wird erläutert, wie dieser Test an die Kombinierbarkeit definiert ist und wie
						er ausgewertet wird. </para>
					<para xml:id="det_3561" xml:lang="de">Ob zwei PriceItems insgesamt miteinander kombinierbar sind, entscheiden u.a. mehrere
						Tests zwischen den <code>Combinatorics</code>-Elementen dieser PriceItems. Welche
						dieser Tests in welcher Abfolge durchgeführt werden und welche Konsequenzen bei
						Unkombinierbarkeit erfolgen, wurde bereits im vorangehenden Kapitel erläutert und
						darauf wird daher hier nicht mehr eingegangen. </para>
					<para xml:id="det_3562" xml:lang="de">Kombinatorische Informationen werden im Element <code>Combinatorics</code>
						definiert, das für jedes PriceItem mehrfach angegeben werden kann aber nicht angegeben
						werden muss.</para>

					<bridgehead xml:id="det_3563" xml:lang="de">CombinationCode und CombinationIndex mit Group</bridgehead>
					<para xml:id="det_3564" xml:lang="de">Innerhalb von <code>Combinatorics</code> können Codes als Text
							(<code>CombinationCode</code>) und Indizes als Ganzzahl
							(<code>CombinationIndex</code>) vergeben werden. Sowohl Codes als auch Indizes
						sind optional. <code>CombinationCode</code> kann mehrfach pro <code>Group</code>
						angegeben werden, ein <code>CombinationIndex</code> darf maximal einmal pro
							<code>Group</code> angegeben werden.</para>
					<para xml:id="det_3565" xml:lang="de">Sowohl für <code>CombinationCode</code> als auch für <code>CombinationIndex</code>
						kann das optionale Attribut <code>Group</code> angegeben werden. Bei Vergleichen von
							<code>CombinationCode</code> oder <code>CombinationIndex</code> in
							<code>CombinableWhen</code> wird diese Angabe zusätzlich verglichen. Dies schafft
						die Möglichkeit, <code>CombinationCode</code>s und <code>CombinationIndex</code> in
						Gruppen einzuteilen, die sich gegenseitig nicht beeinflussen. Ist das Attribut
							<code>Group</code> nicht explizit angegeben, wird "Default" als
						Standardeinstellung für <code>Group</code> gesetzt.</para>

					<bridgehead xml:id="det_3566" xml:lang="de">CombinableWhen</bridgehead>
					<para xml:id="det_3567" xml:lang="de">Innerhalb von <code>CombinableWhen</code> wird die Kombinierbarkeit mit anderen
							<code>Combinatorics</code> anderer PriceItems beschrieben. Dafür wird Bezug
						genommen auf die in <code>Combinatorics</code> anderer PriceItems definierten
						<code>CombinationCode</code> und <code>CombinationIndex</code>: </para>
					<itemizedlist>
						<listitem>
							<para xml:id="det_3568" xml:lang="de"><code>CombinationCode</code>: Definiert einen Test auf die in
									<code>Combinatorics</code> des anderen PriceItems angegebenen
									<code>CombinationCode</code>s. Dabei muss mindestens ein
									<code>CombinationCode</code> die angegebene Bedingung erfüllen. Ist im
									<code>Combinatorics</code> des anderen PriceItems kein
									<code>CombintaionCode</code> definiert, ist der Test wahr.</para>
						</listitem>
						<listitem>
							<para xml:id="det_3569" xml:lang="de"><code>CombinationIndexMin</code>: Definiert einen Test auf die in
									<code>Combinatorics</code> des anderen PriceItems angegebenen
									<code>CombinationIndex</code>. Dabei muss der
									<code>CombinationIndex</code> mindestens so groß sein wie der
								angegebene Wert. Ist im <code>Combinatorics</code> des anderen PriceItems
								kein <code>CombinationIndex</code> definiert, ist der Test wahr.</para>
						</listitem>
						<listitem>
							<para xml:id="det_3570" xml:lang="de"><code>CombinationIndexMax</code>: Definiert einen Test auf die in
									<code>Combinatorics</code> des anderen PriceItems angegebenen
									<code>CombinationIndex</code>. Dabei darf der
									<code>CombinationIndex</code> maximal so groß sein wie der angegebene
								Wert. Ist im <code>Combinatorics</code> des anderen PriceItems kein
									<code>CombintaionIndex</code> definiert, ist der Test wahr.</para>
						</listitem>
					</itemizedlist>
					<para xml:id="det_4955" xml:lang="de">Die drei Tests <code>CombinationCode</code>,
						<code>CombinationIndexMin</code> und <code>CombinationIndexMax</code> können über
					die boolschen Operatoren miteinander verknüpft werden.</para>

					<bridgehead xml:id="det_3571" xml:lang="de">ExcludePriceItemClasses</bridgehead>
					<para xml:id="det_3572" xml:lang="de">Ein <code>Combinatorics</code> kann Unkombinierbarkeiten mit PriceItems durch
						direkte Angabe von Klassennamen (verpflichtendes Attribut <code>Class</code> bei
						PriceItem) definieren. Dies erfolgt in <code>ExcludePriceItemClasses</code>. Es können
						mehrere Klassennamen in den untergeordneten Elementen
							<code>ExcludePriceItemClass</code> angegeben werden.</para>

					<bridgehead xml:id="det_3573" xml:lang="de">Attribut Component</bridgehead>

					<para xml:id="det_3574" xml:lang="de">Innerhalb von <code>CombinableWhen</code> ist es in <code>CombinationCode</code>,
							<code>CombinationIndexMin</code> und <code>CombinationIndexMax</code> möglich, das
						optionale Attribut <code>Component</code> anzugeben. Innerhalb von
							<code>ExcludePriceItemClasses</code> ist es in <code>ExcludePriceItemClass</code>
						ebenfalls möglich, das Attribut <code>Component</code> anzugeben.</para>

					<para xml:id="det_3575" xml:lang="de">Der Kombinatoriktest wird dann mit PriceItems aus der angegebenen Komponente
						durchgeführt. Standardmäßig erfolgt der Kombinatoriktest zwischen PriceItems aus
						derselben Komponente (<code>Component=ThisComponent</code>), d.h. die PriceItems
						beider <code>Combinatorics</code>-Elemente müssen aus der gleichen Komponente
						stammen.</para>

					<bridgehead xml:id="det_3576" xml:lang="de">Kombinierbarkeitstest</bridgehead>

					<para xml:id="det_3577" xml:lang="de">Es wird nun beschrieben, welche Verarbeitungsschritte beim Vergleich der
						Kombinierbarkeit zweier <code>Combinatorics</code>-Elemente erfolgen.</para>
					<para xml:id="det_3578" xml:lang="de">Gegeben seien zwei <code>Combinatorics</code>-Elemente CE1 und CE2 zweier PriceItems
						PI1 und PI2. Es soll die Kombinierbarpeit von CE1 mit CE2 überprüft werden:</para>

					<itemizedlist>
						<listitem>
							<para xml:id="det_3579" xml:lang="de">CE1 wird mit CE2 auf Kombinierbarkeit geprüft, d.h. es wird die Gültigkeit
								von <code>CombinableWhen</code> von CE1 mit den bei CE2 angegebenen Werten
								geprüft</para>
						</listitem>
						<listitem>
							<para xml:id="det_3580" xml:lang="de">CE2 wird mit CE1 auf Kombinierbarkeit geprüft, d.h. es wird umgekehrt
									<code>CombinableWhen</code> von CE2 ausgewertet durch Vergleich mit den
								Werten von CE1.</para>
						</listitem>
						<listitem>
							<para xml:id="det_3581" xml:lang="de">Zusätzlich erfolgt eine asymetrische Überprüfung ob CE1 durch ein
									<code>ExcludePriceItemClass</code> in <code>CE2</code> ausgeschlossen
								wird.</para>
						</listitem>
					</itemizedlist>

					<para xml:id="det_3582" xml:lang="de">Der symetrische Kombinierbarkeitstest in beide Richtungen verlaufen analog, daher
						wird im Folgenden nur eine Richtung beschrieben. Um CE1 mit CE2 auf Kombinierbarkeit
						zu prüfen, werden folgende Verarbeitungsschritte durchgeführt:</para>

					<itemizedlist>
						<listitem>
							<para xml:id="det_3583" xml:lang="de">Hat CE1 kein <code>CombinableWhen</code> so ist CE1 mit CE2
								kombinierbar.</para>
						</listitem>
						<listitem>
							<para xml:id="det_3584" xml:lang="de">Hat CE1 <code>CombinableWhen</code>: Die einzelnen Teilbedingungen
									<code>CombinationCode</code>, <code>CombinationIndexMin</code> und
									<code>CombinationIndexMax</code> können über boolsche Operatoren
								miteinander kombiniert werden. Die Auswertung einer dieser Bedingungen erfolgt
								wie folgt:</para>
							<itemizedlist>
								<listitem>
									<para xml:id="det_3585" xml:lang="de">Für den in CE1 definierten Test <code>CombinationCode</code> werden
										für jeden in CE2 angegebenen <code>CombinationCode</code>
										überprüft:</para>
									<itemizedlist>
										<listitem>
											<para xml:id="det_3586" xml:lang="de">Stimmt das Attribut <code>Component</code> mit der Quelle
												des PriceItems von CE2 überein?</para>
										</listitem>
										<listitem>
											<para xml:id="det_3587" xml:lang="de">Ist Attribut <code>Group</code> identisch mit dem Attribut
													<code>Group</code> bei CE2?</para>
										</listitem>
										<listitem>
											<para xml:id="det_3588" xml:lang="de">Sind die beiden angegebenen <code>CombinationCode</code>
												identisch?</para>
										</listitem>
									</itemizedlist>
									<para xml:id="det_3589" xml:lang="de">Sind diese drei Bedingungen erfüllt für mindestens ein
											<code>CombinationCode</code> bei CE2, ist die Bedingung
										erfüllt.</para>
									<para xml:id="det_3590" xml:lang="de">Ist in CE2 kein <code>CombinationCode</code> definiert, ist die
										Bedingung nie erfüllt.</para>
								</listitem>
								<listitem>
									<para xml:id="det_3591" xml:lang="de">Für den Test <code>CombinationIndexMin</code> sowie
											<code>CombinationIndexMax</code> werden für jeden in CE2
										angegebenen <code>CombinationIndex</code> überprüft:</para>
									<itemizedlist>
										<listitem>
											<para xml:id="det_3592" xml:lang="de">Stimmt das Attribut <code>Component</code> mit der Quelle
												des PriceItems von CE1 überein?</para>
										</listitem>
										<listitem>
											<para xml:id="det_3593" xml:lang="de">Ist Attribut <code>Group</code> identisch mit dem Attribut
													<code>Group</code> bei CE2?</para>
										</listitem>
										<listitem>
											<para xml:id="det_3594" xml:lang="de">Ist der angegebene Wert kleiner
													(<code>CombinationIndexMin</code>) bzw. größer
													(<code>CombinationIndexMax</code>) oder gleich dem
													<code>CombinationIndex</code> bei CE2?</para>
										</listitem>
									</itemizedlist>
									<para xml:id="det_3595" xml:lang="de">Sind diese drei Bedingungen genau einmal erfüllt für ein
											<code>CombinationIndex</code> bei CE2, ist die Bedingung erfüllt.
										Im Gegensatz zu dem Test <code>CombinationCode</code> ist es nicht
										möglich, dass die drei Bedingungen mehrmals erfüllt sind, denn
										innerhalb einer <code>Group</code> darf per Definition nicht mehr als
										ein <code>CombinationIndex</code> angegeben werden.</para>
									<para xml:id="det_3596" xml:lang="de">Ist in CE2 kein <code>CombinationIndex</code> definiert, ist die
										Bedingung nie erfüllt.</para>
								</listitem>
							</itemizedlist>
						</listitem>
					</itemizedlist>

					<para xml:id="det_3597" xml:lang="de">Zur leichteren Verständlichkeit folgen einige typische auftretende Fälle, die sich
						aus der obigen Verarbeitung erschliessen lassen. CE1 wird wieder auf Kombinierbarkeit
						mit CE2 geprüft, d.h. die Bedingungen von CE1 werden ausgewertet.</para>

					<itemizedlist>
						<listitem>
							<para xml:id="det_3598" xml:lang="de">CE1 hat <code>CombinableWhen</code> mit <code>CombinationCode</code>, CE2
								hat kein <code>CombinationCode</code>: </para>
							<para xml:id="det_3599" xml:lang="de">CE1 ist nicht kombinierbar mit CE2.</para>
						</listitem>
						<listitem>
							<para xml:id="det_3600" xml:lang="de">CE1 hat <code>CombinableWhen</code> mit <code>CombinationCode</code>, CE2
								hat ein oder mehrere <code>CombinationCode</code> mit unterschiedlichen
								Angaben bei <code>Group</code>:</para>
							<para xml:id="det_3601" xml:lang="de">CE1 ist kombinierbar mit CE2, wenn mindestens ein gleicher
									<code>CombinationCode</code> mit übereinstimmender <code>Group</code>
								existiert. Stimmt die <code>Group</code> nie überein, ist CE1 nicht mit CE2
								kombinierbar.</para>
						</listitem>
						<listitem>
							<para xml:id="det_3602" xml:lang="de">CE1 hat <code>CombinableWhen</code> mit <code>CombinationIndexMin</code>,
								CE2 hat kein <code>CombinationIndex</code>: </para>
							<para xml:id="det_3603" xml:lang="de">CE1 ist nicht kombinierbar mit CE2.</para>
						</listitem>
						<listitem>
							<para xml:id="det_3604" xml:lang="de">CE1 hat <code>CombinableWhen</code> mit <code>CombinationIndexMax</code>,
								CE2 hat ein oder mehrere <code>CombinationIndex</code> mit unterschiedlichen
								Angaben bei <code>Group</code>:</para>
							<para xml:id="det_3605" xml:lang="de">CE1 ist kombinierbar mit CE2, wenn genau ein <code>CombinationIndex</code>
								mit übereinstimmender <code>Group</code> existiert, der die obere Schranke
								erfüllt, also kleiner oder gleich ist. Stimmt die <code>Group</code> nie
								überein, ist CE1 nicht mit CE2 kombinierbar.</para>
						</listitem>
					</itemizedlist>

					<para xml:id="det_3606" xml:lang="de">Zusätzlich erfolgt die Überprüfung von <code>ExcludePriceItemClass</code>.</para>

					<itemizedlist>
						<listitem>
							<para xml:id="det_3607" xml:lang="de">Besitzt <code>CE2</code> die Eigenschaft <code>ExcludePriceItemClass</code>
								wird dieses ausgewertet. Ein <code>ExcludePriceItemClass</code> in
									<code>CE1</code> wird an dieser Stelle <emphasis>nicht</emphasis>
								ausgewertet.</para>
						</listitem>
						<listitem>
							<para xml:id="det_3608" xml:lang="de">Es wird überprüft, ob in <code>CE2</code> ein
									<code>ExcludePriceItemClass</code> Eintrag existiert welcher alle folgende
								Bedingungen erfüllt:</para>
							<itemizedlist>
								<listitem>
									<para xml:id="det_3609" xml:lang="de">Das Attribut <code>Component</code> stimmt mit der Komponente
										überein, in welcher <code>CE1</code> liegt.</para>
								</listitem>
								<listitem>
									<para xml:id="det_3610" xml:lang="de">Die Klasse des PriceItems in welcher <code>CE1</code> liegt ist in
										disem <code>ExcludePriceItemClass</code> Element aufgelistet.</para>
								</listitem>
							</itemizedlist>
							<para xml:id="det_3611" xml:lang="de">Existiert ein solches Element, ist <code>CE1</code> nicht kombinierbar mit
									<code>CR2</code>.</para>
						</listitem>
					</itemizedlist>
				</section>

				<section xml:id="OtdsProcessPriceCalculationConditionAfterCombinatorics">
					<title><phrase xml:id="det_3612" xml:lang="de">Auswertung der Condition nach der Preiskombinatorik
						(ImpactExecutionOrder=AfterCombinatorics)</phrase></title>
					<para xml:id="det_3613" xml:lang="de">Nachdem die Kombinatorik abgeschlossen ist, wird für alle verbleibenden PriceItems
						erneut die <code>Condition</code> ausgewertet. Nun werden auch alle Impact-Conditions
						mit der <code>ImpactExecutionOrder=AfterCombinatorics</code> in der 2 wertigen Logik
						(True/False) ausgewertet. Lediglich die PriceIndexConditions mit
							<code>ImpactExecutionOrder=Last</code> werden erneut mit der 3 stufigen Logik
						(True/False/Undefined) ausgewertet. </para>
					<para xml:id="det_3614" xml:lang="de">Es wird dementsprechend für jeden Day/Person-Knoten der Kostenmatrix erneut die
						Gültigkeit aller darin enthaltenen PriceItems überprüft. Jedes PriceItem, das sich als
						ungültig erweist, wird aus der Kostenmatrix entfernt und spielt in der weiteren
						Preisberechnung keine Rolle mehr.</para>
					<para xml:id="det_3615" xml:lang="de"/>
				</section>

				<section xml:id="OtdsProcessPriceCalculationAssignRelative2AbsolutePriceItems">
					<title><phrase xml:id="det_3616" xml:lang="de">Zuweisung der prozentualen zu absoluten PriceItems</phrase></title>

					<para xml:id="det_3617" xml:lang="de">Für die weitere Preisberechnung ist es notwendig, die Beziehung zwischen absoluten
						und relativen PriceItems herzustellen. In jedem Day/Person-Knoten der Kostenmatrix
						liegen die PriceItems noch ungeordnet und ohne Bezug zueinander vor.</para>
					<para xml:id="det_3618" xml:lang="de">Jedes relative PriceItem definiert einen Zu- oder Abschlag auf ein oder mehrere
						absolute PriceItems.</para>
					<para xml:id="det_3619" xml:lang="de">Die Beziehung zwischen absoluten und relativen PriceItems kann sowohl bei absoluten
						als auch bei relativen PriceItems definiert werden und wird über den Klassennamen der
						PriceItems hergestellt (Attribut <code>Class</code>):</para>
					<itemizedlist>
						<listitem>
							<para xml:id="det_3620" xml:lang="de">Bei absoluten PriceItems über die Angabe von
								<code>Absolute/AppliedBy</code></para>
						</listitem>
						<listitem>
							<para xml:id="det_3621" xml:lang="de">Bei relativen PriceItems über die Angabe von <code>Percent/ApplyTo</code>,
									<code>Percent/ApplyToAll</code> oder
								<code>Percent/NotApplyTo</code></para>
						</listitem>
					</itemizedlist>
					<para xml:id="det_3622" xml:lang="de">Die Beziehungen zwischen absoluten und relativen PriceItems werden für jeden
						Day/Person-Knoten der Kostenmatrix separat erstellt, da PriceItems in
						unterschiedlichen Day/Person-Knoten sich gegenseitig nicht beeinflussen.</para>
					<para xml:id="det_3623" xml:lang="de">Innerhalb eines Day/Person-Knotens werden folgende Verarbeitungsschritte ausgeführt: </para>
					<itemizedlist>
						<listitem>
							<para xml:id="det_3624" xml:lang="de"><emphasis role="bold">Verarbeitung der absoluten
								PriceItems:</emphasis></para>
							<para xml:id="det_3625" xml:lang="de">Für jedes absolute PriceItem wird ein Kostenknoten erzeugt, der im
								Day/Person-Knoten hinterlegt wird. Ein Kostenknoten ist eine organisatorische
								Hülle für genau ein absolutes PriceItem und alle assoziierten relativen
								PriceItems. Jeder Day/Person-Knoten erhält demnach genauso viele Kostenknoten
								wie er absolute PriceItems enthält.</para>
							<para xml:id="det_3626" xml:lang="de">Dem neu erzeugten Kostenknoten wird das absolute PriceItem zugewiesen. </para>
							<para xml:id="det_3627" xml:lang="de">Hat das absolute PriceItem die Angabe <code>AppliedBy</code>, werden alle
								relativen PriceItems im selben Day/Person-Knoten bestimmt, deren Attribut
									<code>Class</code> mit einem der angegebenen Class-Namen übereinstimmt und
								dem Kostenknoten zugewiesen.</para>
						</listitem>
						<listitem>
							<para xml:id="det_3628" xml:lang="de"><emphasis role="bold">Zuweisung der relativen PriceItems:</emphasis></para>
							<para xml:id="det_3629" xml:lang="de">Es werden anschliessend alle relativen PriceItems des Day/Person-Knotens der
								Reihe nach betrachtet und folgende Verarbeitungsschritte durchgeführt (unter
								Beachtung der anschliessend aufgeführten zusätzlichen Regeln):</para>
							<itemizedlist>
								<listitem>
									<para xml:id="det_3630" xml:lang="de">Hat das relative PriceItem eine Angabe <code>ApplyToAll</code>, wird
										das relative PriceItem in alle Kostenknoten des Day/Person-Knotens
										kopiert.</para>
								</listitem>
								<listitem>
									<para xml:id="det_3631" xml:lang="de">Hat das relative PriceItem eine Angabe <code>ApplyTo</code>, wird
										das relative PriceItem in alle Kostenknoten kopiert, dessen absolutes
										PriceItem im Klassennamen mit einem der angegebenen Klassennamen
										übereinstimmt.</para>
								</listitem>
								<listitem>
									<para xml:id="det_3632" xml:lang="de">Hat das relative PriceItem eine Angabe <code>NotApplyTo</code>, wird
										das relative PriceItem allen Kostenknoten zugewiesen, dessen absolutes
										PriceItem im Klassennamen mit keinem der angegebenen Klassennamen
										übereinstimmt. </para>
								</listitem>
							</itemizedlist>
							<para xml:id="det_3633" xml:lang="de">Relative PriceItems, die keinem Kostenknoten zugewiesen werden konnten,
								werden entfernt.</para>
						</listitem>
						<listitem>
							<para xml:id="det_3634" xml:lang="de">Bei der Herstellung dieser Beziehungen sind zusätzlich folgende Punkte zu
								beachten:</para>
							<itemizedlist>
								<listitem>
									<para xml:id="det_3635" xml:lang="de">Das Attribut <code>Component</code> von
											<code>Absolute/AppliedBy</code>, <code>Percent/ApplyTo</code>,
											<code>Percent/ApplyToAll</code> und
											<code>Percent/NotApplyTo</code> wird bei der Zuweisung von
										relativen zu absoluten PriceItems berücksichtigt: Die Komponente des
										absoluten PriceItems und des relativen PriceItems müssen mit der
										Angaben im Attribut <code>Component</code> übereinstimmen, damit die
										Zuweisung erfolgt.</para>
								</listitem>
								<listitem>
									<para xml:id="det_3636" xml:lang="de">Relative PriceItems werden einem Kostenknoten maximal einmal
										zugewiesen, niemals mehrfach wie es beispielsweise durch gleichzeitige
										Angabe von <code>Absolute/AppliedBy</code> und
											<code>Percent/ApplyTo</code> passieren könnte.</para>
								</listitem>
							</itemizedlist>
						</listitem>
					</itemizedlist>
					<para xml:id="det_3637" xml:lang="de">Hinweis: Da relative PriceItems mehreren Kostenknoten zugewiesen werden können,
						werden relative PriceItems in einem solchen Fall dubliziert und liegen innerhalb eines
						Day/Person-Knoten nach der Verarbeitung dann mehrfach vor (in einem <emphasis role="italic">Kostenknoten</emphasis> gibt es jedoch jedes relative PriceItem
						maximal einmal).</para>

					<para xml:id="det_3638" xml:lang="de">Nach Abarbeitung dieser Schritte sind die Beziehungen von absoluten und relativen
						PriceItems in jedem Day/Person-Knoten hergestellt.</para>
					<bridgehead xml:id="det_3639" xml:lang="de">Beispiel</bridgehead>
					<para xml:id="det_3640" xml:lang="de">Das folgende Schaubild verdeutlicht die Ausgangssituation in einem Day/Person-Knoten
						und das Ergebnis der oben beschriebenen Verarbeitung an Hand eines Beispiels:</para>
					<figure>
						<title><phrase xml:id="det_3641" xml:lang="de">Beziehungen zwischen absoluten und prozentualen PriceItems</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/AssignRelative2AbsolutePriceItems.png" format="PNG" contentdepth="70%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3642" xml:lang="de">Beziehungen zwischen absoluten und prozentualen PriceItems</para>
							</textobject>
							<caption>
								<para xml:id="det_3643" xml:lang="de"> </para>
							</caption>
						</mediaobject>
					</figure>
					<para xml:id="det_3644" xml:lang="de">Im betrachteten Day/Person-Knoten liegen 7 PriceItems.</para>
					<para xml:id="det_3645" xml:lang="de">Die PriceItems 1, 2 und 3 sind absolut. Daher werden 3 Kostenknoten erzeugt, die
						jeweils eines der drei absoluten PriceItems aufnehmen.</para>
					<para xml:id="det_3646" xml:lang="de">Die PriceItems 4, 5, 6 und 7 sind relativ. Diese werden den drei Kostenknoten
						zugewiesen:</para>
					<itemizedlist>
						<listitem>
							<para xml:id="det_3647" xml:lang="de">PriceItem 4 wird PriceItem 1 zugewiesen wegen <code>AppliedBy</code> bei
								PriceItem 1</para>
						</listitem>
						<listitem>
							<para xml:id="det_3648" xml:lang="de">PriceItem 5 wird allen absoluten PriceItems zugewiesen wegen
									<code>ApplyToAll</code></para>
						</listitem>
						<listitem>
							<para xml:id="det_3649" xml:lang="de">PriceItem 6 wird den beiden absoluten PriceItems 1 und 3 zugewiesen wegen
									<code>ApplyTo</code></para>
						</listitem>
						<listitem>
							<para xml:id="det_3650" xml:lang="de">PriceItem 7 kann nicht zugewiesen werden, da PriceItem 0 in diesem
								Day/Person-Knoten nicht existiert. PriceItem 7 wird daher entfernt.</para>
						</listitem>
					</itemizedlist>
					<para xml:id="det_3651" xml:lang="de"/>
				</section>

				<section xml:id="OtdsProcessPriceCalculationDayPriceIndexCondition">
					<title><phrase xml:id="det_3652" xml:lang="de">Auswertung der Condition vor der Preisberechnung</phrase></title>
					<para xml:id="det_3653" xml:lang="de">Nachdem die Beziehungen zwischen absoluten und relativen PriceItems hergestellt
						sind, ist es erstmalig möglich, Preise für einzelne Tage und Personen zu bestimmen. Zu
						diesem Zeitpunkt der Preisberechnung wird ein drittes und letztes Mal die
							<code>Condition</code> ausgewertet. Für evt. Impact-Teilbedingungen der
							<code>Condition</code> wird der Ausführungszeitpunkt
							<code>ImpactExecutionOrder=Last</code> gesetzt. </para>
					<para xml:id="det_3654" xml:lang="de">Der Unterschied dieser Auswertung liegt im Vergleich zur zweiten Auswertung
						(Ausführungszeitpunkt <code>ImpactExecutionOrder=AfterCombinatorics</code>) in der
							<code>DayImpact</code>-Bedingung <code>DayPriceIndex</code>, mit der Bedingungen
						an den günstigsten oder teuersten Tage gestellt werden können. Die
							<code>DayPriceIndex</code> ist erst zu diesem Ausführungszeitpunkt auswertbar -
						die Auswertung zu den Ausführungszeitpunkten
							<code>ImpactExecutionOrder=BeforeCombinatorics / AfterCombinatorics</code> ist
						weder möglich noch erlaubt.</para>
					<para xml:id="det_3655" xml:lang="de">Um die Bedingungen an die Tagespreis auswerten zu können, ist es notwendig, die
						Tagespreise zu ermitteln. Dies erfolgt für die Auswertung jeder
						DayPriceIndex-Teilbedingung erneut, da die DayPriceIndex-Teilbedingung sich jeweils
						auf unterschiedliche Tagespreisanteile beziehen kann. Wie diese Berechnung erfolgt,
						wird im folgenden Kapitel beschrieben. </para>
					<para xml:id="det_3656" xml:lang="de">Nach diesem vorbereitenden Schritt ist es möglich, für jeden Day/Person-Knoten der
						Kostenmatrix die Gültigkeit aller darin enthaltenen PriceItems zu überprüfen: Jedes
						PriceItem, das sich als ungültig erweist, wird als ungültig markiert. Wenn die
						PriceItems aller Day/Person-Knoten überprüft sind, werden alle als ungültig markierten
						PriceItems entfernt und spielen damit für den endgültigen Preis keine Rolle mehr. Es
						ist wichtig, die PriceItems zunächst zu markieren und erst nach der kompletten
						Auswertung der <code>Condition</code> mit <code>ImpactExecutionOrder=Last</code> für
						alle Day/Person-Knoten zu löschen. Andernfalls können sich die Tagespreise bzw.
						Tagespreisanteile während der Auswertung ändern, und die
						<code>DayPriceIndex</code>-Bedingung hätte in einem solchen Fall unerwünschte
						Seiteneffekte.</para>
					<para xml:id="det_3657" xml:lang="de">Die <code>DayPriceIndex</code>-Teilbedingung stellt Bedingungen an den Tagespreis
						und dessen Auswertung ändert möglicherweise diese Tagespreise. Um die Auswertung der
						Bedingung eindeutig zu halten, ist es sinnvoll, die Einschränkung zu machen, dass
						PriceItems mit einer <code>DayPriceIndex</code>-Bedingung sich nicht auf andere
						PriceItems beziehen dürfen, die ebenfalls eine <code>DayPriceIndex</code>-Bedingung
						haben. Speziell bei Dauerreduktionen, also 100%-ige Abschläge führt dies sonst zu
						undefinierten Ergebnissen.</para>
					<para xml:id="det_3658" xml:lang="de"/>
				</section>

				<section xml:id="OtdsProcessPriceCalculationSumUpPriceNodeElements">
					<title><phrase xml:id="det_3659" xml:lang="de">Ermittlung der Gesamtkosten pro Tag, Person und Reise</phrase></title>
					<para xml:id="det_3660" xml:lang="de">Die Preisberechnung ist nahezu abgeschlossen. Alle PriceItems, die in der
						Kostenmatrix verblieben sind, werden nun noch aufsummiert. Dies erfolgt
						folgendermassen:</para>

					<bridgehead xml:id="det_3661" xml:lang="de">Gesamtpreis pro Tag und Person (ein Day/Person-Knoten)</bridgehead>
					<para xml:id="det_3662" xml:lang="de">Für jeden Kostenknoten innerhalb eines Day/Person-Knotens wird der Wert des
						absoluten PriceItems mit den Werten aller assoziierten relativen PriceItems
						multipliziert. Die auf diese Weise ermittelten Werte für jeden Kostenknoten werden
						innerhalb jedes Day/Person-Knotens aufsummiert um den Gesamtpreis für einen Tag und
						eine Person zu errechnen.</para>
					<bridgehead xml:id="det_3663" xml:lang="de">Beispiel</bridgehead>

					<figure>
						<title><phrase xml:id="det_3664" xml:lang="de">Gesamtkosten eines Day/Person-Knotens</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/TotalCostsPerDayPersonNode.png" format="PNG" contentdepth="70%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3665" xml:lang="de">Gesamtkosten eines Day/Person-Knotens</para>
							</textobject>
							<caption>
								<para xml:id="det_3666" xml:lang="de"> </para>
							</caption>
						</mediaobject>
					</figure>

					<para xml:id="det_3667" xml:lang="de">Um den Gesamtpreis des hervorgehobenen Day/Person-Knotens zu ermitteln, werden
						zunächst die einzelnen Kostenknoten berechnet:</para>
					<itemizedlist>
						<listitem>
							<para xml:id="det_3668" xml:lang="de">Kosten von Kostenknoten 1 = PriceItem 1 * PriceItem 4 * PriceItem 5 *
								PriceItem 6</para>
						</listitem>
						<listitem>
							<para xml:id="det_3669" xml:lang="de">Kosten von Kostenknoten 2 = PriceItem 2 * PriceItem 5</para>
						</listitem>
						<listitem>
							<para xml:id="det_3670" xml:lang="de">Kosten von Kostenknoten 3 = PriceItem 3 * PriceItem 5 * PriceItem 6</para>
						</listitem>
					</itemizedlist>
					<para xml:id="det_3671" xml:lang="de">Der Gesamtpreis ergibt sich dann aus der Summe der Kosten der Kostenknoten:</para>
					<para xml:id="det_3672" xml:lang="de">Gesamtkosten pro Tag und Person = Kosten von Kostenknoten 1 + Kosten von
						Kostenknoten 2 + Kosten von Kostenknoten 3</para>

					<bridgehead xml:id="det_3673" xml:lang="de">Gesamtpreis pro Tag</bridgehead>
					<para xml:id="det_3674" xml:lang="de">Um den Gesamtpreis für einen Tag zu berechnen, werden alle Kosten der
						Day/Person-Knoten dieses Tages summiert. In der Kostenmatrix werden also Spaltensummen
						gebildet und so die Kosten jeder Person für einen bestimmten Tag summiert.</para>

					<bridgehead xml:id="det_3675" xml:lang="de">Gesamtpreis pro Person</bridgehead>
					<para xml:id="det_3676" xml:lang="de">Um den Gesamtpreis für einen Person zu berechnen, werden alle Kosten der
						Day/Person-Knoten dieser Person summiert. In der Kostenmatrix werden also Zeilensummen
						gebildet und so die Kosten jedes Tages für eine bestimmte Person summiert.</para>

					<bridgehead xml:id="det_3677" xml:lang="de">Gesamtpreis pro Reise</bridgehead>
					<para xml:id="det_3678" xml:lang="de">Um den Gesamtpreis der Reise zu berechnen, werden die Kosten aller Day/Person-Knoten
						der Kostenmatrix summiert.</para>
					<para xml:id="det_3679" xml:lang="de"/>

					<figure>
						<title><phrase xml:id="det_3680" xml:lang="de">Gesamtkosten pro Tag, Person oder Reise</phrase></title>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/TotalCostsPerDayPersonOrProduct.png" format="PNG" contentdepth="70%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_3681" xml:lang="de">Gesamtkosten pro Tag, Person und Reise</para>
							</textobject>
							<caption>
								<para xml:id="det_3682" xml:lang="de"> </para>
							</caption>
						</mediaobject>
					</figure>
					<bridgehead xml:id="det_3683" xml:lang="de">Tagespreise und Tagespreisanteile zur Auswertung der
						DayPriceIndex-Condition</bridgehead>
					<para xml:id="det_3684" xml:lang="de">Für die Auswertung der <code>Condition</code> zum Ausführungszeitpunkt
							<code>ImpactExecutionOrder=Last</code> ist es notwendig Tagespreise zu ermitteln,
						um Teilbedingungen an die günstigsten bzw. teuersten Tage (<code>DayImpact</code>,
							<code>DayPriceIndex</code>) auswerten zu können. Es ist in dieser Bedingung nicht
						nur möglich, sich auf die günstigsten bzw. teuersten Tage zu beziehen, sondern
						zusätzlich auch auf die günstigsten bzw. teuersten <emphasis role="italic">Anteile</emphasis> der Tagespreise. Dies wird erreicht, indem nur PriceItems mit
						bestimmten Klassennamen in die Berechnung der Tagespreise einfliessen
							(<code>ConsideredPriceItemClasses</code> ) oder alternativ PriceItems mit
						bestimmten Klassennamen ausgeschlossen werden
							(<code>NotConsideredPriceItemClasses</code>). Weiterhin ist zu beachten, dass die
							<code>DayPriceIndex</code>-Condition den Typ des Tages spezifiziert (Stay oder
						CheckInOut).</para>
					<para xml:id="det_3685" xml:lang="de">Es wird davon ausgegangen, dass alle PriceItems in der Kostenmatrix im Sinne der
							<code>Condition</code> mit <code>ImpactExecutionOrder=AfterCombinatorics</code>
						gültig sind. Die Berechnung folgt folgendem Ablauf:</para>
					<itemizedlist>
						<listitem>
							<para xml:id="det_3686" xml:lang="de">Es werden die relevanten Tage durch Auswertung des Attributes
									<code>IntervalType</code> der Condition <code>DayPriceIndex</code>
								bestimmt. Dieses Attribut definiert, ob <code>Stay</code>-Tage oder
									<code>CheckInOut</code>-Tage bezüglich der Preishöhe betrachtet werden.
							</para>
						</listitem>
						<listitem>
							<para xml:id="det_3687" xml:lang="de">Für alle Day/Person-Knoten der relevanten Tage werden die Kosten jedes
								Kostenknotens ermittelt. Jedes PriceItems innerhalb des Kostenknotens wird
								zunächst auf Relevanz überprüft. </para>
							<para xml:id="det_3688" xml:lang="de">Ein PriceItem ist relevant, wenn folgende Kriterien erfüllt sind:</para>
								
								<itemizedlist>
									<listitem>
										<para xml:id="det_3689" xml:lang="de">Bei Angabe von <code>ConsideredPriceItemClasses</code> der
											Klassenname des PriceItems angegeben ist</para>
									</listitem>
									<listitem>
										<para xml:id="det_3690" xml:lang="de">Bei Angabe von <code>NotConsideredPriceItemClasses</code> der
											Klassenname des PriceItems nicht angegeben ist</para>
									</listitem>
								</itemizedlist>
							<para xml:id="det_4956" xml:lang="de">
								Falls das absolute PriceItem des Kostenknotens nicht relevant
								ist, sind die Kosten des Kostenknotens Null. Ansonsten errechnen sich die
								Kosten der Kostenknotens aus dem Wert des absoluten PriceItems multipliziert
								mit den Werten aller relevanten relativen PriceItems.</para>
							<para xml:id="det_3691" xml:lang="de">Um die Kosten des Day/Person-Knotens zu bestimmen, werden die ermittelten
								Kosten der Kostenknoten summiert.</para>
						</listitem>
						<listitem>
							<para xml:id="det_3692" xml:lang="de">Anschliessend erfolgt die Kostenberechnung für jeden Tag durch Bildung der
								Spaltensummern in der Kostenmatrix wie oben beschrieben</para>
						</listitem>
						<listitem>
							<para xml:id="det_3693" xml:lang="de">Die Tage werden nach den ermittelten Tagespreisen aufsteigend sortiert.
								Sollte eine eindeutige Sortierung aufgrund gleicher Tagespreis nicht möglich
								sein, wird in zweiter Ordnung aufsteigend nach Datum sortiert. Daraus ergeben
								sich Positionsindizes für die Tage, die in der
								<code>DayPriceIndex</code>-Bedingung für die Adressierung der Tage genutzt
								werden. </para>
						</listitem>
					</itemizedlist>
					<para xml:id="det_3694" xml:lang="de"/>
				</section>

				<section xml:id="OtdsProcessPriceCalculationStoreCombinablePriceItems">
					<title><phrase xml:id="det_3695" xml:lang="de">Vermerken der kombinierbaren PriceItems</phrase></title>
					<para xml:id="det_3696" xml:lang="de">Als finaler Schritt der Preisberechnung werden für die weitere Verarbeitung die
						PriceItems, die sich in der Preisberechnung als kombinierbar erwiesen haben, in den am
						Angebot beteiligten Komponenten als Instanzwert hinterlegt. Dies ist notwendig, um die
							<code>Booking</code>-Elemente und <code>Properties</code>-Elemente auszuwerten,
						die in PriceItems notiert werden können. Dies wird im Folgenden beschrieben.</para>
					<para xml:id="det_3697" xml:lang="de"/>
				</section>

			</section>

			<section xml:id="OtdsProcessBooking">
				<title><phrase xml:id="det_3698" xml:lang="de">Verarbeitung der <code>BookingParameter</code></phrase></title>

				<para xml:id="det_3699" xml:lang="de">Die Verarbeitung des Booking Elementes gliedert sich in zwei Teile:</para>

				<orderedlist>
					<listitem>
						<para xml:id="det_3700" xml:lang="de">Einsammeln und Zusammenfassen der einzelnen BookingGroup Einträge</para>
					</listitem>
					<listitem>
						<para xml:id="det_3701" xml:lang="de">Erstellung des Buchungsdatensatzes aus den Booking Informationen</para>
					</listitem>
				</orderedlist>

				<section xml:id="OtdsProcessBookingStructure">
					<title><phrase xml:id="det_3702" xml:lang="de">Struktur der Buchungsinformationen</phrase></title>

					<para xml:id="det_3703" xml:lang="de">Die Buchungsinformationen werden nach Parametern gruppiert. Ein Parameter ist die
						kleinste eigenständige Informationseinheit der Buchungsinformationen. Demgegenüber
						steht das Feld, welches einen Wert der Buchungsmaske beschreibt. Einem Feld können
						mehrere Parameter zugeordnet werden. Die einzelnen Parameter eines Feldes werden nach
						Vorgabe zu einem Wert zusammengefasst.</para>

					<para xml:id="det_3704" xml:lang="de">Felder sind in Gruppen organisiert. Eine Gruppe beschreibt eine Zeile der
						Buchungsmaske (je nach Art der Gruppe kann dies eine Leistungszeile oder auch eine
						Personenzeile sein).</para>

					<para xml:id="det_3705" xml:lang="de">Auf der obersten Ebene werden Gruppen zu Bereichen (<code>Area</code>)
						zusammengefasst.</para>

					<para xml:id="det_3706" xml:lang="de">Gruppen werden durch Komponenteninstanzen angelegt. Sie werden mittels
							<code>Area</code>, <code>Source</code> und <code>Class</code> referenziert.</para>

					<para xml:id="det_3707" xml:lang="de">Die aktuelle OTDS-1.0 Spezifikation präzisiert diese Begriffe für das TOMA
						Buchungssystem. Das zugrundeliegende Konzept ist jedoch vollständig
						Buchungssystemunabhängig. Das Buchungssystem manifestiet sich nur in der Vorgabe der
						verfügbaren Werte für <code>Area</code> und <code>Field</code> und in der Zuweisung
						der Felder auf bestimmte Bereiche.</para>

					<section xml:id="OtdsProcessBookingStructureTOMA">
						<title><phrase xml:id="det_3708" xml:lang="de">Beispiel: TOMA</phrase></title>

						<!-- <para>@TODO: An aktuelle XSD Spec anpassen</para> -->

						<para xml:id="det_3709" xml:lang="de">Die TOMA Maske unterteilt sich z.B. in drei Bereiche:</para>

						<itemizedlist>
							<listitem>
								<para xml:id="det_3710" xml:lang="de">Global</para>
							</listitem>
							<listitem>
								<para xml:id="det_3711" xml:lang="de">Personen</para>
							</listitem>
							<listitem>
								<para xml:id="det_3712" xml:lang="de">Leistungen</para>
							</listitem>
						</itemizedlist>

						<para xml:id="det_3713" xml:lang="de">Während der globale Bereich direkt die globalen Parameter (wie Brand, Reiseart
							usw.) enthält, bestehen die Bereiche Personen und Leistungen aus Gruppen. Eine
							Gruppe im Personenbereich besteht aus den Feldern Kennzeichen und Alter, eine
							Gruppe im Leistungsbereich enthält die Felder Leistungsart, Leistungscode,
							Zimmercode, Verpflegungscode, Datum und Dauer.</para>
					</section>
				</section>
				<section xml:id="OtdsProcessBookingCollecting">
					<title><phrase xml:id="det_3714" xml:lang="de">Einsammeln der BookingGroup Elemente</phrase></title>

					<para xml:id="det_3715" xml:lang="de">Die Buchungsinformationen sind in den <code>Booking/BookingGroup</code> Elementen
						enthalten. Die Buchungsinformationen werden durch Einsammeln dieser Elemente aus dem
						Angebot zusammengestellt. Dabei wird die optional in jedem <code>BookingGroup</code>
						Element angegebene <code>Condition</code> ausgewertet. Nur <code>BookingGroup</code>
						Elemente, deren <code>Condition</code> nicht <code>False</code> ist, werden
						übernommen.</para>

					<para xml:id="det_3716" xml:lang="de">Weitere <code>BookingGroup</code> Elemente finden sich in den <code>PriceItem</code>
						Elementen. Diese werden nur übernommen, wenn das <code>PriceItem</code> in der
						Preisberechnung aktiv war, das heisst, dieses <code>PriceItem</code> im
							<code>PriceItems</code> Wert der Instanz zu finden ist.</para>

					<para xml:id="det_3717" xml:lang="de">Hier eine vollständige Auflistung der <code>Booking</code> Elemente in OTDS: <simplelist>
							<member>/Otds/Products/Product/Booking</member>
							<member>/Otds/Brands/Brand/Booking</member>
							<member>/Otds/Accommodations/Accommodation/SellingAccom/Booking</member>
							<member>/Otds/Accommodations/Accommodation/SellingAccom/Board/Booking</member>
							<member>/Otds/Accommodations/Accommodation/SellingAccom/Board/PriceItems/PriceItem/Booking</member>
							<member>/Otds/Accommodations/Accommodation/SellingAccom/Unit/SellingUnit/Booking</member>
							<member>/Otds/Accommodations/Accommodation/SellingAccom/Unit/SellingUnit/PriceItems/PriceItem/Booking</member>
							<member>/Otds/Accommodations/Accommodation/SellingAccom/PriceItems/PriceItem/Booking</member>
							<member>/Otds/Accommodations/PriceItems/PriceItem/Booking</member>
							<member>/Otds/Flights/OnewayFlights/OnewayFlight/Booking</member>
							<member>/Otds/Flights/OnewayFlights/OnewayFlight/PriceItems/PriceItem/Booking</member>
							<member>/Otds/Flights/OnewayFlights/OnewayFlight/BookingClass/Booking</member>
							<member>/Otds/Flights/OnewayFlights/OnewayFlight/BookingClass/PriceItems/PriceItem/Booking</member>
							<member>/Otds/Flights/OnewayFlights/PriceItems/PriceItem/Booking</member>
							<member>/Otds/Flights/ReturnFlights/ReturnFlight/Booking</member>
							<member>/Otds/Flights/ReturnFlights/ReturnFlight/Outbound/PriceItems/PriceItem/Booking</member>
							<member>/Otds/Flights/ReturnFlights/ReturnFlight/Inbound/PriceItems/PriceItem/Booking</member>
							<member>/Otds/Flights/ReturnFlights/ReturnFlight/BookingClass/Booking</member>
							<member>/Otds/Flights/ReturnFlights/ReturnFlight/BookingClass/PriceItems/PriceItem/Booking</member>
							<member>/Otds/Flights/ReturnFlights/ReturnFlight/PriceItems/PriceItem/Booking</member>
							<member>/Otds/Flights/ReturnFlights/PriceItems/PriceItem/Booking</member>
							<member>/Otds/Addons/Addon/Booking</member>
							<member>/Otds/Addons/Addon/ServiceFeature/Booking</member>
							<member>/Otds/Addons/Addon/ServiceFeature/PriceItems/PriceItem/Booking</member>
							<member>/Otds/Addons/Addon/Service/Booking</member>
							<member>/Otds/Addons/Addon/Service/PriceItems/PriceItem/Booking</member>
							<member>/Otds/Addons/Addon/PriceItems/PriceItem/Booking</member>
							<member>/Otds/DefinedComponents/DefineComponent/Booking</member>
						</simplelist></para>

					<para xml:id="det_3718" xml:lang="de">Eine wichtige Sonderrolle spielt hier <code>ProductComponent</code>: Ein Gesamtpaket
						bestehend aus einem Hauptangebot und After-Sale Leistungen wird immer durch die
						Buchungsparameter der After-Sale Leistung gebucht. Die Buchungsparameter des
						Hauptangebotes werden <emphasis>nicht</emphasis> eigens verarbeitet. Da das After-Sale
						Angebot eine <code>ProductComponent</code> enthält und somit das Hauptangebot als
						Instanz im After-Sale Angebot enthalten ist, wird das Hauptangebot automatisch bei der
						Verarbeitung des After-Sale Angebotes mitverarbeitet. Dies ist auch notwendig, da alle
						diese Leistungen in einer Buchungsmaske gebucht werden. Dies ermöglicht es auch dem
						After-Sale Angebot beliebige Einträge des Hauptangebotes zu überschreiben oder zu
						ergänzen.</para>

					<para xml:id="det_3719" xml:lang="de">Jedes <code>BookingGroup</code> Element besitzt zusätzlich ein Attribut
							<code>EvaluationBase</code>. Dieses Attribut steuert das mögliche Kopieren eines
							<code>BookingGroup</code> Elementes. Es kann die Werte <code>Person</code>,
							<code>Day</code> oder <code>Person Day</code> enthalten.</para>

					<para xml:id="det_3720" xml:lang="de">Ist der Wert der <code>EvaluationBase</code> nicht leer, so wird das Booking Element
						für Tage bzw. Personen kopiert und die <code>Condition</code> separat ausgewertet.
						Jede dieser Kopien wird durch einen eindeutigen (internen) Instanz-Index
						identifiziert. <code>EvaluationBase</code> kann also ein <code>BookingGroup</code>
						Element vervielfachen. Da der interne Instanz-Index mit Teil der Identifikation einer
						Gruppe ist kann so pro Person oder pro Tag eine Gruppe angelegt werden (das Anlegen
						einer Gruppe pro Tag ist allerdings eher akademisch und in TOMA nicht
						vorgesehen).</para>

					<para xml:id="det_3721" xml:lang="de">Die <code>BookingGroup</code> Elemente werden nach ihrem <code>Priority</code>
						Attribut und, bei identischem <code>Priority</code> Attribut, nach
							<emphasis>document-order</emphasis> und möglicherweise dem internen Instanz-Index
						sortiert. Spätere <code>BookingGroup</code> Elemente können Werte aus früheren
						Elementen überschreiben.</para>

				</section>
				<section xml:id="OtdsProcessBookingParameter">
					<title><phrase xml:id="det_3722" xml:lang="de">Buchungsparameter</phrase></title>

					<para xml:id="det_3723" xml:lang="de">Die exakte Parameterstruktur wird zunächst nicht vorgegeben (sie ist für das Konzept
						irrelevant). Die Parameterstruktur wird durch zwei Gruppen von Attributen
						beschrieben:</para>

					<itemizedlist>
						<listitem>
							<para xml:id="det_3724" xml:lang="de">Beschreibung des Parameters und des Buchungsfeldes</para>
						</listitem>
						<listitem>
							<para xml:id="det_3725" xml:lang="de">Regeln zum Zusammenfassen mehrerer Parameter in einem Buchungsfeld</para>
						</listitem>
					</itemizedlist>

					<section xml:id="OtdsProcessBookingParameterGroups">
						<title><phrase xml:id="det_3726" xml:lang="de">Gruppenidentifizierung</phrase></title>

						<para xml:id="det_3727" xml:lang="de">Jeder <code>BookingGroup</code> werden eine oder mehrere Komponenteninstanzen
							zugeordnet. Wird ein <code>BookingGroup</code> Element verarbeitet so wird
							zunächst dessen <code>Source</code> Atribut ausgewertet. Das Ergebnis ist eine
							Menge von Testinstanzen. Nin wird nachgesehen, ob es schon eine Gruppe mit
							identischen Werten für <code>Area</code>, <code>Class</code> und Instanz-Index
							gibt in deren Menge von zugeordneten Komponenteninstanzen sich mindestens eine
							dieser Testinstanzen befindet. Wird eine solche Gruppe gefunden, bezieht sich das
								<code>BookingGroup</code> Element auf diese Gruppe sonst wird eine neue Gruppe
							angelegt. Der neuen Gruppe werden die von <code>Source</code> referenzierten
							Komponenteninstanzen zugoerdnet.</para>

						<para xml:id="det_3728" xml:lang="de">Im Allgemeinen wird die <code>Source</code> referenz eindeutig sein und man kann
							einfach davon sprechen, das die Gruppe von einer bestimmten Komponenteninstanz
							angelegt wurde: Beispielswiese wird üblicherweise die Buchungszeile des Hotels im
							Leistungsbereich durch die <code>SellingAccom</code> Instanz angelegt.</para>

						<para xml:id="det_3729" xml:lang="de">Wichtig ist, das hier unter der erzeugenden Komponenteninstanz
								<emphasis>nicht</emphasis> diejenige Komponenteninstanz verstanden wird, in
							welcher sich das <code>BookingGrouop</code> Element in der Dokumentstruktur
							befindet sondern einzig die durch <code>Source</code> referenzierte
							Komponenteninstanz. Ist <code>Source</code> == <code>ThisComponent</code> (der
							Standardwert) so fallen diese beiden Begriffe natürlich zusammen.</para>

						<para xml:id="det_3730" xml:lang="de">Eine Gruppe ist somit eindeutig durch</para>
						<itemizedlist>
							<listitem>
								<para xml:id="det_3731" xml:lang="de"><code>Area</code></para>
							</listitem>
							<listitem>
								<para xml:id="det_3732" xml:lang="de">eine der erzeugenden Komponenteninstanzen</para>
							</listitem>
							<listitem>
								<para xml:id="det_3733" xml:lang="de"><code>Class</code></para>
							</listitem>
							<listitem>
								<para xml:id="det_3734" xml:lang="de">und den internen Instanz-Index des <code>BookingGroup</code>
									Elementes</para>
							</listitem>
						</itemizedlist>
						<para xml:id="det_3735" xml:lang="de">identifiziert. Das bedeutet:</para>

						<itemizedlist>
							<listitem>
								<para xml:id="det_3736" xml:lang="de">Innerhalb einer Komponenteninstanz kann genau eine Gruppe je
										<code>Area</code>, <code>Class</code> und Instanz-Index angelegt
									werden.</para>
							</listitem>
							<listitem>
								<para xml:id="det_3737" xml:lang="de">Da Gruppenreferenzen wegen der Nicht-Eindeutigkeit der
										<code>Source</code> Angabe im Allgemeinen nicht eindeutig sind, kann
									eine <code>BookingGroup</code> sich auf mehrere gleichartige Gruppen
									beziehen. Es können also in Ausnamefällen von einer
										<code>BookingGroup</code> Werte in mehreren Gruppen parallel gesetzt
									werden.</para>
							</listitem>
							<listitem>
								<para xml:id="det_3738" xml:lang="de">Innerhalb einer Komponente können sich mehrere <code>BookingGroup</code>
									Elemente auf dieselbe Gruppe beziehen. Insbesondere referenzieren alle
										<code>BookingGroup</code> Elemente mit
										<code>Source="ThisComponent"</code> (der Vorgabewert) und identischer
										<code>Class</code> und identischen <code>Instanz-Index</code> dieselbe
									in dieser Komponente angelegte Gruppe.</para>
							</listitem>
						</itemizedlist>

					</section>
					<section xml:id="OtdsProcessBookingParameterAndField">
						<title><phrase xml:id="det_3739" xml:lang="de">Parameter und Buchungsfeld</phrase></title>

						<para xml:id="det_3740" xml:lang="de">Ein einzelner Parameter wird durch die Werte <simplelist type="inline">
								<member><code>Area</code> (<code>BookingGroup</code> Attribut)</member>
								<member><code>Source</code> (<code>BookingGroup</code> Attribut)</member>
								<member><code>Class</code> (<code>BookingGroup</code> Attribut)</member>
								<member>der interne Instanz-Index</member>
								<member><code>Field</code> (<code>BookingParameter</code> Attribut)</member>
								<member><code>Name</code> (<code>BookingParameter</code> Attribut)</member>
							</simplelist> identifiziert. Dabei referenzieren alle Werte außer
								<code>Name</code> ein eindeutiges Feld der Buchungsmaske (möglicherweise in
							einer bestimmten Buchungszeile) während <code>Name</code> mehrere Parameter
							unterscheidet, welche im weiteren Verlauf zu einem einzelnen Wert zusammengesetzt
							und in ein Buchungsfeld eingetragen werden.</para>

						<para xml:id="det_3741" xml:lang="de">Besonders hervorzuheben sind folgende Werte:</para>

						<itemizedlist>
							<listitem>
								<para xml:id="det_3742" xml:lang="de">Der Wert <code>Source="Product"</code> wird verwendet um Buchungsfelder
									zu identifizieren, die nicht in Zeilen aufgegliedert sind (z.B. der
									Brand-Code). Solche Parameter werden in eine einzelne von der
										<code>Product</code> Komponente angelegte Buchungszeile
									plaziert.</para>
							</listitem>
							<listitem>
								<para xml:id="det_3743" xml:lang="de">Der Standardwert <code>Source="ThisComponent"</code> erzeugt automatisch
									eine neue Buchungszeile für die Komponente, in welcher sich die
										<code>BookingGroup</code> befindet.</para>
							</listitem>
						</itemizedlist>

					</section>
					<section xml:id="OtdsProcessBookingParameterIdentification">
						<title><phrase xml:id="det_3744" xml:lang="de">Parameteridentifikation und Überschreiben von Feldwerten</phrase></title>

						<para xml:id="det_3745" xml:lang="de">Ein einzelner Parameter ist somit durch <code>Area</code>, erzeugende
							Komponenteninstanzen, Instanz-Index, <code>Class</code>, <code>Field</code> und
								<code>Name</code> eindeutig identifiziert. Enthalten mehrere verschiedene
								<code>BookingGroup</code> Elemente Werte für ein und denselben Parameter, so
							überschreibt das letzte Element (in der oben angegebenen <code>Priority</code> und
								<emphasis>document-order</emphasis> Sortierung) alle anderen Werte.</para>

						<para xml:id="det_3746" xml:lang="de">Wird in einem <code>BookingGroup</code> Element ein <code>BookingReplace</code>
							notiert, so werden an dieser Stelle alle referenzierten Gruppen ersatzlos
							gelöscht.</para>

						<para xml:id="det_3747" xml:lang="de">Das <code>BookingReplace</code> referenziert die zu löschenden Gruppen mittels
								<code>Source</code> und <code>Class</code>. Die <code>Area</code> ist durch
							das <code>BookingGroup</code> Element vorgegeben. Neben der üblichen Werte darf in
								<code>BookingReplace</code> auch <code>*</code> angegeben werden. Diese
							Notation referenziert alle Gruppen unabhängig vom Wert dieses Parameters.</para>
					</section>
				</section>
				<section xml:id="OtdsProcessBookingFields">
					<title><phrase xml:id="det_3748" xml:lang="de">Erzeugung der Feldwerte</phrase></title>

					<para xml:id="det_3749" xml:lang="de">Die Buchungsfelder werden durch <simplelist type="inline">
							<member><code>Area</code></member>
							<member>erzeugende Komponenten</member>
							<member>Instanz-Index</member>
							<member><code>Class</code></member>
							<member><code>Field</code></member>
						</simplelist> identifiziert. Jedem Buchungsfeld können beliebig viele
						Buchungsparameter zugeordnet werden. Diese Parameter unterscheiden sich nur im
							<code>Name</code> Attribut.</para>

					<para xml:id="det_3750" xml:lang="de">Alle Parameter eines Buchungsfeldes werden nach <code>Index</code> und, bei gleichem
							<code>Index</code> nach <code>Name</code> sortiert. Die Parameter werden dann in
						dieser Reihenfolge aneinandergehängt. Dabei gibt jedes Feld über zusätzliche Attribute
						an, wie diese Zusammensetzung erfolgen soll:</para>

					<variablelist>
						<varlistentry>
							<term xml:id="det_3751" xml:lang="de"><emphasis><code>LeftSeparator</code></emphasis></term>
							<listitem>
								<para xml:id="det_3752" xml:lang="de">Ist der Parameter nicht der erste Parameter, wird dieser Separator
									direkt vor dem Parameter eingefügt.</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_3753" xml:lang="de"><emphasis><code>RightSeparator</code></emphasis></term>
							<listitem>
								<para xml:id="det_3754" xml:lang="de">Ist der Parameter nicht der letzte Parameter, wird dieser Separator
									direkt nach dem Parameter eingefügt.</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_3755" xml:lang="de"><emphasis><code>PadLength</code></emphasis></term>
							<listitem>
								<para xml:id="det_3756" xml:lang="de">Gibt an, dass der Parameter mittels eines Füllzeichens auf eine feste
									Länge gebracht werden soll. Ist der Parameter schon länger als
										<code>PadLength</code>, wird kein Padding vorgenommen. Vorgabe ist
									0.</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_3757" xml:lang="de"><emphasis><code>PadOrientation</code></emphasis></term>
							<listitem>
								<para xml:id="det_3758" xml:lang="de">Legt fest, auf welcher Seite des Parameters das Füllzeichen eingefügt
									wird. Vorgabe ist <code>Right</code>.</para>
								<itemizedlist>
									<listitem>
										<para xml:id="det_3759" xml:lang="de"><code>Left</code> - fügt das Padding links ein.</para>
									</listitem>
									<listitem>
										<para xml:id="det_3760" xml:lang="de"><code>Right</code> - fügt das Padding rechts ein.</para>
									</listitem>
								</itemizedlist>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_3761" xml:lang="de"><emphasis><code>Padding</code></emphasis></term>
							<listitem>
								<para xml:id="det_3762" xml:lang="de">Legt das Zeichen fest, mit welchem der Parameter aufgefüllt wird.
									Vorgabe ist das Leerzeichen.</para>
							</listitem>
						</varlistentry>
						<varlistentry>
							<term xml:id="det_3763" xml:lang="de"><emphasis><code>PadCondition</code></emphasis></term>
							<listitem>
								<para xml:id="det_3764" xml:lang="de">Legt zusätzliche Bedingungen fest, wann das Padding zu erfolgen hat.
									Vorgabe ist <code>Always</code>.</para>
								<itemizedlist>
									<listitem>
										<para xml:id="det_3765" xml:lang="de"><code>Always</code> - Das Padding wird immer eingefügt.</para>
									</listitem>
									<listitem>
										<para xml:id="det_3766" xml:lang="de"><code>NotFirst</code> - Das Padding wird eingefügt, wenn der
											Parameter nicht der erste Parameter ist.</para>
									</listitem>
									<listitem>
										<para xml:id="det_3767" xml:lang="de"><code>NotLast</code> - Das Padding wird eingefügt, wenn der
											Parameter nicht der letzte Parameter ist.</para>
									</listitem>
									<listitem>
										<para xml:id="det_3768" xml:lang="de"><code>NotAtEnds</code> - Das Padding wird eingefügt, wenn der
											Parameter weder der erste noch der letzte Parameter ist.</para>
									</listitem>
								</itemizedlist>
							</listitem>
						</varlistentry>
					</variablelist>

					<para xml:id="det_3769" xml:lang="de">Die einzelnen Parameter werden nun unter Berücksichtigung der Separator und des
						Paddings zu einem Wert zusammengesetzt.</para>

				</section>
				<section xml:id="OtdsProcessBookingValues">
					<title><phrase xml:id="det_3770" xml:lang="de">Wertangabe</phrase></title>

					<para xml:id="det_3771" xml:lang="de">Jedes <code>BookingParameter</code> Element enthält einen Wert:</para>

					<itemizedlist>
						<listitem>
							<para xml:id="det_3772" xml:lang="de">Entweder eine Konstante. Diese wird mittels
									<code>&lt;Value&gt;...&lt;/Value&gt;</code> angegeben.</para>
						</listitem>

						<listitem>
							<para xml:id="det_3773" xml:lang="de">Oder eine Referenz auf einen Instanzwert. Diese Referenz wird mittels eines
								Elementes wie in Filter oder Condition angegeben, z.B. <code>&lt;Date
									DayType="CheckIn" Source="Accommodation"/&gt;</code>. Natürlich kann hier
								nicht auf alle Werte Bezug genommen werden. Erlaubt sind:</para>
							<itemizedlist>
								<listitem>
									<para xml:id="det_3774" xml:lang="de"><code>Date</code> mit <code>DayType</code> = <code>CheckIn</code>,
											<code>CheckOut</code> oder <code>Stay</code></para>
								</listitem>
								<listitem>
									<para xml:id="det_3775" xml:lang="de"><code>Duration</code></para>
								</listitem>
								<listitem>
									<para xml:id="det_3776" xml:lang="de"><code>PersonAge</code> mit einem zusätzlichen <code>AgeType</code> =
											<code>BookingAge</code>, <code>TravelAge</code>,
											<code>DateOfBirth</code></para>
								</listitem>
							</itemizedlist>
						</listitem>
					</itemizedlist>

					<para xml:id="det_3777" xml:lang="de">Zusätzlich zur Wertangabe enthält das Element optional Formatierungsanweisungen für
						Datumswerte. Diese werden durch das Attribut <code>DateFormat</code> angegeben. Dieses
						Attribut enthält ein Formatierungstemplate welches festlegt, wie das Datum anzuzeigen
						ist. Dieses Template folgt den Regeln des <code>picture</code> Argumentes der
							<code>xslt:format-date</code> Funktion aus dem XSLT 2.0 Standard. Die in diesem
						Standard definierten Argumente <code>language</code> und <code>country</code> werden
						auf den Wert des <code>Market</code> Elementes der OTDS Lieferung gesetzt.</para>
				</section>
				<section xml:id="OtdsProcessBookingExamples">
					<title><phrase xml:id="det_3778" xml:lang="de">Beispiele</phrase></title>


					<programlisting><![CDATA[<Booking>
  <BookingGroup Area="GlobalArea">
    <Source="Product" Field="Brand"><Value>TUI</Value></BookingParameter>
  </BookingGroup>
  <BookingGroup Area="PersonArea" EvaluationBase="Person">
    <BookingParameter Field="Age"><PersonAge AgeType="DateOfBirth" DateFormat="[D01].[M01].[Y0001]"/></BookingParameter>
    <BookingParameter Field="Title"><Value>M</Value></BookingParameter>
  </BookingGroup>
  <BookingGroup Area="PersonArea" EvaluationBase="Person">
    <Condition>
      <PersonImpact>
        <PersonGenders>Female</PersonGenders>
      </PersonImpact>
    </Condition>
    <BookingParameter Field="Title"><Value>F</Value></BookingParameter>
  </BookingGroup>
  <BookingGroup Area="PersonArea" EvaluationBase="Person">
    <Condition>
      <PersonImpact>
        <PersonAge><Age>12</Age></PersonAge>
      </PersonImpact>
    </Condition>
    <BookingParameter Field="Title"><Value>C</Value></BookingParameter>
  </BookingGroup>
</Booking>]]></programlisting>

				</section>
			</section>
			<section xml:id="OtdsProcessProperties">
				<title><phrase xml:id="det_3779" xml:lang="de">Verarbeitung der Properties</phrase></title>

				<para xml:id="det_3780" xml:lang="de">Die <code>Properties</code> Element enthalten sämtliche informativen Eigenschaften der
					Komponenten. Die Eigenschaften eines Angebotes werden durch Zusammenfassen der
					Eigenschaften der Komponenteninstanzen dieses Angebotes je Hauptkomponente erzeugt. Das
					Verarbeitungsmodell legt nur fest, wie die zusammengefassten Eigenschaften eines Angebotes
					bestimmt werden. Die weitere Interpretation dieser Werte ist Sache des Vertriebssystems
					(z.Bsp. kann ein Vertriebssystem eine Suche nach Hotelkategorie ermöglichen. Die
					notwendigen Informationen sind in den <code>Properties</code> enthalten).</para>

				<para xml:id="det_3781" xml:lang="de">Da auch <code>PriceItem</code> Elemente <code>Properties</code> enthalten können, lassen
					sich die Gesamteigenschaften des Angebotes sehr flexibel steuern. Die Verarbeitung der
						<code>Properties</code> Elemente einer Hauptkomponenteninstanz folgt einem einfachen
					Ablauf:</para>

				<itemizedlist>
					<listitem>
						<para xml:id="det_3782" xml:lang="de">Zunächst werden sämtliche <code>PropertyGroup</code> Elemente der
							Hauptkomponenteninstanz eingesammelt. Ein <code>PropertyGroup</code> Element wird
							übernommen wenn:</para>
						<itemizedlist>
							<listitem>
								<para xml:id="det_3783" xml:lang="de">Die <code>Condition</code> der <code>PropertyGroup</code> erfüllt ist
									(oder die <code>PropertyGroup</code> nicht über eine
										<code>Condition</code> verfügt).</para>
							</listitem>
							<listitem>
								<para xml:id="det_3784" xml:lang="de">Falls sich die <code>PropertyGroup</code> innerhalb eines
										<code>PriceItem</code> befindet und das <code>PriceItem</code> am Ende
									der Preisberechnung aktiv war.</para>
							</listitem>
						</itemizedlist>
					</listitem>
					<listitem>
						<para xml:id="det_3785" xml:lang="de">Die übernommenen <code>PropertyGroup</code> Elemente werden nach dem Wert des
								<code>Priority</code> Attributs sortiert. Bei gleicher <code>Priority</code>
							werden die <code>PropertyGroup</code> Elemente nach
								<emphasis>document-order</emphasis> sortiert.</para>
					</listitem>
					<listitem>
						<para xml:id="det_3786" xml:lang="de">Die <code>PropertyGroup</code> Elemente werden in dieser Reihenfolge
							zusammengefasst. Kindelemente der <code>PropertyGroup</code> überschreiben
							entsprechende zuvor gefundene Elemente mit demselben Namen. Das Endergebnis ist
							eine einzelne <code>PropertyGroup</code>, welche sämtliche zusammengefassten
							Eigenschaften der Hauptkomponenteninstanz enthält.</para>
					</listitem>
					<listitem>
						<para xml:id="det_3787" xml:lang="de">Die Beiden Eigenschaften <code>PriceType</code> und <code>TextInformation</code>
							spielen eine Sonderrolle: Diese Eigenschaften können nicht sinnvoll
							zusammengefasst werden und werden somit bei dieser Verarbeitung ignoriert. Die
							Eigenschaften bleiben in den jeweiligen <code>Properties</code> Elementen verteilt
							im Angebot erhalten und können falls notwendig dort ausgewertet werden.</para>
					</listitem>
				</itemizedlist>

				<para xml:id="det_3788" xml:lang="de">Nach der Verarbeitung existiert somit für jede Hauptkomponenteninstanz (und nicht nur
					für jeden Hauptkomponententyp) ein <code>PropertyGroup</code> Element (ein
					zusammengesetzter Flug erhält somit ein <code>PropertyGroup</code> Element je
					Flugbestandteil).</para>
			</section>
		</section>
	</section>
	<appendix xml:id="Appendix">
		<title><phrase xml:id="det_3789" xml:lang="de">Anhang</phrase></title>
		<section role="Anhang" xml:id="AppendixExamples">
			<title><phrase xml:id="det_3790" xml:lang="de">Liste der vorhandenen Beispiele</phrase></title>
			<para xml:id="det_3791" xml:lang="de">Hier finden Sie eine komplette Liste aller Beispieldateien. </para>
			<para xml:id="det_3792" xml:lang="de">Die Beispiele werden kurz beschrieben. Alle in dieser Dokumentation und in der Präsentation
				"OTDS Overview - Inside OTDS" verwendeten Beispiele finden sich auch in den Beispieldateien. </para>
			<para xml:id="det_3793" xml:lang="de">AccommodationExamples.xml </para>
			<para xml:id="det_3794" xml:lang="de">AvailabitiesExamples.xml </para>
			<para xml:id="det_3795" xml:lang="de">blank_testcases-otds.xml </para>
			<para xml:id="det_3796" xml:lang="de">BookingActionsExamples.xml </para>
			<para xml:id="det_3797" xml:lang="de">Complete_Example_Package.xml </para>
			<para xml:id="det_3798" xml:lang="de">ConditionalTag Example.xml </para>
			<para xml:id="det_3799" xml:lang="de">ConditionExamples.xml </para>
			<para xml:id="det_3800" xml:lang="de">Demo_Angebotskalkulation.xml </para>
			<para xml:id="det_3801" xml:lang="de">Example_UK_Package_01.xml </para>
			<para xml:id="det_3802" xml:lang="de">Flight 3UnknownSegments.xml </para>
			<para xml:id="det_3803" xml:lang="de">Flight Rules Example.xml </para>
			<para xml:id="det_3804" xml:lang="de">Flight3Segments.xml </para>
			<para xml:id="det_3805" xml:lang="de">Occupancy Example.xml </para>
			<para xml:id="det_3806" xml:lang="de">OneWayFlight.xml </para>
			<para xml:id="det_3807" xml:lang="de">OneWayFlightBookingClassAvailability.xml </para>
			<para xml:id="det_3808" xml:lang="de">OTDS INFX Example.xml </para>
			<para xml:id="det_3809" xml:lang="de">Preisberechnungsbeispiel.xml </para>
			<para xml:id="det_3810" xml:lang="de">PriceItemExamples.xml </para>
			<para xml:id="det_3811" xml:lang="de">ProductsRulesExamples.xml </para>
			<para xml:id="det_3812" xml:lang="de">PropertiesExamples.xml </para>
			<para xml:id="det_3813" xml:lang="de">ReturnFlight.xml</para>
			<para xml:id="det_3814" xml:lang="de">In den Beispieldateien befinden sich zu den einzelnen Abschnitten Kommentare in deutsch und
				englisch, die die speziellen Lösungen näher beschreiben. </para>
		</section>
		<section role="Anhang" xml:id="AppendixNormsystem">
			<title><phrase xml:id="det_3815" xml:lang="de">Anhang: Verwendete Normsysteme</phrase></title>
			<para xml:id="det_3816" xml:lang="de">Folgende Normsysteme werden bei einer OTDS-Datenlieferung unterstützt:</para>
			
				<informaltable>
					<tgroup cols="3">
						<tbody valign="top">
							<row valign="top">
								<entry>
									<itemizedlist>
										<listitem>
											<para xml:id="det_3817" xml:lang="de">Ländernamen</para>
										</listitem>
									</itemizedlist>
								</entry>
								<entry>
									<para xml:id="det_3818" xml:lang="de">ISO-Norm für Ländernamen-Kürzel</para>
								</entry>
								<entry>
									<para xml:id="det_3819" xml:lang="de">ISO 3166-2</para>
								</entry>
							</row>
							<row valign="top">
								<entry>
									<itemizedlist>
										<listitem>
											<para xml:id="det_3820" xml:lang="de">Flughäfen</para>
										</listitem>
									</itemizedlist>
								</entry>
								<entry>
									<para xml:id="det_3821" xml:lang="de">IATA-Flughafen-Codes für die Codierung der Flughäfen </para>
								</entry>
								<entry>
									<para xml:id="det_3822" xml:lang="de">IATA 3-Zeichen</para>
								</entry>
							</row>
							<row valign="top">
								<entry>
									<itemizedlist>
										<listitem>
											<para xml:id="det_3823" xml:lang="de">Währung</para>
										</listitem>
									</itemizedlist>
								</entry>
								<entry>
									<para xml:id="det_3824" xml:lang="de">ISO-Norm für Währungs-Abkürzungen</para>
								</entry>
								<entry>
									<para xml:id="det_3825" xml:lang="de">ISO 4217</para>
								</entry>
							</row>
							<row valign="top">
								<entry>
									<itemizedlist>
										<listitem>
											<para xml:id="det_3826" xml:lang="de">Sprache / Sprachraum</para>
										</listitem>
									</itemizedlist>
								</entry>
								<entry>
									<para xml:id="det_3827" xml:lang="de">ISO-Norm für Sprachen / Sprachcode</para>
								</entry>
								<entry>
									<para xml:id="det_3828" xml:lang="de">ISO 639</para>
								</entry>
							</row>
							<row valign="top">
								<entry>
									<itemizedlist>
										<listitem>
											<para xml:id="det_3829" xml:lang="de">Hotelketten</para>
										</listitem>
									</itemizedlist>
								</entry>
								<entry>
									<para xml:id="det_3830" xml:lang="de">OTDS interne Kennzeichnung von Hotelketten</para>
								</entry>
								<entry>
									<para xml:id="det_3831" xml:lang="de">OTDS-Hotelketten-ID</para>
									<para xml:id="det_3832" xml:lang="de"><link linkend="AnhangHotelChain">s. Anhang</link></para>
								</entry>
							</row>
						</tbody>
					</tgroup>
				</informaltable>
			
			<para xml:id="det_3833" xml:lang="de"> </para>
		</section>
		<section role="Anhang" xml:id="AppendixTables">
			<title><phrase xml:id="det_3834" xml:lang="de">Anhang: Tabellen</phrase></title>
			<section role="Anhang" xml:id="AnhangPropertiesAccommodations">
				<title><phrase xml:id="det_3835" xml:lang="de">Properties - Eigenschaften und Ausstattungen</phrase></title>
				<section xml:id="PropertiesAccommodations">
					<title><phrase xml:id="det_3836" xml:lang="de">Properties - Accommodations</phrase></title>
					
						<informaltable border="0" style="border-collapse:  collapse;width:1008pt" width="1344">
						<col width="121px"/>
						<col width="144px"/>
						<col width="265px"/>
						<col width="270px"/>
						<col width="426px"/>
						<col width="212px"/>
							<thead>
								<tr>
									<td rowspan="1" colspan="1">Komponente</td>
									<td rowspan="1" colspan="1">Zugelassene Ebenen</td>
									<td rowspan="1" colspan="1">Element/Path</td>
									<td rowspan="1" colspan="1">Values</td>
									<td rowspan="1" colspan="1">Bedeutung</td>
									<td rowspan="1" colspan="1">Conditions</td>
								</tr>
							</thead>
							<tr>
								<td rowspan="1" colspan="1">Accommodation</td>
								<td rowspan="1" colspan="1">&gt;= SellingAccom</td>
								<td rowspan="1" colspan="1">AccommodationName</td>
								<td rowspan="1" colspan="1">String</td>
								<td rowspan="1" colspan="1">Name der Unterkunft</td>
								<td rowspan="1" colspan="1"/>
							</tr>
							<tr>
								<td rowspan="1" colspan="1">Accommodation</td>
								<td rowspan="1" colspan="1">&gt;= SellingAccom</td>
								<td rowspan="1" colspan="1">AccommodationCity</td>
								<td rowspan="1" colspan="1">String</td>
								<td rowspan="1" colspan="1">Name des Ortes</td>
								<td rowspan="1" colspan="1"/>
							</tr>
							<tr>
								<td rowspan="1" colspan="1">Accommodation</td>
								<td rowspan="1" colspan="1">&gt;= SellingAccom</td>
								<td rowspan="1" colspan="1">AccommodationType</td>
								<td rowspan="1" colspan="1">
									<itemizedlist>
										<listitem>
											<para xml:id="det_3837" xml:lang="de">Hotel</para>
										</listitem>
										<listitem>
											<para xml:id="det_3838" xml:lang="de">Club</para>
										</listitem>
										<listitem>
											<para xml:id="det_3839" xml:lang="de">ApartmentHotel</para>
										</listitem>
										<listitem>
											<para xml:id="det_3840" xml:lang="de">Villa</para>
										</listitem>
										<listitem>
											<para xml:id="det_3841" xml:lang="de">HolidayPark</para>
										</listitem>
										<listitem>
											<para xml:id="det_3842" xml:lang="de">BungalowResort</para>
										</listitem>
										<listitem>
											<para xml:id="det_3843" xml:lang="de">HolidayFlat</para>
										</listitem>
										<listitem>
											<para xml:id="det_3844" xml:lang="de">CaravanSite</para>
										</listitem>
										<listitem>
											<para xml:id="det_3845" xml:lang="de">Family (V1.1)</para>
										</listitem>
										<listitem>
										<para xml:id="det_3846" xml:lang="de">Other</para>
									</listitem>
									<listitem>
										<para xml:id="det_3847" xml:lang="de">DetachedHouse (V1.9)</para>
									</listitem>
									<listitem>
										<para xml:id="det_3848" xml:lang="de">RowHouse (V1.9)</para>
									</listitem>
									<listitem>
										<para xml:id="det_3849" xml:lang="de">HolidayHome (V1.9)</para>
									</listitem>
									</itemizedlist>
								</td>
								<td rowspan="1" colspan="1">
									<itemizedlist>
										<listitem>
											<para xml:id="det_3850" xml:lang="de">Villa sind Bungalows, Häuser, Reihenhäuser, die einzeln
												gemietet werden können, die sich aber nicht in einem
												Parkverbund befinden </para>
										</listitem>
										<listitem>
											<para xml:id="det_3851" xml:lang="de">HolidayParks sind Villas welche sich in einem Parkverbund
												befinden (nur zur  Eigenversorgung) </para>
										</listitem>
										<listitem>
											<para xml:id="det_3852" xml:lang="de">BungalowResort ist eine Hotelanlage die zu einem
												überwiegenden Teil aus Bungalows besteht </para>
										</listitem>
										<listitem>
											<para xml:id="det_3853" xml:lang="de">HolidayFlat sind Ferienwohnungen </para>
										</listitem>
										<listitem>
											<para xml:id="det_3854" xml:lang="de">Family sind Unterkunfte bzw. Hotels oder Parks, die speziell
												auf die Bedürfnisse von Familien zugeschnitten sind </para>
										</listitem>
									<listitem>
										<para xml:id="det_3855" xml:lang="de">DetachedHouse: Freistehendes Ferienhaus</para>
									</listitem>
									<listitem>
										<para xml:id="det_3856" xml:lang="de">RowHouse: Ferienreihenhaus</para>
									</listitem>
									</itemizedlist>
								</td>
								<td rowspan="1" colspan="1"/>
							</tr>
							<tr>
								<td rowspan="1" colspan="1">Accommodation</td>
								<td rowspan="1" colspan="1">&gt;= SellingAccom</td>
								<td rowspan="1" colspan="1">AccommodationChain</td>
								<td rowspan="1" colspan="1">ID </td>
								<td rowspan="1" colspan="1">ID mit Referenz zur Tabelle der Hotelketten</td>
								<td rowspan="1" colspan="1"/>
							</tr>

							<tr>
								<td rowspan="1" colspan="1">Accommodation</td>
								<td rowspan="1" colspan="1">&gt;= SellingAccom</td>
								<td rowspan="1" colspan="1">AccommodationOfficialCategory</td>
								<td rowspan="1" colspan="1">Zahl auch als Kommazahl in 0,5 Schritten</td>
								<td rowspan="1" colspan="1">Offizielle Sterne Kategorie</td>
								<td rowspan="1" colspan="1"/>
							</tr>
							<tr>
								<td rowspan="1" colspan="1">Accommodation</td>
								<td rowspan="1" colspan="1">&gt;= SellingAccom</td>
								<td rowspan="1" colspan="1">AccommodationOperatorCategory</td>
								<td rowspan="1" colspan="1">Zahl auch als Kommazahl in 0,5 Schritten</td>
								<td rowspan="1" colspan="1">Veranstalter Sterne Kategorie</td>
								<td rowspan="1" colspan="1"/>
							</tr>
							<tr>
								<td rowspan="1" colspan="1">Accommodation</td>
								<td rowspan="1" colspan="1">&gt;= SellingAccom</td>
								<td rowspan="1" colspan="1">AccommodationGeneralFacilities</td>
								<td rowspan="1" colspan="1">
									<itemizedlist>
										<listitem>
											<para xml:id="det_3857" xml:lang="de">Pool </para>
										</listitem>
										<listitem>
											<para xml:id="det_3858" xml:lang="de">InternetAccess</para>
										</listitem>
										<listitem>
											<para xml:id="det_3859" xml:lang="de">ParkingArea</para>
										</listitem>
										<listitem>
											<para xml:id="det_3860" xml:lang="de">FitnessCenter</para>
										</listitem>
										<listitem>
											<para xml:id="det_3861" xml:lang="de">WellnessFacilities</para>
										</listitem>
										<listitem>
											<para xml:id="det_3862" xml:lang="de">IndoorPool</para>
										</listitem>
										<listitem>
											<para xml:id="det_3863" xml:lang="de">Restaurant</para>
										</listitem>
										<listitem>
											<para xml:id="det_3864" xml:lang="de">Reception24_7</para>
										</listitem>
										<listitem>
											<para xml:id="det_3865" xml:lang="de">LaundryService</para>
										</listitem>
										<listitem>
											<para xml:id="det_3866" xml:lang="de">Bar</para>
										</listitem>
										<listitem>
											<para xml:id="det_3867" xml:lang="de">Discothek</para>
										</listitem>
										<listitem>
											<para xml:id="det_3868" xml:lang="de">Shops</para>
										</listitem>
										<listitem>
											<para xml:id="det_3869" xml:lang="de">Airconditioning</para>
										</listitem>
										<listitem>
											<para xml:id="det_3870" xml:lang="de">Garden</para>
										</listitem>
										<listitem>
											<para xml:id="det_3871" xml:lang="de">Hairdresser</para>
										</listitem>
										<listitem>
											<para xml:id="det_3872" xml:lang="de">SunTerrace</para>
										</listitem>
										<listitem>
											<para xml:id="det_3873" xml:lang="de">MeetingRoom</para>
										</listitem>
										<listitem>
											<para xml:id="det_3874" xml:lang="de">TVRoom</para>
										</listitem>
										<listitem>
											<para xml:id="det_3875" xml:lang="de">Lobby</para>
										</listitem>
										<listitem>
											<para xml:id="det_3876" xml:lang="de">RoomService</para>
										</listitem>
										<listitem>
											<para xml:id="det_3877" xml:lang="de">PrivateBeach</para>
										</listitem>
										<listitem>
											<para xml:id="det_3878" xml:lang="de">ArtStudio</para>
										</listitem>
										<listitem>
											<para xml:id="det_3879" xml:lang="de">FreeWIFI</para>
										</listitem>
										<listitem>
											<para xml:id="det_3880" xml:lang="de">Concierge</para>
										</listitem>
										<listitem>
										<para xml:id="det_3881" xml:lang="de">HotelSafe</para>
									</listitem>
									<listitem>
										<para xml:id="det_3882" xml:lang="de">Carport (V1.9)</para>
									</listitem>
									<listitem>
										<para xml:id="det_3883" xml:lang="de">GuardedParkingLot (V1.9)</para>
									</listitem>
									<listitem>
										<para xml:id="det_3884" xml:lang="de">BasementGarage (V1.9)</para>
									</listitem>
									<listitem>
										<para xml:id="det_3885" xml:lang="de">ParkingWithCost (V1.9)</para>
									</listitem>
									<listitem>
										<para xml:id="det_3886" xml:lang="de">FreeParking (V1.9)</para>
									</listitem>
									<listitem>
										<para xml:id="det_3887" xml:lang="de">Garage (V1.9)</para>
									</listitem>
									</itemizedlist>
								</td>
								<td rowspan="1" colspan="1">Allgemeine Einrichtungen</td>
								<td rowspan="1" colspan="1"/>
							</tr>
							<tr>
								<td rowspan="1" colspan="1">Accommodation</td>
								<td rowspan="1" colspan="1">&gt;= SellingAccom</td>
								<td rowspan="1" colspan="1">AccommodationFamilyFacilities</td>
								<td rowspan="1" colspan="1">
									<itemizedlist>
										<listitem>
											<para xml:id="det_3888" xml:lang="de">WaterSlide</para>
										</listitem>
										<listitem>
											<para xml:id="det_3889" xml:lang="de">PlayArea</para>
										</listitem>
										<listitem>
											<para xml:id="det_3890" xml:lang="de">ChildrenEntertainment</para>
										</listitem>
										<listitem>
											<para xml:id="det_3891" xml:lang="de">KinderAnimation (entfällt ab V1.9)</para>
										</listitem>
										<listitem>
											<para xml:id="det_3892" xml:lang="de">BabysitterService</para>
										</listitem>
										<listitem>
											<para xml:id="det_3893" xml:lang="de">ChildrenPool</para>
										</listitem>
										<listitem>
											<para xml:id="det_3894" xml:lang="de">FoodForChildren</para>
										</listitem>
										<listitem>
											<para xml:id="det_3895" xml:lang="de">ChildAllowance</para>
										</listitem>
										<listitem>
											<para xml:id="det_3896" xml:lang="de">FamilyRoom</para>
										</listitem>
										<listitem>
											<para xml:id="det_3897" xml:lang="de">PlaneBeach</para>
										</listitem>
										<listitem>
											<para xml:id="det_3898" xml:lang="de">BabyEquipment</para>
										</listitem>
										<listitem>
											<para xml:id="det_3899" xml:lang="de">FamilyExcursion</para>
										</listitem>
										<listitem>
											<para xml:id="det_3900" xml:lang="de">MiniClub</para>
										</listitem>
										<listitem>
											<para xml:id="det_3901" xml:lang="de">SingleWithChild (entfällt ab V1.9)</para>
										</listitem>
										<listitem>
											<para xml:id="det_3902" xml:lang="de">FurnitureForChildren</para>
										</listitem>
										<listitem>
											<para xml:id="det_3903" xml:lang="de">IndoorPlayingArea</para>
										</listitem>
										<listitem>
											<para xml:id="det_3904" xml:lang="de">AquaPark</para>
										</listitem>
										<listitem>
											<para xml:id="det_3905" xml:lang="de">FamilyEntertainment</para>
										</listitem>
										<listitem>
											<para xml:id="det_3906" xml:lang="de">Couples</para>
										</listitem>
										<listitem>
											<para xml:id="det_3907" xml:lang="de">SingleEntertainment</para>
										</listitem>
										<listitem>
											<para xml:id="det_3908" xml:lang="de">TeenEntertainment</para>
										</listitem>
										<listitem>
											<para xml:id="det_3909" xml:lang="de">BabyCotBeds (V1.1)</para>
										</listitem>
										<listitem>
											<para xml:id="det_3910" xml:lang="de">ChildrenSwimmingSchool (V1.1)</para>
										</listitem>
										<listitem>
											<para xml:id="det_3911" xml:lang="de">ChildrenSportFacilities (V1.1)</para>
										</listitem>
										<listitem>
											<para xml:id="det_3912" xml:lang="de">NonSmookerHotel (V1.1)</para>
										</listitem>
										<listitem>
											<para xml:id="det_3913" xml:lang="de">BuggyRental (V1.1)</para>
										</listitem>
										<listitem>
											<para xml:id="det_3914" xml:lang="de">PoolHeated (V1.1)</para>
										</listitem>
									</itemizedlist>
								</td>
								<td rowspan="1" colspan="1"><para xml:id="det_3915" xml:lang="de">Familieneinrichtungen der Unterkunft</para>
									<itemizedlist>
										<listitem>
											<para xml:id="det_3916" xml:lang="de">In der V1.0 gibt es auch noch die Option
											"KinderAnimation" diese wird aber in V1.9 entfernt.
											Bitte verwenden Sie "ChildrenEntertainment"
											stattdessen.</para>
										</listitem>
										<listitem>
											<para xml:id="det_3917" xml:lang="de"> "SingleWithChild" entfällt ab V1.9 da diese
											Eigenschaft auf Hotelebene keinen praktischen Nutzen
											bringt. Diese Option gibt es dann lediglich noch im
											UnitType.</para>
										</listitem>
										<listitem>
											<para xml:id="det_3918" xml:lang="de">"FamilyRoom" entfällt ab V1.9 da diese Eigenschaft
											auf Hotelebene keinen praktischen Nutzen bringt. Diese
											Option gibt es dann lediglich noch im UnitType als
											"Family".</para>
										</listitem>
									</itemizedlist>
								</td>
								<td rowspan="1" colspan="1"/>
							</tr>
							<tr>
								<td rowspan="1" colspan="1">Accommodation</td>
								<td rowspan="1" colspan="1">&gt;= SellingAccom</td>
								<td rowspan="1" colspan="1">AccommodationSportsFacilities</td>
								<td rowspan="1" colspan="1">
									<itemizedlist>
										<listitem>
											<para xml:id="det_3919" xml:lang="de">FootballGround</para>
										</listitem>
										<listitem>
											<para xml:id="det_3920" xml:lang="de">FitnessRoom</para>
										</listitem>
										<listitem>
											<para xml:id="det_3921" xml:lang="de">OwnDiveCentre</para>
										</listitem>
										<listitem>
											<para xml:id="det_3922" xml:lang="de">TennisCourt</para>
										</listitem>
										<listitem>
											<para xml:id="det_3923" xml:lang="de">GolfCourse</para>
										</listitem>
										<listitem>
											<para xml:id="det_3924" xml:lang="de">BikeRental</para>
										</listitem>
										<listitem>
											<para xml:id="det_3925" xml:lang="de">OwnSurfCentre</para>
										</listitem>
										<listitem>
											<para xml:id="det_3926" xml:lang="de">BeachVolleballCourt</para>
										</listitem>
										<listitem>
											<para xml:id="det_3927" xml:lang="de">WorkoutProgramme</para>
										</listitem>
										<listitem>
											<para xml:id="det_3928" xml:lang="de">ShootingRange</para>
										</listitem>
										<listitem>
											<para xml:id="det_3929" xml:lang="de">OwnSailingCentre</para>
										</listitem>
										<listitem>
											<para xml:id="det_3930" xml:lang="de">MultifunctionLocation</para>
										</listitem>
										<listitem>
											<para xml:id="det_3931" xml:lang="de">FunSportOffers</para>
										</listitem>
										<listitem>
											<para xml:id="det_3932" xml:lang="de">SwimmingPool</para>
										</listitem>
										<listitem>
											<para xml:id="det_3933" xml:lang="de">SportingEntertainment</para>
										</listitem>
										<listitem>
											<para xml:id="det_3934" xml:lang="de">SquashCourt</para>
										</listitem>
										<listitem>
											<para xml:id="det_3935" xml:lang="de">HikingExcursions</para>
										</listitem>
										<listitem>
											<para xml:id="det_3936" xml:lang="de">SportsTournaments</para>
										</listitem>
										<listitem>
											<para xml:id="det_3937" xml:lang="de">ClimbingWallPark</para>
										</listitem>
										<listitem>
											<para xml:id="det_3938" xml:lang="de">BilliardTable</para>
										</listitem>
										<listitem>
											<para xml:id="det_3939" xml:lang="de">WinterSportsFacilities</para>
										</listitem>
										<listitem>
											<para xml:id="det_3940" xml:lang="de">HorsebackRiding</para>
										</listitem>
										<listitem>
											<para xml:id="det_3941" xml:lang="de">BananaBoat</para>
										</listitem>
										<listitem>
											<para xml:id="det_3942" xml:lang="de">Jetski</para>
										</listitem>
										<listitem>
											<para xml:id="det_3943" xml:lang="de">RiverRafting</para>
										</listitem>
									</itemizedlist>
								</td>
								<td rowspan="1" colspan="1">Sportmöglichkeiten in der Unterkunft</td>
								<td rowspan="1" colspan="1"/>
							</tr>
							<tr>
								<td rowspan="1" colspan="1">Accommodation</td>
								<td rowspan="1" colspan="1">&gt;= SellingAccom</td>
								<td rowspan="1" colspan="1">AccommodationWellnessFacilities</td>
								<td rowspan="1" colspan="1">
									<itemizedlist>
										<listitem>
											<para xml:id="det_3944" xml:lang="de">Sauna</para>
										</listitem>
										<listitem>
											<para xml:id="det_3945" xml:lang="de">WhirlPool</para>
										</listitem>
										<listitem>
											<para xml:id="det_3946" xml:lang="de">Massage</para>
										</listitem>
										<listitem>
											<para xml:id="det_3947" xml:lang="de">ThermalBath</para>
										</listitem>
										<listitem>
											<para xml:id="det_3948" xml:lang="de">BeautyFarm</para>
										</listitem>
										<listitem>
											<para xml:id="det_3949" xml:lang="de">Thalasso</para>
										</listitem>
										<listitem>
											<para xml:id="det_3950" xml:lang="de">Ayurveda</para>
										</listitem>
										<listitem>
											<para xml:id="det_3951" xml:lang="de">Hammam</para>
										</listitem>
										<listitem>
											<para xml:id="det_3952" xml:lang="de">SteamRoom</para>
										</listitem>
										<listitem>
											<para xml:id="det_3953" xml:lang="de">AromaTherapy</para>
										</listitem>
										<listitem>
											<para xml:id="det_3954" xml:lang="de">MedicalWellness</para>
										</listitem>
										<listitem>
											<para xml:id="det_3955" xml:lang="de">RelaxationArea</para>
										</listitem>
										<listitem>
											<para xml:id="det_3956" xml:lang="de">AntiAge</para>
										</listitem>
										<listitem>
											<para xml:id="det_3957" xml:lang="de">Solarium</para>
										</listitem>
										<listitem>
											<para xml:id="det_3958" xml:lang="de">FitnessRoom</para>
										</listitem>
										<listitem>
											<para xml:id="det_3959" xml:lang="de">Shiatsu</para>
										</listitem>
										<listitem>
											<para xml:id="det_3960" xml:lang="de">PlungePool</para>
										</listitem>
										<listitem>
											<para xml:id="det_3961" xml:lang="de">JuiceBar</para>
										</listitem>
										<listitem>
											<para xml:id="det_3962" xml:lang="de">Facial</para>
										</listitem>
										<listitem>
											<para xml:id="det_3963" xml:lang="de">BeautyTreatment</para>
										</listitem>
										<listitem>
											<para xml:id="det_3964" xml:lang="de">ManicurePedicure</para>
										</listitem>
									</itemizedlist>
								</td>
								<td rowspan="1" colspan="1">Allgemeine Wellnesseinrichtungen</td>
								<td rowspan="1" colspan="1"/>
							</tr>
							<tr>
								<td rowspan="1" colspan="1">Accommodation</td>
								<td rowspan="1" colspan="1">&gt;= SellingAccom</td>
								<td rowspan="1" colspan="1">AccommodationSeniorFacilities</td>
								<td rowspan="1" colspan="1">
									<itemizedlist>
										<listitem>
											<para xml:id="det_3965" xml:lang="de">HealthCare</para>
										</listitem>
										<listitem>
											<para xml:id="det_3966" xml:lang="de">BoardGames</para>
										</listitem>
										<listitem>
											<para xml:id="det_3967" xml:lang="de">HandicappedAccessible</para>
										</listitem>
										<listitem>
											<para xml:id="det_3968" xml:lang="de">DietCuisine</para>
										</listitem>
										<listitem>
											<para xml:id="det_3969" xml:lang="de">LuggageService</para>
										</listitem>
										<listitem>
											<para xml:id="det_3970" xml:lang="de">CoachExcursions</para>
										</listitem>
										<listitem>
											<para xml:id="det_3971" xml:lang="de">TeaDance</para>
										</listitem>
										<listitem>
											<para xml:id="det_3972" xml:lang="de">TherapeuticBath</para>
										</listitem>
										<listitem>
											<para xml:id="det_3973" xml:lang="de">ShuttleService</para>
										</listitem>
										<listitem>
											<para xml:id="det_3974" xml:lang="de">StaffLanguageSkills</para>
										</listitem>
										<listitem>
											<para xml:id="det_3975" xml:lang="de">Lift</para>
										</listitem>
									</itemizedlist>
								</td>
								<td rowspan="1" colspan="1">Allgemeine Einrichtungen für Senioren</td>
								<td rowspan="1" colspan="1"/>
							</tr>

							<tr>
								<td rowspan="1" colspan="1">Accommodation</td>
								<td rowspan="1" colspan="1">&gt;= SellingAccom</td>
								<td rowspan="1" colspan="1">AccommodationLocations</td>
								<td rowspan="1" colspan="1">
									<itemizedlist>
										<listitem>
											<para xml:id="det_3976" xml:lang="de">DirectBeach </para>
										</listitem>
										<listitem>
											<para xml:id="det_3977" xml:lang="de">NearBeach</para>
										</listitem>
										<listitem>
											<para xml:id="det_3978" xml:lang="de">Central</para>
										</listitem>
										<listitem>
											<para xml:id="det_3979" xml:lang="de">QuietArea</para>
										</listitem>
										<listitem>
											<para xml:id="det_3980" xml:lang="de">AliveArea</para>
										</listitem>
										<listitem>
											<para xml:id="det_3981" xml:lang="de">CityDestination</para>
										</listitem>
										<listitem>
											<para xml:id="det_3982" xml:lang="de">SurroundedByNature</para>
										</listitem>
										<listitem>
											<para xml:id="det_3983" xml:lang="de">Mountains</para>
										</listitem>
										<listitem>
											<para xml:id="det_3984" xml:lang="de">SkiingArea</para>
										</listitem>
										<listitem>
											<para xml:id="det_3985" xml:lang="de">ThemePark</para>
										</listitem>
										<listitem>
											<para xml:id="det_3986" xml:lang="de">NearAirport</para>
										</listitem>
										<listitem>
											<para xml:id="det_3987" xml:lang="de">SandyBeach</para>
										</listitem>
										<listitem>
											<para xml:id="det_3988" xml:lang="de">ExcursionPossibilities</para>
										</listitem>
										<listitem>
											<para xml:id="det_3989" xml:lang="de">NearShoppingFacilities</para>
										</listitem>
										<listitem>
											<para xml:id="det_3990" xml:lang="de">NearRestaurants</para>
										</listitem>
										<listitem>
											<para xml:id="det_3991" xml:lang="de">Party</para>
										</listitem>
										<listitem>
											<para xml:id="det_3992" xml:lang="de">NearLake</para>
										</listitem>
										<listitem>
											<para xml:id="det_3993" xml:lang="de">SurroundedByGardenPark</para>
										</listitem>
										<listitem>
											<para xml:id="det_3994" xml:lang="de">NearSights</para>
										</listitem>
									</itemizedlist>
								</td>
								<td rowspan="1" colspan="1">Lage der Unterkunft</td>
								<td rowspan="1" colspan="1"/>
							</tr>
							<tr>
								<td rowspan="1" colspan="1">Accommodation</td>
								<td rowspan="1" colspan="1">&gt;= SellingAccom</td>
								<td rowspan="1" colspan="1">AccommodationAddress</td>
								<td rowspan="1" colspan="1">
									<para xml:id="det_3995" xml:lang="de">Mit folgenden Unterelementen:</para>
									<itemizedlist>
										<listitem>
											<para xml:id="det_3996" xml:lang="de">/Street</para>
										</listitem>
										<listitem>
											<para xml:id="det_3997" xml:lang="de">/ZipCode</para>
										</listitem>
										<listitem>
											<para xml:id="det_3998" xml:lang="de">/City</para>
										</listitem>
										<listitem>
											<para xml:id="det_3999" xml:lang="de">/Phone</para>
										</listitem>
										<listitem>
											<para xml:id="det_4000" xml:lang="de">/Fax</para>
										</listitem>
										<listitem>
											<para xml:id="det_4001" xml:lang="de">/Mail</para>
										</listitem>
										<listitem>
											<para xml:id="det_4002" xml:lang="de">/Homepage</para>
										</listitem>
										<listitem>
											<para xml:id="det_4003" xml:lang="de">/GeoInfo/GeoCode/Latitude</para>
										</listitem>
										<listitem>
											<para xml:id="det_4004" xml:lang="de">/GeoInfo/GeoCode/Longitude</para>
										</listitem>
										<listitem>
											<para xml:id="det_4005" xml:lang="de">/GeoInfo/GeoCode/Accuracy</para>
										</listitem>
									</itemizedlist>
								</td>
								<td rowspan="1" colspan="1">Adresse der Unterkunft</td>
								<td rowspan="1" colspan="1"/>
							</tr>
							<tr>
								<td rowspan="1" colspan="1">Accommodation</td>
								<td rowspan="1" colspan="1">&gt;= SellingAccom</td>
								<td rowspan="1" colspan="1">AccommodationCatchmentRailwayStations</td>
								<td rowspan="1" colspan="1">RailwayStationCode / String</td>
								<td rowspan="1" colspan="1">Bahnstationen im Einzugsgebiet der Unterkunft</td>
								<td rowspan="1" colspan="1"/>
							</tr>
							<tr>
								<td rowspan="1" colspan="1">Accommodation</td>
								<td rowspan="1" colspan="1">&gt;= Unit</td>
								<td rowspan="1" colspan="1">UnitName</td>
								<td rowspan="1" colspan="1">String, z.B. "Appartement Balkon oder
									Terrasse"</td>
								<td rowspan="1" colspan="1">Volltextbezeichner (kurz) der Unterbringung</td>
								<td rowspan="1" colspan="1"/>
							</tr>
							<tr>
								<td rowspan="1" colspan="1">Accommodation</td>
								<td rowspan="1" colspan="1">&gt;= Unit</td>
								<td rowspan="1" colspan="1">UnitType</td>
								<td rowspan="1" colspan="1">
									<itemizedlist>
										<listitem>
											<para xml:id="det_4006" xml:lang="de">Single</para>
										</listitem>
										<listitem>
											<para xml:id="det_4007" xml:lang="de">Double</para>
										</listitem>
										<listitem>
											<para xml:id="det_4008" xml:lang="de">Apartment</para>
										</listitem>
										<listitem>
											<para xml:id="det_4009" xml:lang="de">Studio</para>
										</listitem>
										<listitem>
											<para xml:id="det_4010" xml:lang="de">Bungalow</para>
										</listitem>
										<listitem>
											<para xml:id="det_4011" xml:lang="de">Triple</para>
										</listitem>
										<listitem>
											<para xml:id="det_4012" xml:lang="de">Suite</para>
										</listitem>
										<listitem>
											<para xml:id="det_4013" xml:lang="de">Other</para>
										</listitem>
										<listitem>
											<para xml:id="det_4014" xml:lang="de">Family</para>
										</listitem>
										<listitem>
											<para xml:id="det_4015" xml:lang="de">Villa</para>
										</listitem>
										<listitem>
											<para xml:id="det_4016" xml:lang="de">HolidayHome</para>
										</listitem>
										<listitem>
											<para xml:id="det_4017" xml:lang="de">SemidetachedHouse</para>
										</listitem>
										<listitem>
											<para xml:id="det_4018" xml:lang="de">Quad</para>
										</listitem>
										<listitem>
											<para xml:id="det_4019" xml:lang="de">SingleWithChild</para>
										</listitem>
									</itemizedlist>
								</td>
								<td rowspan="1" colspan="1">Vorgegebener Bezeichner der Unterbringung</td>
								<td rowspan="1" colspan="1"/>
							</tr>
							<tr>
								<td rowspan="1" colspan="1">Accommodation</td>
								<td rowspan="1" colspan="1">&gt;= Unit</td>
								<td rowspan="1" colspan="1">UnitBedType</td>
								<td rowspan="1" colspan="1">
									<itemizedlist>
										<listitem>
											<para xml:id="det_4020" xml:lang="de">Single</para>
										</listitem>
										<listitem>
											<para xml:id="det_4021" xml:lang="de">SingleExtraLong</para>
										</listitem>
										<listitem>
											<para xml:id="det_4022" xml:lang="de">KingSingle</para>
										</listitem>
										<listitem>
											<para xml:id="det_4023" xml:lang="de">DoubleSize</para>
										</listitem>
										<listitem>
											<para xml:id="det_4024" xml:lang="de">QueenSize</para>
										</listitem>
										<listitem>
											<para xml:id="det_4025" xml:lang="de">KingSize</para>
										</listitem>
										<listitem>
											<para xml:id="det_4026" xml:lang="de">SofaBed</para>
										</listitem>
										<listitem>
											<para xml:id="det_4027" xml:lang="de">SinglePullDownBed</para>
										</listitem>
										<listitem>
											<para xml:id="det_4028" xml:lang="de">DoublePullDownBed</para>
										</listitem>
										<listitem>
											<para xml:id="det_4029" xml:lang="de">BunkBed</para>
										</listitem>
										<listitem>
											<para xml:id="det_4030" xml:lang="de">CotBed</para>
										</listitem>
									</itemizedlist>
								</td>
								<td rowspan="1" colspan="1">Art der Betten in der Unit / Unterkunft</td>
								<td rowspan="1" colspan="1"/>
							</tr>							
							<tr>
								<td rowspan="1" colspan="1">Accommodation</td>
								<td rowspan="1" colspan="1">&gt;= Unit</td>
								<td rowspan="1" colspan="1">UnitFacilities</td>
								<td rowspan="1" colspan="1">
									<itemizedlist>
										<listitem>
											<para xml:id="det_4031" xml:lang="de">PremiumSuperior</para>
										</listitem>
										<listitem>
											<para xml:id="det_4032" xml:lang="de">Deluxe</para>
										</listitem>
										<listitem>
											<para xml:id="det_4033" xml:lang="de">SeaView</para>
										</listitem>
										<listitem>
											<para xml:id="det_4034" xml:lang="de">SideSeaView</para>
										</listitem>
										<listitem>
											<para xml:id="det_4035" xml:lang="de">Family</para>
										</listitem>
										<listitem>
											<para xml:id="det_4036" xml:lang="de">SeaViewSideSeaView</para>
										</listitem>
										<listitem>
											<para xml:id="det_4037" xml:lang="de">PremiumView</para>
										</listitem>
										<listitem>
											<para xml:id="det_4038" xml:lang="de">BalconyTerrace</para>
										</listitem>
										<listitem>
											<para xml:id="det_4039" xml:lang="de">Airconditioning</para>
										</listitem>
										<listitem>
											<para xml:id="det_4040" xml:lang="de">HandicappedAccessible</para>
										</listitem>
										<listitem>
											<para xml:id="det_4041" xml:lang="de">Hairdryer</para>
										</listitem>
										<listitem>
											<para xml:id="det_4042" xml:lang="de">SeparateBedroom</para>
										</listitem>
										<listitem>
											<para xml:id="det_4043" xml:lang="de">MoreSeparateBedrooms</para>
										</listitem>
										<listitem>
											<para xml:id="det_4044" xml:lang="de">PoolView</para>
										</listitem>
										<listitem>
											<para xml:id="det_4045" xml:lang="de">GardenView</para>
										</listitem>
										<listitem>
											<para xml:id="det_4046" xml:lang="de">Bunkbed (entfällt ab V1.9, zu finden im
											UnitBedType)</para>
										</listitem>
										<listitem>
											<para xml:id="det_4047" xml:lang="de">BathToiletteInCorridor</para>
										</listitem>
										<listitem>
											<para xml:id="det_4048" xml:lang="de">Loft</para>
										</listitem>
										<listitem>
											<para xml:id="det_4049" xml:lang="de">ChargedHeating</para>
										</listitem>
										<listitem>
											<para xml:id="det_4050" xml:lang="de">HourlyHeating</para>
										</listitem>
										<listitem>
											<para xml:id="det_4051" xml:lang="de">BathOnFloor</para>
										</listitem>
										<listitem>
											<para xml:id="det_4052" xml:lang="de">StreetView</para>
										</listitem>
										<listitem>
											<para xml:id="det_4053" xml:lang="de">Basement</para>
										</listitem>
										<listitem>
											<para xml:id="det_4054" xml:lang="de">SharedBathRoom</para>
										</listitem>
										<listitem>
											<para xml:id="det_4055" xml:lang="de">SharedToilette</para>
										</listitem>
										<listitem>
											<para xml:id="det_4056" xml:lang="de">Dishwasher</para>
										</listitem>
										<listitem>
											<para xml:id="det_4057" xml:lang="de">Fireplace</para>
										</listitem>
										<listitem>
											<para xml:id="det_4058" xml:lang="de">PrivatePool</para>
										</listitem>
										<listitem>
											<para xml:id="det_4059" xml:lang="de">TV</para>
										</listitem>
										<listitem>
											<para xml:id="det_4060" xml:lang="de">SatTV</para>
										</listitem>
										<listitem>
											<para xml:id="det_4061" xml:lang="de">PrivateSauna</para>
										</listitem>
										<listitem>
											<para xml:id="det_4062" xml:lang="de">CentralHeating</para>
										</listitem>
										<listitem>
											<para xml:id="det_4063" xml:lang="de">FloorHeating</para>
										</listitem>
										<listitem>
											<para xml:id="det_4064" xml:lang="de">PrivateSolarium</para>
										</listitem>
										<listitem>
											<para xml:id="det_4065" xml:lang="de">LaundryDryer</para>
										</listitem>
										<listitem>
											<para xml:id="det_4066" xml:lang="de">Freezer</para>
										</listitem>
										<listitem>
											<para xml:id="det_4067" xml:lang="de">BathTub</para>
										</listitem>
										<listitem>
											<para xml:id="det_4068" xml:lang="de">Terrace</para>
										</listitem>
										<listitem>
											<para xml:id="det_4069" xml:lang="de">RoofedTerrace</para>
										</listitem>
										<listitem>
											<para xml:id="det_4070" xml:lang="de">PrivateTennisCourt</para>
										</listitem>
										<listitem>
											<para xml:id="det_4071" xml:lang="de">WashingMachine</para>
										</listitem>
										<listitem>
											<para xml:id="det_4072" xml:lang="de">PrivateWhirlpool</para>
										</listitem>
										<listitem>
											<para xml:id="det_4073" xml:lang="de">Shower</para>
										</listitem>
										<listitem>
											<para xml:id="det_4074" xml:lang="de">Balcony</para>
										</listitem>
										<listitem>
											<para xml:id="det_4075" xml:lang="de">Terrace</para>
										</listitem>
										<listitem>
											<para xml:id="det_4076" xml:lang="de">TwoBedroomsWithConnectingDoor</para>
										</listitem>
										<listitem>
											<para xml:id="det_4077" xml:lang="de">ShortenedSeaView</para>
										</listitem>
										<listitem>
											<para xml:id="det_4078" xml:lang="de">LakeView</para>
										</listitem>
										<listitem>
											<para xml:id="det_4079" xml:lang="de">GroundFloor</para>
										</listitem>
										<listitem>
											<para xml:id="det_4080" xml:lang="de">UpperFloor</para>
										</listitem>
										<listitem>
											<para xml:id="det_4081" xml:lang="de">RoomSafe</para>
										</listitem>
										<listitem>
										<para xml:id="det_4082" xml:lang="de">Iron</para>
									</listitem>
									<listitem>
										<para xml:id="det_4083" xml:lang="de">PetsAllowed (V1.9)</para>
									</listitem>
									<listitem>
										<para xml:id="det_4084" xml:lang="de">PetsProhibited (V1.9)</para>
									</listitem>
									</itemizedlist>
								</td>
								<td rowspan="1" colspan="1">Ausstattungsmerkmale der Unterkunft</td>
								<td rowspan="1" colspan="1"/>
							</tr>
							<tr>
								<td rowspan="1" colspan="1">Accommodation</td>
								<td rowspan="1" colspan="1">&gt;= Unit</td>
								<td rowspan="1" colspan="1">UnitBuildingType</td>
								<td rowspan="1" colspan="1">
									<itemizedlist>
										<listitem>
											<para xml:id="det_4085" xml:lang="de">NewBuilding</para>
										</listitem>
										<listitem>
											<para xml:id="det_4086" xml:lang="de">OldBuilding</para>
										</listitem>
										<listitem>
											<para xml:id="det_4087" xml:lang="de">Annex</para>
										</listitem>
										<listitem>
											<para xml:id="det_4088" xml:lang="de">SubsidiaryBuilding</para>
										</listitem>
										<listitem>
											<para xml:id="det_4089" xml:lang="de">MainBuilding</para>
										</listitem>
										<listitem>
											<para xml:id="det_4090" xml:lang="de">Dependance</para>
										</listitem>
									</itemizedlist></td>
								<td rowspan="1" colspan="1">Typ des Hauptgebäudes der Unterkunft</td>
								<td rowspan="1" colspan="1"/>
							</tr>
							<tr>
								<td rowspan="1" colspan="1">Accommodation</td>
								<td rowspan="1" colspan="1">Board</td>
								<td rowspan="1" colspan="1">BoardName</td>
								<td rowspan="1" colspan="1">String</td>
								<td rowspan="1" colspan="1">Vollständige Bezeichnung der Verpflegung</td>
								<td rowspan="1" colspan="1"/>
							</tr>
							<tr>
								<td rowspan="1" colspan="1">Accommodation</td>
								<td rowspan="1" colspan="1">Board</td>
								<td rowspan="1" colspan="1">BoardType</td>
								<td rowspan="1" colspan="1">
									<itemizedlist>
										<listitem>
											<para xml:id="det_4091" xml:lang="de">None</para>
										</listitem>
										<listitem>
											<para xml:id="det_4092" xml:lang="de">SelfCatering</para>
										</listitem>
										<listitem>
											<para xml:id="det_4093" xml:lang="de">Breakfast</para>
										</listitem>
										<listitem>
											<para xml:id="det_4094" xml:lang="de">HalfBoard</para>
										</listitem>
										<listitem>
											<para xml:id="det_4095" xml:lang="de">HalfBoardPlus</para>
										</listitem>
										<listitem>
											<para xml:id="det_4096" xml:lang="de">FullBoard</para>
										</listitem>
										<listitem>
											<para xml:id="det_4097" xml:lang="de">FullBoardPlus</para>
										</listitem>
										<listitem>
											<para xml:id="det_4098" xml:lang="de">AllInclusive</para>
										</listitem>
										<listitem>
											<para xml:id="det_4099" xml:lang="de">AllInclusivePlus</para>
										</listitem>
									</itemizedlist></td>
								<td rowspan="1" colspan="1">Art der Verpflegung</td>
								<td rowspan="1" colspan="1"/>
							</tr>
							<tr>
								<td rowspan="1" colspan="1">Accommodation</td>
								<td rowspan="1" colspan="1">Board</td>
								<td rowspan="1" colspan="1">BoardProperties</td>
								<td rowspan="1" colspan="1">
									<itemizedlist>
										<listitem>
											<para xml:id="det_4100" xml:lang="de">Diet</para>
										</listitem>
										<listitem>
											<para xml:id="det_4101" xml:lang="de">Vegetarian</para>
										</listitem>
										<listitem>
											<para xml:id="det_4102" xml:lang="de">Kosher</para>
										</listitem>
									</itemizedlist></td>
								<td rowspan="1" colspan="1">Besondere Ausführung der Verpflegung</td>
								<td rowspan="1" colspan="1"/>
							</tr>
						</informaltable>
					
					<para xml:id="det_4103" xml:lang="de">Alle relevante Basisdaten der Unterkunft werden in dieser Kategorie gespeichert.
						Dies sind insbesondere Adresse, Geo-Informationen, Art der inkludierten Leistungen,
						etc.</para>
					
					<itemizedlist>
						<listitem>
							<para xml:id="det_4105" xml:lang="de">Vollständige Adresse der Unterkunft (Name, Anschrift, Land, Tel., Fax,
								Email, Homepage)</para>
						</listitem>
						<listitem>
							<para xml:id="det_4106" xml:lang="de">GeoInfo - Geo-Information der Unterkunft - gibt die geografische Lage
								und Umgebung der Unterkunft an</para>
							<para xml:id="det_4107" xml:lang="de">In dem Element GeoInfo werden die geografischen Informationen der
								Unterkunft hinterlegt. Damit wird genauer spezifiziert wo die Unterkunft
								geografisch zu finden ist. Dazu gehören auch die Geo-Koordinaten mit denen
								Systeme das Hotel auf einer Weltkarte entsprechend anzeigen können. In dem
								Element <emphasis role="italic">GeoCode</emphasis> können die Längen- und
								Breitengrade angegeben werden, wo sich die Unterkunft befindet. Damit kann
								eine geo-referenzierte Kartendarstellung der Ergebnisse durchgeführt
								werden. In dem Element <emphasis role="italic">Distance</emphasis> kann
								eine Entfernung in km bezogen auf die Koordinate angegeben werden. Zum
								Beispiel nutzen Glückshotel-Angebote diese Information. Aber auch
								Rundreisen-Angebote werten diese Informationen aus, um diese auf Karten
								suchbar zu machen. </para>
							<itemizedlist>
								<listitem>
									<para xml:id="det_4108" xml:lang="de">Region</para>
								</listitem>
								<listitem>
									<para xml:id="det_4109" xml:lang="de">Land</para>
								</listitem>
								<listitem>
									<para xml:id="det_4110" xml:lang="de">Zielgebiet</para>
								</listitem>
								<listitem>
									<para xml:id="det_4111" xml:lang="de">GeoCode - Geografische Breite und Länge und Entfernungsangabe
										bezogen auf die Koordinate</para>
									<para xml:id="det_4112" xml:lang="de">(dient der Übergabe an entsprechende Darstellungssysteme)</para>
								</listitem>
							</itemizedlist>
						</listitem>
						<listitem>
							<para xml:id="det_4113" xml:lang="de">Dem Zielort zugeordnete Flughäfen </para>
						</listitem>
						<listitem>
							<para xml:id="det_4114" xml:lang="de">Dem Zielort zugeordnete Bahnstationen </para>
						</listitem>
					</itemizedlist>
					
					<para xml:id="det_4115" xml:lang="de">Die entsprechenden Eigenschaften der Unterkunft werden ebenfalls hier angegeben.
						Neben den fest vorgegebenen Ausstattungen und Angeboten sollen aber auch
						anbietereigene Erweiterungen integrierbar sein. OTDS bietet hier als Element einen
						Namespace für beliebige Erweiterungen, so dass auch komplexe Strukturen mit abgebildet
						werden können. Auf diesem Wege lassen sich auch die momentan noch in der Entwicklung
						befindlichen Global Types einbinden.</para>
					<para xml:id="det_4116" xml:lang="de">Momentan angegebene Eigenschaften:</para>
					
					<itemizedlist>
						<listitem>
							<para xml:id="det_4118" xml:lang="de"> Hotelkette</para>
						</listitem>
						<listitem>
							<para xml:id="det_4119" xml:lang="de">Art der Unterkunft (AccommodationType) </para>
							<para xml:id="det_4120" xml:lang="de">z.B. Hotel, AppartmentHotel, Club etc.</para>
						</listitem>
						<listitem>
							<para xml:id="det_4121" xml:lang="de">Art des Gebäudes</para>
						</listitem>
						<listitem>
							<para xml:id="det_4122" xml:lang="de">Offizielle Kategorie der Unterkunft</para>
						</listitem>
						<listitem>
							<para xml:id="det_4123" xml:lang="de">VeranstalterKategorie der Unterkunft</para>
						</listitem>
					</itemizedlist>
					
					
						<table frame="none" colsep="1" rowheader="norowheader">
							<title><phrase xml:id="det_4124" xml:lang="de">Eigenschaften und Angebote der Unterkunft / des Hotels:</phrase></title>
							<tgroup cols="2">
								<tbody valign="top">
									<row valign="top">
										<entry>
											<para xml:id="det_4125" xml:lang="de">
												<emphasis role="bold">Ausstattungsmerkmale der
													Unterkunft:</emphasis>
											</para>
											<itemizedlist>
												<listitem>
												<para xml:id="det_4126" xml:lang="de">Pool </para>
												</listitem>
												<listitem>
												<para xml:id="det_4127" xml:lang="de">InternetAccess</para>
												</listitem>
												<listitem>
												<para xml:id="det_4128" xml:lang="de">ParkingArea</para>
												</listitem>
												<listitem>
												<para xml:id="det_4129" xml:lang="de">FitnessCenter</para>
												</listitem>
												<listitem>
												<para xml:id="det_4130" xml:lang="de">WellnessFacilities</para>
												</listitem>
												<listitem>
												<para xml:id="det_4131" xml:lang="de">IndoorPool</para>
												</listitem>
												<listitem>
												<para xml:id="det_4132" xml:lang="de">Restaurant</para>
												</listitem>
												<listitem>
												<para xml:id="det_4133" xml:lang="de">Reception24_7</para>
												</listitem>
												<listitem>
												<para xml:id="det_4134" xml:lang="de">LaundryService</para>
												</listitem>
												<listitem>
												<para xml:id="det_4135" xml:lang="de">Bar</para>
												</listitem>
												<listitem>
												<para xml:id="det_4136" xml:lang="de">Discothek</para>
												</listitem>
												<listitem>
												<para xml:id="det_4137" xml:lang="de">Shops</para>
												</listitem>
												<listitem>
												<para xml:id="det_4138" xml:lang="de">Airconditioning</para>
												</listitem>
												<listitem>
												<para xml:id="det_4139" xml:lang="de">Garden</para>
												</listitem>
												<listitem>
												<para xml:id="det_4140" xml:lang="de">Hairdresser</para>
												</listitem>
												<listitem>
												<para xml:id="det_4141" xml:lang="de">SunTerrace</para>
												</listitem>
												<listitem>
												<para xml:id="det_4142" xml:lang="de">MeetingRoom</para>
												</listitem>
												<listitem>
												<para xml:id="det_4143" xml:lang="de">TVRoom</para>
												</listitem>
												<listitem>
												<para xml:id="det_4144" xml:lang="de">Lobby</para>
												</listitem>
												<listitem>
												<para xml:id="det_4145" xml:lang="de">RoomService</para>
												</listitem>
												<listitem>
												<para xml:id="det_4146" xml:lang="de">PrivateBeach</para>
												</listitem>
												<listitem>
												<para xml:id="det_4147" xml:lang="de">ArtStudio</para>
												</listitem>
												<listitem>
												<para xml:id="det_4148" xml:lang="de">FreeWIFI</para>
												</listitem>
												<listitem>
												<para xml:id="det_4149" xml:lang="de">Concierge</para>
												</listitem>
												<listitem>
												<para xml:id="det_4150" xml:lang="de">HotelSafe</para>
												</listitem>
											</itemizedlist>
											
										</entry>
										<entry>
											<para xml:id="det_4151" xml:lang="de">
												<emphasis role="bold">Lage der Unterkunft:</emphasis>
											</para>
											<itemizedlist>
												<listitem>
												<para xml:id="det_4152" xml:lang="de">DirectBeach </para>
												</listitem>
												<listitem>
												<para xml:id="det_4153" xml:lang="de">NearBeach</para>
												</listitem>
												<listitem>
												<para xml:id="det_4154" xml:lang="de">Central</para>
												</listitem>
												<listitem>
												<para xml:id="det_4155" xml:lang="de">QuietArea</para>
												</listitem>
												<listitem>
												<para xml:id="det_4156" xml:lang="de">AliveArea</para>
												</listitem>
												<listitem>
												<para xml:id="det_4157" xml:lang="de">CityDestination</para>
												</listitem>
												<listitem>
												<para xml:id="det_4158" xml:lang="de">SurroundedByNature</para>
												</listitem>
												<listitem>
												<para xml:id="det_4159" xml:lang="de">Mountains</para>
												</listitem>
												<listitem>
												<para xml:id="det_4160" xml:lang="de">SkiingArea</para>
												</listitem>
												<listitem>
												<para xml:id="det_4161" xml:lang="de">ThemePark</para>
												</listitem>
												<listitem>
												<para xml:id="det_4162" xml:lang="de">NearAirport</para>
												</listitem>
												<listitem>
												<para xml:id="det_4163" xml:lang="de">SandyBeach</para>
												</listitem>
												<listitem>
												<para xml:id="det_4164" xml:lang="de">ExcursionPossibilities</para>
												</listitem>
												<listitem>
												<para xml:id="det_4165" xml:lang="de">NearShoppingFacilities</para>
												</listitem>
												<listitem>
												<para xml:id="det_4166" xml:lang="de">NearRestaurants</para>
												</listitem>
												<listitem>
												<para xml:id="det_4167" xml:lang="de">Party</para>
												</listitem>
												<listitem>
												<para xml:id="det_4168" xml:lang="de">NearLake</para>
												</listitem>
												<listitem>
												<para xml:id="det_4169" xml:lang="de">SurroundedByGardenPark</para>
												</listitem>
												<listitem>
												<para xml:id="det_4170" xml:lang="de">NearSights</para>
												</listitem>
											</itemizedlist>
											
										</entry>
									</row>
									<row valign="top">
										<entry>
											<para xml:id="det_4171" xml:lang="de">
												<emphasis role="bold">Sportangebote:</emphasis>
											</para>
											<itemizedlist>
												<listitem>
													<para xml:id="det_4172" xml:lang="de">FootballGround</para>
												</listitem>
												<listitem>
													<para xml:id="det_4173" xml:lang="de">FitnessRoom</para>
												</listitem>
												<listitem>
													<para xml:id="det_4174" xml:lang="de">OwnDiveCentre</para>
												</listitem>
												<listitem>
													<para xml:id="det_4175" xml:lang="de">TennisCourt</para>
												</listitem>
												<listitem>
													<para xml:id="det_4176" xml:lang="de">GolfCourse</para>
												</listitem>
												<listitem>
													<para xml:id="det_4177" xml:lang="de">BikeRental</para>
												</listitem>
												<listitem>
													<para xml:id="det_4178" xml:lang="de">OwnSurfCentre</para>
												</listitem>
												<listitem>
													<para xml:id="det_4179" xml:lang="de">BeachVolleballCourt</para>
												</listitem>
												<listitem>
													<para xml:id="det_4180" xml:lang="de">WorkoutProgramme</para>
												</listitem>
												<listitem>
													<para xml:id="det_4181" xml:lang="de">ShootingRange</para>
												</listitem>
												<listitem>
													<para xml:id="det_4182" xml:lang="de">OwnSailingCentre</para>
												</listitem>
												<listitem>
													<para xml:id="det_4183" xml:lang="de">MultifunctionLocation</para>
												</listitem>
												<listitem>
													<para xml:id="det_4184" xml:lang="de">FunSportOffers</para>
												</listitem>
												<listitem>
													<para xml:id="det_4185" xml:lang="de">SwimmingPool</para>
												</listitem>
												<listitem>
													<para xml:id="det_4186" xml:lang="de">SportingEntertainment</para>
												</listitem>
												<listitem>
													<para xml:id="det_4187" xml:lang="de">SquashCourt</para>
												</listitem>
												<listitem>
													<para xml:id="det_4188" xml:lang="de">HikingExcursions</para>
												</listitem>
												<listitem>
													<para xml:id="det_4189" xml:lang="de">SportsTournaments</para>
												</listitem>
												<listitem>
													<para xml:id="det_4190" xml:lang="de">ClimbingWallPark</para>
												</listitem>
												<listitem>
													<para xml:id="det_4191" xml:lang="de">BilliardTable</para>
												</listitem>
												<listitem>
													<para xml:id="det_4192" xml:lang="de">WinterSportsFacilities</para>
												</listitem>
												<listitem>
													<para xml:id="det_4193" xml:lang="de">HorsebackRiding</para>
												</listitem>
												<listitem>
													<para xml:id="det_4194" xml:lang="de">BananaBoat</para>
												</listitem>
												<listitem>
													<para xml:id="det_4195" xml:lang="de">Jetski</para>
												</listitem>
												<listitem>
													<para xml:id="det_4196" xml:lang="de">RiverRafting</para>
												</listitem>
											</itemizedlist>
										</entry>
										<entry>
											<para xml:id="det_4197" xml:lang="de">
												<emphasis role="bold">Familienangebote:</emphasis>
											</para>
											<itemizedlist>
												<listitem>
													<para xml:id="det_4198" xml:lang="de">WaterSlide</para>
												</listitem>
												<listitem>
													<para xml:id="det_4199" xml:lang="de">PlayArea</para>
												</listitem>
												<listitem>
													<para xml:id="det_4200" xml:lang="de">ChildrenEntertainment </para>
												</listitem>
												<listitem>
													<para xml:id="det_4201" xml:lang="de">BabysitterService</para>
												</listitem>
												<listitem>
													<para xml:id="det_4202" xml:lang="de">ChildrenPool</para>
												</listitem>
												<listitem>
													<para xml:id="det_4203" xml:lang="de">FoodForChildren</para>
												</listitem>
												<listitem>
													<para xml:id="det_4204" xml:lang="de">ChildAllowance</para>
												</listitem>
												<listitem>
													<para xml:id="det_4205" xml:lang="de">FamilyRoom</para>
												</listitem>
												<listitem>
													<para xml:id="det_4206" xml:lang="de">PlaneBeach</para>
												</listitem>
												<listitem>
													<para xml:id="det_4207" xml:lang="de">BabyEquipment</para>
												</listitem>
												<listitem>
													<para xml:id="det_4208" xml:lang="de">FamilyExcursion</para>
												</listitem>
												<listitem>
													<para xml:id="det_4209" xml:lang="de">MiniClub</para>
												</listitem>
												<listitem>
													<para xml:id="det_4210" xml:lang="de">SingleWithChild</para>
												</listitem>
												<listitem>
													<para xml:id="det_4211" xml:lang="de">FurnitureForChildren</para>
												</listitem>
												<listitem>
													<para xml:id="det_4212" xml:lang="de">IndoorPlayingArea</para>
												</listitem>
												<listitem>
													<para xml:id="det_4213" xml:lang="de">AquaPark</para>
												</listitem>
												<listitem>
													<para xml:id="det_4214" xml:lang="de">FamilyEntertainment</para>
												</listitem>
												<listitem>
													<para xml:id="det_4215" xml:lang="de">Couples</para>
												</listitem>
												<listitem>
													<para xml:id="det_4216" xml:lang="de">SingleEntertainment</para>
												</listitem>
												<listitem>
													<para xml:id="det_4217" xml:lang="de">TeenEntertainment</para>
												</listitem>
												<listitem>
													<para xml:id="det_4218" xml:lang="de">BabyCotBeds</para>
												</listitem>
												<listitem>
													<para xml:id="det_4219" xml:lang="de">ChildrenSwimmingSchool</para>
												</listitem>
												<listitem>
													<para xml:id="det_4220" xml:lang="de">ChildrenSportFacilities</para>
												</listitem>
												<listitem>
													<para xml:id="det_4221" xml:lang="de">NonSmookerHotel</para>
												</listitem>
												<listitem>
													<para xml:id="det_4222" xml:lang="de">BuggyRental</para>
												</listitem>
												<listitem>
													<para xml:id="det_4223" xml:lang="de">PoolHeated</para>
												</listitem>
											</itemizedlist>
										</entry>
									</row>
									<row valign="top">
										<entry>
											<para xml:id="det_4224" xml:lang="de">
												<emphasis role="bold">Seniorenangebote:</emphasis>
											</para>
											<itemizedlist>
												<listitem>
													<para xml:id="det_4225" xml:lang="de">HealthCare</para>
												</listitem>
												<listitem>
													<para xml:id="det_4226" xml:lang="de">BoardGames</para>
												</listitem>
												<listitem>
													<para xml:id="det_4227" xml:lang="de">HandicappedAccessible</para>
												</listitem>
												<listitem>
													<para xml:id="det_4228" xml:lang="de">DietCuisine</para>
												</listitem>
												<listitem>
													<para xml:id="det_4229" xml:lang="de">LuggageService</para>
												</listitem>
												<listitem>
													<para xml:id="det_4230" xml:lang="de">CoachExcursions</para>
												</listitem>
												<listitem>
													<para xml:id="det_4231" xml:lang="de">TeaDance</para>
												</listitem>
												<listitem>
													<para xml:id="det_4232" xml:lang="de">TherapeuticBath</para>
												</listitem>
												<listitem>
													<para xml:id="det_4233" xml:lang="de">ShuttleService</para>
												</listitem>
												<listitem>
													<para xml:id="det_4234" xml:lang="de">StaffLanguageSkills</para>
												</listitem>
												<listitem>
													<para xml:id="det_4235" xml:lang="de">Lift</para>
												</listitem>
											</itemizedlist>
										</entry>
										<entry>
											<para xml:id="det_4236" xml:lang="de">
												<emphasis role="bold">Wellnessmöglichkeiten:</emphasis>
											</para>
											<itemizedlist>
												<listitem>
													<para xml:id="det_4237" xml:lang="de">Sauna</para>
												</listitem>
												<listitem>
													<para xml:id="det_4238" xml:lang="de">WhirlPool</para>
												</listitem>
												<listitem>
													<para xml:id="det_4239" xml:lang="de">Massage</para>
												</listitem>
												<listitem>
													<para xml:id="det_4240" xml:lang="de">ThermalBath</para>
												</listitem>
												<listitem>
													<para xml:id="det_4241" xml:lang="de">BeautyFarm</para>
												</listitem>
												<listitem>
													<para xml:id="det_4242" xml:lang="de">Thalasso</para>
												</listitem>
												<listitem>
													<para xml:id="det_4243" xml:lang="de">Ayurveda</para>
												</listitem>
												<listitem>
													<para xml:id="det_4244" xml:lang="de">Hammam</para>
												</listitem>
												<listitem>
													<para xml:id="det_4245" xml:lang="de">SteamRoom</para>
												</listitem>
												<listitem>
													<para xml:id="det_4246" xml:lang="de">AromaTherapy</para>
												</listitem>
												<listitem>
													<para xml:id="det_4247" xml:lang="de">MedicalWellness</para>
												</listitem>
												<listitem>
													<para xml:id="det_4248" xml:lang="de">RelaxationArea</para>
												</listitem>
												<listitem>
													<para xml:id="det_4249" xml:lang="de">AntiAge</para>
												</listitem>
												<listitem>
													<para xml:id="det_4250" xml:lang="de">Solarium</para>
												</listitem>
												<listitem>
													<para xml:id="det_4251" xml:lang="de">FitnessRoom</para>
												</listitem>
												<listitem>
													<para xml:id="det_4252" xml:lang="de">Shiatsu</para>
												</listitem>
												<listitem>
													<para xml:id="det_4253" xml:lang="de">PlungePool</para>
												</listitem>
												<listitem>
													<para xml:id="det_4254" xml:lang="de">JuiceBar</para>
												</listitem>
												<listitem>
													<para xml:id="det_4255" xml:lang="de">Facial</para>
												</listitem>
												<listitem>
													<para xml:id="det_4256" xml:lang="de">BeautyTreatment</para>
												</listitem>
												<listitem>
													<para xml:id="det_4257" xml:lang="de">ManicurePedicure</para>
												</listitem>
											</itemizedlist>
										</entry>
									</row>
								</tbody>
							</tgroup>
						</table>
					
					<para xml:id="det_4258" xml:lang="de">( Die Hotelkette soll als Attribut umgesetzt werden. Wegen der Möglichkeit, dass
						sich die Hotelkette ab einem bestimmten Termin ändern kann, ist dieses Attribut
						terminabhängig. Die wichtigsten Hotelketten am Markt werden eindeutig
						klassifiziert.)</para>
					<para xml:id="det_4259" xml:lang="de">Eine <link linkend="AnhangHotelChain">Liste der Hotelketten</link> ist im Anhang
						aufgeführt.</para>
					<para xml:id="det_4260" xml:lang="de"> </para>
					<para xml:id="det_4261" xml:lang="de">Gültige Elemente der Properties-Gruppe sowie deren eventuell untergeordnete Elemente
						für die Angabe von Eigenschaften der Accommodations sind:</para>
					<itemizedlist>
						<listitem>
							<para xml:id="det_4262" xml:lang="de">AccommodationCity </para>
						</listitem>
						<listitem>
							<para xml:id="det_4263" xml:lang="de">AccommodationType </para>
						</listitem>
						<listitem>
							<para xml:id="det_4264" xml:lang="de">AccommodationName </para>
						</listitem>
						<listitem>
							<para xml:id="det_4265" xml:lang="de">AccommodationOfficialCategory </para>
						</listitem>
						<listitem>
							<para xml:id="det_4266" xml:lang="de">AccommodationOperatorCategory </para>
						</listitem>
						<listitem>
							<para xml:id="det_4267" xml:lang="de">AccommodationChain </para>
						</listitem>
						<listitem>
							<para xml:id="det_4268" xml:lang="de">AccommodationGeneralFacilities </para>
						</listitem>
						<listitem>
							<para xml:id="det_4269" xml:lang="de">AccommodationFamilyFacilities </para>
						</listitem>
						<listitem>
							<para xml:id="det_4270" xml:lang="de">AccommodationSportsFacilities </para>
						</listitem>
						<listitem>
							<para xml:id="det_4271" xml:lang="de">AccommodationWellnessFacilities </para>
						</listitem>
						<listitem>
							<para xml:id="det_4272" xml:lang="de">AccommodationSeniorFacilities </para>
						</listitem>
						<listitem>
							<para xml:id="det_4273" xml:lang="de">AccommodationLocations </para>
						</listitem>
						<listitem>
							<para xml:id="det_4274" xml:lang="de">GeneralIncludedServices</para>
						</listitem>
						<listitem>
							<para xml:id="det_4275" xml:lang="de">GeneralExcludedServices (V1.9)</para>
						</listitem>
						<listitem>
							<para xml:id="det_4276" xml:lang="de">AccommodationAddress</para>
							<itemizedlist>
								<listitem>
									<para xml:id="det_4277" xml:lang="de">Street</para>
								</listitem>
								<listitem>
									<para xml:id="det_4278" xml:lang="de">City</para>
								</listitem>
								<listitem>
									<para xml:id="det_4279" xml:lang="de">Country</para>
								</listitem>
								<listitem>
									<para xml:id="det_4280" xml:lang="de">Phone</para>
								</listitem>
								<listitem>
									<para xml:id="det_4281" xml:lang="de">Fax</para>
								</listitem>
								<listitem>
									<para xml:id="det_4282" xml:lang="de">Mail</para>
								</listitem>
								<listitem>
									<para xml:id="det_4283" xml:lang="de">Homepage</para>
								</listitem>
								<listitem>
									<para xml:id="det_4284" xml:lang="de">GeoInfo</para>
									<itemizedlist>
										<listitem>
											<para xml:id="det_4285" xml:lang="de">Region</para>
										</listitem>
										<listitem>
											<para xml:id="det_4286" xml:lang="de">Country</para>
										</listitem>
										<listitem>
											<para xml:id="det_4287" xml:lang="de">Destination</para>
										</listitem>
										<listitem>
											<para xml:id="det_4288" xml:lang="de">GeoCode</para>
											<itemizedlist>
												<listitem>
													<para xml:id="det_4289" xml:lang="de">Latitude</para>
												</listitem>
												<listitem>
													<para xml:id="det_4290" xml:lang="de">Longitude</para>
												</listitem>
												<listitem>
													<para xml:id="det_4291" xml:lang="de">Accuracy</para>
												</listitem>
											</itemizedlist>
										</listitem>
									</itemizedlist>
								</listitem>
							</itemizedlist>
						</listitem>
						<listitem>
							<para xml:id="det_4292" xml:lang="de">AccommodationCatchmentRailwayStation</para>
							<itemizedlist>
								<listitem>
									<para xml:id="det_4293" xml:lang="de">RailwayStation</para>
									<itemizedlist>
										<listitem>
											<para xml:id="det_4294" xml:lang="de">Code</para>
										</listitem>
										<listitem>
											<para xml:id="det_4295" xml:lang="de">Name</para>
										</listitem>
									</itemizedlist>
								</listitem>
							</itemizedlist>
						</listitem>
					</itemizedlist>
					<bridgehead xml:id="AnhangPropertiesUnits" xml:lang="de">Unterbringungen (Units)</bridgehead>
					<para xml:id="det_4296" xml:lang="de">Für die Eingabe von Eigenschaften der Units sind folgende Elemente
						zugelassen:</para>
					<itemizedlist>
						<listitem>
							<para xml:id="det_4297" xml:lang="de">UnitName</para>
						</listitem>
						<listitem>
							<para xml:id="det_4298" xml:lang="de">UnitType</para>
						</listitem>
						<listitem>
							<para xml:id="det_4299" xml:lang="de">UnitBedType (V1.9)</para>
						</listitem>
						<listitem>
							<para xml:id="det_4300" xml:lang="de">UnitFacilities</para>
						</listitem>
						<listitem>
							<para xml:id="det_4301" xml:lang="de">UnitBuildingType</para>
						</listitem>
						<listitem>
							<para xml:id="det_4302" xml:lang="de">GeneralIncludedServices</para>
						</listitem>
						<listitem>
							<para xml:id="det_4303" xml:lang="de">GeneralExcludedServices (V1.9)</para>
						</listitem>
					</itemizedlist>
					
						<table frame="none" colsep="1" rowheader="norowheader">
							<title><phrase xml:id="det_4304" xml:lang="de">Eigenschaften und Angebote der Unterbringungen:</phrase></title>
							<tgroup cols="2">
								<tbody valign="top">
									<row valign="top">
										<entry>
											<para xml:id="det_4305" xml:lang="de">
												<emphasis role="bold">Typen der Unterkünfte:</emphasis>
											</para>
											<itemizedlist>
												<listitem>
												<para xml:id="det_4306" xml:lang="de">Single </para>
												</listitem>
												<listitem>
												<para xml:id="det_4307" xml:lang="de">Double</para>
												</listitem>
												<listitem>
												<para xml:id="det_4308" xml:lang="de">Apartment</para>
												</listitem>
												<listitem>
												<para xml:id="det_4309" xml:lang="de">Studio</para>
												</listitem>
												<listitem>
												<para xml:id="det_4310" xml:lang="de">Bungalow</para>
												</listitem>
												<listitem>
												<para xml:id="det_4311" xml:lang="de">Triple</para>
												</listitem>
												<listitem>
												<para xml:id="det_4312" xml:lang="de">Suite</para>
												</listitem>
												<listitem>
												<para xml:id="det_4313" xml:lang="de">Family</para>
												</listitem>
												<listitem>
												<para xml:id="det_4314" xml:lang="de">Villa</para>
												</listitem>
												<listitem>
												<para xml:id="det_4315" xml:lang="de">HolidayHome</para>
												</listitem>
												<listitem>
												<para xml:id="det_4316" xml:lang="de">SemidetachedHouse</para>
												</listitem>
												<listitem>
												<para xml:id="det_4317" xml:lang="de">Quad</para>
												</listitem>
												<listitem>
												<para xml:id="det_4318" xml:lang="de">Other </para>
												</listitem>
											</itemizedlist>
											
										</entry>
										<entry>
											<para xml:id="det_4319" xml:lang="de">
												<emphasis role="bold">Ausstattungsmerkmale der
													Unterbringung:</emphasis>
											</para>
											<itemizedlist>
												<listitem>
												<para xml:id="det_4320" xml:lang="de">PremiumSuperior </para>
												</listitem>
												<listitem>
												<para xml:id="det_4321" xml:lang="de">Deluxe </para>
												</listitem>
												<listitem>
												<para xml:id="det_4322" xml:lang="de">SeaView </para>
												</listitem>
												<listitem>
												<para xml:id="det_4323" xml:lang="de">SideSeaView </para>
												</listitem>
												<listitem>
												<para xml:id="det_4324" xml:lang="de">Family </para>
												</listitem>
												<listitem>
												<para xml:id="det_4325" xml:lang="de">Duplex </para>
												</listitem>
												<listitem>
												<para xml:id="det_4326" xml:lang="de">SeaViewSideSeaView </para>
												</listitem>
												<listitem>
												<para xml:id="det_4327" xml:lang="de">PremiumView </para>
												</listitem>
												<listitem>
												<para xml:id="det_4328" xml:lang="de">BalconyTerrace </para>
												</listitem>
												<listitem>
												<para xml:id="det_4329" xml:lang="de">Airconditioning </para>
												</listitem>
												<listitem>
												<para xml:id="det_4330" xml:lang="de">HandicappedAccessible </para>
												</listitem>
												<listitem>
												<para xml:id="det_4331" xml:lang="de">Hairdryer </para>
												</listitem>
												<listitem>
												<para xml:id="det_4332" xml:lang="de">NonSmokerRoom </para>
												</listitem>
												<listitem>
												<para xml:id="det_4333" xml:lang="de">SeparateBedroom </para>
												</listitem>
												<listitem>
												<para xml:id="det_4334" xml:lang="de">MoreSeparateBedrooms </para>
												</listitem>
												<listitem>
												<para xml:id="det_4335" xml:lang="de">PoolView </para>
												</listitem>
												<listitem>
												<para xml:id="det_4336" xml:lang="de">GardenView </para>
												</listitem>
												<listitem>
												<para xml:id="det_4337" xml:lang="de">Bunkbed </para>
												</listitem>
												<listitem>
												<para xml:id="det_4338" xml:lang="de">BathToiletInCorridor </para>
												</listitem>
												<listitem>
												<para xml:id="det_4339" xml:lang="de">Loft </para>
												</listitem>
												<listitem>
												<para xml:id="det_4340" xml:lang="de">ChargedHeating </para>
												</listitem>
												<listitem>
												<para xml:id="det_4341" xml:lang="de">HourlyHeating </para>
												</listitem>
												<listitem>
												<para xml:id="det_4342" xml:lang="de">BathOnFloor </para>
												</listitem>
												<listitem>
												<para xml:id="det_4343" xml:lang="de">StreetView </para>
												</listitem>
												<listitem>
												<para xml:id="det_4344" xml:lang="de">Basement </para>
												</listitem>
												<listitem>
												<para xml:id="det_4345" xml:lang="de">SharedBathRoom </para>
												</listitem>
												<listitem>
												<para xml:id="det_4346" xml:lang="de">SharedToilet </para>
												</listitem>
												<listitem>
												<para xml:id="det_4347" xml:lang="de">Dishwasher Fireplace </para>
												</listitem>
												<listitem>
												<para xml:id="det_4348" xml:lang="de">PrivatePool </para>
												</listitem>
												<listitem>
												<para xml:id="det_4349" xml:lang="de">TV </para>
												</listitem>
												<listitem>
												<para xml:id="det_4350" xml:lang="de">SatTV </para>
												</listitem>
												<listitem>
												<para xml:id="det_4351" xml:lang="de">PrivateSauna </para>
												</listitem>
												<listitem>
												<para xml:id="det_4352" xml:lang="de">CentralHeating </para>
												</listitem>
												<listitem>
												<para xml:id="det_4353" xml:lang="de">FloorHeating </para>
												</listitem>
												<listitem>
												<para xml:id="det_4354" xml:lang="de">PrivateSolarium </para>
												</listitem>
												<listitem>
												<para xml:id="det_4355" xml:lang="de">LaundryDryer </para>
												</listitem>
												<listitem>
												<para xml:id="det_4356" xml:lang="de">Freezer </para>
												</listitem>
												<listitem>
												<para xml:id="det_4357" xml:lang="de">BathTub </para>
												</listitem>
												<listitem>
												<para xml:id="det_4358" xml:lang="de">Terrace </para>
												</listitem>
												<listitem>
												<para xml:id="det_4359" xml:lang="de">RoofedTerrace </para>
												</listitem>
												<listitem>
												<para xml:id="det_4360" xml:lang="de">PrivateTennisCourt </para>
												</listitem>
												<listitem>
												<para xml:id="det_4361" xml:lang="de">WashingMachine </para>
												</listitem>
												<listitem>
												<para xml:id="det_4362" xml:lang="de">PrivateWhirlpool</para>
												</listitem>
												<listitem>
												<para xml:id="det_4363" xml:lang="de">Shower</para>
												</listitem>
												<listitem>
												<para xml:id="det_4364" xml:lang="de">Balcony</para>
												</listitem>
												<listitem>
												<para xml:id="det_4365" xml:lang="de">Terrace</para>
												</listitem>
												<listitem>
												<para xml:id="det_4366" xml:lang="de">TwoBedroomsWithConnectingDoor</para>
												</listitem>
												<listitem>
												<para xml:id="det_4367" xml:lang="de">ShortenedSeaView</para>
												</listitem>
												<listitem>
												<para xml:id="det_4368" xml:lang="de">LakeView</para>
												</listitem>
												<listitem>
												<para xml:id="det_4369" xml:lang="de">GroundFloor</para>
												</listitem>
												<listitem>
												<para xml:id="det_4370" xml:lang="de">UpperFloor</para>
												</listitem>
												<listitem>
												<para xml:id="det_4371" xml:lang="de">RoomSafe</para>
												</listitem>
												<listitem>
												<para xml:id="det_4372" xml:lang="de">Iron</para>
												</listitem>
											</itemizedlist>
											
										</entry>
									</row>
									<row>
										<entry>
											<para xml:id="det_4373" xml:lang="de">
												<emphasis role="bold">Gebäudetyp der Unterbringung</emphasis>
											</para>
											<itemizedlist>
												<listitem>
												<para xml:id="det_4374" xml:lang="de">NewBuilding</para>
												</listitem>
												<listitem>
												<para xml:id="det_4375" xml:lang="de">OldBuilding</para>
												</listitem>
												<listitem>
												<para xml:id="det_4376" xml:lang="de">Annex</para>
												</listitem>
												<listitem>
												<para xml:id="det_4377" xml:lang="de">SubsidiaryBuilding</para>
												</listitem>
												<listitem>
												<para xml:id="det_4378" xml:lang="de">MainBuilding</para>
												</listitem>
												<listitem>
												<para xml:id="det_4379" xml:lang="de">Dependance</para>
												</listitem>
											</itemizedlist>
											
										</entry>
										<entry/>
									</row>
								</tbody>
							</tgroup>
						</table>
					
					<para xml:id="det_4380" xml:lang="de">Beim Meerblick unterscheidet OTDS folgende Merkmale:</para>
					<itemizedlist>
						<listitem>
							<para xml:id="det_4381" xml:lang="de">SeaView (uneingeschränkter Meerblick)</para>
						</listitem>
						<listitem>
							<para xml:id="det_4382" xml:lang="de">SideSeaView (seitlicher Meerblick)</para>
						</listitem>
						<listitem>
							<para xml:id="det_4383" xml:lang="de">SeaViewSideSeaView (zum Teil uneingeschränkter und zum Teil seitlicher
								Meerblick)</para>
						</listitem>
						<listitem>
							<para xml:id="det_4384" xml:lang="de">ShortenedSeaView (eingeschränkter Meerblick)</para>
						</listitem>
					</itemizedlist>
					<bridgehead xml:id="AnhangPropertiesBoards" xml:lang="de">Verpflegung (Boards)</bridgehead>
					<para xml:id="det_4385" xml:lang="de">Auch die Verpflegung wird zur Komponente der Accommodations gerechnet. Die gültigen
						Elemente für die Angabe der Properties sind:</para>
					<itemizedlist>
						<listitem>
							<para xml:id="det_4386" xml:lang="de">BoardName</para>
						</listitem>
						<listitem>
							<para xml:id="det_4387" xml:lang="de">BoardType</para>
						</listitem>
						<listitem>
							<para xml:id="det_4388" xml:lang="de">BoardProperties</para>
						</listitem>
						<listitem>
							<para xml:id="det_4389" xml:lang="de">GeneralIncludedServices</para>
						</listitem>
						<listitem>
							<para xml:id="det_4390" xml:lang="de">GeneralExcludedServices (V1.9)</para>
						</listitem>
					</itemizedlist>
					
						<table frame="none" colsep="1" rowheader="norowheader">
							<title><phrase xml:id="det_4391" xml:lang="de">Eigenschaften und Angebote der Verpflegungen:</phrase></title>
							<tgroup cols="2">
								<tbody valign="top">
									<row valign="top">
										<entry>
											<para xml:id="det_4392" xml:lang="de">
												<emphasis role="bold">Verpflegungstypen:</emphasis>
											</para>
											<itemizedlist>
												<listitem>
												<para xml:id="det_4393" xml:lang="de">None</para>
												</listitem>
												<listitem>
												<para xml:id="det_4394" xml:lang="de">SelfCatering</para>
												</listitem>
												<listitem>
												<para xml:id="det_4395" xml:lang="de">Breakfast</para>
												</listitem>
												<listitem>
												<para xml:id="det_4396" xml:lang="de">HalfBoard</para>
												</listitem>
												<listitem>
												<para xml:id="det_4397" xml:lang="de">HalfBoardPlus</para>
												</listitem>
												<listitem>
												<para xml:id="det_4398" xml:lang="de">FullBoard</para>
												</listitem>
												<listitem>
												<para xml:id="det_4399" xml:lang="de">FullBoardPlus</para>
												</listitem>
												<listitem>
												<para xml:id="det_4400" xml:lang="de">AllInclusive</para>
												</listitem>
												<listitem>
												<para xml:id="det_4401" xml:lang="de">AllInclusivePlus</para>
												</listitem>
											</itemizedlist>
										</entry>
										<entry>
											<para xml:id="det_4402" xml:lang="de">
												<emphasis role="bold">Besondere Verpflegungseigenschaften
													(BoardProperties):</emphasis></para>
											<itemizedlist>
												<listitem>
												<para xml:id="det_4403" xml:lang="de">Diet</para>
												</listitem>
												<listitem>
												<para xml:id="det_4404" xml:lang="de">Vegetarian</para>
												</listitem>
												<listitem>
												<para xml:id="det_4405" xml:lang="de">Kosher</para>
												</listitem>
											</itemizedlist>
										
										</entry>
									</row>
								</tbody>
							</tgroup>
						</table>
					
				</section>

				<section xml:id="AnhangPropertiesAddons">
					<title><phrase xml:id="det_4406" xml:lang="de">Properties - Addons</phrase></title>
					
						<informaltable border="0" style="border-collapse:  collapse;width:1008pt" width="1344">

							<col width="121px"/>
							<col width="144px"/>
							<col width="224px"/>
							<col width="267px"/>
							<col width="429px"/>
							<col width="212px"/>
							<thead>
								<tr>
									<td rowspan="1" colspan="1">Komponente</td>
									<td rowspan="1" colspan="1">Zugelassene Ebenen</td>
									<td rowspan="1" colspan="1">Element/Path</td>
									<td rowspan="1" colspan="1">Values</td>
									<td rowspan="1" colspan="1">Bedeutung</td>
									<td rowspan="1" colspan="1">Conditions</td>
								</tr>
							</thead>
							<tr>
								<td rowspan="1" colspan="1">Addon</td>
								<td rowspan="1" colspan="1">&gt;= Addon</td>
								<td rowspan="1" colspan="1">AddonName</td>
								<td rowspan="1" colspan="1">String</td>
								<td rowspan="1" colspan="1">Name der Zusatzleistung</td>
								<td rowspan="1" colspan="1"/>
							</tr>
							<tr>
								<td rowspan="1" colspan="1">Addon</td>
								<td rowspan="1" colspan="1">&gt;= Service</td>
								<td rowspan="1" colspan="1">AddonServiceName</td>
								<td rowspan="1" colspan="1">String</td>
								<td rowspan="1" colspan="1">Vollständige Bezeichnung des Service</td>
								<td rowspan="1" colspan="1"/>
							</tr>
							<tr>
								<td rowspan="1" colspan="1">Addon</td>
								<td rowspan="1" colspan="1">&gt;= Service</td>
								<td rowspan="1" colspan="1">AddonServiceType</td>
								<td rowspan="1" colspan="1">
									<para xml:id="det_4407" xml:lang="de">Mit folgenden Unterelementen:</para>
									<itemizedlist>
										<listitem>
											<para xml:id="det_4408" xml:lang="de">/Insurance</para>
										</listitem>
										<listitem>
											<para xml:id="det_4409" xml:lang="de">/CarRental</para>
										</listitem>
										<listitem>
											<para xml:id="det_4410" xml:lang="de">/WellnessArrangement</para>
										</listitem>
										<listitem>
											<para xml:id="det_4411" xml:lang="de">/SportsArrangement</para>
										</listitem>
										<listitem>
											<para xml:id="det_4412" xml:lang="de">/TransferArrangement</para>
										</listitem>
										<listitem>
											<para xml:id="det_4413" xml:lang="de">/GolfArrangement</para>
										</listitem>
										<listitem>
											<para xml:id="det_4414" xml:lang="de">/DivingArrangement</para>
										</listitem>
										<listitem>
											<para xml:id="det_4415" xml:lang="de">/TourArrangement</para>
										</listitem>
										<listitem>
											<para xml:id="det_4416" xml:lang="de">/HotelArrangement</para>
										</listitem>
										<listitem>
											<para xml:id="det_4417" xml:lang="de">/CityArrangement</para>
										</listitem>
										<listitem>
											<para xml:id="det_4418" xml:lang="de">/BoardArrangement</para>
										</listitem>
										<listitem>
											<para xml:id="det_4419" xml:lang="de">/FlightSeatArrangement</para>
										</listitem>
									</itemizedlist>
								</td>
								<td rowspan="1" colspan="1">Art des Service</td>
								<td rowspan="1" colspan="1"/>
							</tr>
							<tr>
								<td rowspan="1" colspan="1">Addon</td>
								<td rowspan="1" colspan="1">&gt;= ServiceFeature</td>
								<td rowspan="1" colspan="1">AddonServiceFeatureName</td>
								<td rowspan="1" colspan="1">String</td>
								<td rowspan="1" colspan="1">Vollständige Bezeichnung des Service Feature</td>
								<td rowspan="1" colspan="1"/>
							</tr>
							<tr>
								<td rowspan="1" colspan="1">Addon</td>
								<td rowspan="1" colspan="1">&gt;= Addon</td>
								<td rowspan="1" colspan="1">AddonCatchmentRailwayStation</td>
								<td rowspan="1" colspan="1">RailwayStationCode / String</td>
								<td rowspan="1" colspan="1">Bahnstationen im Einzugsgebiet der
									Zusatzleistung</td>
								<td rowspan="1" colspan="1"/>
							</tr>
							<tr>
								<td rowspan="1" colspan="1">Addon</td>
								<td rowspan="1" colspan="1"><para xml:lang="de">&gt;= Addon</para><para xml:lang="de">&gt;=
									Service</para><para xml:lang="de">&gt;= ServiceFeature</para></td>
								<td rowspan="1" colspan="1">AddonCarRentalProperties</td>
								<td rowspan="1" colspan="1">
									<para xml:lang="de">Mit folgenden Unterelementen:</para>
									<itemizedlist>
										<listitem>
											<para xml:lang="de">/CarRentalStationType</para>
										</listitem>
										<listitem>
											<para xml:lang="de">/FuelOptions</para>
										</listitem>
										<listitem>
											<para xml:lang="de">/CarSpecifications</para>
										</listitem>
										<listitem>
											<para xml:lang="de">/Insurance</para>
										</listitem>
									</itemizedlist>
								</td>
							<td>Weitere Eigenschaften für Mietwagen</td>
								<td rowspan="1" colspan="1"/>
							</tr>							
						</informaltable>
					

					<para xml:id="det_4420" xml:lang="de">Die gültigen Elemente für Zusatzleistungen sind</para>
					<itemizedlist>
						<listitem>
							<para xml:id="det_4421" xml:lang="de">AddonName</para>
						</listitem>
						<listitem>
							<para xml:id="det_4422" xml:lang="de">AddonServiceType </para>
								<itemizedlist>
									<listitem>
										<para xml:id="det_4423" xml:lang="de">Insurance</para>
									</listitem>
									<listitem>
										<para xml:id="det_4424" xml:lang="de">CarRental</para>
									</listitem>
									<listitem>
										<para xml:id="det_4425" xml:lang="de">WellnessArrangement</para>
									</listitem>
									<listitem>
										<para xml:id="det_4426" xml:lang="de">SportsArrangement</para>
									</listitem>
									<listitem>
										<para xml:id="det_4427" xml:lang="de">TransferArrangement</para>
									</listitem>
									<listitem>
										<para xml:id="det_4428" xml:lang="de">GolfArrangement</para>
									</listitem>
									<listitem>
										<para xml:id="det_4429" xml:lang="de">DivingArrangement</para>
									</listitem>
									<listitem>
										<para xml:id="det_4430" xml:lang="de">TourArrangement</para>
									</listitem>
									<listitem>
										<para xml:id="det_4431" xml:lang="de">HotelArrangement</para>
									</listitem>
									<listitem>
										<para xml:id="det_4432" xml:lang="de">CityArrangement</para>
									</listitem>
									<listitem>
										<para xml:id="det_4433" xml:lang="de">BoardArrangement</para>
									</listitem>
									<listitem>
										<para xml:id="det_4434" xml:lang="de">FlightSeatArrangement</para>
									</listitem>
								</itemizedlist>
						</listitem>
						<listitem>
							<para xml:id="det_4435" xml:lang="de">AddonServiceName</para>
						</listitem>
						<listitem>
							<para xml:id="det_4436" xml:lang="de">AddonServiceFeatureName</para>
						</listitem>
						<listitem>
							<para xml:id="det_4437" xml:lang="de">AddonCatchmentRailwayStations</para>
						</listitem>
						<listitem>
							<para xml:lang="de">AddonCarRentalProperties (V1.9)</para>
						</listitem>
						<listitem>
							<para xml:id="det_4438" xml:lang="de">GeneralIncludedServices</para>
						</listitem>
						<listitem>
							<para xml:id="det_4439" xml:lang="de">GeneralExcludedServices (V1.9)</para>
						</listitem>
					</itemizedlist>
					<para xml:id="det_4440" xml:lang="de">Die Service-Typen der Zusatzleistungen sind, wie oben aufgelistet, in verschiedene
						Kategorien unterteilt. Eine Freitextangabe der leistung ist also nicht möglich sonder
						ausschließlich die Auswahl aus folgenden Typen:</para>
					
						<table frame="none" colsep="1" rowheader="norowheader">
							<title><phrase xml:id="det_4441" xml:lang="de">Typen von Zusatzleistungen:</phrase></title>
							<tgroup cols="2">
								<tbody valign="top">
									<row valign="top">
										<entry>
											<para xml:id="det_4442" xml:lang="de">
												<emphasis role="bold">Versicherungen:</emphasis></para>
											<itemizedlist>
												<listitem>
												<para xml:id="det_4443" xml:lang="de">HealthInsurance</para>
												</listitem>
												<listitem>
												<para xml:id="det_4444" xml:lang="de">CancelationInsurance</para>
												</listitem>
												<listitem>
												<para xml:id="det_4445" xml:lang="de">InterceptionInsurance</para>
												</listitem>
												<listitem>
												<para xml:id="det_4446" xml:lang="de">FamilyInsurance</para>
												</listitem>
												<listitem>
												<para xml:id="det_4447" xml:lang="de">LuggageInsurance</para>
												</listitem>
											</itemizedlist>
											
										</entry>
										<entry>
											<para xml:id="det_4448" xml:lang="de">
												<emphasis role="bold">Mietwagen</emphasis></para>
											<itemizedlist>
												<listitem>
												<para xml:id="det_4449" xml:lang="de">SmallCar</para>
												</listitem>
												<listitem>
												<para xml:id="det_4450" xml:lang="de">CompactCar</para>
												</listitem>
												<listitem>
												<para xml:id="det_4451" xml:lang="de">FamilyCar</para>
												</listitem>
												<listitem>
												<para xml:id="det_4452" xml:lang="de">SuvCar</para>
												</listitem>
												<listitem>
												<para xml:id="det_4453" xml:lang="de">DeluxeCar</para>
												</listitem>
												<listitem>
												<para xml:id="det_4454" xml:lang="de">CampMobile</para>
												</listitem>
												<listitem>
												<para xml:id="det_4455" xml:lang="de">MotorBike</para>
												</listitem>
												<listitem>
												<para xml:id="det_4456" xml:lang="de">CabrioletCar</para>
												</listitem>
												<listitem>
												<para xml:id="det_4457" xml:lang="de">MediumCar</para>
											</listitem>
											<listitem>
												<para xml:lang="de">Other</para>
											</listitem>
											<listitem>
												<para xml:lang="de">Minivan (V1.9)</para>
											</listitem>
											</itemizedlist>
										</entry>
									</row>
									<row>
										<entry>
											<para xml:id="det_4458" xml:lang="de">
												<emphasis role="bold">Wellness</emphasis></para>
											<itemizedlist>
												<listitem>
												<para xml:id="det_4459" xml:lang="de">HealthArrangement</para>
												</listitem>
												<listitem>
												<para xml:id="det_4460" xml:lang="de">Massage</para>
												</listitem>
												<listitem>
												<para xml:id="det_4461" xml:lang="de">SaunaSteambath</para>
												</listitem>
												<listitem>
												<para xml:id="det_4462" xml:lang="de">Thalasso</para>
												</listitem>
												<listitem>
												<para xml:id="det_4463" xml:lang="de">Treatments</para>
												</listitem>
												<listitem>
												<para xml:id="det_4464" xml:lang="de">AntiAging</para>
												</listitem>
												<listitem>
												<para xml:id="det_4465" xml:lang="de">BeautyFarm</para>
												</listitem>
												<listitem>
												<para xml:id="det_4466" xml:lang="de">AcuPuncture</para>
												</listitem>
											</itemizedlist>
										
										</entry>
										<entry>
											<para xml:id="det_4467" xml:lang="de">
												<emphasis role="bold">Sportarrangements</emphasis></para>
											<itemizedlist>
												<listitem>
												<para xml:id="det_4468" xml:lang="de">Sailing</para>
												</listitem>
												<listitem>
												<para xml:id="det_4469" xml:lang="de">BikeRental</para>
												</listitem>
												<listitem>
												<para xml:id="det_4470" xml:lang="de">BallSports</para>
												</listitem>
												<listitem>
												<para xml:id="det_4471" xml:lang="de">Aerobics</para>
												</listitem>
												<listitem>
												<para xml:id="det_4472" xml:lang="de">SportGym</para>
												</listitem>
												<listitem>
												<para xml:id="det_4473" xml:lang="de">HorseRiding</para>
												</listitem>
												<listitem>
												<para xml:id="det_4474" xml:lang="de">SkiRental</para>
												</listitem>
												<listitem>
												<para xml:id="det_4475" xml:lang="de">WaterSports</para>
												</listitem>
												<listitem>
												<para xml:id="det_4476" xml:lang="de">Surfing</para>
												</listitem>
												<listitem>
												<para xml:id="det_4477" xml:lang="de">Tennis</para>
												</listitem>
											</itemizedlist>
										</entry>
									</row>
									<row>
										<entry>
											<para xml:id="det_4478" xml:lang="de">
												<emphasis role="bold">Transfer</emphasis></para>
											<itemizedlist>
												<listitem>
												<para xml:id="det_4479" xml:lang="de">HelicopterTransfer</para>
												</listitem>
												<listitem>
												<para xml:id="det_4480" xml:lang="de">PrivateTransfer</para>
												</listitem>
												<listitem>
												<para xml:id="det_4481" xml:lang="de">BoatTransfer</para>
												</listitem>
												<listitem>
												<para xml:id="det_4482" xml:lang="de">BusTransfer</para>
												</listitem>
												<listitem>
												<para xml:id="det_4483" xml:lang="de">TaxiTransfer</para>
												</listitem>
											</itemizedlist>
										</entry>
										<entry>
											<para xml:id="det_4484" xml:lang="de">
												<emphasis role="bold">Golfarrangements</emphasis></para>
											<itemizedlist>
												<listitem>
												<para xml:id="det_4485" xml:lang="de">CourtAccess</para>
												</listitem>
												<listitem>
												<para xml:id="det_4486" xml:lang="de">EquipmentRental</para>
												</listitem>
												<listitem>
												<para xml:id="det_4487" xml:lang="de">GolfLesson</para>
												</listitem>
												<listitem>
												<para xml:id="det_4488" xml:lang="de">DrivingRange</para>
												</listitem>
											</itemizedlist>
											
										</entry>
									</row>
									<row>
										<entry>
											<para xml:id="det_4489" xml:lang="de">
												<emphasis role="bold">Tauchpakete</emphasis></para>
											<itemizedlist>
												<listitem>
												<para xml:id="det_4490" xml:lang="de">DivingTour</para>
												</listitem>
												<listitem>
												<para xml:id="det_4491" xml:lang="de">EquipmentRental</para>
												</listitem>
												<listitem>
												<para xml:id="det_4492" xml:lang="de">DivingLesson</para>
												</listitem>
												<listitem>
												<para xml:id="det_4493" xml:lang="de">DivingLicense</para>
												</listitem>
											</itemizedlist>
										</entry>
										<entry>
											<para xml:id="det_4494" xml:lang="de">
												<emphasis role="bold">Touren</emphasis></para>
											<itemizedlist>
												<listitem>
												<para xml:id="det_4495" xml:lang="de">BusTour</para>
												</listitem>
												<listitem>
												<para xml:id="det_4496" xml:lang="de">BoatTour</para>
												</listitem>
												<listitem>
												<para xml:id="det_4497" xml:lang="de">AdventureTour</para>
												</listitem>
												<listitem>
												<para xml:id="det_4498" xml:lang="de">PrivateTour</para>
												</listitem>
											</itemizedlist>
										</entry>
									</row>
									<row>
										<entry>
											<para xml:id="det_4499" xml:lang="de">
												<emphasis role="bold">Hotelarrangements</emphasis></para>
											<itemizedlist>
												<listitem>
												<para xml:id="det_4500" xml:lang="de">ButlerService</para>
												</listitem>
												<listitem>
												<para xml:id="det_4501" xml:lang="de">EveryDayCleanService</para>
												</listitem>
											</itemizedlist>
										</entry>
										<entry>
											<para xml:id="det_4502" xml:lang="de">
												<emphasis role="bold">Städtearrangements</emphasis></para>
											<itemizedlist>
												<listitem>
												<para xml:id="det_4503" xml:lang="de">CityPass</para>
												</listitem>
												<listitem>
												<para xml:id="det_4504" xml:lang="de">Tickets</para>
												</listitem>
											</itemizedlist>
										</entry>
									</row>
									<row>
										<entry>
											<para xml:id="det_4505" xml:lang="de">
												<emphasis role="bold">Verpflegungsarrangements</emphasis></para>
											<itemizedlist>
												<listitem>
												<para xml:id="det_4506" xml:lang="de">GalaDinner</para>
												</listitem>
												<listitem>
												<para xml:id="det_4507" xml:lang="de">FreeSnacks</para>
												</listitem>
												<listitem>
												<para xml:id="det_4508" xml:lang="de">XmasDinner</para>
												</listitem>
											</itemizedlist>
										</entry>
										<entry>
											<para xml:id="det_4509" xml:lang="de">
												<emphasis role="bold">Sitzreservierung - Flug</emphasis></para>
											<itemizedlist>
												<listitem>
												<para xml:id="det_4510" xml:lang="de">MoreSpace</para>
												</listitem>
												<listitem>
												<para xml:id="det_4511" xml:lang="de">EmergencySeats</para>
												</listitem>
												<listitem>
												<para xml:id="det_4512" xml:lang="de">InfantSeat</para>
												</listitem>
											</itemizedlist>
										</entry>
									</row>
								</tbody>
							</tgroup>
						</table>
					
				</section>
				<section xml:id="AnhangPropertiesFlights">
					<title><phrase xml:id="det_4513" xml:lang="de">Properties - Flüge</phrase></title>
					
						<informaltable border="0" style="border-collapse:  collapse;width:1008pt" width="1344">
							<col width="121.0px"/>
							<col width="183.0px"/>
							<col width="252.0px"/>
							<col width="258.0px"/>
							<col width="429.0px"/>
							<col width="212.0px"/>
							<thead>
								<tr>
									<td rowspan="1" colspan="1">Komponente</td>
									<td rowspan="1" colspan="1">Zugelassene Ebenen</td>
									<td rowspan="1" colspan="1">Element/Path</td>
									<td rowspan="1" colspan="1">Values</td>
									<td rowspan="1" colspan="1">Bedeutung</td>
									<td rowspan="1" colspan="1">Conditions</td>
								</tr>
							</thead>
							<tr>
								<td rowspan="1" colspan="1">Flights</td>
								<td rowspan="1" colspan="1"><para xml:id="det_4514" xml:lang="de">&gt;= OnewayFlight</para><para xml:id="det_4515" xml:lang="de">&gt;=
										ReturnFlight/Outbound</para><para xml:id="det_4516" xml:lang="de">&gt;=
									ReturnFlight/Inbound</para></td>
								<td rowspan="1" colspan="1">FlightBookingClassBaggageAllowances</td>
								<td rowspan="1" colspan="1">
									<para xml:id="det_4517" xml:lang="de">Mit folgenden Unterelementen:</para>
									<itemizedlist>
										<listitem>
											<para xml:id="det_4518" xml:lang="de">/BaggageAllowance/Pieces</para>
										</listitem>
										<listitem>
											<para xml:id="det_4519" xml:lang="de">/BaggageAllowance/Weight</para>
										</listitem>
										<listitem>
											<para xml:id="det_4520" xml:lang="de">/BaggageAllowance/Unit</para>
										</listitem>
										<listitem>
											<para xml:id="det_4521" xml:lang="de">/BaggageAllowance/Size</para>
										</listitem>
									</itemizedlist>
								</td>
								<td rowspan="1" colspan="1">Gepäckbestimmungen, unterschieden nach CheckIn Gepäck und Handgepäck</td>
								<td rowspan="1" colspan="1"/>
							</tr>
							<tr>
								<td rowspan="1" colspan="1">Flights</td>
								<td rowspan="1" colspan="1"><para xml:id="det_4522" xml:lang="de">&gt;= OnewayFlight</para><para xml:id="det_4523" xml:lang="de">&gt;=
										ReturnFlight/Outbound</para><para xml:id="det_4524" xml:lang="de">&gt;=
									ReturnFlight/Inbound</para></td>
								<td rowspan="1" colspan="1">FlightRoute</td>
								<td rowspan="1" colspan="1">
									<para xml:id="det_4525" xml:lang="de">Mit folgenden Unterelementen:</para>
									<itemizedlist>
										<listitem>
											<para xml:id="det_4526" xml:lang="de">/Departure</para>
										</listitem>
										<listitem>
											<para xml:id="det_4527" xml:lang="de">/Arrival</para>
										</listitem>
										<listitem>
											<para xml:id="det_4528" xml:lang="de">/Operating</para>
										</listitem>
										<listitem>
											<para xml:id="det_4529" xml:lang="de">/Operating/Carrier</para>
										</listitem>
										<listitem>
											<para xml:id="det_4530" xml:lang="de">/Operating/FlightNumber</para>
										</listitem>
										<listitem>
											<para xml:id="det_4531" xml:lang="de">/Marketing</para>
										</listitem>
										<listitem>
											<para xml:id="det_4532" xml:lang="de">/Marketing/Carrier</para>
										</listitem>
										<listitem>
											<para xml:id="det_4533" xml:lang="de">/Marketing/FlightNumber</para>
										</listitem>
										<listitem>
											<para xml:id="det_4534" xml:lang="de">/FlightType</para>
										</listitem>
										<listitem>
											<para xml:id="det_4535" xml:lang="de">/FlightBookingClassType</para>
										</listitem>
										<listitem>
											<para xml:id="det_4536" xml:lang="de">/ElapsedFlyingTime</para>
										</listitem>
										<listitem>
											<para xml:id="det_4537" xml:lang="de">/Equipment</para>
										</listitem>
										<listitem>
											<para xml:id="det_4538" xml:lang="de">/StopOvers</para>
										</listitem>
									</itemizedlist>
								</td>
								<td rowspan="1" colspan="1">Alle notwendigen Informationen zur Beschreibung
									der Flug-Route und der Rahmenparameter.</td>
								<td rowspan="1" colspan="1"/>
							</tr>
							<tr>
								<td rowspan="1" colspan="1">Flights</td>
								<td rowspan="1" colspan="1"><para xml:id="det_4539" xml:lang="de">&gt;= OnewayFlight</para><para xml:id="det_4540" xml:lang="de">&gt;=
										ReturnFlight/Outbound</para><para xml:id="det_4541" xml:lang="de">&gt;=
									ReturnFlight/Inbound</para></td>
								<td rowspan="1" colspan="1">FlightBookingClassType</td>
								<td rowspan="1" colspan="1">
									<itemizedlist>
										<listitem>
											<para xml:id="det_4542" xml:lang="de">Economy</para>
										</listitem>
										<listitem>
											<para xml:id="det_4543" xml:lang="de">PremiumEconomy</para>
										</listitem>
										<listitem>
											<para xml:id="det_4544" xml:lang="de">Business</para>
										</listitem>
										<listitem>
											<para xml:id="det_4545" xml:lang="de">First</para>
										</listitem>
									</itemizedlist>
								</td>
								<td rowspan="1" colspan="1">Klasse in der sich der Sitz befindet</td>
								<td rowspan="1" colspan="1"/>
							</tr>
						</informaltable>
					
					<para xml:id="det_4546" xml:lang="de">Flugkomponenten werden über folgende Properties-Elemente genauer spezifiziert
						werden:</para>
					<itemizedlist>
						<listitem>
							<para xml:id="det_4547" xml:lang="de">FlightBookingClassBaggageAllowances</para>
						</listitem>
						<listitem>
							<para xml:id="det_4548" xml:lang="de">FlightRoute</para>
						</listitem>
						<listitem>
							<para xml:id="det_4549" xml:lang="de">PriceType</para>
						</listitem>
						<listitem>
							<para xml:id="det_4550" xml:lang="de">GeneralIncludedService</para>
						</listitem>
					</itemizedlist>
				</section>
				<section xml:id="AnhangPropertiesPriceTypes">
					<title><phrase xml:id="det_4551" xml:lang="de">Properties - GeneralIncluded, GeneralExcluded
							(V1.9), PriceType, TextInformation</phrase></title>
					
						<informaltable border="0" style="border-collapse:  collapse;width:1008pt" width="1344">
							<col width="121.0px"/>
							<col width="183.0px"/>
							<col width="252.0px"/>
							<col width="258.0px"/>
							<col width="429.0px"/>
							<col width="212.0px"/>
							<thead>
								<tr>
									<td rowspan="1" colspan="1">Komponente</td>
									<td rowspan="1" colspan="1">Zugelassene Ebenen</td>
									<td rowspan="1" colspan="1">Element/Path</td>
									<td rowspan="1" colspan="1">Values</td>
									<td rowspan="1" colspan="1">Bedeutung</td>
									<td rowspan="1" colspan="1">Conditions</td>
								</tr>
							</thead>
							<tr>
								<td rowspan="1" colspan="1">
									<para xml:id="det_4552" xml:lang="de">Addon</para><para xml:id="det_4553" xml:lang="de">Accommodation</para><para xml:id="det_4554" xml:lang="de">Flights</para>
								</td>
								<td rowspan="1" colspan="1">
								<para xml:id="det_4555" xml:lang="de">&gt;= Addon</para>
								<para xml:id="det_4556" xml:lang="de">&gt;= AddonService</para>
								<para xml:id="det_4557" xml:lang="de">&gt;= SellingAccom</para>
								<para xml:id="det_4558" xml:lang="de">&gt;= Unit</para>
								<para xml:id="det_4559" xml:lang="de">&gt;= Board</para><para xml:id="det_4560" xml:lang="de">&gt;= OnewayFlight</para><para xml:id="det_4561" xml:lang="de">&gt;=
										ReturnFlight/Outbound</para><para xml:id="det_4562" xml:lang="de">&gt;=
									ReturnFlight/Inbound</para></td>
								<td rowspan="1" colspan="1">PriceType</td>
								<td rowspan="1" colspan="1">
									<itemizedlist>
										<listitem>
											<para xml:id="det_4563" xml:lang="de">Base</para>
										</listitem>
										<listitem>
											<para xml:id="det_4564" xml:lang="de">Board</para>
										</listitem>
										<listitem>
											<para xml:id="det_4565" xml:lang="de">EarlyBird</para>
										</listitem>
										<listitem>
											<para xml:id="det_4566" xml:lang="de">ExtraDay</para>
										</listitem>
										<listitem>
											<para xml:id="det_4567" xml:lang="de">StayPay</para>
										</listitem>
										<listitem>
											<para xml:id="det_4568" xml:lang="de">ChildReduction</para>
										</listitem>
										<listitem>
											<para xml:id="det_4569" xml:lang="de">DurationReduction</para>
										</listitem>
										<listitem>
											<para xml:id="det_4570" xml:lang="de">ChildPrice</para>
										</listitem>
										<listitem>
											<para xml:id="det_4571" xml:lang="de">OccupancyReduction</para>
										</listitem>
										<listitem>
											<para xml:id="det_4572" xml:lang="de">OccupancySupplement</para>
										</listitem>
										<listitem>
											<para xml:id="det_4573" xml:lang="de">BoardChildReduction</para>
										</listitem>
										<listitem>
											<para xml:id="det_4574" xml:lang="de">BoardSupplement</para>
										</listitem>
										<listitem>
											<para xml:id="det_4575" xml:lang="de">SelfDrivingSupplement</para>
										</listitem>
										<listitem>
											<para xml:id="det_4576" xml:lang="de">GeneralSupplement</para>
										</listitem>
										<listitem>
											<para xml:id="det_4577" xml:lang="de">GeneralDiscount</para>
										</listitem>
										<listitem>
											<para xml:id="det_4578" xml:lang="de">FuelSurcharge</para>
										</listitem>
										<listitem>
											<para xml:id="det_4579" xml:lang="de">AirPassengerDuty</para>
										</listitem>
										<listitem>
											<para xml:id="det_4580" xml:lang="de">AirportSurcharge</para>
										</listitem>
										<listitem>
											<para xml:id="det_4581" xml:lang="de">FlightSupplement</para>
										</listitem>
										<listitem>
											<para xml:id="det_4582" xml:lang="de">FlightTax</para>
										</listitem>
										<listitem>
											<para xml:id="det_4583" xml:lang="de">SecurityCharge</para>
										</listitem>
									</itemizedlist>
								</td>
								<td rowspan="1" colspan="1">Art des Preises</td>
								<td rowspan="1" colspan="1"/>
							</tr>
							<tr>
								<td rowspan="1" colspan="1">
									<para xml:id="det_4584" xml:lang="de">Addon</para><para xml:id="det_4585" xml:lang="de">Accommodation</para><para xml:id="det_4586" xml:lang="de">Flights</para>
								</td>
								<td rowspan="1" colspan="1">
								<para xml:id="det_4587" xml:lang="de">&gt;= Addon</para>
								<para xml:id="det_4588" xml:lang="de">&gt;= AddonService</para>
								<para xml:id="det_4589" xml:lang="de">&gt;= SellingAccom</para>
								<para xml:id="det_4590" xml:lang="de">&gt;= Unit</para>
								<para xml:id="det_4591" xml:lang="de">&gt;= Board</para>
								<para xml:id="det_4592" xml:lang="de">&gt;= OnewayFlight</para>
								<para xml:id="det_4593" xml:lang="de">&gt;= ReturnFlight/Outbound</para>
								<para xml:id="det_4594" xml:lang="de">&gt;= ReturnFlight/Inbound</para>
							</td>
								<td rowspan="1" colspan="1">TextInformation</td>
								<td rowspan="1" colspan="1">
									<para xml:id="det_4595" xml:lang="de">Mit folgendem Unterelement:</para>
									<itemizedlist>
										<listitem>
											<para xml:id="det_4596" xml:lang="de">/Text</para>
										</listitem>
									</itemizedlist>
									<para xml:id="det_4597" xml:lang="de">Mit folgenden Attributen:</para>
									<itemizedlist>
										<listitem>
											<para xml:id="det_4598" xml:lang="de">ConfirmBeforeBooking</para>
										</listitem>
										<listitem>
											<para xml:id="det_4599" xml:lang="de">Display</para>
										</listitem>
									</itemizedlist>
								</td>
								<td rowspan="1" colspan="1">Buchungsrelevante Nachrichten, die ggfs. vor der Buchung vom Buchenden
									bestätigt werden müssen.</td>
								<td rowspan="1" colspan="1"/>
							</tr>
							<tr>
								<td rowspan="1" colspan="1">
									<para xml:id="det_4600" xml:lang="de">Addon</para><para xml:id="det_4601" xml:lang="de">Accommodation</para><para xml:id="det_4602" xml:lang="de">Flights</para>
								</td>
								<td rowspan="1" colspan="1">
								<para xml:id="det_4603" xml:lang="de">&gt;= Addon</para>
								<para xml:id="det_4604" xml:lang="de">&gt;= AddonService</para>
								<para xml:id="det_4605" xml:lang="de">&gt;= SellingAccom</para>
								<para xml:id="det_4606" xml:lang="de">&gt;= Unit</para>
								<para xml:id="det_4607" xml:lang="de">&gt;= Board</para>
								<para xml:id="det_4608" xml:lang="de">&gt;= OnewayFlight</para>
								<para xml:id="det_4609" xml:lang="de">&gt;= ReturnFlight/Outbound</para>
								<para xml:id="det_4610" xml:lang="de">&gt;= ReturnFlight/Inbound</para>
							</td>
								<td rowspan="1" colspan="1">GeneralIncludedService</td>
								<td rowspan="1" colspan="1">
									<itemizedlist>
										<listitem>
											<para xml:id="det_4611" xml:lang="de">Transfer</para>
										</listitem>
										<listitem>
											<para xml:id="det_4612" xml:lang="de">CheckInTransfer</para>
										</listitem>
										<listitem>
											<para xml:id="det_4613" xml:lang="de">CheckOutTransfer</para>
										</listitem>
										<listitem>
											<para xml:id="det_4614" xml:lang="de">GolfArrangement</para>
										</listitem>
										<listitem>
											<para xml:id="det_4615" xml:lang="de">CarRental</para>
										</listitem>
										<listitem>
											<para xml:id="det_4616" xml:lang="de">WellnessArrangement</para>
										</listitem>
										<listitem>
											<para xml:id="det_4617" xml:lang="de">SportsArrangement</para>
										</listitem>
										<listitem>
											<para xml:id="det_4618" xml:lang="de">Skipass</para>
										</listitem>
										<listitem>
											<para xml:id="det_4619" xml:lang="de">TourArrangement</para>
										</listitem>
										<listitem>
											<para xml:id="det_4620" xml:lang="de">HotelServices</para>
										</listitem>
										<listitem>
											<para xml:id="det_4621" xml:lang="de">GuidedTour</para>
										</listitem>
										<listitem>
											<para xml:id="det_4622" xml:lang="de">OtherServices</para>
										</listitem>
										<listitem>
										<para xml:id="det_4623" xml:lang="de">None</para>
									</listitem>
									<listitem>
										<para xml:id="det_4624" xml:lang="de">Parking (V1.9)</para>
									</listitem>
									<listitem>
										<para xml:id="det_4625" xml:lang="de">CookService (V1.9)</para>
									</listitem>
									<listitem>
										<para xml:id="det_4626" xml:lang="de">LaundryService (V1.9)</para>
									</listitem>
									<listitem>
										<para xml:id="det_4627" xml:lang="de">RollService (V1.9)</para>
									</listitem>
									<listitem>
										<para xml:id="det_4628" xml:lang="de">CleaningService (V1.9)</para>
									</listitem>
									<listitem>
										<para xml:id="det_4629" xml:lang="de">FinalCleanUp (V1.9)</para>
									</listitem>
									</itemizedlist>
								</td>
								<td rowspan="1" colspan="1">Inkludierte Zusatzleistungen</td>
								<td rowspan="1" colspan="1"/>
							</tr>
							<tr>
								<td rowspan="1" colspan="1">
									<para xml:id="det_4630" xml:lang="de">Addon</para><para xml:id="det_4631" xml:lang="de">Accommodation</para><para xml:id="det_4632" xml:lang="de">Flights</para>
								</td>
								<td rowspan="1" colspan="1">
								<para xml:id="det_4633" xml:lang="de">&gt;= Addon</para>
								<para xml:id="det_4634" xml:lang="de">&gt;= AddonService</para>
								<para xml:id="det_4635" xml:lang="de">&gt;= SellingAccom</para>
								<para xml:id="det_4636" xml:lang="de">&gt;= Unit</para>
								<para xml:id="det_4637" xml:lang="de">&gt;= Board</para>
								<para xml:id="det_4638" xml:lang="de">&gt;= OnewayFlight</para>
								<para xml:id="det_4639" xml:lang="de">&gt;= ReturnFlight/Outbound</para>
								<para xml:id="det_4640" xml:lang="de">&gt;= ReturnFlight/Inbound</para>
							</td>
							<td rowspan="1" colspan="1">GeneralExcludedService (V1.9)</td>
							<td rowspan="1" colspan="1">
								<itemizedlist>
									<listitem>
										<para xml:id="det_4641" xml:lang="de">FinalCleanUp</para>
									</listitem>
									<listitem>
										<para xml:id="det_4642" xml:lang="de">VisitorsTax</para>
									</listitem>
									<listitem>
										<para xml:id="det_4643" xml:lang="de">BedLinen</para>
									</listitem>
									<listitem>
										<para xml:id="det_4644" xml:lang="de">Parking</para>
									</listitem>
									<listitem>
										<para xml:id="det_4645" xml:lang="de">CookService</para>
									</listitem>
									<listitem>
										<para xml:id="det_4646" xml:lang="de">LaundryService</para>
									</listitem>
									<listitem>
										<para xml:id="det_4647" xml:lang="de">RollService</para>
									</listitem>
									<listitem>
										<para xml:id="det_4648" xml:lang="de">CleaningService</para>
									</listitem>
								</itemizedlist>
							</td>
								<td rowspan="1" colspan="1">Zusatzleistungen die zusätzliche Kosten vor Ort verursachen. Einige Zusatzleistungen
								sind Bestandteil des Angebots und können nicht abgewählt werden kann. Andere sind
								optional.</td>
								<td rowspan="1" colspan="1"/>
							</tr>
							<tr>
								<td rowspan="1" colspan="1">
									<para xml:id="det_4649" xml:lang="de">Addon</para><para xml:id="det_4650" xml:lang="de">Accommodation</para><para xml:id="det_4651" xml:lang="de">Flights</para>
								</td>
								<td rowspan="1" colspan="1">
								<para xml:id="det_4652" xml:lang="de">&gt;= Addon</para>
								<para xml:id="det_4653" xml:lang="de">&gt;= AddonService</para>
								<para xml:id="det_4654" xml:lang="de">&gt;= SellingAccom</para>
								<para xml:id="det_4655" xml:lang="de">&gt;= Unit</para>
								<para xml:id="det_4656" xml:lang="de">&gt;= Board</para>
								<para xml:id="det_4657" xml:lang="de">&gt;= OnewayFlight</para>
								<para xml:id="det_4658" xml:lang="de">&gt;= ReturnFlight/Outbound</para>
								<para xml:id="det_4659" xml:lang="de">&gt;= ReturnFlight/Inbound</para>
							</td>
								<td rowspan="1" colspan="1">OtdsUnboundedProperties</td>
								<td rowspan="1" colspan="1">
									<para xml:id="det_4660" xml:lang="de">In OTDS nicht spezifizierte Unterelemente</para>
								</td>
								<td rowspan="1" colspan="1">Unter diesem Element können eigene Eigenschaftern in Absprache mit dem
									Datenlieferanten eingebunden werden. Eine Validierung im Rahmen von OTDS
									ist an diese Stelle NICHT vorgesehen!</td>
								<td rowspan="1" colspan="1"/>
							</tr>
						</informaltable>
					
					<para xml:id="det_4661" xml:lang="de">Liste der Preistypen (PriceType) - PriceTypes beinhalten keine impliziten Regeln und
						dienen der Anzeige in internen (Browser-)Systemen:</para>
					
					<itemizedlist>
						<listitem>
							<para xml:id="det_4663" xml:lang="de">Base </para>
						</listitem>
						<listitem>
							<para xml:id="det_4664" xml:lang="de">Board </para>
						</listitem>
						<listitem>
							<para xml:id="det_4665" xml:lang="de">EarlyBird </para>
						</listitem>
						<listitem>
							<para xml:id="det_4666" xml:lang="de">ExtraDay </para>
						</listitem>
						<listitem>
							<para xml:id="det_4667" xml:lang="de">StayPay </para>
						</listitem>
						<listitem>
							<para xml:id="det_4668" xml:lang="de">ChildReduction </para>
						</listitem>
						<listitem>
							<para xml:id="det_4669" xml:lang="de">DurationReduction </para>
						</listitem>
						<listitem>
							<para xml:id="det_4670" xml:lang="de">ChildPrice </para>
						</listitem>
						<listitem>
							<para xml:id="det_4671" xml:lang="de">OccupancyReduction </para>
						</listitem>
						<listitem>
							<para xml:id="det_4672" xml:lang="de">OccupancySupplement </para>
						</listitem>
						<listitem>
							<para xml:id="det_4673" xml:lang="de">BoardChildReduction </para>
						</listitem>
						<listitem>
							<para xml:id="det_4674" xml:lang="de">BoardSupplement </para>
						</listitem>
						<listitem>
							<para xml:id="det_4675" xml:lang="de">SelfDrivingSupplement </para>
						</listitem>
						<listitem>
							<para xml:id="det_4676" xml:lang="de">GeneralSupplement GeneralDiscount</para>
						</listitem>
						<listitem>
							<para xml:id="det_4677" xml:lang="de">FuelSurcharge</para>
						</listitem>
						<listitem>
							<para xml:id="det_4678" xml:lang="de">AirPassengerDuty</para>
						</listitem>
						<listitem>
							<para xml:id="det_4679" xml:lang="de">AirportSurcharge</para>
						</listitem>
						<listitem>
							<para xml:id="det_4680" xml:lang="de">FlightSupplement</para>
						</listitem>
						<listitem>
							<para xml:id="det_4681" xml:lang="de">FlightTax</para>
						</listitem>
						<listitem>
							<para xml:id="det_4682" xml:lang="de">SecurityCharge</para>
						</listitem>							
					</itemizedlist>
					
					<para xml:id="det_4683" xml:lang="de">
						<link xlink:href="./technisch/otds_technisch.html#PriceTypeEnum">Weitergehende
							Informationen sind in der Technischen Dokumentation für OTDS enthalten.</link>
					</para>
					<para xml:id="det_4684" xml:lang="de"> </para>
				</section>
				<section xml:id="AnhangPropertiesFigures">
					<title><phrase xml:id="det_4685" xml:lang="de">Figures (V1.9)</phrase></title>
					
						<informaltable border="0" style="border-collapse:  collapse;width:1008pt" width="1344">
							<col width="121.0px"/>
							<col width="183.0px"/>
							<col width="252.0px"/>
							<col width="258.0px"/>
							<col width="429.0px"/>
							<col width="212.0px"/>
							<thead>
								<tr>
									<td rowspan="1" colspan="1">Komponente</td>
									<td rowspan="1" colspan="1">Zugelassene Ebenen</td>
									<td rowspan="1" colspan="1">Element/Path</td>
									<td rowspan="1" colspan="1">Values</td>
									<td rowspan="1" colspan="1">Bedeutung</td>
									<td rowspan="1" colspan="1">Conditions</td>
								</tr>
							</thead>
							<tr>
								<td rowspan="1" colspan="1">
									<para xml:id="det_4686" xml:lang="de">Addon</para><para xml:id="det_4687" xml:lang="de">Accommodation</para>
								</td>
								<td rowspan="1" colspan="1">
								<para xml:id="det_4688" xml:lang="de">&gt;= Addon</para>
								<para xml:id="det_4689" xml:lang="de">&gt;= AddonService</para>
								<para xml:id="det_4690" xml:lang="de">&gt;= SellingAccom</para>
								<para xml:id="det_4691" xml:lang="de">&gt;= Unit</para>
								<para xml:id="det_4692" xml:lang="de">&gt;= Board</para></td>
								<td rowspan="1" colspan="1">LocationDistance</td>
								<td rowspan="1" colspan="1">
									<itemizedlist>
										<listitem>
											<para xml:id="det_4693" xml:lang="de">Beach</para>
										</listitem>
										<listitem>
											<para xml:id="det_4694" xml:lang="de">CityCenter</para>
										</listitem>
										<listitem>
											<para xml:id="det_4695" xml:lang="de">Shopping</para>
										</listitem>
										<listitem>
											<para xml:id="det_4696" xml:lang="de">Airport</para>
										</listitem>
										<listitem>
											<para xml:id="det_4697" xml:lang="de">PublicTransport</para>
										</listitem>
										<listitem>
											<para xml:id="det_4698" xml:lang="de">SkiLift</para>
										</listitem>
										<listitem>
											<para xml:id="det_4699" xml:lang="de">GolfCourse</para>
										</listitem>
										<listitem>
											<para xml:id="det_4700" xml:lang="de">Lake</para>
										</listitem>
									</itemizedlist>
								</td>
								<td rowspan="1" colspan="1">
									<para xml:id="det_4701" xml:lang="de">In diesem Element stehen die Orte zur Auswahl für die eine Distanzangabe möglich
										ist. </para>
									<itemizedlist>
									<listitem>
										<para xml:id="det_4702" xml:lang="de">Beach (Strand) / Entfernungsangabe in Metern</para>
									</listitem>
									<listitem>
										<para xml:id="det_4703" xml:lang="de">CityCenter (Stadtzentrum) / Entfernungsangabe in Kilometern</para>
									</listitem>
									<listitem>
										<para xml:id="det_4704" xml:lang="de">Shopping (nächste Einkaufsmöglichkeit) / Entfernungsangabe in
											Metern</para>
									</listitem>
									<listitem>
										<para xml:id="det_4705" xml:lang="de">Airport (Flughafen) / Entfernungsangabe in Kilometern</para>
									</listitem>
									<listitem>
										<para xml:id="det_4706" xml:lang="de">PublicTransport (öffentliche Verkehrsmittel) / Entfernungsangabe in
											Metern</para>
									</listitem>
									<listitem>
										<para xml:id="det_4707" xml:lang="de">SkiLift (Skilift) / Entfernungsangabe in Metern</para>
									</listitem>
									<listitem>
										<para xml:id="det_4708" xml:lang="de">GolfCourse (Golfplatz) / Entfernungsangabe in Metern</para>
									</listitem>
									<listitem>
										<para xml:id="det_4709" xml:lang="de">Lake (See) / Entfernungsangabe in Metern</para>
									</listitem>
								</itemizedlist></td>
								<td rowspan="1" colspan="1"/>
							</tr>
							<tr>
								<td rowspan="1" colspan="1">
									<para xml:id="det_4710" xml:lang="de">Addon</para><para xml:id="det_4711" xml:lang="de">Accommodation</para>
								</td>
								<td rowspan="1" colspan="1">
								<para xml:id="det_4712" xml:lang="de">&gt;= Addon</para>
								<para xml:id="det_4713" xml:lang="de">&gt;= AddonService</para>
								<para xml:id="det_4714" xml:lang="de">&gt;= SellingAccom</para>
								<para xml:id="det_4715" xml:lang="de">&gt;= Unit</para>
								<para xml:id="det_4716" xml:lang="de">&gt;= Board</para>
							</td>
								<td rowspan="1" colspan="1">Facility</td>
								<td rowspan="1" colspan="1">
									<itemizedlist>
										<listitem>
											<para xml:id="det_4717" xml:lang="de">AmountBedrooms</para>
										</listitem>
										<listitem>
										<para xml:id="det_4718" xml:lang="de">UnitSize</para>
									</listitem>
									<listitem>
										<para xml:id="det_4719" xml:lang="de">AmountRooms</para>
									</listitem>
									<listitem>
										<para xml:id="det_4720" xml:lang="de">AmountFloors</para>
									</listitem>
									<listitem>
										<para xml:id="det_4721" xml:lang="de">AmountBathrooms</para>
									</listitem>
									</itemizedlist>
								</td>
								<td rowspan="1" colspan="1"><para xml:id="det_4722" xml:lang="de">Im Element Facilities stehen vor allem Ausstattungsmerkmale zur Verfügung die näher beschrieben werden können.</para>
									<itemizedlist>
										<listitem>
											<para xml:id="det_4723" xml:lang="de">AmountBedrooms (Anzahl Schlafzimmer)</para>
										</listitem>
										<listitem>
											<para xml:id="det_4724" xml:lang="de">UnitSize (Zimmergröße, Ferienhausgröße) / Angabe in Quadratmetern</para>
										</listitem>
										<listitem>
											<para xml:id="det_4725" xml:lang="de">AmountRooms (Anzahl der Zimmer im Hotel)</para>
										</listitem>
										<listitem>
											<para xml:id="det_4726" xml:lang="de">AmountFloors (Anzahl Stockwerke)</para>
										</listitem>
										<listitem>
											<para xml:id="det_4727" xml:lang="de">AmountBathrooms (Anzahl Badezimmer)</para>
										</listitem>
									</itemizedlist></td>
								<td rowspan="1" colspan="1"/>
							</tr>
						</informaltable>
					<para xml:id="det_4728" xml:lang="de"> </para>
				</section>
				<section>
					<title><phrase xml:id="det_4729" xml:lang="de">Properties-Knoten</phrase></title>
					<figure>
						<info>
							<title><phrase xml:id="det_4730" xml:lang="de">Properties-Overview</phrase></title>
						</info>
						<mediaobject>
							<imageobject>
								<imagedata fileref="figures/properties-overview.png" format="PNG" contentwidth="80%"/>
							</imageobject>
							<textobject>
								<para xml:id="det_4731" xml:lang="de">Properties-Overview</para>
							</textobject>
						</mediaobject>
					</figure>
					
						<table frame="all">
							<title><phrase xml:id="det_4732" xml:lang="de">Auflistung der Knoten mit Properties</phrase></title>
							<tgroup cols="2">
								<thead>
									<row>
										<entry>Abkürzung</entry>
										<entry>Pfad in OTDS</entry>
									</row>
								</thead>
								<tbody>
									<row>
										<entry>a</entry>
										<entry>/Otds/Accommodations/Accommodation/</entry>
									</row>
									<row>
										<entry>b</entry>
										<entry>/Otds/Accommodations/Accommodation/SellingAccom/</entry>
									</row>
									<row>
										<entry>c</entry>
										<entry>/Otds/Accommodations/Accommodation/SellingAccom/Board/</entry>
									</row>
									<row>
										<entry>d</entry>
										<entry>/Otds/Accommodations/Accommodation/SellingAccom/Unit/</entry>
									</row>
									<row>
										<entry>e</entry>
										<entry>/Otds/Accommodations/Accommodation/SellingAccom/Unit/SellingUnit/</entry>
									</row>
									<row>
										<entry>f</entry>
										<entry>/Otds/Addons/Addon/</entry>
									</row>
									<row>
										<entry>g</entry>
										<entry>/Otds/Addons/Addon/Service/</entry>
									</row>
									<row>
										<entry>h</entry>
										<entry>/Otds/Addons/Addon/ServiceFeature/</entry>
									</row>
									<row>
										<entry>i</entry>
										<entry>/Otds/Flight/OnewayFlight/BookingClass/</entry>
									</row>
									<row>
										<entry>j</entry>
										<entry>/Otds/Flight/ReturnFlight/BookingClass/</entry>
									</row>
									<row>
										<entry>k</entry>
										<entry>*/PriceItems/PriceItem/Properties/PriceType</entry>
									</row>
								</tbody>
							</tgroup>
						</table>
					
					<para xml:id="det_4733" xml:lang="de">Die Properties der PriceItems beschränken sich auf das Element PriceTyp. Ansonsten
						ist der jeweils vollständige Pfad zu den Properties angegeben.</para>
				</section>
				<section>
					<title><phrase xml:id="det_4734" xml:lang="de">Anwendbarkeits-Matrix der Elemente</phrase></title>
					<para xml:id="det_4735" xml:lang="de">In der folgenden Aufstellung sind jeweils nur die Top-Level-Elemente erfasst, also
						diejenigen, die direkt unter dem Properties-Knoten angeordnet sind. Alle weiteren
						Elemente, also die, die einer anderen Eigenschaft untergeordnet ist, sind auch nur
						dann entsprechend gültig, wenn das übergeordnete Element verwendet werden darf. Zum
						Beispiel darf die <emphasis role="italic">GeoInfo</emphasis> nur dann verwendet
						werden, wenn <emphasis role="italic">AccommodationAddress</emphasis> auch zugelassen
						ist. </para>
					
						<table frame="all">
							<title><phrase xml:id="det_4736" xml:lang="de">Verwendung der Properties in Abhängigkeit der (Sub-)Komponente</phrase></title>
							<tgroup cols="12" align="left" colsep="1" rowsep="1">
								<thead>
									<row>
										<entry>Property / Knoten</entry>
										<entry>a</entry>
										<entry>b</entry>
										<entry>c</entry>
										<entry>d</entry>
										<entry>e</entry>
										<entry>f</entry>
										<entry>g</entry>
										<entry>h</entry>
										<entry>i</entry>
										<entry>j</entry>
										<entry>k</entry>
									</row>
								</thead>
								<tbody>
									<row>
										<entry>AccommodationCity</entry>
										<entry>x</entry>
										<entry>x</entry>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
									</row>
									<row>
										<entry>AccommodationType</entry>
										<entry>x</entry>
										<entry>x</entry>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
									</row>
									<row>
										<entry>AccommodationName</entry>
										<entry>x</entry>
										<entry>x</entry>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
									</row>
									<row>
										<entry>AccommodationOfficialCategory</entry>
										<entry>x</entry>
										<entry>x</entry>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
									</row>
									<row>
										<entry>AccommodationOperatorCategory</entry>
										<entry>x</entry>
										<entry>x</entry>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
									</row>
									<row>
										<entry>AccommodationChain</entry>
										<entry>x</entry>
										<entry>x</entry>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
									</row>
									<row>
										<entry>AccommodationGeneralFacilities</entry>
										<entry>x</entry>
										<entry>x</entry>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
									</row>
									<row>
										<entry>AccommodationFamilyFacilities</entry>
										<entry>x</entry>
										<entry>x</entry>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
									</row>
									<row>
										<entry>AccommodationSportsFacilities</entry>
										<entry>x</entry>
										<entry>x</entry>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
									</row>
									<row>
										<entry>AccommodationWellnessFacilities</entry>
										<entry>x</entry>
										<entry>x</entry>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
									</row>
									<row>
										<entry>AccommodationSeniorFacilities</entry>
										<entry>x</entry>
										<entry>x</entry>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
									</row>
									<row>
										<entry>AccommodationLocations</entry>
										<entry>x</entry>
										<entry>x</entry>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
									</row>
									<row>
										<entry>AccommodationAddress</entry>
										<entry>x</entry>
										<entry>x</entry>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
									</row>
									<row>
										<entry>AccommodationCatchmentRailwayStations</entry>
										<entry>x</entry>
										<entry>x</entry>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
									</row>
									<row>
										<entry>UnitName</entry>
										<entry/>
										<entry/>
										<entry/>
										<entry>x</entry>
										<entry>x</entry>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
									</row>
									<row>
										<entry>UnitType</entry>
										<entry/>
										<entry/>
										<entry/>
										<entry>x</entry>
										<entry>x</entry>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
									</row>
								<row>
									<entry>UnitBedType (V1.9)</entry>
									<entry/>
									<entry/>
									<entry/>
									<entry>x</entry>
									<entry>x</entry>
									<entry/>
									<entry/>
									<entry/>
									<entry/>
									<entry/>
									<entry/>
								</row>
									<row>
										<entry>UnitFacilities</entry>
										<entry/>
										<entry/>
										<entry/>
										<entry>x</entry>
										<entry>x</entry>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
									</row>
									<row>
										<entry>UnitBuildingType</entry>
										<entry/>
										<entry/>
										<entry/>
										<entry>x</entry>
										<entry>x</entry>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
									</row>
									<row>
										<entry>BoardName</entry>
										<entry/>
										<entry/>
										<entry>x</entry>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
									</row>
									<row>
										<entry>BoardType</entry>
										<entry/>
										<entry/>
										<entry>x</entry>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
									</row>
									<row>
										<entry>BoardProperties</entry>
										<entry/>
										<entry/>
										<entry>x</entry>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
									</row>
									<row>
										<entry>AddonName</entry>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry>x</entry>
										<entry>x</entry>
										<entry>x</entry>
										<entry/>
										<entry/>
										<entry/>
									</row>
									<row>
										<entry>AddonServiceType</entry>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry>x</entry>
										<entry>x</entry>
										<entry>x</entry>
										<entry/>
										<entry/>
										<entry/>
									</row>
									<row>
										<entry>AddonServiceName</entry>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry>x</entry>
										<entry>x</entry>
										<entry>x</entry>
										<entry/>
										<entry/>
										<entry/>
									</row>
									<row>
										<entry>AddonServiceFeatureName</entry>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry>x</entry>
										<entry>x</entry>
										<entry>x</entry>
										<entry/>
										<entry/>
										<entry/>
									</row>
									<row>
										<entry>AddonCatchmentRailwayStations</entry>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry>x</entry>
										<entry>x</entry>
										<entry>x</entry>
										<entry/>
										<entry/>
										<entry/>
									</row>
									<row>
										<entry>GeneralIncludedService</entry>
										<entry>x</entry>
										<entry>x</entry>
										<entry>x</entry>
										<entry>x</entry>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
									</row>
								<row>
									<entry>GeneralExcludedService (V1.9)</entry>
									<entry>x</entry>
									<entry>x</entry>
									<entry>x</entry>
									<entry>x</entry>
									<entry/>
									<entry/>
									<entry/>
									<entry/>
									<entry/>
									<entry/>
									<entry/>
								</row>
									<row>
										<entry>FlightBookingClassBaggageAllowances</entry>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry>x</entry>
										<entry>x</entry>
										<entry/>
									</row>
									<row>
										<entry>FlightRoute</entry>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry>x</entry>
										<entry>x</entry>
										<entry/>
									</row>
									<row>
										<entry>PriceType</entry>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry>x</entry>
									</row>
									<row>
										<entry>Figures (V1.9)</entry>
										<entry>x</entry>
										<entry>x</entry>
										<entry/>
										<entry>x</entry>
										<entry>x</entry>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
									</row>
									<row>
										<entry>AddonCarRentalProperties (V1.9)</entry>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry>x</entry>
										<entry>x</entry>
										<entry>x</entry>
										<entry/>
										<entry/>
										<entry/>
									</row>
								</tbody>
							</tgroup>
						</table>
					<table frame="all">
							<title><phrase xml:id="det_4737" xml:lang="de">Verwendung der Figures / LocationsDistance in
								Abhängigkeit der (Sub-)Komponente (V1.9)</phrase></title>
							<tgroup cols="12" align="left" colsep="1" rowsep="1">
								<thead>
									<row>
										<entry>LocationsDistance</entry>
										<entry>a</entry>
										<entry>b</entry>
										<entry>c</entry>
										<entry>d</entry>
										<entry>e</entry>
										<entry>f</entry>
										<entry>g</entry>
										<entry>h</entry>
										<entry>i</entry>
										<entry>j</entry>
										<entry>k</entry>
									</row>
								</thead>
								<tbody>
									<row>
										<entry>Beach</entry>
										<entry>x</entry>
										<entry>x</entry>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
									</row>
									<row>
										<entry>CityCenter</entry>
										<entry>x</entry>
										<entry>x</entry>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
									</row>
									<row>
										<entry>Shopping</entry>
										<entry>x</entry>
										<entry>x</entry>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
									</row>
									<row>
										<entry>Airport</entry>
										<entry>x</entry>
										<entry>x</entry>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
									</row>
									<row>
										<entry>PublicTransport</entry>
										<entry>x</entry>
										<entry>x</entry>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
									</row>
									<row>
										<entry>SkiLift</entry>
										<entry>x</entry>
										<entry>x</entry>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
									</row>
									<row>
										<entry>GolfCourse</entry>
										<entry>x</entry>
										<entry>x</entry>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
									</row>
									<row>
										<entry>Lake</entry>
										<entry>x</entry>
										<entry>x</entry>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
										<entry/>
									</row>
								</tbody>
							</tgroup>
						</table>
					<table frame="all">
						<title><phrase xml:id="det_4738" xml:lang="de">Verwendung der Figures / Facility in
								Abhängigkeit der (Sub-)Komponente (V1.9)</phrase></title>
						<tgroup cols="12" align="left" colsep="1" rowsep="1">
							<thead>
								<row>
									<entry>Facility</entry>
									<entry>a</entry>
									<entry>b</entry>
									<entry>c</entry>
									<entry>d</entry>
									<entry>e</entry>
									<entry>f</entry>
									<entry>g</entry>
									<entry>h</entry>
									<entry>i</entry>
									<entry>j</entry>
									<entry>k</entry>
								</row>
							</thead>
							<tbody>
								<row>
									<entry>AmountBedrooms</entry>
									<entry/>
									<entry/>
									<entry/>
									<entry>x</entry>
									<entry>x</entry>
									<entry/>
									<entry/>
									<entry/>
									<entry/>
									<entry/>
									<entry/>
								</row>
								<row>
									<entry>UnitSize</entry>
									<entry/>
									<entry/>
									<entry/>
									<entry>x</entry>
									<entry>x</entry>
									<entry/>
									<entry/>
									<entry/>
									<entry/>
									<entry/>
									<entry/>
								</row>
								<row>
									<entry>AmountRooms</entry>
									<entry>x</entry>
									<entry>x</entry>
									<entry/>
									<entry>x</entry>
									<entry>x</entry>
									<entry/>
									<entry/>
									<entry/>
									<entry/>
									<entry/>
									<entry/>
								</row>
								<row>
									<entry>AmountFloors</entry>
									<entry>x</entry>
									<entry>x</entry>
									<entry/>
									<entry>x</entry>
									<entry>x</entry>
									<entry/>
									<entry/>
									<entry/>
									<entry/>
									<entry/>
									<entry/>
								</row>
								<row>
									<entry>AmountBathrooms</entry>
									<entry/>
									<entry/>
									<entry/>
									<entry>x</entry>
									<entry>x</entry>
									<entry/>
									<entry/>
									<entry/>
									<entry/>
									<entry/>
									<entry/>
								</row>
							</tbody>
						</tgroup>
					</table>
					<para xml:id="det_4739" xml:lang="de"/>
				</section>
				<section xml:id="AnhangHotelChain">
					<title><phrase xml:id="det_4740" xml:lang="de">Hotelketten</phrase></title>
					<para xml:id="det_4741" xml:lang="de"> OTDS interne Kennzeichnung von Hotelketten:</para>
					
						<informaltable border="0" style="border-collapse:  collapse;width:286pt" width="481">
							<col width="46px"/>
							<col width="334px"/>
							<col width="150px"/>
							<tr>
								<td rowspan="1" colspan="1"> ID</td>
								<td rowspan="1" colspan="1">Hotelkette</td>
								<td rowspan="1" colspan="1">Verfügbar ab Version</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">1</td>
								<td rowspan="1" colspan="1">Best Western Hotels</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">2</td>
								<td rowspan="1" colspan="1">Holiday Inn (InterContinental Hotels Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">3</td>
								<td rowspan="1" colspan="1">Mercure (Accor Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">4</td>
								<td rowspan="1" colspan="1">Comfort Inn &amp; Suites (Choice Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">5</td>
								<td rowspan="1" colspan="1">Hilton (Hilton Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">6</td>
								<td rowspan="1" colspan="1">Quality Inn (Choice Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">7</td>
								<td rowspan="1" colspan="1">NH Hotels (NH Hoteles)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">8</td>
								<td rowspan="1" colspan="1">Novotel (Accor Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">9</td>
								<td rowspan="1" colspan="1">Sheraton Hotels (Starwood Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">10</td>
								<td rowspan="1" colspan="1">Ramada Hotels &amp; Resorts (Ramada
									Worldwide)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">11</td>
								<td rowspan="1" colspan="1">Radisson BLU (Rezidor Hotel Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">12</td>
								<td rowspan="1" colspan="1">Holiday Inn Express (InterContinental Hotels
									Group</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">13</td>
								<td rowspan="1" colspan="1">Marriott Hotels (Marriott Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">14</td>
								<td rowspan="1" colspan="1">Hyatt Resorts</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">15</td>
								<td rowspan="1" colspan="1">Ibis (Accor Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">16</td>
								<td rowspan="1" colspan="1">Crowne Plaza (InterContinental Hotels Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">17</td>
								<td rowspan="1" colspan="1">Days Inn Hotels</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">18</td>
								<td rowspan="1" colspan="1">Maeva (Pierre et Vacances)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">19</td>
								<td rowspan="1" colspan="1">Barcelo Hotels &amp; Resorts</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">20</td>
								<td rowspan="1" colspan="1">Golden Tulip Worldwide</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">21</td>
								<td rowspan="1" colspan="1">Clarion (Choice Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">22</td>
								<td rowspan="1" colspan="1">Courtyard (Marriott Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">23</td>
								<td rowspan="1" colspan="1">Westin Hotels &amp; Resorts (Starwood Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">24</td>
								<td rowspan="1" colspan="1">Pierre &amp; Vacances (Pierre et Vacances)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">25</td>
								<td rowspan="1" colspan="1">Melia Hoteles (Sol Melia Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">26</td>
								<td rowspan="1" colspan="1">La Quinta Inns &amp; Inn Suites</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">27</td>
								<td rowspan="1" colspan="1">RIU Hotels &amp; Resorts (TUI Hotels &amp;
									Resorts)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">28</td>
								<td rowspan="1" colspan="1">InterContinental (InterContinental Hotels
									Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">29</td>
								<td rowspan="1" colspan="1">Iberostar Hotels &amp; Resorts</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">30</td>
								<td rowspan="1" colspan="1">Scandic Hotels</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">31</td>
								<td rowspan="1" colspan="1">Doubletree (Hilton Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">32</td>
								<td rowspan="1" colspan="1">Sofitel (Accor Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">33</td>
								<td rowspan="1" colspan="1">Paradores</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">34</td>
								<td rowspan="1" colspan="1">Relais &amp; Chateaux</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">35</td>
								<td rowspan="1" colspan="1">Odalys Vacances</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">36</td>
								<td rowspan="1" colspan="1">Renaissance (Marriott Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">37</td>
								<td rowspan="1" colspan="1">Club Mediterranee</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">38</td>
								<td rowspan="1" colspan="1">Hampton Inn (Hilton Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">39</td>
								<td rowspan="1" colspan="1">TRYP Hoteles (Sol Melia Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">40</td>
								<td rowspan="1" colspan="1">Four Seasons Hotels</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">41</td>
								<td rowspan="1" colspan="1">Sol Hoteles (Sol Melia Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">42</td>
								<td rowspan="1" colspan="1">Le Meridien Hotels (Starwood Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">43</td>
								<td rowspan="1" colspan="1">Howard Johnson</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">44</td>
								<td rowspan="1" colspan="1">AC Hotels</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">45</td>
								<td rowspan="1" colspan="1">Radisson Hotels &amp; Resorts (Carlson Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">46</td>
								<td rowspan="1" colspan="1">Husa Hoteles</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">47</td>
								<td rowspan="1" colspan="1">The Ritz Carlton</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">48</td>
								<td rowspan="1" colspan="1">Park Inn by Radisson (Rezidor Hotel Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">49</td>
								<td rowspan="1" colspan="1">Ringhotels</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">50</td>
								<td rowspan="1" colspan="1">Four Points Sheraton (Starwood Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">51</td>
								<td rowspan="1" colspan="1">Fairmont Hotels &amp; Resorts (Fairmont Raffles
									Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">52</td>
								<td rowspan="1" colspan="1">Travelodge USA &amp; Kanada &amp; Mexico</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">53</td>
								<td rowspan="1" colspan="1">Charme &amp; Relax</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">54</td>
								<td rowspan="1" colspan="1">Protea Hotels &amp; Inns (Stella Hospitality
									Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">55</td>
								<td rowspan="1" colspan="1">All Seasons (Accor Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">56</td>
								<td rowspan="1" colspan="1">Campanile Hotels (Louvre Hotels Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">57</td>
								<td rowspan="1" colspan="1">M÷venpick Hotels &amp; Resorts</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">58</td>
								<td rowspan="1" colspan="1">Wyndham Hotels (Wyndham Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">59</td>
								<td rowspan="1" colspan="1">Kempinski Hotels &amp; Resorts (Global Hotel
									Alliance)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">60</td>
								<td rowspan="1" colspan="1">Landal Green Parks</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">61</td>
								<td rowspan="1" colspan="1">Kyriad Hotels (Group Louvre Hotels)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">62</td>
								<td rowspan="1" colspan="1">Rica Hotels</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">63</td>
								<td rowspan="1" colspan="1">Eurostars Hotels</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">64</td>
								<td rowspan="1" colspan="1">Maritim Hotels</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">65</td>
								<td rowspan="1" colspan="1">Thon Hotels</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">66</td>
								<td rowspan="1" colspan="1">Hilton Garden Inn (Hilton Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">67</td>
								<td rowspan="1" colspan="1">Summit Hotels &amp; Resorts (Preferred Hotel
									Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">68</td>
								<td rowspan="1" colspan="1">Hoteles Catalonia</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">69</td>
								<td rowspan="1" colspan="1">Shangri La (Hotelgruppe Shangri La Hotels &amp;
									Resort</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">70</td>
								<td rowspan="1" colspan="1">Citadines Apart Hotels (Ascott Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">71</td>
								<td rowspan="1" colspan="1">Sokos Hotels</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">72</td>
								<td rowspan="1" colspan="1">Steigenberger Hotels &amp; Resorts</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">73</td>
								<td rowspan="1" colspan="1">Pestana Hotels &amp; Resorts (Pestana)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">74</td>
								<td rowspan="1" colspan="1">Hesperia Hotels a part of NH Hotels</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">75</td>
								<td rowspan="1" colspan="1">Luxury Collection Hotels &amp; Resorts (Starwood
									Group</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">76</td>
								<td rowspan="1" colspan="1">Disney┤s</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">77</td>
								<td rowspan="1" colspan="1">Pousadas de Portugal (Pestana)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">78</td>
								<td rowspan="1" colspan="1">First Hotels</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">79</td>
								<td rowspan="1" colspan="1">Romantik Hotels</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">80</td>
								<td rowspan="1" colspan="1">Belambra Club</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">81</td>
								<td rowspan="1" colspan="1">Fletcher Hotel Group</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">82</td>
								<td rowspan="1" colspan="1">Leonardo Hotels</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">83</td>
								<td rowspan="1" colspan="1">Embassy Suites Hotels (Hilton Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">84</td>
								<td rowspan="1" colspan="1">Omni Hotels (Global Hotel Alliance)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">85</td>
								<td rowspan="1" colspan="1">Rotana Hotels, Suites &amp; Resorts</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">86</td>
								<td rowspan="1" colspan="1">Grupo Playa Sol</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">87</td>
								<td rowspan="1" colspan="1">Thistle Hotels</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">88</td>
								<td rowspan="1" colspan="1">Red Roof Inns</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">89</td>
								<td rowspan="1" colspan="1">Delta Hotels</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">90</td>
								<td rowspan="1" colspan="1">Grupotel (TUI Hotels &amp; Resorts)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">91</td>
								<td rowspan="1" colspan="1">Southern Sun Hotels &amp; Resorts</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">92</td>
								<td rowspan="1" colspan="1">Fairfield Inn (Marriott Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">93</td>
								<td rowspan="1" colspan="1">Danubius Hotels Group</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">94</td>
								<td rowspan="1" colspan="1">Citea Apparthotels &amp; Villas</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">95</td>
								<td rowspan="1" colspan="1">Dorint Hotels &amp; Resorts</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">96</td>
								<td rowspan="1" colspan="1">Red Lion Hotels</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">97</td>
								<td rowspan="1" colspan="1">Falkensteiner Hotels &amp; Resorts</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">98</td>
								<td rowspan="1" colspan="1">Millennium Hotels (Millennium Hotels &amp;
									Resorts)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">99</td>
								<td rowspan="1" colspan="1">Upstalsboom</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">100</td>
								<td rowspan="1" colspan="1">InterCity Hotels (Steigenberger Hotels)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">101</td>
								<td rowspan="1" colspan="1">W Hotels (Starwood Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">102</td>
								<td rowspan="1" colspan="1">Pullman Hotels &amp; Resorts (Accor Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">103</td>
								<td rowspan="1" colspan="1">Vincci Hoteles</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">104</td>
								<td rowspan="1" colspan="1">Taj Hotels Resorts &amp; Palaces</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">105</td>
								<td rowspan="1" colspan="1">Sentido Hotels &amp; Resorts</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">106</td>
								<td rowspan="1" colspan="1">H10 Hotels (H10 Hotels)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">107</td>
								<td rowspan="1" colspan="1">Valamar Hotels &amp; Resorts</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">108</td>
								<td rowspan="1" colspan="1">Space Hotels</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">109</td>
								<td rowspan="1" colspan="1">Lindner Hotels &amp; Resorts</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">110</td>
								<td rowspan="1" colspan="1">Austria Trend Hotels &amp; Resorts</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">111</td>
								<td rowspan="1" colspan="1">JW Marriott Hotels &amp; Resorts (Marriott
									Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">112</td>
								<td rowspan="1" colspan="1">Countrywide Hotels (Irland)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">113</td>
								<td rowspan="1" colspan="1">Coast Hotels &amp; Resorts</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">114</td>
								<td rowspan="1" colspan="1">MacDonald Hotels &amp; Resorts</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">115</td>
								<td rowspan="1" colspan="1">Jurys Inns</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">116</td>
								<td rowspan="1" colspan="1">Norlandia Hotels &amp; Resorts</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">117</td>
								<td rowspan="1" colspan="1">Yelloh Village</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">118</td>
								<td rowspan="1" colspan="1">Vienna International Hotels</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">119</td>
								<td rowspan="1" colspan="1">Britannia Hotels</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">120</td>
								<td rowspan="1" colspan="1">High Tech Hotels</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">121</td>
								<td rowspan="1" colspan="1">Mandarin Oriental</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">122</td>
								<td rowspan="1" colspan="1">Silken Hoteles</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">123</td>
								<td rowspan="1" colspan="1">Premier Collection of Guesthouses</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">124</td>
								<td rowspan="1" colspan="1">M Gallery (Accor Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">125</td>
								<td rowspan="1" colspan="1">Copthorne Hotels (Millennium Hotels &amp;
									Resorts)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">126</td>
								<td rowspan="1" colspan="1">Adagio City Aparthotels (Accor Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">127</td>
								<td rowspan="1" colspan="1">Travelodge GB/ Irland</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">128</td>
								<td rowspan="1" colspan="1">Be Live Hotels</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">129</td>
								<td rowspan="1" colspan="1">Europlan Hotels</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">130</td>
								<td rowspan="1" colspan="1">ROBINSON Club (TUI Hotels &amp; Resorts)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">131</td>
								<td rowspan="1" colspan="1">Hipotels</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">132</td>
								<td rowspan="1" colspan="1">Swissotel</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">133</td>
								<td rowspan="1" colspan="1">Achat Hotels</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">134</td>
								<td rowspan="1" colspan="1">Jugend- und Familiengõstehõuser Ísterreich</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">135</td>
								<td rowspan="1" colspan="1">Hampshire Inns Hotels &amp; Classics</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">136</td>
								<td rowspan="1" colspan="1">A &amp; O Hostels &amp; Hotels</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">137</td>
								<td rowspan="1" colspan="1">Tip Top Hotels</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">138</td>
								<td rowspan="1" colspan="1">Grand City Hotels &amp; Resorts</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">139</td>
								<td rowspan="1" colspan="1">Appart City Hotels &amp; Residences
									(Frankreich)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">140</td>
								<td rowspan="1" colspan="1">Vacanciel</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">141</td>
								<td rowspan="1" colspan="1">Best Hotels</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">142</td>
								<td rowspan="1" colspan="1">Bahia Principe Clubs &amp; Resorts (Grupo
									Pinero)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">143</td>
								<td rowspan="1" colspan="1">Playa Senator Hoteles</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">144</td>
								<td rowspan="1" colspan="1">Akzent Hotels</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">145</td>
								<td rowspan="1" colspan="1">Iberotel (TUI Hotels &amp; Resorts)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">146</td>
								<td rowspan="1" colspan="1">Rydges Hotels &amp; Resorts</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">147</td>
								<td rowspan="1" colspan="1">Shilo Inns Suites Hotels</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">148</td>
								<td rowspan="1" colspan="1">Idea Hotel (Italien)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">149</td>
								<td rowspan="1" colspan="1">Van der Valk Hotels</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">150</td>
								<td rowspan="1" colspan="1">Mantra Resorts (Stella Hospitality Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">151</td>
								<td rowspan="1" colspan="1">Tsokkos Hotels</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">152</td>
								<td rowspan="1" colspan="1">Leading Hotels of the World</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">153</td>
								<td rowspan="1" colspan="1">Sercotel Hoteles</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">154</td>
								<td rowspan="1" colspan="1">Occidental Hoteles</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">155</td>
								<td rowspan="1" colspan="1">Concorde Hotels &amp; Resorts</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">156</td>
								<td rowspan="1" colspan="1">Vitalpina Hotels (S³dtirol)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">157</td>
								<td rowspan="1" colspan="1">Sunelia</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">158</td>
								<td rowspan="1" colspan="1">Diamond Resorts International</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">159</td>
								<td rowspan="1" colspan="1">Sleep Inn (Choice Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">160</td>
								<td rowspan="1" colspan="1">Hunguest Hotels</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">161</td>
								<td rowspan="1" colspan="1">Aston Hotels &amp; Resorts (ex ResortQuest
									Hawaii)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">162</td>
								<td rowspan="1" colspan="1">Sandman Hotels, Inns &amp; Suites (Sandman
									Hotels)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">163</td>
								<td rowspan="1" colspan="1">Arcadia Hotels</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">164</td>
								<td rowspan="1" colspan="1">Maistra Hotels</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">165</td>
								<td rowspan="1" colspan="1">mD Hotel Kooperation Deutschland</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">166</td>
								<td rowspan="1" colspan="1">lti hotels</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">167</td>
								<td rowspan="1" colspan="1">Fiesta Hotels &amp; Resorts (Fiesta Hotel
									Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">168</td>
								<td rowspan="1" colspan="1">Vila Gale Hoteis</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">169</td>
								<td rowspan="1" colspan="1">St.Regis (Starwood Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">170</td>
								<td rowspan="1" colspan="1">Three Cities Hotels</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">171</td>
								<td rowspan="1" colspan="1">Sandals Resorts</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">172</td>
								<td rowspan="1" colspan="1">Outrigger Hotels &amp; Resorts (Outrigger
									Enterprises</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">173</td>
								<td rowspan="1" colspan="1">Boscolo Hotels</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">174</td>
								<td rowspan="1" colspan="1">Decameron Hotels &amp; Resorts</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">175</td>
								<td rowspan="1" colspan="1">Econo Lodge (Choice Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">176</td>
								<td rowspan="1" colspan="1">Boutique Hotels &amp; Resorts International</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">177</td>
								<td rowspan="1" colspan="1">Les Hotels de Paris</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">178</td>
								<td rowspan="1" colspan="1">Blu Hotels</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">179</td>
								<td rowspan="1" colspan="1">Small Luxury Hotels of the World</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">180</td>
								<td rowspan="1" colspan="1">Sonesta Hotels Resorts &amp; Nile Cruises</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">181</td>
								<td rowspan="1" colspan="1">Centara Hotels &amp; Resorts</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">182</td>
								<td rowspan="1" colspan="1">Grupo Ibersol</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">183</td>
								<td rowspan="1" colspan="1">Grecotel (TUI Hotels &amp; Resorts)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">184</td>
								<td rowspan="1" colspan="1">Princess Hotels &amp; Resorts</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">185</td>
								<td rowspan="1" colspan="1">Globales Hotels &amp; Resorts (Grupo Optursa)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">186</td>
								<td rowspan="1" colspan="1">Hi Hotels International</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">187</td>
								<td rowspan="1" colspan="1">Hotelera Saint Michel</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">188</td>
								<td rowspan="1" colspan="1">Orient Express Hotels</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">189</td>
								<td rowspan="1" colspan="1">Sava Hotels &amp; Resorts</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">190</td>
								<td rowspan="1" colspan="1">Abba Hotels</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">191</td>
								<td rowspan="1" colspan="1">IFA Hotels &amp; Resorts (Lopesan Hotel
									Group)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">192</td>
								<td rowspan="1" colspan="1">Gran Caribe Grupo Hotelero</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">193</td>
								<td rowspan="1" colspan="1">Aman Resorts</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">194</td>
								<td rowspan="1" colspan="1">Ramee Group</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">195</td>
								<td rowspan="1" colspan="1">Hotel 81</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">196</td>
								<td rowspan="1" colspan="1">Islazul Hotels</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">197</td>
								<td rowspan="1" colspan="1">Roompot Parks</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">198</td>
								<td rowspan="1" colspan="1">Calimera Aktivhotels (CLUB CALIMERA)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">199</td>
								<td rowspan="1" colspan="1">Chincherini Holiday (Italien)</td>
								<td rowspan="1" colspan="1">1.0</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">200</td>
								<td rowspan="1" colspan="1">Aldiana</td>
								<td rowspan="1" colspan="1">1.2</td>
							</tr>
							<tr>
								<td rowspan="1" colspan="1" align="right">201</td>
								<td rowspan="1" colspan="1">Paradise Hotels &amp; Resorts</td>
								<td rowspan="1" colspan="1">1.2</td>
							</tr>
						</informaltable>
					
				</section>
			</section>
			<section xml:id="AnhangConditionAndFilterPaths">
				<title><phrase xml:id="det_4742" xml:lang="de">Paths für Condition und Filter</phrase></title>
				<para xml:id="det_4743" xml:lang="de">Die beiden folgenden Diagramme zeigen die möglichen Platzierung von Filtern und
					Conditions in OTDS:</para>
				<figure>
					<title><phrase xml:id="det_4744" xml:lang="de">Filter Overview</phrase></title>
					<mediaobject>
						<imageobject>
							<imagedata fileref="figures/filter_overview.png" format="PNG" contentwidth="90%"/>
						</imageobject>
						<textobject>
							<para xml:id="det_4745" xml:lang="de">Filter Overview</para>
						</textobject>
						<caption>
							<para xml:id="det_4746" xml:lang="de"> </para>
						</caption>
					</mediaobject>
				</figure>
				<figure>
					<title><phrase xml:id="det_4747" xml:lang="de">Condition Overview</phrase></title>
					<mediaobject>
						<imageobject>
							<imagedata fileref="figures/condition-overview.png" format="PNG" contentwidth="80%"/>
						</imageobject>
						<textobject>
							<para xml:id="det_4748" xml:lang="de">Condition Overview</para>
						</textobject>
						<caption>
							<para xml:id="det_4749" xml:lang="de"> </para>
						</caption>
					</mediaobject>
				</figure>
				<para xml:id="det_4750" xml:lang="de"> Folgende Tabelle listet alle Pfade für Condition und Filter auf.</para>
				<table frame="all">
					<title><phrase xml:id="det_4751" xml:lang="de">Übersicht über die verschiedenen Kontexte für Conditions / Filter</phrase></title>
					<tgroup cols="2" align="left" colsep="1" rowsep="1">
						<thead>
							<row>
								<entry>Kontext der Condition</entry>
								<entry>Pfade in OTDS</entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry>Filter in Product</entry>
								<entry>
									<itemizedlist>
										<listitem>
											<para xml:id="det_4752" xml:lang="de">/Otds/Products/Product/Filter</para>
										</listitem>
										<listitem>
											<para xml:id="det_4753" xml:lang="de">/Otds/CombiComponent/DefineComponent/Filter</para>
										</listitem>
									</itemizedlist>
								</entry>
							</row>
							<row>
								<entry>Filter in Komponenten</entry>
								<entry>
									<itemizedlist>
										<listitem>
											<para xml:id="det_4754" xml:lang="de">/Otds/Accommodations/Accommodation/SellingAccom/Filter</para>
										</listitem>
										<listitem>
											<para xml:id="det_4755" xml:lang="de">/Otds/Accommodations/Accommodation/SellingAccom/Board/Filter</para>
										</listitem>
										<listitem>
											<para xml:id="det_4756" xml:lang="de">/Otds/Accommodations/Accommodation/SellingAccom/Unit/SellingUnit/Filter</para>
										</listitem>
										<listitem>
											<para xml:id="det_4757" xml:lang="de">/Otds/Flights/OnewayFlights/OnewayFlight/Filter</para>
										</listitem>
										<listitem>
											<para xml:id="det_4758" xml:lang="de">/Otds/Flights/ReturnFlights/ReturnFlight/Filter</para>
										</listitem>
										<listitem>
											<para xml:id="det_4759" xml:lang="de">/Otds/Addons/Addon/Filter</para>
										</listitem>
										<listitem>
											<para xml:id="det_4760" xml:lang="de">/Otds/Addons/Addon/ServiceFeature/Filter</para>
										</listitem>
										<listitem>
											<para xml:id="det_4761" xml:lang="de">/Otds/Addons/Addon/Service/Filter</para>
										</listitem>
									</itemizedlist>
								</entry>
							</row>
							<row>
								<entry>Condition in PriceItem</entry>
								<entry>
									<itemizedlist>
										<listitem>
											<para xml:id="det_4762" xml:lang="de">/Otds/Accommodations/Accommodation/SellingAccom/Unit/SellingUnit/PriceItems/PriceItem/Condition</para>
										</listitem>
										<listitem>
											<para xml:id="det_4763" xml:lang="de">/Otds/Accommodations/Accommodation/SellingAccom/PriceItems/PriceItem/Condition</para>
										</listitem>
										<listitem>
											<para xml:id="det_4764" xml:lang="de">/Otds/Accommodations/PriceItems/PriceItem/Condition</para>
										</listitem>
										<listitem>
											<para xml:id="det_4765" xml:lang="de">/Otds/Flights/OnewayFlights/OnewayFlight/PriceItems/PriceItem/Condition</para>
										</listitem>
										<listitem>
											<para xml:id="det_4766" xml:lang="de">/Otds/Flights/OnewayFlights/OnewayFlight/BookingClass/PriceItems/PriceItem/Condition</para>
										</listitem>
										<listitem>
											<para xml:id="det_4767" xml:lang="de">/Otds/Flights/ReturnFlights/ReturnFlight/Outbound/PriceItems/PriceItem/Condition</para>
										</listitem>
										<listitem>
											<para xml:id="det_4768" xml:lang="de">/Otds/Flights/ReturnFlights/ReturnFlight/Inbound/PriceItems/PriceItem/Condition</para>
										</listitem>
										<listitem>
											<para xml:id="det_4769" xml:lang="de">/Otds/Flights/ReturnFlights/ReturnFlight/BookingClass/PriceItems/PriceItem/Condition</para>
										</listitem>
										<listitem>
											<para xml:id="det_4770" xml:lang="de">/Otds/Flights/ReturnFlights/ReturnFlight/PriceItems/PriceItem/Condition</para>
										</listitem>
										<listitem>
											<para xml:id="det_4771" xml:lang="de">/Otds/Flights/PriceItems/PriceItem/Condition</para>
										</listitem>
										<listitem>
											<para xml:id="det_4772" xml:lang="de">/Otds/Addons/Addon/ServiceFeature/PriceItems/PriceItem/Condition</para>
										</listitem>
										<listitem>
											<para xml:id="det_4773" xml:lang="de">/Otds/Addons/Addon/Service/PriceItems/PriceItem/Condition</para>
										</listitem>
										<listitem>
											<para xml:id="det_4774" xml:lang="de">/Otds/Addons/Addon/PriceItems/PriceItem/Condition</para>
										</listitem>
									</itemizedlist>
								</entry>
							</row>
							<row>
								<entry>Conditions in Availabilities</entry>
								<entry>
									<itemizedlist>
										<listitem>
											<para xml:id="det_4775" xml:lang="de">/Otds/Accommodations/Accommodation/SellingAccom/Unit/SellingUnit/Availabilities/Condition</para>
										</listitem>
										<listitem>
											<para xml:id="det_4776" xml:lang="de">/Otds/Accommodations/Accommodation/Availabilities/Condition</para>
										</listitem>
										<listitem>
											<para xml:id="det_4777" xml:lang="de">/Otds/Flights/OnewayFlights/OnewayFlight/BookingClass/Availabilities/Condition</para>
										</listitem>
										<listitem>
											<para xml:id="det_4778" xml:lang="de">/Otds/Flights/ReturnFlights/ReturnFlight/BookingClass/Availabilities/Condition</para>
										</listitem>
										<listitem>
											<para xml:id="det_4779" xml:lang="de">/Otds/Addons/Addon/Service/PriceItems/Availabilities/Condition</para>
										</listitem>
									</itemizedlist>
								</entry>
							</row>
						</tbody>
					</tgroup>
				</table>
			</section>
			<section xml:id="AppendixTablesBooking">
				<title><phrase xml:id="det_4780" xml:lang="de">Booking-Elemente</phrase></title>
				
					<table frame="all">
						<title><phrase xml:id="det_4781" xml:lang="de">Auflistung der Knoten mit Booking-Elementen</phrase></title>
						<tgroup cols="2">
							<thead>
								<row>
									<entry>Abkürzung</entry>
									<entry>Pfad in OTDS</entry>
								</row>
							</thead>
							<tbody>
								<row>
									<entry>a</entry>
									<entry>/OTDS/Products/Product/</entry>
								</row>
								<row>
									<entry>b</entry>
									<entry>/OTDS/Brands/Brand/</entry>
								</row>
								<row>
									<entry>c</entry>
									<entry>/OTDS/Accommodations/Accommodation/SellingAccom/</entry>
								</row>
								<row>
									<entry>d</entry>
									<entry>/OTDS/Accommodations/Accommodation/SellingAccom/Board/</entry>
								</row>
								<row>
									<entry>e</entry>
									<entry>/OTDS/Accommodations/Accommodation/SellingAccom/Unit/SellingUnit/</entry>
								</row>
								<row>
									<entry>f</entry>
									<entry>/OTDS/Flights/OnewayFlights/OnewayFlight/</entry>
								</row>
								<row>
									<entry>g</entry>
									<entry>/OTDS/Flights/OnewayFlights/OnewayFlight/BookingClass/</entry>
								</row>
								<row>
									<entry>h</entry>
									<entry>/OTDS/Flights/ReturnFlights/ReturnFlight/</entry>
								</row>
								<row>
									<entry>i</entry>
									<entry>/OTDS/Flights/ReturnFlights/ReturnFlight//BookingClass/</entry>
								</row>
								<row>
									<entry>j</entry>
									<entry>/OTDS/Addons/Addon/</entry>
								</row>
								<row>
									<entry>k</entry>
									<entry>/OTDS/Addons/Addon/ServiceFeature/</entry>
								</row>
								<row>
									<entry>l</entry>
									<entry>/OTDS/Addons/Addon/Service/</entry>
								</row>
								<row>
									<entry>m</entry>
									<entry>/OTDS/DefinedComponents/DefineComponent/</entry>
								</row>
								<row>
									<entry>n</entry>
									<entry>/*/PriceItems/PriceItem/</entry>
								</row>
							</tbody>
						</tgroup>
					</table>
				
				<para xml:id="det_4782" xml:lang="de"> </para>
			</section>
		</section>
		<section role="Anhang" xml:id="AppendixStyleGuide">
			<title><phrase xml:id="det_4783" xml:lang="de">Anhang: StyleGuide für XML und XSD</phrase></title>
			<orderedlist numeration="upperroman">
				<listitem>
					<para xml:id="det_4784" xml:lang="de">OTDS folgt bzgl. der XML Formatierungen den Empfehlungen des W3C Consortiums</para>
					<orderedlist>
						<listitem>
							<para xml:id="det_4785" xml:lang="de">Alle Elementnamen werden in sogenannter <emphasis role="bold">CamelCase-Schreibweise </emphasis>verfasst. Der erste Buchstabe eines
								Wortes wird in Großbuchstaben verfasst, alle anderen in Kleinbuchstaben.
								Bindestriche, Unterstriche oder sonstige Trenner sind in den Namen nicht
								erlaubt. Diese Konvention nennt sich <emphasis role="bold">"UpperCamelCase"</emphasis>. </para>
							<para xml:id="det_4786" xml:lang="de">Die Elementnamen, Attributsnamen und Aufzählungswerte werden nur aus dem
								Zeichenvorrat A-Za-z gebildet ( z.B. PriceItem).</para>
						</listitem>
						<listitem>
							<para xml:id="det_4787" xml:lang="de">Selbsterklärende Namensgebung von Elementen, Attributen, Typen,
								Aufzählungen.</para>
						</listitem>
						<listitem>
							<para xml:id="det_4788" xml:lang="de">XML-Attribute werden nur für Keys, Metadaten und Eigenschaften von Elementen
								verwendet. In Attributen stehen möglichst keine Inhalte.</para>
						</listitem>
					</orderedlist>
				</listitem>
				<listitem>
					<para xml:id="det_4789" xml:lang="de">Überführung XSD Schema in Quellcode</para>
					
					<orderedlist>
						<listitem>
							<para xml:id="det_4791" xml:lang="de">Es gibt keine Einschränkungen (String Länge, Max Integer Werte, …)
								.</para>
						</listitem>
						<listitem>
							<para xml:id="det_4792" xml:lang="de">Datentyp für ganzzahlige Werte: xs:int</para>
						</listitem>
						<listitem>
							<para xml:id="det_4793" xml:lang="de">Mehrdimensionale Arrays</para>
							<para xml:id="det_4794" xml:lang="de">Bei der Erstellung von mehrdimensionalen Listen muss folgendes beachtet
								werden:</para>
							<para xml:id="det_4795" xml:lang="de">- eine Liste die wieder eine Liste enthält darf nie typlos sein</para>
							<para xml:id="det_4796" xml:lang="de">- der Typ der ersten Liste (im Beispiel "Match") muss "derivedBy"
								"extension" sein</para>
							<para xml:id="det_4797" xml:lang="de"> </para>
							<para xml:id="det_4798" xml:lang="de">Falsch ist:</para>
							<programlisting><![CDATA[
<xs:element name="Match" minOccurs="0" maxOccurs="unbounded">
	<xs:complexType>
		<xs:choice maxOccurs="unbounded">
			<xs:element name="OnewayFlight" type="OnewayFlightMatchType"/>
			<xs:element name="AddonService">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="AddonMatchType">
							<xs:attribute name="AddonReference"/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
		</xs:choice>
	</xs:complexType>
</xs:element>	
      ]]></programlisting>
							<para xml:id="det_4799" xml:lang="de">Richtig ist:</para>
							<programlisting><![CDATA[
<xs:element name="Match" minOccurs="0" maxOccurs="unbounded">
	<xs:complexType>
		<xs:complexContent>
			<xs:extension base="OnewayFlightOnlyRulesMatchType"/>
		</xs:complexContent>
	</xs:complexType>
</xs:element>
<xs:complexType name="OnewayFlightOnlyRulesMatchType">
	<xs:choice maxOccurs="unbounded">
		<xs:element name="OnewayFlight" type="OnewayFlightMatchType"/>
		<xs:element name="AddonService">
			<xs:complexType>
				<xs:complexContent>
					<xs:extension base="AddonMatchType">
						<xs:attribute name="AddonReference"/>
					</xs:extension>
				</xs:complexContent>
			</xs:complexType>
		</xs:element>
	</xs:choice>
</xs:complexType>	
      ]]></programlisting>
						</listitem>
					</orderedlist>
					
					<para xml:id="det_4800" xml:lang="de"> </para>
				</listitem>
				<listitem>
					<para xml:id="det_4801" xml:lang="de">Alle Datendateien und Daten-Verzeichnisse werden mit Kleinbuchstaben benannt und die
						Dateien besitzen immer die Endung "xml".</para>
				</listitem>
				<listitem>
					<para xml:id="det_4802" xml:lang="de">Als Zeichensatz wird der standardisierte Unicode-Zeichensatz UTF-8 verwendet. </para>
					<para xml:id="det_4803" xml:lang="de">
						<programlisting><![CDATA[<?xml version="1.0" encoding="UTF-8"?>]]></programlisting>
					</para>
				</listitem>
			</orderedlist>
			<para xml:id="det_4804" xml:lang="de"> </para>
		</section>
		<section role="Anhang" xml:id="AppendixComments">
			<title><phrase xml:id="det_4805" xml:lang="de">Anhang: Anmerkungen</phrase></title>
			<section role="Anhang" xml:id="AppendixCommentsOtherFormats">
				<title><phrase xml:id="det_4806" xml:lang="de">Anmerkungen zu anderen Datenformaten</phrase></title>
				<para xml:id="det_4807" xml:lang="de">Alle gängigen Datenformate sollten in OTDS abbildbar sein. Vorteil ist, dass
					Datenproduktionen dann nicht grundlegend umgestellt werden müssen. Durch die Abbildung
					eines Standardformates wie INFX oder AICP in OTDS kann man aber leicht die Inhalte
					erweitern. So wäre es denkbar, dass man zusätzlich zur INFX Lieferung in OTDS die
					Kinderpreisregeln liefert und damit den Vertriebssystemen die Darstellung von
					Gesamtpreisen ermöglicht.</para>
			</section>
			<section role="Anhang" xml:id="AppendixCommentsRedundance">
				<title><phrase xml:id="det_4808" xml:lang="de">Anmerkung zur Redundanzreduktion</phrase></title>
				<para xml:id="det_4809" xml:lang="de"> Redundanzvermeidung ist in Datenlieferungen ein wichtiges Thema. Redundante Daten
					erhöhen nicht nur die Datenmenge und damit die Laufzeiten aller Prozesse, sondern stellen
					auch höhere Anforderungen an die Hardwareressourcen aller beteiligten Systeme und steigern
					letztendlich auch die Fehlerhäufigkeit.</para>
				<orderedlist>
					<listitem>
						<para xml:id="det_4810" xml:lang="de">Gerade im Bereich der Preisdaten ermöglicht die Architektur von OTDS mit der
							regelbasierten Lieferung von Preisbestandteilen und Zusatzleistungen einen
							kaskadierenden Aufbau seiner Produkte. Zimmerpreise brauchen so nur einmal
							geliefert werden. Die Ausprägungen anderer Leistungen werden mit den
							entsprechenden Bedingungen einfach an der richtigen Stelle platziert und bauen so
							eigene Produkte auf. </para>
					</listitem>
					<listitem>
						<para xml:id="det_4811" xml:lang="de">Die Integration eines Stammdatenlevels in Accommodation, Room und Flight
							ermöglicht eine effektive Platzierung der Stammdaten.</para>
					</listitem>
					<listitem>
						<para xml:id="det_4812" xml:lang="de">In OTDS ist es vorgesehen, dass Veranstalter mehrere Brands in einer
							Datenlieferung integrieren können. Dies macht gerade dann Sinn, wenn die
							Unterschiede der Brands in den Zimmerausprägungen oder besonderen
							Preisbestandteilen stecken. Unterschiedliche Marken eines Veranstalters teilen
							sich Stammdaten, Auszeichnungen, Grundpreise und auch Flüge. Die Reduzierung der
							Redundanzen liegt auf der Hand.</para>
						<para xml:id="det_4813" xml:lang="de"> </para>
						<para xml:id="det_4814" xml:lang="de"> </para>
					</listitem>
				</orderedlist>
			</section>
			<section role="Anhang" xml:id="AppendixCommentsBussinesRules">
				<title><phrase xml:id="det_4815" xml:lang="de">Wahrung des Geheimnisses der BusinessRules</phrase></title>
				<para xml:id="det_4816" xml:lang="de"/>
			</section>
		</section>
		<section role="Anhang" xml:id="AppendixSpec">
			<title><phrase xml:id="det_4817" xml:lang="de">Anhang: Formatierung der Thematische Spezifikation </phrase></title>
			<section xml:id="OtdsSpecFormat">
				<title><phrase xml:id="det_4818" xml:lang="de">Docbook Formatierung</phrase></title>
				<para xml:id="det_4819" xml:lang="de">Die "OTDS Thematische Spezifikation" liegt im OTDS-Forum als HTML-Dokument zur
					Verfügung. Grundlage dieser Datei ist ein mit Docbook erzeugtes Dokument, dessen
					Grundstrukturen im folgenden erläutert werden soll.</para>
				<section xml:id="OtdsSpecFormatSection">
					<title><phrase xml:id="det_4820" xml:lang="de">Section, Überschrift oder Liste</phrase></title>
					<para xml:id="det_4821" xml:lang="de">Das Dokument besteht in erster Linie aus Kapiteln, die als Section angelegt werden.
						Jedes Kapitel (section) kann wiederum Kapitel (section) enthalten, die als
						Unterkapitel dann in verschiedenen Ebenen entsprechend angeordnet und automatisch
						nummeriert werden (z.B. erste Ebene 1., zweite 1.1., dritte 1.1.1. usw.). </para>
					<para xml:id="det_4822" xml:lang="de">Alle grundlegenden und wichtigen Themengebiete werden in eigenen Kapiteln
						abgehandelt, entsprechend werden dazugehörige Unterkapitel angelegt. Die bisher
						angelegte Struktur soll beibehalten werden, Ergänzungen und Berichtigungen können in
						den jeweiligen Kapiteln (section) erfolgen. Bei Bedarf können weitere Unterkapitel
						unter den bestehenden angelgt werden. Es sollte allerdings darauf geachtet werden, die
						Struktur nicht ausufern zu lassen.</para>
					<para xml:id="det_4823" xml:lang="de">Alle Kapitel (section) erhalten eine xml:id, die entsprechend der Kapitelebene
						aufgebaut wird und für Sprungpunkte (Links) innerhalb des Dokuments verwendet werden
						kann.</para>
					<bridgehead xml:id="det_4824" xml:lang="de">Überschriften</bridgehead>
					<para xml:id="det_4825" xml:lang="de">Um innerhalb eines Kapitels (section) besondere Abschnitte hervorzuheben, gibt es
						die Möglichkeit Abschnitte mit eigenen Überschriften zu versehen, die nicht den Status
						eines Kapitels (section) haben. </para>
					<bridgehead xml:id="det_4826" xml:lang="de">Listen</bridgehead>
					<para xml:id="det_4827" xml:lang="de">Für Beschreibungen und Erläuterungen, die als Auflistung vorliegen, gibt es die
						Möglichkeit diese als Liste oder in einer Tabelle darzustellen.</para>
					<para xml:id="det_4828" xml:lang="de"> </para>
				</section>
				<section xml:id="OtdsSpecFormatLevel">
					<title><phrase xml:id="det_4829" xml:lang="de">Organisation der Sections in Ebenen</phrase></title>
					<para xml:id="det_4830" xml:lang="de"> Wie oben erwähnt, ist das Dokument in entsprechende Kapitel (section) angelegt.
						Jedes Kapitel (section) kann weitere section enthalten. Eine section hat einen Aufbau
						nach folgendem Muster: </para>
					<para xml:id="det_4831" xml:lang="de">
						<programlisting><![CDATA[
	    <section xml:id="OtdsSectionID">
	        <title><phrase>Überschrift Section</phrase></title>
	        <para>Paragraph, Fließtext </para>
	    </section>       
	          ]]></programlisting>
					</para>
					<para xml:id="det_4832" xml:lang="de">Verpflichtend sind die Vergabe einer eindeutigen xml:id und die Überschrift (title),
						der Fließtext oder Paragraph (para) kann bei verschachtelten Kapiteln nach der
						Überschrift (title) hinzugefügt werden, ist bei der untersten Ebene aber
						verpflichtend.</para>
					<para xml:id="det_4833" xml:lang="de">
						<programlisting><![CDATA[
	    <section xml:id="OtdsSection1">							<- Ebene 1. 
		      <title><phrase>Überschrift Section 1.</phrase></title>				   - Kapitelüberschrift		
		      <para>Paragraph, Fließtext</para>					   - Paragraph (optional)
		      <section xml:id="OtdsSection1Section1.1.">		   <- Ebene 1.1.
		      	  <title><phrase>Überschrift Section 1.1</phrase></title>			- Kapitelüberschrift
		            <para>Paragraph, Fließtext </para>				- Paragraph (verpflichtend)
	      	 </section>						 				     <- Ende Ebene 1.1.
	    </section>											      <- Ende Ebene 1.
	    <section xml:id="OtdsSection2">							 <- Ebene 2.
	        <title><phrase>Überschrift Section 2.</phrase></title>					 - Kapitelüberschrift
	        section xml:id="OtdsSection1Section2.1.">		   	<- Ebene 2.1.
		      	  <title><phrase>Überschrift Section 2.1</phrase></title>			- Kapitelüberschrift
		            <para>Paragraph, Fließtext </para>				- Paragraph  (verpflichtend)
	      	 </section>						 				  <- Ende Ebene 2.1.
	    </section> 
	    <section xml:id="OtdsSection3">
	        <title><phrase>Überschrift Section 3.</phrase></title>
	        <para>Paragraph, Fließtext </para>				        - Paragraph  (verpflichtend)
	    </section>       
	          ]]></programlisting>
					</para>
					<para xml:id="det_4834" xml:lang="de"> der zugehörige Text als Pragraph (para) ist ebenfalls verpflichtend, es sei denn,
						dass direkt ein Unterkapitel angegeben wird.</para>
				</section>
				<section xml:id="OtdsSpecFormatId">
					<title><phrase xml:id="det_4835" xml:lang="de">Sprungpunkte in Sections markieren</phrase></title>
					<para xml:id="det_4836" xml:lang="de">Zu jedem Kapitel muss eine xml:id angelegt werden, die als Attribut zu section
						angegeben wird. Die xml:id wird entsprechend der Kapitelebene aufgebaut und als
						Sprungpunkte (Links) innerhalb des Dokuments verwendet </para>
					<para xml:id="det_4837" xml:lang="de">(Beispiel: xml:id="OtdsProcess" und xml:id="OtdsProcessOverview"). </para>
					<para xml:id="det_4838" xml:lang="de">
						<programlisting><![CDATA[
	    <section xml:id="idName">
	          ]]></programlisting>
					</para>
				</section>
				<section xml:id="OtdsSpecFormatTitle">
					<title><phrase xml:id="det_4839" xml:lang="de">Überschriften innerhalb von Kapiteln</phrase></title>
					<para xml:id="det_4840" xml:lang="de"> Die Kapitelüberschrift muss entsprechend unter title angegeben werden (s.o.)</para>
				</section>
				<section xml:id="OtdsSpecFormatBold">
					<title><phrase xml:id="det_4841" xml:lang="de">Weitere Hervorhebungen im Text</phrase></title>
					<section>
						<title><phrase xml:id="det_4842" xml:lang="de">Fett </phrase></title>
						<para xml:id="det_4843" xml:lang="de">Besonders <emphasis role="bold">wichtige Sachverhalte</emphasis> innerhalb eines
							Textes können durch Fettschrift hervorgehoben werden.</para>
						<programlisting><![CDATA[ 
	         <emphasis role="bold">wichtige Sachverhalte</emphasis>
	         ]]></programlisting>
					</section>
					<section>
						<title><phrase xml:id="det_4844" xml:lang="de">Kursiv</phrase></title>
						<para xml:id="det_4845" xml:lang="de"> Alle Elemtnamen, die sich auf die OTDS-XSD beziehen, sollen <emphasis role="italic">kursiv</emphasis> hervorgehoben werden:</para>
						<programlisting><![CDATA[ 
	         <emphasis role="italic">SellingAccom</emphasis>
	         ]]></programlisting>
					</section>
				</section>
				<section xml:id="OtdsSpecFormatList">
					<title><phrase xml:id="det_4846" xml:lang="de">Auflistungen</phrase></title>
					<para xml:id="det_4847" xml:lang="de"> </para>
					<section>
						<title><phrase xml:id="det_4848" xml:lang="de">Listen mit Nummern und Buchstaben</phrase></title>
						<para xml:id="det_4849" xml:lang="de">Auflistungen werden als geordnete Lise dargestellt, die Nummerierung beginnt mit
							Kleinbuchstaben bei "a" (loweralpha) , die nächste Ebene wird mit
							römischen Ziffern (lowerroman) dargestellt.</para>
						<programlisting><![CDATA[ 
<para>Liste Ebene 1</para>
<orderedlist numeration="loweralpha">
	<listitem>
		<para>Element a</para>
	</listitem>
	<listitem>
		<para>Liste Ebene 2</para>
		<orderedlist numeration="lowerroman">
			
			<listitem>
				<para>Element i</para>
			</listitem>
			<listitem>
				<para>Element ii</para>
			</listitem>
		</orderedlist>
	</listitem>
</orderedlist>
	         ]]></programlisting>
						<para xml:id="det_4850" xml:lang="de">ergibt folgendes Ergebnis:</para>
						<para xml:id="det_4851" xml:lang="de">Liste Ebene 1</para>
						<orderedlist numeration="loweralpha">
							<listitem>
								<para xml:id="det_4852" xml:lang="de">Element a</para>
							</listitem>
							<listitem>
								<para xml:id="det_4853" xml:lang="de">Liste Ebene 2</para>
								<orderedlist numeration="lowerroman">
									
									<listitem>
										<para xml:id="det_4957" xml:lang="de">Element i</para>
									</listitem>
									<listitem>
										<para xml:id="det_4958" xml:lang="de">Element ii</para>
									</listitem>
								</orderedlist>
							</listitem>
						</orderedlist>
						
					</section>
					<section>
						<title><phrase xml:id="det_4854" xml:lang="de">Tabellen mit Überschrift</phrase></title>
						<para xml:id="det_4855" xml:lang="de">Mehrspaltige Auflistungen werden in einer Tabelle angegeben. </para>
						<para xml:id="det_4856" xml:lang="de">title: Angabe oder Beschreibung der Tabelle</para>
						<para xml:id="det_4857" xml:lang="de">thead: her werden die Kopfdaten der Tabelle vereinbart, Ausrichtung und
							Spaltenüberschriften</para>
						<para xml:id="det_4858" xml:lang="de">tbode: Ausrichtung und Inhalt der Tabellendaten</para>
						<para xml:id="det_4859" xml:lang="de">row: Reihe der Spalte: Ausrichtung und Werte der der Spalten in der Rehe</para>
						<programlisting><![CDATA[ 
	<table frame="topbot" tocentry="1">
		<title><phrase>Titel der Tabelle</phrase></title>
		<tgroup cols="2">
			<thead>
				<row valign="middle">
					<entry align="left">
						<para>Überschrift 1. Spalte</para>
					</entry>
					<entry align="left">
						<para>Überschrift 2. Spalte</para>
					</entry>
				</row>
			</thead>
			<tbody valign="top">
				<row valign="top">
					<entry>R1 Sp1 </entry>
					<entry>
						<para>R1 Sp2 </para>
					</entry>
				</row>
				<row valign="top">
					<entry>R2 Sp1  </entry>
					<entry>
						<para>R2 Sp2</para>
					</entry>
				</row>
				<row valign="top">
					<entry>R3 Sp1  </entry>
					<entry>
						<para>R3 Sp2</para>
					</entry>
				</row>
			</tbody>
		</tgroup>
	</table>
	         ]]></programlisting>
						<para xml:id="det_4860" xml:lang="de">ergibt folgendes Ergebnis:</para>
						<table frame="topbot" tocentry="1">
							<title><phrase xml:id="det_4861" xml:lang="de">Titel der Tabelle</phrase></title>
							<tgroup cols="2">
								<thead>
									<row valign="middle">
										<entry align="left">
											<para xml:id="det_4862" xml:lang="de">Überschrift 1. Spalte</para>
										</entry>
										<entry align="left">
											<para xml:id="det_4863" xml:lang="de">Überschrift 2. Spalte</para>
										</entry>
									</row>
								</thead>
								<tbody valign="top">
									<row valign="top">
										<entry>R1 Sp1 </entry>
										<entry>
											<para xml:id="det_4864" xml:lang="de">R1 Sp2 </para>
										</entry>
									</row>
									<row valign="top">
										<entry>R2 Sp1 </entry>
										<entry>
											<para xml:id="det_4865" xml:lang="de">R2 Sp2</para>
										</entry>
									</row>
									<row valign="top">
										<entry>R3 Sp1 </entry>
										<entry>
											<para xml:id="det_4866" xml:lang="de">R3 Sp2</para>
										</entry>
									</row>
								</tbody>
							</tgroup>
						</table>
					</section>
				</section>
				<section xml:id="OtdsSpecFormatLinks">
					<title><phrase xml:id="det_4867" xml:lang="de">Links innerhalb des Dokuments</phrase></title>
					<para xml:id="det_4868" xml:lang="de">Ein Link innerhalb dieses Dokuments kann zu jedem Kapitel erstellt werden, da dort
						nach o.g. Vorgaben jedes Kapitel (section) mit einer xml:id versehen worden ist. Diese
						xml:id wird entsprechend im Link eingesetzt.</para>
					<para xml:id="det_4869" xml:lang="de">Der Link, bzw. der Text, der im HTML-Dokument als Link erscheint, kann entsprechend
						vergeben werden.</para>
					<programlisting><![CDATA[ 
	<link linkend="section-xml:id">Linkbeschreibung, die im Text erscheint</link>
	         ]]></programlisting>
				</section>
				<section xml:id="OtdsSpecFormatExtLinks">
					<title><phrase xml:id="det_4870" xml:lang="de">Externe Links</phrase></title>
					<section>
						<title><phrase xml:id="det_4871" xml:lang="de">Link zur Technischen Dokumentation</phrase></title>
						<para xml:id="det_4872" xml:lang="de"> Links zur Technischen Spezifikation können kontextbezogen gesetzt werden. </para>
						<para xml:id="det_4873" xml:lang="de">#SuchText: der Text (im Beispiel "SuchText"), der hinter dem # steht wird an die
							Technische Spezifikation übergeben, die dann mit diesem Suchkriterium geöffnet
							wird. Suchbegriffe können z.B. die Elementnamen sein, Teile des Namens reichen
							aus. </para>
						<para xml:id="det_4874" xml:lang="de">Es mus allerdings auf Groß- und Kleinschreibung geachtet werden!</para>
						<para xml:id="det_4875" xml:lang="de">Der Link, bzw. der Text, der im HTML-Dokument als Link erscheint, kann
							entsprechend vergeben werden. </para>
						<programlisting><![CDATA[
	<link xlink:href="./technisch/otds_technisch.html#SuchText">Linkbeschreibung, die im Text erscheint</link>
]]></programlisting>
						<para xml:id="det_4876" xml:lang="de">Es werden auch Verlinkungen von der Technischen Spezifikation zu dieser
							Thematischen Spezifikation möglich sein, die momentan aber noch nicht ausgeführt
							sind.</para>
					</section>
					<section>
						<title><phrase xml:id="det_4877" xml:lang="de">Link zu Beispiel-Dateien</phrase></title>
						<para xml:id="det_4878" xml:lang="de">Es besteht die Möglichkeit alle Beispieldateien wie im Anhang beschrieben als
							Link einzubinden. Alle Beispiele in dieser Beschreibung als auch die Beispiele in
							der OTDS-Overview - Inside OTDS Präsentation finden sich in den Beispieldateien
							mit entsprenden Kommentaren in deutsch und englisch wieder.</para>
						<para xml:id="det_4879" xml:lang="de">Der Link, bzw. der Text, der im HTML-Dokument als Link erscheint, kann
							entsprechend vergeben werden. </para>
						<programlisting><![CDATA[
	<link xlink:href="./beispieldatei>Linkbeschreibung, die im Text erscheint</link>
]]></programlisting>
						<para xml:id="det_4880" xml:lang="de">
							<link xlink:href="../../example/PriceItemExamples.xml">Test</link>
						</para>
					</section>
				</section>
				<section xml:id="OtdsSpecFormatFigure">
					<title><phrase xml:id="det_4881" xml:lang="de">Einbinden von Grafiken</phrase></title>
					<para xml:id="det_4882" xml:lang="de">Grafiken können ebenfalls in das Dokument aufgenommen werden. Die Grafik kann als
						PNG-Grafik erzeugt werden und sollte im Unterverzeichnis figures abgelegt werden. </para>
					<para xml:id="det_4883" xml:lang="de">fileref: Pfad und Name der Grafikdatei mit Angabe des Formats (hier: "PNG")</para>
					<para xml:id="det_4884" xml:lang="de">contentwidth: Die Angabe von 80% hat sich für die HTML-Umsetzung als günstig
						erwiesen, kann aber je nach Größe der Grafik etwas abweichen.</para>
					<para xml:id="det_4885" xml:lang="de">title: Titel, bzw. kurze Beschreibung der Grafik</para>
					<programlisting><![CDATA[ 
	<figure>
		<info>
	    	<title><phrase>Titel der Grafik </phrase></title>
		</info>
		<mediaobject>
	    	<imageobject>
	        	<imagedata fileref="figures/grafikname.png" format="PNG"  contentwidth="80%"/>
	        </imageobject>
		</mediaobject>
	</figure>
]]></programlisting>
				</section>
				<section xml:id="OtdsSpecFormatListing">
					<title><phrase xml:id="det_4886" xml:lang="de">Formatierung von Programmcode</phrase></title>
					<section>
						<title><phrase xml:id="det_4887" xml:lang="de">Kleine Programmteile</phrase></title>
						<para xml:id="det_4888" xml:lang="de"> Die Angabe kurzer Programmbestandteile ist für Erklärungen sehr hilfreich, muss
							aber in folgender Form angegeben werden:</para>
						<para xml:id="det_4889" xml:lang="de">"-- Programmlisting --" : durch den Programmcode ersetzen</para>
						<para xml:id="det_4890" xml:lang="de">
							<programlisting><![CDATA[
	<para>
		<programlisting>
	    	< ![CDATA[
	             
	    -- Programmlisting --
	
	          ]] >
		</programlisting>
	</para>
	          ]]></programlisting>
						</para>
					</section>
					
					<section>
						<title><phrase xml:id="det_4891" xml:lang="de">Komplette Beispiele</phrase></title>
						<para xml:id="det_4892" xml:lang="de">Komplette Beispiele werden sinnvollerweise eingebunden, da sie dann auf jedem
							Fall in einem validen Zustand vorliegen. Der relative Pfad zu den Beispielen
							lautet: ../../example/ </para>
						<para xml:id="det_4893" xml:lang="de">Hier ein Beispiel, wie "Demo_Angebotskalkulation.xml" in das Dokument
							eingebunden werden kann:</para>
						<programlisting>
	          <![CDATA[
	<programlisting language="XML"><xi:include href="../../example/Demo_Angebotskalkulation.xml" parse="text"/></programlisting>
	          ]]>
						</programlisting>
						<para xml:id="det_4894" xml:lang="de">Im <link linkend="XMLExamples">Anhang: XML-Beispiele</link> sind entsprechende
							eingebundene Beispiele aufgeführt.</para>
					</section>
				</section>
			</section>
		</section>
		<section role="Anhang" xml:id="AppendixFormalities">
			<title><phrase xml:id="det_4895" xml:lang="de">Anhang: Regeln der Zusammenarbeit im OTDS-Gremium</phrase></title>
			<orderedlist>
				<listitem>
					<para xml:id="det_4896" xml:lang="de">
						<emphasis role="bold">Verein zur Förderung eines Offenen Toristischen Datenstandards -
							OTDS e.V.</emphasis>
					</para>
					<para xml:id="det_4897" xml:lang="de">Zweck des Vereins ist die Schaffung und Spezifizierung eines offenen touristischen
						Datenformats auf der Grundlage offener und nicht diskriminierender, standardisierter
						Technologien in einem offenen Arbeitsprozess mit allen Beteiligten.</para>
					<para xml:id="det_4898" xml:lang="de">Die Struktur des Vereins:</para>
					
					<orderedlist numeration="loweralpha">
						<listitem>
							<para xml:id="det_4900" xml:lang="de">Vorstand</para>
							<para xml:id="det_4901" xml:lang="de">Der Vorstand besteht aus 7 Vorstandsmitgliedern. Hauptaufgaben des
								Vorstands sind die Aufnahme neuer Mitglieder, die Bildung des Technischen
								Ausschusses, die Berufung neuer Arbeitsgruppen und die Verabschiedung von
								Beschlussvorlagen des Technischen Ausschusses.</para>
						</listitem>
						<listitem>
							<para xml:id="det_4902" xml:lang="de">Technischer Ausschuss</para>
							<para xml:id="det_4903" xml:lang="de">Der Technische Ausschuss kontrolliert die Architektur und koordiniert
								die Weiterentwicklung von OTDS. Neue Anforderungen werden in
								Zusammenarbeit mit dem Vorstand erörtert und nach Abstimmung zur
								Bearbeitung an die jeweiligen Arbeitsgruppen zur Implementierung
								weitergereicht.</para>
							<para xml:id="det_4904" xml:lang="de">Der Technische Ausschuss überprüft und dokumentiert die Ergebnisse und
								gibt nach erfolgter Qualitätskontrolle eine Freigabeempfehlung an den
								Vorstand. </para>
						</listitem>
						<listitem>
							<para xml:id="det_4905" xml:lang="de">Arbeitsgruppen</para>
							<para xml:id="det_4906" xml:lang="de">Arbeitsgruppen werden nach fachlichen und thematischen Kriterien
								zusammengesetzt. In enger Abstimmung mit dem Technischen Ausschuss führen
								die Arbeitsgruppen alle notwendigen Aktivitäten zur Weiterentwicklung des
								OTDS-Datenformats im jeweiligen fachspezifischen Bereich durch. </para>
						</listitem>
					</orderedlist>
					
				</listitem>
				<listitem>
					<para xml:id="det_4907" xml:lang="de">
						<emphasis role="bold">Toolset für dezentrale Zusammenarbeit und effektive
							Kommunikation:</emphasis>
					</para>
					
					<itemizedlist>
						<listitem>
							<para xml:id="det_4909" xml:lang="de">Projekt- und Versionsverwaltung "Mercurial" </para>
						</listitem>
						<listitem>
							<para xml:id="det_4910" xml:lang="de">Project Management Web Application "Redmine" </para>
						</listitem>
						<listitem>
							<para xml:id="det_4911" xml:lang="de">Forum für "Neue Anforderungen"</para>
						</listitem>
						<listitem>
							<para xml:id="det_4912" xml:lang="de">Diskussionsforen über Spezifikation und allgemeine Fragen</para>
						</listitem>
						<listitem>
							<para xml:id="det_4913" xml:lang="de">Ticketing-System für Aufgaben und Fehlermeldungen</para>
						</listitem>
						<listitem>
							<para xml:id="det_4914" xml:lang="de">Wiki-System zur Erstellung einer Wissensdatenbank für OTDS</para>
						</listitem>
						<listitem>
							<para xml:id="det_4915" xml:lang="de">Änderungsverfolgung</para>
						</listitem>
						<listitem>
							<para xml:id="det_4916" xml:lang="de">Konferenzsystem "Mikogo" für Zusammenarbeit und Präsentationen</para>
						</listitem>
						<listitem>
							<para xml:id="det_4917" xml:lang="de">XML-Tools: "Altova XML Spy" und "oXygen XML Editor"</para>
						</listitem>
						<listitem>
							<para xml:id="det_4918" xml:lang="de">OTDS Browser für die Qualitätskontrolle zur Überprüfung der Inhalte der
								Datenproduktion</para>
						</listitem>
					</itemizedlist>
					
				</listitem>
				<listitem>
					<para xml:id="det_4919" xml:lang="de">
						<emphasis role="bold">Zusammenarbeit:</emphasis>
					</para>
					
					<itemizedlist>
						<listitem>
							<para xml:id="det_4921" xml:lang="de">Kontinuierlicher Austausch über Konferenzen</para>
						</listitem>
						<listitem>
							<para xml:id="det_4922" xml:lang="de">Konferenzsystem "Mikogo" für Online Meetings</para>
						</listitem>
						<listitem>
							<para xml:id="det_4923" xml:lang="de">Austausch und Diskussion in OTDS-Online-Foren </para>
						</listitem>
						<listitem>
							<para xml:id="det_4924" xml:lang="de">Aufgabenverteilung durch Ticketing-System</para>
						</listitem>
					</itemizedlist>
					
				</listitem>
				<listitem>
					<para xml:id="Dokumentation" xml:lang="de">
						<emphasis role="bold">Dokumentation:</emphasis>
					</para>
					
					<itemizedlist>
						<listitem>
							<para xml:id="det_4926" xml:lang="de">
								<!--<link xlink:href="./otds_anforderungen.html#OtdsAnforderungen">OTDS Anforderungen</link>-->OTDS
								Anforderungen und Regeln </para>
						</listitem>
						<listitem>
							<para xml:id="det_4927" xml:lang="de">OTDS - Spezifikation des Datenformats</para>
						</listitem>
						<listitem>
							<para xml:id="det_4928" xml:lang="de"><link xlink:href="./technisch/otds_technisch.html">OTDS - Technische
									Dokumentation</link></para>
						</listitem>
						<listitem>
							<para xml:id="det_4929" xml:lang="de">Umfangreiche Beispielsammlung</para>
						</listitem>
					</itemizedlist>
					
				</listitem>
				<listitem>
					<para xml:id="det_4930" xml:lang="de">
						<emphasis role="bold">Festlegung der technischen Abläufe im OTDS-Gremium</emphasis>
					</para>
					
					<orderedlist numeration="loweralpha">
						<listitem>
							<para xml:id="det_4932" xml:lang="de">Neue Anforderungen</para>
							<para xml:id="det_4933" xml:lang="de">Neue Anforderungen können von Anwendern oder Mitgliedern an den Verein
								herangetragen oder in dem OTDS-Forum "Forum für Mitglieder" angelegt
								werden. </para>
						</listitem>
						<listitem>
							<para xml:id="det_4934" xml:lang="de">Anforderungen werden vom Vorstand in Zusammenarbeit mit dem Technischen
								Ausschuss bewertet und zur Umsetzung an diesen weitergeleitet. </para>
						</listitem>
						<listitem>
							<para xml:id="det_4935" xml:lang="de">Der Technische Ausschuss leitet die Aufgaben an die fachspezifischen
								Arbeitsgruppen weiter, kontrolliert und koordiniert die Umsetzung</para>
						</listitem>
						<listitem>
							<para xml:id="det_4936" xml:lang="de">Der Technische Ausschuss empfiehlt dem Vorstand nach erfolgreicher
								Qualitätskontrolle die Aufnahme in das Datenformat.</para>
						</listitem>
					</orderedlist>
					
					<para xml:id="det_4937" xml:lang="de"> </para>
				</listitem>
			</orderedlist>
		</section>
		<section role="Anhang" xml:id="AppendixGlossar">
			<title><phrase xml:id="det_4938" xml:lang="de">Anhang: Glossar</phrase></title>
			<para xml:id="det_4939" xml:lang="de"> </para>
			<informaltable border="0" style="border-collapse:  collapse;width:919pt" width="956">
				<tr>
					<td rowspan="1" colspan="1">Anfrage</td>
					<td rowspan="1" colspan="1">Eine Anfrage beschreibt die Rahmenparameter mit deren Hilfe
						man je Produkt ein Preisangebot zusammenstellen kann, das diese Anfrage erfüllt. Eine
						Anfrage beschreibt also einen konkreten Termin und eine konkrete Dauer und enthält
						einen Anfragekontext der weitere Parameter wie Buchungsdatum etc. definiert.</td>
				</tr>
				<tr>
					<td rowspan="1" colspan="1">Angebot</td>
					<td rowspan="1" colspan="1">Ein Angebot besteht aus einem Produkt oder Teil-Produkt
						welches sich speziell auf einen Termin und eine Dauer bezieht, aber auch allgemeine
						Einschränkungen wie Anreisetage, Mindestaufenthalte und Belegungen
						berücksichtigt.</td>
				</tr>
				<tr>
					<td rowspan="1" colspan="1">Angebotsmenge</td>
					<td rowspan="1" colspan="1">Eine Angebotsmenge ist die Menge aller Angebote, die bzgl.
						einer Anfrage als passendes Angebot in Frage kommen.</td>
				</tr>
				<tr>
					<td rowspan="1" colspan="1">Preisangebot</td>
					<td rowspan="1" colspan="1">Ein Preisangebot bezieht zusätzlich alle Bedingungen mit ein,
						die an der Preisbildung beteiligt sind. Dazu gehört beispielsweise auch das
						Buchungsdatum oder der SalesChannel auf dem das Preisangebot angeboten wird. Ein
						Preisangebot definiert also die vom Endkunden buchbare Leistung zu einem bestimmten
						Preis.</td>
				</tr>
				<tr>
					<td rowspan="1" colspan="1">Preisangebotsmenge</td>
					<td rowspan="1" colspan="1">Eine Preisangebotsmenge ist die Menge aller Preisangebote, die
						bzgl. einer Anfrage in Frage kommen.</td>
				</tr>
				<tr>
					<td rowspan="1" colspan="1">Produkt</td>
					<td rowspan="1" colspan="1">Ein Produkt ist sozusagen die Ware, die dem Endkunden
						angeboten wird. Ein Produkt besteht in dem Sinne aus einem oder mehreren
						Teil-Produkten. Es geht hier nicht um die Ausprägung bzgl. einzelner Termine. </td>
				</tr>
				<tr>
					<td rowspan="1" colspan="1">Produktmenge</td>
					<td rowspan="1" colspan="1">Eine Produktmenge ist die Menge aller Produkte, die bzgl.
						einer Anfrage als passendes Angebot in Frage kommen. Setzt sich ein Produkt aus
						mehreren Komponenten also Teil-Produkten zusammen, so enthält die Produktmenge alle
						Kombinationen dieser Teil-Produkte.</td>
				</tr>
				<tr>
					<td rowspan="1" colspan="1">Teil-Produkt</td>
					<td rowspan="1" colspan="1">Ein Teilprodukt ist auf Komponentenebene sozusagen die
						angebotene Ware, die sich aus den zur Verfügung stehenden Unterkomponenten ergibt.
						Wobei es hier nicht um die Menge geht sondern nur um die Ausprägung, also die Art der
						Ware. Im Klartext heißt das, dass bzgl. der Unterkünfte das Teil-Produkt die
						Kombination eines bestimmten Zimmers mit einer bestimmten Verpflegung in einer
						bestimmten Unterkunft ist. Dabei spielen Einzeltermine und Dauern keine Rolle. </td>
				</tr>
				<tr>
					<td rowspan="1" colspan="1">Teil-Produktmenge</td>
					<td rowspan="1" colspan="1">Eine Teil-Produktmenge ist dementsprechend die Menge aller
						Teil-Produkte, die bzgl. einer Anfrage als passendes Angebot in Frage kommen.</td>
				</tr>
				<tr xml:id="GlossarSubComponent">
					<td rowspan="1" colspan="1">Unterkomponente</td>
					<td rowspan="1" colspan="1"><para xml:id="det_4940" xml:lang="de">Die Unterkomponenten beschreiben die verschiedenen
							Ausprägungen einer Komponente. Folgende Unterkomponenten sind in OTDS definiert: </para>
						<itemizedlist>
							<listitem>
								<para xml:id="det_4941" xml:lang="de">Accommodation -&gt; SellingAccommodation -&gt; Unit -&gt; Board</para>
							</listitem>
							<listitem>
								<para xml:id="det_4942" xml:lang="de">Accommodation -&gt; SellingAccommodation -&gt; Unit -&gt; SellingUnit</para>
							</listitem>
							<listitem>
								<para xml:id="det_4943" xml:lang="de">Flights -&gt; OnewayFlights -&gt; OnewayFlight -&gt; BookingClass</para>
							</listitem>
							<listitem>
								<para xml:id="det_4944" xml:lang="de">Flights -&gt; ReturnFlights -&gt; ReturnFlight -&gt; Inbound -&gt;
									BookingClass</para>
							</listitem>
							<listitem>
								<para xml:id="det_4945" xml:lang="de">Flights -&gt; ReturnFlights -&gt; ReturnFlight -&gt; Outbound -&gt;
									BookingClass</para>
							</listitem>
							<listitem>
								<para xml:id="det_4946" xml:lang="de">Flights -&gt; ReturnFlights -&gt; ReturnFlight -&gt; BookingClass</para>
							</listitem>
							<listitem>
								<para xml:id="det_4947" xml:lang="de">Addons -&gt; Addon -&gt; ServiceFeature</para>
							</listitem>
							<listitem>
								<para xml:id="det_4948" xml:lang="de">Addons -&gt; Addon -&gt; Service</para>
							</listitem>
						</itemizedlist>
					</td>
				</tr>
				<tr>
					<td rowspan="1" colspan="1">Verfügbarkeit</td>
					<td rowspan="1" colspan="1">Die Verfügbarkeit beschreibt, ob ein Angebot zu einem Termin
						für eine Dauer zur Verfügung steht.</td>
				</tr>
			</informaltable>
			<para xml:id="det_4949" xml:lang="de"> </para>
		</section>
		<section role="Anhang" xml:id="XMLExamples">
			<title><phrase xml:id="det_4950" xml:lang="de">Anhang: XML-Beispiele</phrase></title>
			<para xml:id="det_4951" xml:lang="de">Beispiel: Demo_Angebotskalkulation.xml </para>
			<programlisting language="XML"><xi:include href="../../example/Demo_Angebotskalkulation.xml" parse="text"/></programlisting>
		</section>
	</appendix>
</article>
<!--</book>-->
